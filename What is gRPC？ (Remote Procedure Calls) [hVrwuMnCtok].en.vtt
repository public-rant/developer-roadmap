WEBVTT



00:00:00.000 --> 00:00:01.589 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.399><c> my</c><00:00:00.560><c> name</c><00:00:00.640><c> is</c><00:00:00.799><c> brian</c><00:00:01.040><c> trong</c><00:00:01.520><c> and</c>

00:00:01.589 --> 00:00:01.599 align:start position:0%
hey everyone my name is brian trong and
 

00:00:01.599 --> 00:00:03.270 align:start position:0%
hey everyone my name is brian trong and
today<00:00:01.920><c> we're</c><00:00:02.080><c> going</c><00:00:02.159><c> to</c><00:00:02.240><c> be</c><00:00:02.399><c> talking</c><00:00:02.720><c> about</c>

00:00:03.270 --> 00:00:03.280 align:start position:0%
today we're going to be talking about
 

00:00:03.280 --> 00:00:05.590 align:start position:0%
today we're going to be talking about
grpc

00:00:05.590 --> 00:00:05.600 align:start position:0%
grpc
 

00:00:05.600 --> 00:00:09.030 align:start position:0%
grpc
so<00:00:05.839><c> grpc</c><00:00:06.720><c> is</c><00:00:07.120><c> a</c><00:00:07.759><c> modern</c><00:00:08.400><c> communication</c>

00:00:09.030 --> 00:00:09.040 align:start position:0%
so grpc is a modern communication
 

00:00:09.040 --> 00:00:11.430 align:start position:0%
so grpc is a modern communication
framework<00:00:09.519><c> that</c><00:00:09.679><c> was</c><00:00:09.840><c> introduced</c><00:00:10.240><c> in</c><00:00:10.400><c> 2015</c>

00:00:11.430 --> 00:00:11.440 align:start position:0%
framework that was introduced in 2015
 

00:00:11.440 --> 00:00:13.110 align:start position:0%
framework that was introduced in 2015
and<00:00:11.679><c> is</c><00:00:11.759><c> governed</c><00:00:12.080><c> by</c><00:00:12.240><c> the</c><00:00:12.639><c> cloud</c><00:00:12.880><c> native</c>

00:00:13.110 --> 00:00:13.120 align:start position:0%
and is governed by the cloud native
 

00:00:13.120 --> 00:00:15.430 align:start position:0%
and is governed by the cloud native
computing<00:00:13.519><c> foundation</c><00:00:14.559><c> and</c><00:00:14.719><c> today</c><00:00:15.120><c> i'm</c><00:00:15.280><c> just</c>

00:00:15.430 --> 00:00:15.440 align:start position:0%
computing foundation and today i'm just
 

00:00:15.440 --> 00:00:17.750 align:start position:0%
computing foundation and today i'm just
going<00:00:15.599><c> to</c><00:00:15.679><c> introduce</c><00:00:16.080><c> the</c><00:00:16.160><c> concept</c><00:00:16.800><c> with</c><00:00:17.279><c> a</c>

00:00:17.750 --> 00:00:17.760 align:start position:0%
going to introduce the concept with a
 

00:00:17.760 --> 00:00:19.750 align:start position:0%
going to introduce the concept with a
simple<00:00:18.160><c> example</c><00:00:18.720><c> and</c><00:00:18.880><c> hopefully</c><00:00:19.359><c> that</c><00:00:19.520><c> will</c>

00:00:19.750 --> 00:00:19.760 align:start position:0%
simple example and hopefully that will
 

00:00:19.760 --> 00:00:20.870 align:start position:0%
simple example and hopefully that will
outline<00:00:20.080><c> some</c><00:00:20.240><c> of</c><00:00:20.240><c> the</c><00:00:20.320><c> benefits</c><00:00:20.720><c> that</c><00:00:20.800><c> i</c>

00:00:20.870 --> 00:00:20.880 align:start position:0%
outline some of the benefits that i
 

00:00:20.880 --> 00:00:22.950 align:start position:0%
outline some of the benefits that i
could<00:00:21.039><c> bring</c><00:00:21.279><c> to</c><00:00:21.359><c> your</c><00:00:21.520><c> application</c>

00:00:22.950 --> 00:00:22.960 align:start position:0%
could bring to your application
 

00:00:22.960 --> 00:00:26.470 align:start position:0%
could bring to your application
so<00:00:23.199><c> let's</c><00:00:23.439><c> say</c><00:00:24.080><c> we</c><00:00:24.800><c> have</c><00:00:25.039><c> an</c><00:00:25.199><c> application</c><00:00:26.160><c> and</c>

00:00:26.470 --> 00:00:26.480 align:start position:0%
so let's say we have an application and
 

00:00:26.480 --> 00:00:28.230 align:start position:0%
so let's say we have an application and
we<00:00:26.640><c> have</c><00:00:26.800><c> a</c><00:00:26.960><c> front</c><00:00:27.199><c> end</c><00:00:27.840><c> and</c><00:00:28.000><c> i'm</c><00:00:28.080><c> going</c><00:00:28.160><c> to</c>

00:00:28.230 --> 00:00:28.240 align:start position:0%
we have a front end and i'm going to
 

00:00:28.240 --> 00:00:30.630 align:start position:0%
we have a front end and i'm going to
signify<00:00:28.800><c> this</c><00:00:29.279><c> with</c><00:00:29.519><c> a</c><00:00:29.599><c> little</c>

00:00:30.630 --> 00:00:30.640 align:start position:0%
signify this with a little
 

00:00:30.640 --> 00:00:32.630 align:start position:0%
signify this with a little
computer<00:00:31.119><c> monitor</c>

00:00:32.630 --> 00:00:32.640 align:start position:0%
computer monitor
 

00:00:32.640 --> 00:00:33.990 align:start position:0%
computer monitor
and

00:00:33.990 --> 00:00:34.000 align:start position:0%
and
 

00:00:34.000 --> 00:00:35.670 align:start position:0%
and
the<00:00:34.160><c> majority</c><00:00:34.640><c> of</c><00:00:34.719><c> the</c><00:00:34.880><c> talk</c><00:00:35.120><c> today</c><00:00:35.360><c> will</c><00:00:35.520><c> be</c>

00:00:35.670 --> 00:00:35.680 align:start position:0%
the majority of the talk today will be
 

00:00:35.680 --> 00:00:38.150 align:start position:0%
the majority of the talk today will be
about<00:00:36.000><c> the</c><00:00:36.160><c> back</c><00:00:36.399><c> end</c><00:00:36.559><c> layer</c><00:00:37.120><c> so</c><00:00:37.520><c> let's</c><00:00:37.760><c> say</c><00:00:38.000><c> in</c>

00:00:38.150 --> 00:00:38.160 align:start position:0%
about the back end layer so let's say in
 

00:00:38.160 --> 00:00:40.389 align:start position:0%
about the back end layer so let's say in
our<00:00:38.320><c> example</c><00:00:39.200><c> we</c><00:00:39.440><c> have</c><00:00:39.600><c> a</c><00:00:39.680><c> back-end</c><00:00:40.079><c> micro</c>

00:00:40.389 --> 00:00:40.399 align:start position:0%
our example we have a back-end micro
 

00:00:40.399 --> 00:00:41.910 align:start position:0%
our example we have a back-end micro
services<00:00:40.800><c> layer</c>

00:00:41.910 --> 00:00:41.920 align:start position:0%
services layer
 

00:00:41.920 --> 00:00:43.030 align:start position:0%
services layer
of

00:00:43.030 --> 00:00:43.040 align:start position:0%
of
 

00:00:43.040 --> 00:00:45.029 align:start position:0%
of
python

00:00:45.029 --> 00:00:45.039 align:start position:0%
python
 

00:00:45.039 --> 00:00:46.630 align:start position:0%
python
so<00:00:45.200><c> let's</c><00:00:45.440><c> say</c><00:00:45.600><c> python</c><00:00:46.000><c> handles</c><00:00:46.320><c> something</c>

00:00:46.630 --> 00:00:46.640 align:start position:0%
so let's say python handles something
 

00:00:46.640 --> 00:00:48.630 align:start position:0%
so let's say python handles something
like<00:00:47.200><c> analytics</c><00:00:47.920><c> it</c><00:00:48.000><c> doesn't</c><00:00:48.160><c> really</c><00:00:48.399><c> matter</c>

00:00:48.630 --> 00:00:48.640 align:start position:0%
like analytics it doesn't really matter
 

00:00:48.640 --> 00:00:50.790 align:start position:0%
like analytics it doesn't really matter
but<00:00:48.800><c> python</c><00:00:49.280><c> is</c><00:00:49.360><c> one</c><00:00:49.520><c> microservice</c>

00:00:50.790 --> 00:00:50.800 align:start position:0%
but python is one microservice
 

00:00:50.800 --> 00:00:51.910 align:start position:0%
but python is one microservice
and<00:00:50.960><c> let's</c><00:00:51.199><c> say</c>

00:00:51.910 --> 00:00:51.920 align:start position:0%
and let's say
 

00:00:51.920 --> 00:00:54.310 align:start position:0%
and let's say
we<00:00:52.079><c> have</c><00:00:52.160><c> another</c><00:00:52.640><c> in</c><00:00:52.879><c> java</c>

00:00:54.310 --> 00:00:54.320 align:start position:0%
we have another in java
 

00:00:54.320 --> 00:00:58.630 align:start position:0%
we have another in java
and<00:00:54.800><c> one</c><00:00:54.960><c> in</c><00:00:55.120><c> golang</c><00:00:55.600><c> for</c><00:00:55.680><c> example</c>

00:00:58.630 --> 00:00:58.640 align:start position:0%
and one in golang for example
 

00:00:58.640 --> 00:00:59.990 align:start position:0%
and one in golang for example
and<00:00:58.800><c> what</c><00:00:58.960><c> i'm</c><00:00:59.120><c> going</c><00:00:59.199><c> to</c><00:00:59.280><c> do</c><00:00:59.520><c> is</c><00:00:59.760><c> i'm</c><00:00:59.840><c> going</c><00:00:59.920><c> to</c>

00:00:59.990 --> 00:01:00.000 align:start position:0%
and what i'm going to do is i'm going to
 

00:01:00.000 --> 00:01:01.990 align:start position:0%
and what i'm going to do is i'm going to
go<00:01:00.160><c> ahead</c><00:01:00.320><c> and</c><00:01:00.399><c> draw</c><00:01:00.719><c> arrows</c><00:01:01.120><c> between</c><00:01:01.440><c> them</c><00:01:01.840><c> to</c>

00:01:01.990 --> 00:01:02.000 align:start position:0%
go ahead and draw arrows between them to
 

00:01:02.000 --> 00:01:04.549 align:start position:0%
go ahead and draw arrows between them to
signify<00:01:02.719><c> that</c><00:01:02.879><c> these</c><00:01:03.199><c> microservices</c>

00:01:04.549 --> 00:01:04.559 align:start position:0%
signify that these microservices
 

00:01:04.559 --> 00:01:05.670 align:start position:0%
signify that these microservices
need<00:01:04.799><c> to</c>

00:01:05.670 --> 00:01:05.680 align:start position:0%
need to
 

00:01:05.680 --> 00:01:08.870 align:start position:0%
need to
connect<00:01:06.560><c> and</c><00:01:06.960><c> communicate</c><00:01:07.439><c> with</c><00:01:07.600><c> each</c><00:01:07.760><c> other</c>

00:01:08.870 --> 00:01:08.880 align:start position:0%
connect and communicate with each other
 

00:01:08.880 --> 00:01:10.550 align:start position:0%
connect and communicate with each other
i<00:01:09.040><c> do</c><00:01:09.200><c> want</c><00:01:09.360><c> to</c><00:01:09.439><c> stop</c><00:01:09.680><c> here</c><00:01:09.920><c> and</c><00:01:10.000><c> point</c><00:01:10.320><c> out</c>

00:01:10.550 --> 00:01:10.560 align:start position:0%
i do want to stop here and point out
 

00:01:10.560 --> 00:01:12.390 align:start position:0%
i do want to stop here and point out
that<00:01:10.880><c> i</c><00:01:10.880><c> i'm</c><00:01:11.119><c> specifically</c><00:01:11.840><c> talking</c><00:01:12.080><c> about</c>

00:01:12.390 --> 00:01:12.400 align:start position:0%
that i i'm specifically talking about
 

00:01:12.400 --> 00:01:15.590 align:start position:0%
that i i'm specifically talking about
communication<00:01:13.600><c> between</c><00:01:14.000><c> microservices</c><00:01:15.200><c> and</c>

00:01:15.590 --> 00:01:15.600 align:start position:0%
communication between microservices and
 

00:01:15.600 --> 00:01:18.630 align:start position:0%
communication between microservices and
i'm<00:01:15.759><c> not</c><00:01:16.080><c> talking</c><00:01:16.400><c> about</c><00:01:17.200><c> communication</c>

00:01:18.630 --> 00:01:18.640 align:start position:0%
i'm not talking about communication
 

00:01:18.640 --> 00:01:20.390 align:start position:0%
i'm not talking about communication
between<00:01:19.040><c> the</c><00:01:19.200><c> front</c><00:01:19.680><c> and</c><00:01:19.840><c> the</c><00:01:20.000><c> back</c><00:01:20.240><c> end</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
between the front and the back end
 

00:01:20.400 --> 00:01:21.590 align:start position:0%
between the front and the back end
because

00:01:21.590 --> 00:01:21.600 align:start position:0%
because
 

00:01:21.600 --> 00:01:23.749 align:start position:0%
because
communication<00:01:22.240><c> uses</c><00:01:22.960><c> communication</c><00:01:23.520><c> via</c>

00:01:23.749 --> 00:01:23.759 align:start position:0%
communication uses communication via
 

00:01:23.759 --> 00:01:25.429 align:start position:0%
communication uses communication via
grpc

00:01:25.429 --> 00:01:25.439 align:start position:0%
grpc
 

00:01:25.439 --> 00:01:27.830 align:start position:0%
grpc
does<00:01:25.600><c> not</c><00:01:25.840><c> natively</c><00:01:26.720><c> work</c><00:01:27.040><c> out</c><00:01:27.200><c> of</c><00:01:27.280><c> the</c><00:01:27.360><c> box</c>

00:01:27.830 --> 00:01:27.840 align:start position:0%
does not natively work out of the box
 

00:01:27.840 --> 00:01:28.630 align:start position:0%
does not natively work out of the box
with

00:01:28.630 --> 00:01:28.640 align:start position:0%
with
 

00:01:28.640 --> 00:01:30.390 align:start position:0%
with
web<00:01:28.880><c> browsers</c><00:01:29.520><c> so</c>

00:01:30.390 --> 00:01:30.400 align:start position:0%
web browsers so
 

00:01:30.400 --> 00:01:33.190 align:start position:0%
web browsers so
in<00:01:30.560><c> particular</c><00:01:31.040><c> grpc</c><00:01:31.680><c> is</c><00:01:31.759><c> more</c><00:01:31.920><c> oriented</c><00:01:32.640><c> for</c>

00:01:33.190 --> 00:01:33.200 align:start position:0%
in particular grpc is more oriented for
 

00:01:33.200 --> 00:01:36.390 align:start position:0%
in particular grpc is more oriented for
this<00:01:33.600><c> type</c><00:01:33.840><c> of</c><00:01:33.920><c> communication</c>

00:01:36.390 --> 00:01:36.400 align:start position:0%
this type of communication
 

00:01:36.400 --> 00:01:38.710 align:start position:0%
this type of communication
so<00:01:36.799><c> the</c><00:01:36.960><c> first</c><00:01:37.759><c> talking</c><00:01:38.079><c> point</c><00:01:38.320><c> that</c><00:01:38.479><c> i</c><00:01:38.640><c> want</c>

00:01:38.710 --> 00:01:38.720 align:start position:0%
so the first talking point that i want
 

00:01:38.720 --> 00:01:40.870 align:start position:0%
so the first talking point that i want
to<00:01:38.799><c> mention</c><00:01:39.119><c> with</c><00:01:39.360><c> grpc</c><00:01:40.079><c> is</c><00:01:40.240><c> that</c><00:01:40.479><c> it</c><00:01:40.640><c> brings</c>

00:01:40.870 --> 00:01:40.880 align:start position:0%
to mention with grpc is that it brings
 

00:01:40.880 --> 00:01:42.069 align:start position:0%
to mention with grpc is that it brings
about

00:01:42.069 --> 00:01:42.079 align:start position:0%
about
 

00:01:42.079 --> 00:01:44.550 align:start position:0%
about
significant<00:01:42.720><c> improvements</c><00:01:43.360><c> in</c><00:01:43.840><c> convenience</c>

00:01:44.550 --> 00:01:44.560 align:start position:0%
significant improvements in convenience
 

00:01:44.560 --> 00:01:46.149 align:start position:0%
significant improvements in convenience
and<00:01:44.799><c> scalability</c>

00:01:46.149 --> 00:01:46.159 align:start position:0%
and scalability
 

00:01:46.159 --> 00:01:49.670 align:start position:0%
and scalability
so<00:01:46.479><c> i'll</c><00:01:46.640><c> just</c><00:01:46.799><c> write</c><00:01:46.960><c> convenience</c><00:01:47.520><c> here</c>

00:01:49.670 --> 00:01:49.680 align:start position:0%
so i'll just write convenience here
 

00:01:49.680 --> 00:01:50.789 align:start position:0%
so i'll just write convenience here
and

00:01:50.789 --> 00:01:50.799 align:start position:0%
and
 

00:01:50.799 --> 00:01:53.510 align:start position:0%
and
if<00:01:50.960><c> we</c><00:01:51.040><c> weren't</c><00:01:51.600><c> if</c><00:01:51.680><c> we</c><00:01:51.759><c> were</c><00:01:51.920><c> to</c><00:01:52.079><c> not</c><00:01:52.240><c> use</c><00:01:52.479><c> grpc</c>

00:01:53.510 --> 00:01:53.520 align:start position:0%
if we weren't if we were to not use grpc
 

00:01:53.520 --> 00:01:54.789 align:start position:0%
if we weren't if we were to not use grpc
it<00:01:53.600><c> would</c><00:01:53.680><c> be</c><00:01:53.840><c> important</c><00:01:54.159><c> to</c><00:01:54.320><c> note</c><00:01:54.560><c> that</c>

00:01:54.789 --> 00:01:54.799 align:start position:0%
it would be important to note that
 

00:01:54.799 --> 00:01:57.670 align:start position:0%
it would be important to note that
python<00:01:55.280><c> has</c><00:01:55.439><c> its</c><00:01:55.600><c> own</c><00:01:56.000><c> http</c><00:01:56.719><c> client</c><00:01:56.960><c> libraries</c>

00:01:57.670 --> 00:01:57.680 align:start position:0%
python has its own http client libraries
 

00:01:57.680 --> 00:02:00.709 align:start position:0%
python has its own http client libraries
java<00:01:58.000><c> has</c><00:01:58.240><c> its</c><00:01:58.399><c> own</c><00:01:58.960><c> golang</c><00:01:59.439><c> has</c><00:01:59.600><c> its</c><00:01:59.840><c> own</c><00:02:00.479><c> and</c>

00:02:00.709 --> 00:02:00.719 align:start position:0%
java has its own golang has its own and
 

00:02:00.719 --> 00:02:02.870 align:start position:0%
java has its own golang has its own and
these<00:02:01.119><c> are</c><00:02:01.439><c> client</c><00:02:01.759><c> libraries</c><00:02:02.399><c> that</c><00:02:02.719><c> are</c>

00:02:02.870 --> 00:02:02.880 align:start position:0%
these are client libraries that are
 

00:02:02.880 --> 00:02:05.270 align:start position:0%
these are client libraries that are
supported<00:02:03.360><c> by</c><00:02:03.920><c> different</c><00:02:04.240><c> groups</c>

00:02:05.270 --> 00:02:05.280 align:start position:0%
supported by different groups
 

00:02:05.280 --> 00:02:07.590 align:start position:0%
supported by different groups
and<00:02:05.840><c> if</c><00:02:05.920><c> we</c><00:02:06.000><c> were</c><00:02:06.159><c> to</c><00:02:06.320><c> extend</c><00:02:06.719><c> them</c><00:02:07.280><c> it</c><00:02:07.439><c> would</c>

00:02:07.590 --> 00:02:07.600 align:start position:0%
and if we were to extend them it would
 

00:02:07.600 --> 00:02:09.350 align:start position:0%
and if we were to extend them it would
be<00:02:07.920><c> different</c><00:02:08.560><c> individuals</c><00:02:09.119><c> that</c><00:02:09.280><c> are</c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
be different individuals that are
 

00:02:09.360 --> 00:02:10.949 align:start position:0%
be different individuals that are
working<00:02:09.679><c> to</c><00:02:10.000><c> maintain</c><00:02:10.479><c> these</c><00:02:10.640><c> client</c>

00:02:10.949 --> 00:02:10.959 align:start position:0%
working to maintain these client
 

00:02:10.959 --> 00:02:12.949 align:start position:0%
working to maintain these client
libraries<00:02:11.599><c> and</c><00:02:11.760><c> it</c><00:02:11.840><c> could</c><00:02:12.000><c> get</c><00:02:12.239><c> out</c><00:02:12.560><c> of</c><00:02:12.640><c> hand</c>

00:02:12.949 --> 00:02:12.959 align:start position:0%
libraries and it could get out of hand
 

00:02:12.959 --> 00:02:15.030 align:start position:0%
libraries and it could get out of hand
especially<00:02:13.599><c> as</c><00:02:13.920><c> we</c><00:02:14.160><c> add</c>

00:02:15.030 --> 00:02:15.040 align:start position:0%
especially as we add
 

00:02:15.040 --> 00:02:15.910 align:start position:0%
especially as we add
more

00:02:15.910 --> 00:02:15.920 align:start position:0%
more
 

00:02:15.920 --> 00:02:17.750 align:start position:0%
more
microservices<00:02:16.640><c> that</c><00:02:16.800><c> could</c><00:02:16.959><c> be</c><00:02:17.280><c> of</c><00:02:17.440><c> different</c>

00:02:17.750 --> 00:02:17.760 align:start position:0%
microservices that could be of different
 

00:02:17.760 --> 00:02:19.910 align:start position:0%
microservices that could be of different
runtimes<00:02:18.239><c> in</c><00:02:18.319><c> different</c><00:02:18.560><c> languages</c>

00:02:19.910 --> 00:02:19.920 align:start position:0%
runtimes in different languages
 

00:02:19.920 --> 00:02:21.350 align:start position:0%
runtimes in different languages
now<00:02:20.160><c> grpc</c>

00:02:21.350 --> 00:02:21.360 align:start position:0%
now grpc
 

00:02:21.360 --> 00:02:23.110 align:start position:0%
now grpc
handles<00:02:21.840><c> all</c><00:02:22.160><c> the</c>

00:02:23.110 --> 00:02:23.120 align:start position:0%
handles all the
 

00:02:23.120 --> 00:02:25.430 align:start position:0%
handles all the
implementation<00:02:23.760><c> to</c><00:02:23.840><c> the</c><00:02:24.000><c> http</c><00:02:24.560><c> protocol</c><00:02:25.200><c> for</c>

00:02:25.430 --> 00:02:25.440 align:start position:0%
implementation to the http protocol for
 

00:02:25.440 --> 00:02:27.910 align:start position:0%
implementation to the http protocol for
us<00:02:25.760><c> so</c><00:02:26.160><c> as</c><00:02:26.319><c> a</c><00:02:26.400><c> developer</c><00:02:27.360><c> we</c><00:02:27.520><c> don't</c><00:02:27.680><c> have</c><00:02:27.760><c> to</c>

00:02:27.910 --> 00:02:27.920 align:start position:0%
us so as a developer we don't have to
 

00:02:27.920 --> 00:02:31.830 align:start position:0%
us so as a developer we don't have to
worry<00:02:28.239><c> about</c><00:02:28.959><c> that</c><00:02:29.360><c> level</c><00:02:29.920><c> of</c><00:02:30.400><c> detail</c><00:02:31.040><c> since</c>

00:02:31.830 --> 00:02:31.840 align:start position:0%
worry about that level of detail since
 

00:02:31.840 --> 00:02:35.110 align:start position:0%
worry about that level of detail since
grpc<00:02:32.720><c> implements</c><00:02:33.360><c> the</c><00:02:33.680><c> connections</c><00:02:34.239><c> with</c><00:02:34.480><c> ht</c>

00:02:35.110 --> 00:02:35.120 align:start position:0%
grpc implements the connections with ht
 

00:02:35.120 --> 00:02:37.430 align:start position:0%
grpc implements the connections with ht
2.0<00:02:35.760><c> for</c><00:02:36.000><c> us</c><00:02:36.239><c> so</c><00:02:36.720><c> that's</c><00:02:36.959><c> something</c><00:02:37.200><c> that</c><00:02:37.280><c> we</c>

00:02:37.430 --> 00:02:37.440 align:start position:0%
2.0 for us so that's something that we
 

00:02:37.440 --> 00:02:40.229 align:start position:0%
2.0 for us so that's something that we
don't<00:02:37.599><c> have</c><00:02:37.760><c> to</c><00:02:37.840><c> worry</c><00:02:38.080><c> about</c><00:02:38.480><c> moving</c><00:02:38.800><c> forward</c>

00:02:40.229 --> 00:02:40.239 align:start position:0%
don't have to worry about moving forward
 

00:02:40.239 --> 00:02:41.110 align:start position:0%
don't have to worry about moving forward
now

00:02:41.110 --> 00:02:41.120 align:start position:0%
now
 

00:02:41.120 --> 00:02:42.949 align:start position:0%
now
on<00:02:41.280><c> top</c><00:02:41.519><c> of</c><00:02:41.599><c> that</c>

00:02:42.949 --> 00:02:42.959 align:start position:0%
on top of that
 

00:02:42.959 --> 00:02:45.509 align:start position:0%
on top of that
hand-in-hand<00:02:43.519><c> with</c><00:02:43.599><c> convenience</c><00:02:44.239><c> is</c><00:02:44.640><c> grpc</c>

00:02:45.509 --> 00:02:45.519 align:start position:0%
hand-in-hand with convenience is grpc
 

00:02:45.519 --> 00:02:47.670 align:start position:0%
hand-in-hand with convenience is grpc
offers<00:02:46.160><c> code</c><00:02:46.400><c> generation</c><00:02:47.280><c> now</c><00:02:47.440><c> you're</c>

00:02:47.670 --> 00:02:47.680 align:start position:0%
offers code generation now you're
 

00:02:47.680 --> 00:02:49.589 align:start position:0%
offers code generation now you're
probably<00:02:48.000><c> wondering</c><00:02:48.879><c> how</c><00:02:49.120><c> does</c><00:02:49.360><c> code</c>

00:02:49.589 --> 00:02:49.599 align:start position:0%
probably wondering how does code
 

00:02:49.599 --> 00:02:51.190 align:start position:0%
probably wondering how does code
generation<00:02:50.080><c> work</c><00:02:50.400><c> how</c><00:02:50.560><c> does</c><00:02:50.720><c> it</c><00:02:50.800><c> know</c><00:02:51.040><c> what</c>

00:02:51.190 --> 00:02:51.200 align:start position:0%
generation work how does it know what
 

00:02:51.200 --> 00:02:53.350 align:start position:0%
generation work how does it know what
code<00:02:51.440><c> to</c><00:02:51.519><c> generate</c><00:02:51.920><c> and</c><00:02:52.000><c> what</c><00:02:52.160><c> not</c><00:02:52.879><c> and</c><00:02:53.120><c> the</c>

00:02:53.350 --> 00:02:53.360 align:start position:0%
code to generate and what not and the
 

00:02:53.360 --> 00:03:00.630 align:start position:0%
code to generate and what not and the
answer<00:02:54.000><c> lies</c><00:02:54.560><c> in</c><00:02:54.879><c> protocol</c><00:02:55.360><c> buffers</c>

00:03:00.630 --> 00:03:00.640 align:start position:0%
 
 

00:03:00.640 --> 00:03:02.390 align:start position:0%
 
and<00:03:00.800><c> if</c><00:03:00.959><c> you're</c><00:03:01.040><c> not</c><00:03:01.200><c> familiar</c><00:03:01.599><c> with</c><00:03:01.920><c> protocol</c>

00:03:02.390 --> 00:03:02.400 align:start position:0%
and if you're not familiar with protocol
 

00:03:02.400 --> 00:03:04.149 align:start position:0%
and if you're not familiar with protocol
buffers<00:03:02.800><c> you</c><00:03:02.879><c> can</c><00:03:03.040><c> essentially</c><00:03:03.519><c> think</c><00:03:03.840><c> of</c>

00:03:04.149 --> 00:03:04.159 align:start position:0%
buffers you can essentially think of
 

00:03:04.159 --> 00:03:05.509 align:start position:0%
buffers you can essentially think of
them<00:03:04.640><c> as</c>

00:03:05.509 --> 00:03:05.519 align:start position:0%
them as
 

00:03:05.519 --> 00:03:08.229 align:start position:0%
them as
a<00:03:05.680><c> form</c><00:03:06.080><c> of</c><00:03:06.319><c> a</c><00:03:06.400><c> contract</c><00:03:06.879><c> for</c><00:03:07.120><c> communication</c>

00:03:08.229 --> 00:03:08.239 align:start position:0%
a form of a contract for communication
 

00:03:08.239 --> 00:03:11.509 align:start position:0%
a form of a contract for communication
so<00:03:08.800><c> traditionally</c><00:03:09.760><c> with</c><00:03:10.000><c> an</c><00:03:10.239><c> api</c>

00:03:11.509 --> 00:03:11.519 align:start position:0%
so traditionally with an api
 

00:03:11.519 --> 00:03:14.869 align:start position:0%
so traditionally with an api
you<00:03:11.599><c> don't</c><00:03:11.840><c> necessarily</c><00:03:12.800><c> have</c><00:03:13.599><c> a</c>

00:03:14.869 --> 00:03:14.879 align:start position:0%
you don't necessarily have a
 

00:03:14.879 --> 00:03:17.190 align:start position:0%
you don't necessarily have a
api<00:03:15.360><c> contract</c><00:03:15.920><c> that</c><00:03:16.159><c> is</c><00:03:16.400><c> defined</c><00:03:16.959><c> by</c><00:03:17.120><c> the</c>

00:03:17.190 --> 00:03:17.200 align:start position:0%
api contract that is defined by the
 

00:03:17.200 --> 00:03:18.869 align:start position:0%
api contract that is defined by the
protocol<00:03:17.599><c> itself</c><00:03:18.000><c> so</c><00:03:18.159><c> if</c><00:03:18.239><c> we're</c><00:03:18.400><c> using</c><00:03:18.640><c> rest</c>

00:03:18.869 --> 00:03:18.879 align:start position:0%
protocol itself so if we're using rest
 

00:03:18.879 --> 00:03:21.190 align:start position:0%
protocol itself so if we're using rest
for<00:03:19.040><c> example</c><00:03:20.000><c> you're</c><00:03:20.159><c> just</c><00:03:20.319><c> sending</c><00:03:20.720><c> json</c>

00:03:21.190 --> 00:03:21.200 align:start position:0%
for example you're just sending json
 

00:03:21.200 --> 00:03:23.430 align:start position:0%
for example you're just sending json
messages<00:03:22.000><c> you</c><00:03:22.080><c> know</c><00:03:22.239><c> with</c><00:03:22.480><c> key</c><00:03:22.640><c> value</c><00:03:22.959><c> pairs</c>

00:03:23.430 --> 00:03:23.440 align:start position:0%
messages you know with key value pairs
 

00:03:23.440 --> 00:03:26.070 align:start position:0%
messages you know with key value pairs
that<00:03:23.840><c> aren't</c><00:03:24.319><c> checked</c><00:03:24.799><c> until</c><00:03:25.599><c> you</c><00:03:25.680><c> get</c><00:03:25.840><c> to</c><00:03:25.920><c> the</c>

00:03:26.070 --> 00:03:26.080 align:start position:0%
that aren't checked until you get to the
 

00:03:26.080 --> 00:03:27.190 align:start position:0%
that aren't checked until you get to the
receiving<00:03:26.480><c> end</c><00:03:26.720><c> and</c><00:03:26.799><c> that's</c><00:03:26.959><c> where</c><00:03:27.120><c> it</c>

00:03:27.190 --> 00:03:27.200 align:start position:0%
receiving end and that's where it
 

00:03:27.200 --> 00:03:29.110 align:start position:0%
receiving end and that's where it
handles<00:03:27.599><c> it</c><00:03:28.080><c> but</c><00:03:28.239><c> with</c><00:03:28.400><c> these</c><00:03:28.640><c> protocol</c>

00:03:29.110 --> 00:03:29.120 align:start position:0%
handles it but with these protocol
 

00:03:29.120 --> 00:03:30.070 align:start position:0%
handles it but with these protocol
buffers

00:03:30.070 --> 00:03:30.080 align:start position:0%
buffers
 

00:03:30.080 --> 00:03:30.789 align:start position:0%
buffers
in

00:03:30.789 --> 00:03:30.799 align:start position:0%
in
 

00:03:30.799 --> 00:03:33.110 align:start position:0%
in
the<00:03:30.959><c> profile</c><00:03:31.599><c> which</c><00:03:31.760><c> is</c><00:03:32.000><c> where</c><00:03:32.239><c> you</c><00:03:32.400><c> define</c>

00:03:33.110 --> 00:03:33.120 align:start position:0%
the profile which is where you define
 

00:03:33.120 --> 00:03:33.990 align:start position:0%
the profile which is where you define
the

00:03:33.990 --> 00:03:34.000 align:start position:0%
the
 

00:03:34.000 --> 00:03:35.750 align:start position:0%
the
what<00:03:34.159><c> is</c><00:03:34.319><c> essentially</c><00:03:34.799><c> a</c><00:03:34.879><c> schema</c><00:03:35.440><c> for</c><00:03:35.680><c> the</c>

00:03:35.750 --> 00:03:35.760 align:start position:0%
what is essentially a schema for the
 

00:03:35.760 --> 00:03:37.910 align:start position:0%
what is essentially a schema for the
data<00:03:36.000><c> that</c><00:03:36.159><c> is</c><00:03:36.239><c> being</c><00:03:36.480><c> sent</c><00:03:37.200><c> you</c><00:03:37.280><c> can</c><00:03:37.440><c> define</c>

00:03:37.910 --> 00:03:37.920 align:start position:0%
data that is being sent you can define
 

00:03:37.920 --> 00:03:40.550 align:start position:0%
data that is being sent you can define
things<00:03:38.400><c> like</c><00:03:38.879><c> the</c>

00:03:40.550 --> 00:03:40.560 align:start position:0%
things like the
 

00:03:40.560 --> 00:03:42.149 align:start position:0%
things like the
fields<00:03:40.879><c> that</c><00:03:40.959><c> you</c><00:03:41.200><c> expect</c>

00:03:42.149 --> 00:03:42.159 align:start position:0%
fields that you expect
 

00:03:42.159 --> 00:03:43.589 align:start position:0%
fields that you expect
which<00:03:42.400><c> fields</c><00:03:42.640><c> are</c><00:03:42.799><c> required</c><00:03:43.200><c> which</c><00:03:43.360><c> fields</c>

00:03:43.589 --> 00:03:43.599 align:start position:0%
which fields are required which fields
 

00:03:43.599 --> 00:03:46.710 align:start position:0%
which fields are required which fields
are<00:03:43.760><c> optional</c><00:03:44.400><c> as</c><00:03:44.640><c> well</c><00:03:44.879><c> as</c><00:03:45.200><c> the</c><00:03:45.599><c> object</c><00:03:46.080><c> types</c>

00:03:46.710 --> 00:03:46.720 align:start position:0%
are optional as well as the object types
 

00:03:46.720 --> 00:03:48.630 align:start position:0%
are optional as well as the object types
for<00:03:46.959><c> these</c><00:03:47.200><c> fields</c>

00:03:48.630 --> 00:03:48.640 align:start position:0%
for these fields
 

00:03:48.640 --> 00:03:49.910 align:start position:0%
for these fields
on<00:03:48.799><c> top</c><00:03:48.959><c> of</c><00:03:49.120><c> that</c>

00:03:49.910 --> 00:03:49.920 align:start position:0%
on top of that
 

00:03:49.920 --> 00:03:52.149 align:start position:0%
on top of that
in<00:03:50.000><c> the</c><00:03:50.159><c> protofile</c><00:03:50.879><c> for</c><00:03:51.040><c> the</c><00:03:51.120><c> protocol</c><00:03:51.599><c> buffer</c>

00:03:52.149 --> 00:03:52.159 align:start position:0%
in the protofile for the protocol buffer
 

00:03:52.159 --> 00:03:55.030 align:start position:0%
in the protofile for the protocol buffer
you<00:03:52.480><c> also</c><00:03:52.720><c> define</c><00:03:53.360><c> the</c><00:03:54.000><c> procedures</c><00:03:54.640><c> that</c><00:03:54.799><c> you</c>

00:03:55.030 --> 00:03:55.040 align:start position:0%
you also define the procedures that you
 

00:03:55.040 --> 00:03:57.190 align:start position:0%
you also define the procedures that you
expect<00:03:55.519><c> to</c><00:03:55.760><c> expose</c><00:03:56.480><c> and</c><00:03:56.799><c> these</c><00:03:57.040><c> are</c>

00:03:57.190 --> 00:03:57.200 align:start position:0%
expect to expose and these are
 

00:03:57.200 --> 00:03:59.270 align:start position:0%
expect to expose and these are
essentially<00:03:58.159><c> defining</c>

00:03:59.270 --> 00:03:59.280 align:start position:0%
essentially defining
 

00:03:59.280 --> 00:04:02.149 align:start position:0%
essentially defining
which<00:03:59.519><c> procedures</c><00:04:00.319><c> so</c><00:04:00.720><c> rpcs</c><00:04:01.360><c> standing</c><00:04:01.760><c> for</c>

00:04:02.149 --> 00:04:02.159 align:start position:0%
which procedures so rpcs standing for
 

00:04:02.159 --> 00:04:04.070 align:start position:0%
which procedures so rpcs standing for
remote<00:04:02.480><c> procedure</c><00:04:02.959><c> calls</c>

00:04:04.070 --> 00:04:04.080 align:start position:0%
remote procedure calls
 

00:04:04.080 --> 00:04:05.350 align:start position:0%
remote procedure calls
you're<00:04:04.319><c> essentially</c><00:04:04.720><c> defining</c><00:04:05.120><c> which</c>

00:04:05.350 --> 00:04:05.360 align:start position:0%
you're essentially defining which
 

00:04:05.360 --> 00:04:08.229 align:start position:0%
you're essentially defining which
procedures<00:04:06.000><c> are</c><00:04:06.239><c> callable</c><00:04:07.040><c> remotely</c><00:04:08.000><c> from</c>

00:04:08.229 --> 00:04:08.239 align:start position:0%
procedures are callable remotely from
 

00:04:08.239 --> 00:04:10.229 align:start position:0%
procedures are callable remotely from
other<00:04:08.480><c> microservices</c>

00:04:10.229 --> 00:04:10.239 align:start position:0%
other microservices
 

00:04:10.239 --> 00:04:12.869 align:start position:0%
other microservices
and<00:04:10.560><c> what</c><00:04:10.959><c> happens</c><00:04:11.360><c> is</c><00:04:11.760><c> if</c><00:04:11.840><c> you</c><00:04:12.000><c> want</c><00:04:12.319><c> to</c><00:04:12.720><c> have</c>

00:04:12.869 --> 00:04:12.879 align:start position:0%
and what happens is if you want to have
 

00:04:12.879 --> 00:04:15.750 align:start position:0%
and what happens is if you want to have
the<00:04:13.040><c> code</c><00:04:13.280><c> generated</c><00:04:14.000><c> you</c><00:04:14.400><c> run</c><00:04:14.799><c> the</c><00:04:15.040><c> protofile</c>

00:04:15.750 --> 00:04:15.760 align:start position:0%
the code generated you run the protofile
 

00:04:15.760 --> 00:04:17.349 align:start position:0%
the code generated you run the protofile
against<00:04:16.160><c> a</c><00:04:16.239><c> compiler</c>

00:04:17.349 --> 00:04:17.359 align:start position:0%
against a compiler
 

00:04:17.359 --> 00:04:19.909 align:start position:0%
against a compiler
and<00:04:17.519><c> what</c><00:04:17.680><c> is</c><00:04:17.919><c> output</c><00:04:18.400><c> is</c>

00:04:19.909 --> 00:04:19.919 align:start position:0%
and what is output is
 

00:04:19.919 --> 00:04:21.830 align:start position:0%
and what is output is
source<00:04:20.239><c> code</c><00:04:20.639><c> in</c>

00:04:21.830 --> 00:04:21.840 align:start position:0%
source code in
 

00:04:21.840 --> 00:04:24.710 align:start position:0%
source code in
your<00:04:22.160><c> respective</c><00:04:23.280><c> language</c>

00:04:24.710 --> 00:04:24.720 align:start position:0%
your respective language
 

00:04:24.720 --> 00:04:27.830 align:start position:0%
your respective language
so<00:04:25.040><c> for</c><00:04:25.199><c> example</c><00:04:25.600><c> if</c><00:04:25.680><c> this</c><00:04:25.840><c> was</c><00:04:26.560><c> java</c><00:04:27.280><c> and</c><00:04:27.520><c> you</c>

00:04:27.830 --> 00:04:27.840 align:start position:0%
so for example if this was java and you
 

00:04:27.840 --> 00:04:28.870 align:start position:0%
so for example if this was java and you
defined

00:04:28.870 --> 00:04:28.880 align:start position:0%
defined
 

00:04:28.880 --> 00:04:31.350 align:start position:0%
defined
in<00:04:28.960><c> your</c><00:04:29.120><c> protofile</c><00:04:29.759><c> that</c><00:04:29.919><c> you</c><00:04:30.000><c> are</c><00:04:30.160><c> expecting</c>

00:04:31.350 --> 00:04:31.360 align:start position:0%
in your protofile that you are expecting
 

00:04:31.360 --> 00:04:33.430 align:start position:0%
in your protofile that you are expecting
messages<00:04:31.919><c> to</c><00:04:32.479><c> have</c>

00:04:33.430 --> 00:04:33.440 align:start position:0%
messages to have
 

00:04:33.440 --> 00:04:35.110 align:start position:0%
messages to have
three<00:04:33.680><c> fields</c><00:04:34.160><c> of</c>

00:04:35.110 --> 00:04:35.120 align:start position:0%
three fields of
 

00:04:35.120 --> 00:04:39.590 align:start position:0%
three fields of
type<00:04:35.840><c> in</c><00:04:36.160><c> string</c><00:04:37.040><c> etc</c>

00:04:39.590 --> 00:04:39.600 align:start position:0%
type in string etc
 

00:04:39.600 --> 00:04:41.749 align:start position:0%
type in string etc
what<00:04:39.840><c> is</c><00:04:40.000><c> output</c><00:04:40.400><c> is</c><00:04:40.560><c> essentially</c><00:04:41.280><c> an</c>

00:04:41.749 --> 00:04:41.759 align:start position:0%
what is output is essentially an
 

00:04:41.759 --> 00:04:44.150 align:start position:0%
what is output is essentially an
interface<00:04:42.320><c> that</c><00:04:42.880><c> allows</c><00:04:43.280><c> you</c><00:04:43.440><c> to</c><00:04:43.840><c> create</c>

00:04:44.150 --> 00:04:44.160 align:start position:0%
interface that allows you to create
 

00:04:44.160 --> 00:04:46.310 align:start position:0%
interface that allows you to create
these<00:04:44.320><c> cloud</c><00:04:44.800><c> that</c><00:04:45.280><c> creates</c><00:04:45.600><c> the</c><00:04:45.680><c> classes</c><00:04:46.080><c> for</c>

00:04:46.310 --> 00:04:46.320 align:start position:0%
these cloud that creates the classes for
 

00:04:46.320 --> 00:04:47.350 align:start position:0%
these cloud that creates the classes for
you

00:04:47.350 --> 00:04:47.360 align:start position:0%
you
 

00:04:47.360 --> 00:04:49.830 align:start position:0%
you
that<00:04:47.680><c> implements</c><00:04:48.560><c> the</c><00:04:48.960><c> object</c><00:04:49.360><c> types</c><00:04:49.680><c> that</c>

00:04:49.830 --> 00:04:49.840 align:start position:0%
that implements the object types that
 

00:04:49.840 --> 00:04:52.790 align:start position:0%
that implements the object types that
you<00:04:50.160><c> outline</c><00:04:50.479><c> in</c><00:04:50.560><c> your</c><00:04:50.720><c> protofile</c>

00:04:52.790 --> 00:04:52.800 align:start position:0%
you outline in your protofile
 

00:04:52.800 --> 00:04:54.950 align:start position:0%
you outline in your protofile
now<00:04:52.960><c> the</c><00:04:53.120><c> next</c><00:04:53.360><c> point</c><00:04:53.759><c> i</c><00:04:53.840><c> want</c><00:04:54.000><c> to</c><00:04:54.160><c> talk</c><00:04:54.400><c> about</c>

00:04:54.950 --> 00:04:54.960 align:start position:0%
now the next point i want to talk about
 

00:04:54.960 --> 00:04:55.830 align:start position:0%
now the next point i want to talk about
is

00:04:55.830 --> 00:04:55.840 align:start position:0%
is
 

00:04:55.840 --> 00:04:58.150 align:start position:0%
is
performance

00:04:58.150 --> 00:04:58.160 align:start position:0%
performance
 

00:04:58.160 --> 00:04:59.590 align:start position:0%
performance
and<00:04:58.240><c> we</c><00:04:58.400><c> already</c><00:04:58.720><c> touched</c>

00:04:59.590 --> 00:04:59.600 align:start position:0%
and we already touched
 

00:04:59.600 --> 00:05:01.590 align:start position:0%
and we already touched
a<00:04:59.680><c> bit</c><00:04:59.919><c> about</c><00:05:00.240><c> performance</c>

00:05:01.590 --> 00:05:01.600 align:start position:0%
a bit about performance
 

00:05:01.600 --> 00:05:04.390 align:start position:0%
a bit about performance
with<00:05:01.919><c> http</c><00:05:02.639><c> 2.0</c><00:05:03.360><c> being</c>

00:05:04.390 --> 00:05:04.400 align:start position:0%
with http 2.0 being
 

00:05:04.400 --> 00:05:06.710 align:start position:0%
with http 2.0 being
a<00:05:04.560><c> much</c><00:05:04.720><c> more</c><00:05:04.960><c> modern</c><00:05:05.360><c> protocol</c><00:05:05.759><c> than</c><00:05:06.000><c> http</c>

00:05:06.710 --> 00:05:06.720 align:start position:0%
a much more modern protocol than http
 

00:05:06.720 --> 00:05:09.590 align:start position:0%
a much more modern protocol than http
1.1<00:05:07.360><c> that</c><00:05:07.600><c> already</c><00:05:07.919><c> delivers</c><00:05:08.880><c> a</c><00:05:09.039><c> significant</c>

00:05:09.590 --> 00:05:09.600 align:start position:0%
1.1 that already delivers a significant
 

00:05:09.600 --> 00:05:11.350 align:start position:0%
1.1 that already delivers a significant
number<00:05:09.840><c> of</c><00:05:10.080><c> improvements</c>

00:05:11.350 --> 00:05:11.360 align:start position:0%
number of improvements
 

00:05:11.360 --> 00:05:14.310 align:start position:0%
number of improvements
but<00:05:11.520><c> performance</c><00:05:12.479><c> is</c><00:05:12.720><c> further</c>

00:05:14.310 --> 00:05:14.320 align:start position:0%
but performance is further
 

00:05:14.320 --> 00:05:16.950 align:start position:0%
but performance is further
delivered<00:05:14.800><c> with</c><00:05:15.280><c> protocol</c><00:05:15.680><c> buffers</c><00:05:16.160><c> as</c>

00:05:16.950 --> 00:05:16.960 align:start position:0%
delivered with protocol buffers as
 

00:05:16.960 --> 00:05:19.830 align:start position:0%
delivered with protocol buffers as
protocol<00:05:17.520><c> buffers</c><00:05:18.080><c> are</c><00:05:18.400><c> serialized</c><00:05:19.280><c> and</c><00:05:19.520><c> sent</c>

00:05:19.830 --> 00:05:19.840 align:start position:0%
protocol buffers are serialized and sent
 

00:05:19.840 --> 00:05:21.350 align:start position:0%
protocol buffers are serialized and sent
as<00:05:20.160><c> binaries</c>

00:05:21.350 --> 00:05:21.360 align:start position:0%
as binaries
 

00:05:21.360 --> 00:05:22.830 align:start position:0%
as binaries
across<00:05:21.680><c> the</c><00:05:21.840><c> wire</c>

00:05:22.830 --> 00:05:22.840 align:start position:0%
across the wire
 

00:05:22.840 --> 00:05:25.510 align:start position:0%
across the wire
so<00:05:23.840><c> if</c><00:05:23.919><c> you're</c><00:05:24.080><c> familiar</c><00:05:24.479><c> with</c><00:05:24.639><c> json</c><00:05:25.120><c> which</c><00:05:25.360><c> i</c>

00:05:25.510 --> 00:05:25.520 align:start position:0%
so if you're familiar with json which i
 

00:05:25.520 --> 00:05:28.710 align:start position:0%
so if you're familiar with json which i
think<00:05:25.759><c> is</c><00:05:26.000><c> the</c><00:05:26.639><c> de</c><00:05:26.880><c> facto</c><00:05:27.840><c> message</c><00:05:28.240><c> type</c><00:05:28.560><c> that</c>

00:05:28.710 --> 00:05:28.720 align:start position:0%
think is the de facto message type that
 

00:05:28.720 --> 00:05:31.590 align:start position:0%
think is the de facto message type that
is<00:05:28.880><c> sent</c><00:05:29.120><c> via</c><00:05:29.360><c> rest</c><00:05:29.600><c> api</c><00:05:30.080><c> these</c><00:05:30.240><c> days</c>

00:05:31.590 --> 00:05:31.600 align:start position:0%
is sent via rest api these days
 

00:05:31.600 --> 00:05:34.070 align:start position:0%
is sent via rest api these days
you're<00:05:31.840><c> probably</c><00:05:32.240><c> well</c><00:05:32.479><c> aware</c><00:05:32.800><c> that</c><00:05:33.440><c> json</c>

00:05:34.070 --> 00:05:34.080 align:start position:0%
you're probably well aware that json
 

00:05:34.080 --> 00:05:35.909 align:start position:0%
you're probably well aware that json
messages<00:05:34.880><c> are</c>

00:05:35.909 --> 00:05:35.919 align:start position:0%
messages are
 

00:05:35.919 --> 00:05:36.790 align:start position:0%
messages are
not

00:05:36.790 --> 00:05:36.800 align:start position:0%
not
 

00:05:36.800 --> 00:05:39.270 align:start position:0%
not
compressed<00:05:37.440><c> or</c><00:05:37.759><c> flat</c><00:05:38.400><c> by</c><00:05:38.560><c> any</c><00:05:38.800><c> means</c>

00:05:39.270 --> 00:05:39.280 align:start position:0%
compressed or flat by any means
 

00:05:39.280 --> 00:05:40.629 align:start position:0%
compressed or flat by any means
considering<00:05:39.680><c> that</c><00:05:39.840><c> they</c><00:05:40.000><c> are</c><00:05:40.160><c> key</c><00:05:40.320><c> value</c>

00:05:40.629 --> 00:05:40.639 align:start position:0%
considering that they are key value
 

00:05:40.639 --> 00:05:41.830 align:start position:0%
considering that they are key value
pairs<00:05:41.039><c> that</c>

00:05:41.830 --> 00:05:41.840 align:start position:0%
pairs that
 

00:05:41.840 --> 00:05:43.510 align:start position:0%
pairs that
certainly<00:05:42.639><c> are</c><00:05:42.800><c> not</c><00:05:42.960><c> the</c><00:05:43.039><c> most</c><00:05:43.199><c> space</c>

00:05:43.510 --> 00:05:43.520 align:start position:0%
certainly are not the most space
 

00:05:43.520 --> 00:05:44.469 align:start position:0%
certainly are not the most space
efficient

00:05:44.469 --> 00:05:44.479 align:start position:0%
efficient
 

00:05:44.479 --> 00:05:47.110 align:start position:0%
efficient
with<00:05:44.720><c> these</c><00:05:44.880><c> protocol</c><00:05:45.360><c> buffer</c><00:05:46.000><c> buffers</c><00:05:46.800><c> these</c>

00:05:47.110 --> 00:05:47.120 align:start position:0%
with these protocol buffer buffers these
 

00:05:47.120 --> 00:05:49.590 align:start position:0%
with these protocol buffer buffers these
messages<00:05:47.759><c> are</c><00:05:47.919><c> sent</c><00:05:48.160><c> as</c><00:05:48.320><c> binaries</c><00:05:48.880><c> which</c><00:05:49.199><c> are</c>

00:05:49.590 --> 00:05:49.600 align:start position:0%
messages are sent as binaries which are
 

00:05:49.600 --> 00:05:51.990 align:start position:0%
messages are sent as binaries which are
significantly<00:05:50.320><c> significantly</c><00:05:51.039><c> smaller</c><00:05:51.600><c> than</c>

00:05:51.990 --> 00:05:52.000 align:start position:0%
significantly significantly smaller than
 

00:05:52.000 --> 00:05:54.310 align:start position:0%
significantly significantly smaller than
the<00:05:52.400><c> normal</c><00:05:52.800><c> json</c><00:05:53.199><c> message</c>

00:05:54.310 --> 00:05:54.320 align:start position:0%
the normal json message
 

00:05:54.320 --> 00:05:56.150 align:start position:0%
the normal json message
of<00:05:54.479><c> course</c><00:05:54.800><c> that</c><00:05:55.120><c> begs</c><00:05:55.440><c> the</c><00:05:55.600><c> question</c><00:05:55.919><c> what</c>

00:05:56.150 --> 00:05:56.160 align:start position:0%
of course that begs the question what
 

00:05:56.160 --> 00:05:56.950 align:start position:0%
of course that begs the question what
about

00:05:56.950 --> 00:05:56.960 align:start position:0%
about
 

00:05:56.960 --> 00:05:59.590 align:start position:0%
about
using<00:05:57.280><c> something</c><00:05:57.680><c> like</c><00:05:58.000><c> gzip</c><00:05:58.560><c> to</c><00:05:59.039><c> compress</c>

00:05:59.590 --> 00:05:59.600 align:start position:0%
using something like gzip to compress
 

00:05:59.600 --> 00:06:02.230 align:start position:0%
using something like gzip to compress
the<00:05:59.919><c> json</c><00:06:00.319><c> message</c><00:06:00.720><c> before</c><00:06:01.199><c> transmission</c><00:06:02.160><c> and</c>

00:06:02.230 --> 00:06:02.240 align:start position:0%
the json message before transmission and
 

00:06:02.240 --> 00:06:03.430 align:start position:0%
the json message before transmission and
that<00:06:02.400><c> kind</c><00:06:02.560><c> of</c><00:06:02.800><c> brings</c><00:06:03.039><c> us</c><00:06:03.120><c> back</c><00:06:03.280><c> to</c>

00:06:03.430 --> 00:06:03.440 align:start position:0%
that kind of brings us back to
 

00:06:03.440 --> 00:06:05.909 align:start position:0%
that kind of brings us back to
convenience<00:06:04.479><c> in</c><00:06:04.639><c> that</c><00:06:05.280><c> if</c><00:06:05.440><c> we</c><00:06:05.600><c> were</c><00:06:05.680><c> to</c><00:06:05.759><c> use</c>

00:06:05.909 --> 00:06:05.919 align:start position:0%
convenience in that if we were to use
 

00:06:05.919 --> 00:06:08.070 align:start position:0%
convenience in that if we were to use
something<00:06:06.240><c> like</c><00:06:06.479><c> gzip</c><00:06:06.880><c> or</c><00:06:07.120><c> tool</c><00:06:07.440><c> to</c><00:06:07.600><c> compress</c>

00:06:08.070 --> 00:06:08.080 align:start position:0%
something like gzip or tool to compress
 

00:06:08.080 --> 00:06:10.629 align:start position:0%
something like gzip or tool to compress
these<00:06:08.479><c> json</c><00:06:08.960><c> messages</c><00:06:09.440><c> before</c><00:06:09.759><c> being</c><00:06:10.080><c> sent</c>

00:06:10.629 --> 00:06:10.639 align:start position:0%
these json messages before being sent
 

00:06:10.639 --> 00:06:13.189 align:start position:0%
these json messages before being sent
you<00:06:10.800><c> would</c><00:06:10.960><c> need</c><00:06:11.199><c> to</c><00:06:11.600><c> import</c><00:06:12.400><c> gzip</c><00:06:12.960><c> or</c>

00:06:13.189 --> 00:06:13.199 align:start position:0%
you would need to import gzip or
 

00:06:13.199 --> 00:06:14.230 align:start position:0%
you would need to import gzip or
whatever

00:06:14.230 --> 00:06:14.240 align:start position:0%
whatever
 

00:06:14.240 --> 00:06:16.070 align:start position:0%
whatever
compression<00:06:14.639><c> tool</c><00:06:14.880><c> you're</c><00:06:15.039><c> using</c><00:06:15.600><c> on</c><00:06:15.840><c> each</c><00:06:16.000><c> of</c>

00:06:16.070 --> 00:06:16.080 align:start position:0%
compression tool you're using on each of
 

00:06:16.080 --> 00:06:19.029 align:start position:0%
compression tool you're using on each of
the<00:06:16.160><c> microservices</c><00:06:17.039><c> and</c><00:06:17.440><c> that</c><00:06:17.600><c> would</c><00:06:17.759><c> be</c>

00:06:19.029 --> 00:06:19.039 align:start position:0%
the microservices and that would be
 

00:06:19.039 --> 00:06:20.790 align:start position:0%
the microservices and that would be
a<00:06:19.120><c> bit</c><00:06:19.280><c> of</c><00:06:19.360><c> a</c><00:06:19.440><c> pain</c><00:06:19.680><c> over</c><00:06:19.919><c> time</c><00:06:20.160><c> since</c><00:06:20.479><c> you're</c>

00:06:20.790 --> 00:06:20.800 align:start position:0%
a bit of a pain over time since you're
 

00:06:20.800 --> 00:06:23.029 align:start position:0%
a bit of a pain over time since you're
basically<00:06:21.360><c> working</c><00:06:21.919><c> on</c><00:06:22.479><c> different</c><00:06:22.720><c> micro</c>

00:06:23.029 --> 00:06:23.039 align:start position:0%
basically working on different micro
 

00:06:23.039 --> 00:06:24.790 align:start position:0%
basically working on different micro
services<00:06:23.759><c> and</c><00:06:23.919><c> you're</c><00:06:24.080><c> implementing</c><00:06:24.560><c> that</c>

00:06:24.790 --> 00:06:24.800 align:start position:0%
services and you're implementing that
 

00:06:24.800 --> 00:06:27.430 align:start position:0%
services and you're implementing that
yourself<00:06:25.280><c> whereas</c><00:06:25.600><c> with</c><00:06:25.759><c> grpc</c><00:06:26.800><c> this</c><00:06:27.039><c> is</c><00:06:27.199><c> all</c>

00:06:27.430 --> 00:06:27.440 align:start position:0%
yourself whereas with grpc this is all
 

00:06:27.440 --> 00:06:29.270 align:start position:0%
yourself whereas with grpc this is all
handled<00:06:28.000><c> for</c><00:06:28.240><c> you</c>

00:06:29.270 --> 00:06:29.280 align:start position:0%
handled for you
 

00:06:29.280 --> 00:06:34.070 align:start position:0%
handled for you
so<00:06:29.520><c> to</c><00:06:29.680><c> summarize</c><00:06:30.319><c> grpc</c><00:06:31.120><c> offers</c><00:06:31.840><c> convenience</c>

00:06:34.070 --> 00:06:34.080 align:start position:0%
so to summarize grpc offers convenience
 

00:06:34.080 --> 00:06:36.790 align:start position:0%
so to summarize grpc offers convenience
and<00:06:34.160><c> then</c><00:06:34.400><c> in</c><00:06:34.560><c> the</c><00:06:34.639><c> form</c><00:06:35.039><c> of</c><00:06:35.440><c> code</c><00:06:35.680><c> generation</c>

00:06:36.790 --> 00:06:36.800 align:start position:0%
and then in the form of code generation
 

00:06:36.800 --> 00:06:39.110 align:start position:0%
and then in the form of code generation
protocol<00:06:37.280><c> buffers</c>

00:06:39.110 --> 00:06:39.120 align:start position:0%
protocol buffers
 

00:06:39.120 --> 00:06:41.590 align:start position:0%
protocol buffers
the<00:06:39.840><c> client</c><00:06:40.240><c> library</c><00:06:40.720><c> being</c><00:06:40.960><c> implemented</c><00:06:41.440><c> for</c>

00:06:41.590 --> 00:06:41.600 align:start position:0%
the client library being implemented for
 

00:06:41.600 --> 00:06:42.390 align:start position:0%
the client library being implemented for
you

00:06:42.390 --> 00:06:42.400 align:start position:0%
you
 

00:06:42.400 --> 00:06:44.629 align:start position:0%
you
and<00:06:42.639><c> on</c><00:06:42.720><c> top</c><00:06:42.960><c> of</c><00:06:43.039><c> that</c><00:06:43.440><c> performance</c><00:06:44.000><c> overall</c>

00:06:44.629 --> 00:06:44.639 align:start position:0%
and on top of that performance overall
 

00:06:44.639 --> 00:06:47.110 align:start position:0%
and on top of that performance overall
using<00:06:45.039><c> http</c><00:06:45.680><c> 2.0</c><00:06:46.400><c> and</c>

00:06:47.110 --> 00:06:47.120 align:start position:0%
using http 2.0 and
 

00:06:47.120 --> 00:06:50.230 align:start position:0%
using http 2.0 and
sending<00:06:47.680><c> very</c><00:06:48.000><c> small</c><00:06:48.720><c> performant</c><00:06:49.280><c> messages</c>

00:06:50.230 --> 00:06:50.240 align:start position:0%
sending very small performant messages
 

00:06:50.240 --> 00:06:51.670 align:start position:0%
sending very small performant messages
across<00:06:50.560><c> the</c><00:06:50.720><c> wire</c>

00:06:51.670 --> 00:06:51.680 align:start position:0%
across the wire
 

00:06:51.680 --> 00:06:54.629 align:start position:0%
across the wire
so<00:06:51.840><c> hopefully</c><00:06:52.240><c> this</c><00:06:52.800><c> provided</c><00:06:53.360><c> an</c><00:06:53.520><c> example</c><00:06:54.160><c> of</c>

00:06:54.629 --> 00:06:54.639 align:start position:0%
so hopefully this provided an example of
 

00:06:54.639 --> 00:06:58.390 align:start position:0%
so hopefully this provided an example of
grpc<00:06:55.759><c> in</c><00:06:56.160><c> a</c><00:06:56.319><c> useful</c><00:06:56.960><c> applicable</c><00:06:57.440><c> format</c>

00:06:58.390 --> 00:06:58.400 align:start position:0%
grpc in a useful applicable format
 

00:06:58.400 --> 00:07:01.029 align:start position:0%
grpc in a useful applicable format
of<00:06:58.479><c> course</c><00:06:58.720><c> grpc</c><00:06:59.520><c> is</c><00:06:59.680><c> not</c><00:07:00.000><c> the</c><00:07:00.319><c> banded</c><00:07:00.720><c> curl</c>

00:07:01.029 --> 00:07:01.039 align:start position:0%
of course grpc is not the banded curl
 

00:07:01.039 --> 00:07:03.670 align:start position:0%
of course grpc is not the banded curl
solution<00:07:01.520><c> for</c><00:07:01.840><c> communication</c><00:07:02.639><c> but</c><00:07:03.199><c> i</c><00:07:03.360><c> did</c>

00:07:03.670 --> 00:07:03.680 align:start position:0%
solution for communication but i did
 

00:07:03.680 --> 00:07:05.990 align:start position:0%
solution for communication but i did
want<00:07:03.840><c> to</c><00:07:04.000><c> emphasize</c><00:07:04.639><c> that</c><00:07:04.800><c> this</c><00:07:05.280><c> can</c><00:07:05.599><c> be</c><00:07:05.919><c> a</c>

00:07:05.990 --> 00:07:06.000 align:start position:0%
want to emphasize that this can be a
 

00:07:06.000 --> 00:07:07.749 align:start position:0%
want to emphasize that this can be a
good<00:07:06.160><c> solution</c><00:07:06.560><c> for</c><00:07:06.720><c> your</c><00:07:06.880><c> application</c><00:07:07.599><c> here</c>

00:07:07.749 --> 00:07:07.759 align:start position:0%
good solution for your application here
 

00:07:07.759 --> 00:07:09.270 align:start position:0%
good solution for your application here
are<00:07:07.919><c> some</c><00:07:08.080><c> videos</c><00:07:08.400><c> that</c><00:07:08.479><c> may</c><00:07:08.639><c> be</c><00:07:08.800><c> of</c><00:07:08.960><c> interest</c>

00:07:09.270 --> 00:07:09.280 align:start position:0%
are some videos that may be of interest
 

00:07:09.280 --> 00:07:10.950 align:start position:0%
are some videos that may be of interest
to<00:07:09.360><c> you</c><00:07:09.840><c> if</c><00:07:10.000><c> you</c><00:07:10.080><c> have</c><00:07:10.240><c> any</c><00:07:10.479><c> questions</c><00:07:10.800><c> about</c>

00:07:10.950 --> 00:07:10.960 align:start position:0%
to you if you have any questions about
 

00:07:10.960 --> 00:07:12.629 align:start position:0%
to you if you have any questions about
this<00:07:11.199><c> video</c><00:07:11.680><c> add</c><00:07:11.919><c> them</c><00:07:12.080><c> in</c><00:07:12.160><c> the</c><00:07:12.240><c> comments</c>

00:07:12.629 --> 00:07:12.639 align:start position:0%
this video add them in the comments
 

00:07:12.639 --> 00:07:14.629 align:start position:0%
this video add them in the comments
below<00:07:13.039><c> and</c><00:07:13.120><c> be</c><00:07:13.280><c> sure</c><00:07:13.440><c> to</c><00:07:13.520><c> like</c><00:07:13.680><c> and</c><00:07:13.759><c> subscribe</c>

00:07:14.629 --> 00:07:14.639 align:start position:0%
below and be sure to like and subscribe
 

00:07:14.639 --> 00:07:17.280 align:start position:0%
below and be sure to like and subscribe
thanks

