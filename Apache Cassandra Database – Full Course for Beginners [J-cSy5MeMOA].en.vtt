WEBVTT



00:00:00.080 --> 00:00:03.350 align:start position:0%
 
apache<00:00:00.480><c> cassandra</c><00:00:01.120><c> is</c><00:00:01.280><c> an</c><00:00:01.520><c> open</c><00:00:01.839><c> source</c><00:00:02.480><c> nosql</c>

00:00:03.350 --> 00:00:03.360 align:start position:0%
apache cassandra is an open source nosql
 

00:00:03.360 --> 00:00:05.349 align:start position:0%
apache cassandra is an open source nosql
distributed<00:00:04.000><c> database</c>

00:00:05.349 --> 00:00:05.359 align:start position:0%
distributed database
 

00:00:05.359 --> 00:00:08.390 align:start position:0%
distributed database
this<00:00:05.680><c> beginner's</c><00:00:06.240><c> course</c><00:00:06.879><c> has</c><00:00:07.279><c> four</c><00:00:07.600><c> modules</c>

00:00:08.390 --> 00:00:08.400 align:start position:0%
this beginner's course has four modules
 

00:00:08.400 --> 00:00:11.350 align:start position:0%
this beginner's course has four modules
the<00:00:08.639><c> first</c><00:00:09.040><c> three</c><00:00:09.360><c> modules</c><00:00:10.240><c> cover</c><00:00:10.559><c> the</c><00:00:10.719><c> basics</c>

00:00:11.350 --> 00:00:11.360 align:start position:0%
the first three modules cover the basics
 

00:00:11.360 --> 00:00:14.150 align:start position:0%
the first three modules cover the basics
of<00:00:11.599><c> apache</c><00:00:12.160><c> cassandra</c><00:00:12.960><c> data</c><00:00:13.280><c> modeling</c><00:00:14.000><c> the</c>

00:00:14.150 --> 00:00:14.160 align:start position:0%
of apache cassandra data modeling the
 

00:00:14.160 --> 00:00:15.990 align:start position:0%
of apache cassandra data modeling the
final<00:00:14.480><c> module</c><00:00:15.040><c> covers</c><00:00:15.440><c> practical</c>

00:00:15.990 --> 00:00:16.000 align:start position:0%
final module covers practical
 

00:00:16.000 --> 00:00:18.310 align:start position:0%
final module covers practical
applications<00:00:16.720><c> of</c><00:00:16.880><c> cassandra</c>

00:00:18.310 --> 00:00:18.320 align:start position:0%
applications of cassandra
 

00:00:18.320 --> 00:00:21.029 align:start position:0%
applications of cassandra
if<00:00:18.480><c> you</c><00:00:18.640><c> want</c><00:00:18.880><c> a</c><00:00:19.039><c> broad</c><00:00:19.520><c> overview</c><00:00:20.160><c> of</c><00:00:20.400><c> nosql</c>

00:00:21.029 --> 00:00:21.039 align:start position:0%
if you want a broad overview of nosql
 

00:00:21.039 --> 00:00:23.910 align:start position:0%
if you want a broad overview of nosql
databases<00:00:22.240><c> you</c><00:00:22.400><c> can</c><00:00:22.640><c> check</c><00:00:22.960><c> out</c><00:00:23.119><c> the</c><00:00:23.359><c> previous</c>

00:00:23.910 --> 00:00:23.920 align:start position:0%
databases you can check out the previous
 

00:00:23.920 --> 00:00:26.950 align:start position:0%
databases you can check out the previous
nosql<00:00:24.560><c> database</c><00:00:25.119><c> course</c><00:00:25.600><c> on</c><00:00:25.760><c> our</c><00:00:25.920><c> channel</c>

00:00:26.950 --> 00:00:26.960 align:start position:0%
nosql database course on our channel
 

00:00:26.960 --> 00:00:28.790 align:start position:0%
nosql database course on our channel
this<00:00:27.199><c> module</c><00:00:27.599><c> will</c><00:00:27.760><c> cover</c><00:00:28.000><c> the</c><00:00:28.080><c> basics</c><00:00:28.640><c> of</c>

00:00:28.790 --> 00:00:28.800 align:start position:0%
this module will cover the basics of
 

00:00:28.800 --> 00:00:31.269 align:start position:0%
this module will cover the basics of
apache<00:00:29.199><c> cassandra</c><00:00:29.679><c> data</c><00:00:29.920><c> modeling</c><00:00:30.880><c> upon</c>

00:00:31.269 --> 00:00:31.279 align:start position:0%
apache cassandra data modeling upon
 

00:00:31.279 --> 00:00:32.950 align:start position:0%
apache cassandra data modeling upon
completion<00:00:31.840><c> of</c><00:00:31.920><c> this</c><00:00:32.079><c> module</c><00:00:32.559><c> you</c><00:00:32.719><c> will</c><00:00:32.800><c> be</c>

00:00:32.950 --> 00:00:32.960 align:start position:0%
completion of this module you will be
 

00:00:32.960 --> 00:00:34.870 align:start position:0%
completion of this module you will be
able<00:00:33.120><c> to</c><00:00:33.840><c> differentiate</c><00:00:34.480><c> between</c><00:00:34.800><c> the</c>

00:00:34.870 --> 00:00:34.880 align:start position:0%
able to differentiate between the
 

00:00:34.880 --> 00:00:36.709 align:start position:0%
able to differentiate between the
relational<00:00:35.360><c> databases</c><00:00:36.000><c> and</c><00:00:36.160><c> an</c><00:00:36.239><c> apache</c>

00:00:36.709 --> 00:00:36.719 align:start position:0%
relational databases and an apache
 

00:00:36.719 --> 00:00:38.150 align:start position:0%
relational databases and an apache
standard<00:00:37.040><c> database</c>

00:00:38.150 --> 00:00:38.160 align:start position:0%
standard database
 

00:00:38.160 --> 00:00:40.389 align:start position:0%
standard database
recognize<00:00:38.719><c> the</c><00:00:38.800><c> basic</c><00:00:39.200><c> terminologies</c><00:00:40.079><c> used</c>

00:00:40.389 --> 00:00:40.399 align:start position:0%
recognize the basic terminologies used
 

00:00:40.399 --> 00:00:42.069 align:start position:0%
recognize the basic terminologies used
in<00:00:40.480><c> cassandra</c><00:00:41.040><c> tables</c>

00:00:42.069 --> 00:00:42.079 align:start position:0%
in cassandra tables
 

00:00:42.079 --> 00:00:44.470 align:start position:0%
in cassandra tables
explore<00:00:42.559><c> cql</c><00:00:43.120><c> fundamentals</c>

00:00:44.470 --> 00:00:44.480 align:start position:0%
explore cql fundamentals
 

00:00:44.480 --> 00:00:47.510 align:start position:0%
explore cql fundamentals
identify<00:00:45.200><c> how</c><00:00:45.520><c> partitions</c><00:00:46.320><c> primary</c><00:00:46.800><c> keys</c><00:00:47.280><c> and</c>

00:00:47.510 --> 00:00:47.520 align:start position:0%
identify how partitions primary keys and
 

00:00:47.520 --> 00:00:49.350 align:start position:0%
identify how partitions primary keys and
clustering<00:00:48.000><c> columns</c><00:00:48.399><c> are</c><00:00:48.559><c> used</c><00:00:48.800><c> in</c><00:00:48.879><c> cassandra</c>

00:00:49.350 --> 00:00:49.360 align:start position:0%
clustering columns are used in cassandra
 

00:00:49.360 --> 00:00:50.389 align:start position:0%
clustering columns are used in cassandra
tables

00:00:50.389 --> 00:00:50.399 align:start position:0%
tables
 

00:00:50.399 --> 00:00:52.709 align:start position:0%
tables
observe<00:00:51.039><c> the</c><00:00:51.200><c> concept</c><00:00:51.680><c> of</c><00:00:51.840><c> replication</c><00:00:52.559><c> and</c>

00:00:52.709 --> 00:00:52.719 align:start position:0%
observe the concept of replication and
 

00:00:52.719 --> 00:00:54.470 align:start position:0%
observe the concept of replication and
consistency

00:00:54.470 --> 00:00:54.480 align:start position:0%
consistency
 

00:00:54.480 --> 00:00:56.389 align:start position:0%
consistency
upon<00:00:54.800><c> completing</c><00:00:55.280><c> this</c><00:00:55.520><c> lesson</c><00:00:56.000><c> you</c><00:00:56.160><c> will</c><00:00:56.320><c> be</c>

00:00:56.389 --> 00:00:56.399 align:start position:0%
upon completing this lesson you will be
 

00:00:56.399 --> 00:00:58.630 align:start position:0%
upon completing this lesson you will be
able<00:00:56.559><c> to</c><00:00:56.800><c> understand</c><00:00:57.440><c> how</c><00:00:57.920><c> relational</c><00:00:58.399><c> data</c>

00:00:58.630 --> 00:00:58.640 align:start position:0%
able to understand how relational data
 

00:00:58.640 --> 00:01:00.709 align:start position:0%
able to understand how relational data
modeling<00:00:59.039><c> concepts</c><00:00:59.520><c> compare</c><00:00:59.920><c> to</c><00:01:00.079><c> those</c><00:01:00.399><c> used</c>

00:01:00.709 --> 00:01:00.719 align:start position:0%
modeling concepts compare to those used
 

00:01:00.719 --> 00:01:03.910 align:start position:0%
modeling concepts compare to those used
when<00:01:00.960><c> data</c><00:01:01.199><c> modeling</c><00:01:01.600><c> for</c><00:01:01.840><c> apache</c><00:01:02.320><c> cassandra</c>

00:01:03.910 --> 00:01:03.920 align:start position:0%
when data modeling for apache cassandra
 

00:01:03.920 --> 00:01:05.030 align:start position:0%
when data modeling for apache cassandra
now<00:01:04.159><c> you</c><00:01:04.320><c> will</c><00:01:04.400><c> learn</c><00:01:04.640><c> about</c><00:01:04.799><c> some</c>

00:01:05.030 --> 00:01:05.040 align:start position:0%
now you will learn about some
 

00:01:05.040 --> 00:01:07.030 align:start position:0%
now you will learn about some
differences<00:01:05.600><c> between</c><00:01:06.000><c> relational</c><00:01:06.400><c> databases</c>

00:01:07.030 --> 00:01:07.040 align:start position:0%
differences between relational databases
 

00:01:07.040 --> 00:01:08.710 align:start position:0%
differences between relational databases
and<00:01:07.200><c> apache</c><00:01:07.600><c> cassandra</c>

00:01:08.710 --> 00:01:08.720 align:start position:0%
and apache cassandra
 

00:01:08.720 --> 00:01:10.390 align:start position:0%
and apache cassandra
the<00:01:08.880><c> cassandra</c><00:01:09.439><c> data</c><00:01:09.680><c> model</c><00:01:10.000><c> follows</c>

00:01:10.390 --> 00:01:10.400 align:start position:0%
the cassandra data model follows
 

00:01:10.400 --> 00:01:12.469 align:start position:0%
the cassandra data model follows
cassandra<00:01:10.960><c> modeling</c><00:01:11.360><c> methodology</c><00:01:12.159><c> while</c><00:01:12.320><c> the</c>

00:01:12.469 --> 00:01:12.479 align:start position:0%
cassandra modeling methodology while the
 

00:01:12.479 --> 00:01:14.230 align:start position:0%
cassandra modeling methodology while the
relational<00:01:12.960><c> database</c><00:01:13.360><c> follows</c><00:01:13.680><c> the</c><00:01:13.840><c> sample</c>

00:01:14.230 --> 00:01:14.240 align:start position:0%
relational database follows the sample
 

00:01:14.240 --> 00:01:16.630 align:start position:0%
relational database follows the sample
relational<00:01:14.720><c> model</c><00:01:15.119><c> methodology</c>

00:01:16.630 --> 00:01:16.640 align:start position:0%
relational model methodology
 

00:01:16.640 --> 00:01:18.789 align:start position:0%
relational model methodology
in<00:01:16.799><c> cassandra</c><00:01:17.280><c> modeling</c><00:01:17.920><c> we</c><00:01:18.080><c> think</c><00:01:18.320><c> about</c><00:01:18.560><c> the</c>

00:01:18.789 --> 00:01:18.799 align:start position:0%
in cassandra modeling we think about the
 

00:01:18.799 --> 00:01:20.630 align:start position:0%
in cassandra modeling we think about the
application<00:01:19.439><c> needs</c><00:01:19.680><c> when</c><00:01:19.920><c> building</c><00:01:20.240><c> the</c><00:01:20.400><c> data</c>

00:01:20.630 --> 00:01:20.640 align:start position:0%
application needs when building the data
 

00:01:20.640 --> 00:01:21.510 align:start position:0%
application needs when building the data
model

00:01:21.510 --> 00:01:21.520 align:start position:0%
model
 

00:01:21.520 --> 00:01:23.590 align:start position:0%
model
since<00:01:21.840><c> queries</c><00:01:22.320><c> are</c><00:01:22.479><c> the</c><00:01:22.640><c> driving</c><00:01:23.040><c> force</c><00:01:23.360><c> for</c>

00:01:23.590 --> 00:01:23.600 align:start position:0%
since queries are the driving force for
 

00:01:23.600 --> 00:01:25.270 align:start position:0%
since queries are the driving force for
this<00:01:23.759><c> model</c><00:01:24.240><c> those</c><00:01:24.560><c> queries</c><00:01:24.960><c> must</c><00:01:25.119><c> be</c>

00:01:25.270 --> 00:01:25.280 align:start position:0%
this model those queries must be
 

00:01:25.280 --> 00:01:27.910 align:start position:0%
this model those queries must be
conceptualized<00:01:26.159><c> before</c><00:01:26.720><c> data</c><00:01:27.040><c> entry</c><00:01:27.439><c> whereas</c>

00:01:27.910 --> 00:01:27.920 align:start position:0%
conceptualized before data entry whereas
 

00:01:27.920 --> 00:01:30.149 align:start position:0%
conceptualized before data entry whereas
in<00:01:28.080><c> a</c><00:01:28.159><c> relational</c><00:01:28.720><c> model</c><00:01:29.280><c> entities</c><00:01:29.840><c> are</c><00:01:30.000><c> the</c>

00:01:30.149 --> 00:01:30.159 align:start position:0%
in a relational model entities are the
 

00:01:30.159 --> 00:01:31.830 align:start position:0%
in a relational model entities are the
driving<00:01:30.640><c> factor</c>

00:01:31.830 --> 00:01:31.840 align:start position:0%
driving factor
 

00:01:31.840 --> 00:01:33.990 align:start position:0%
driving factor
in<00:01:32.000><c> relational</c><00:01:32.479><c> modeling</c><00:01:33.040><c> primary</c><00:01:33.520><c> keys</c><00:01:33.840><c> are</c>

00:01:33.990 --> 00:01:34.000 align:start position:0%
in relational modeling primary keys are
 

00:01:34.000 --> 00:01:35.670 align:start position:0%
in relational modeling primary keys are
used<00:01:34.240><c> to</c><00:01:34.400><c> ensure</c><00:01:34.799><c> uniqueness</c><00:01:35.439><c> of</c><00:01:35.520><c> the</c>

00:01:35.670 --> 00:01:35.680 align:start position:0%
used to ensure uniqueness of the
 

00:01:35.680 --> 00:01:36.870 align:start position:0%
used to ensure uniqueness of the
entities

00:01:36.870 --> 00:01:36.880 align:start position:0%
entities
 

00:01:36.880 --> 00:01:39.429 align:start position:0%
entities
in<00:01:37.040><c> cassandra</c><00:01:37.840><c> modeling</c><00:01:38.320><c> primary</c><00:01:38.720><c> keys</c><00:01:39.119><c> take</c>

00:01:39.429 --> 00:01:39.439 align:start position:0%
in cassandra modeling primary keys take
 

00:01:39.439 --> 00:01:41.109 align:start position:0%
in cassandra modeling primary keys take
on<00:01:39.680><c> an</c><00:01:39.840><c> additional</c><00:01:40.240><c> significance</c>

00:01:41.109 --> 00:01:41.119 align:start position:0%
on an additional significance
 

00:01:41.119 --> 00:01:43.429 align:start position:0%
on an additional significance
particularly<00:01:42.000><c> in</c><00:01:42.079><c> determining</c><00:01:42.720><c> performance</c>

00:01:43.429 --> 00:01:43.439 align:start position:0%
particularly in determining performance
 

00:01:43.439 --> 00:01:45.190 align:start position:0%
particularly in determining performance
on<00:01:43.600><c> a</c><00:01:43.680><c> large</c><00:01:44.000><c> scale</c>

00:01:45.190 --> 00:01:45.200 align:start position:0%
on a large scale
 

00:01:45.200 --> 00:01:46.789 align:start position:0%
on a large scale
in<00:01:45.360><c> order</c><00:01:45.600><c> for</c><00:01:45.920><c> us</c><00:01:46.000><c> to</c><00:01:46.159><c> provide</c><00:01:46.640><c> high</c>

00:01:46.789 --> 00:01:46.799 align:start position:0%
in order for us to provide high
 

00:01:46.799 --> 00:01:48.630 align:start position:0%
in order for us to provide high
performance<00:01:47.360><c> and</c><00:01:47.439><c> availability</c><00:01:48.159><c> on</c><00:01:48.240><c> a</c><00:01:48.399><c> large</c>

00:01:48.630 --> 00:01:48.640 align:start position:0%
performance and availability on a large
 

00:01:48.640 --> 00:01:51.109 align:start position:0%
performance and availability on a large
scale<00:01:49.200><c> cassandra</c><00:01:49.759><c> uses</c><00:01:50.159><c> a</c><00:01:50.399><c> distributed</c>

00:01:51.109 --> 00:01:51.119 align:start position:0%
scale cassandra uses a distributed
 

00:01:51.119 --> 00:01:52.310 align:start position:0%
scale cassandra uses a distributed
architecture

00:01:52.310 --> 00:01:52.320 align:start position:0%
architecture
 

00:01:52.320 --> 00:01:54.550 align:start position:0%
architecture
cassandra<00:01:52.880><c> by</c><00:01:53.119><c> default</c><00:01:53.759><c> does</c><00:01:53.920><c> not</c><00:01:54.079><c> support</c>

00:01:54.550 --> 00:01:54.560 align:start position:0%
cassandra by default does not support
 

00:01:54.560 --> 00:01:57.030 align:start position:0%
cassandra by default does not support
asset<00:01:54.960><c> transactions</c><00:01:55.680><c> or</c><00:01:56.000><c> joins</c><00:01:56.479><c> but</c><00:01:56.720><c> uses</c>

00:01:57.030 --> 00:01:57.040 align:start position:0%
asset transactions or joins but uses
 

00:01:57.040 --> 00:01:59.270 align:start position:0%
asset transactions or joins but uses
denormalization<00:01:58.079><c> instead</c>

00:01:59.270 --> 00:01:59.280 align:start position:0%
denormalization instead
 

00:01:59.280 --> 00:02:01.190 align:start position:0%
denormalization instead
cassandra<00:01:59.759><c> does</c><00:01:59.840><c> not</c><00:02:00.079><c> enforce</c><00:02:00.560><c> referential</c>

00:02:01.190 --> 00:02:01.200 align:start position:0%
cassandra does not enforce referential
 

00:02:01.200 --> 00:02:03.749 align:start position:0%
cassandra does not enforce referential
integrity<00:02:01.680><c> across</c><00:02:02.000><c> tables</c>

00:02:03.749 --> 00:02:03.759 align:start position:0%
integrity across tables
 

00:02:03.759 --> 00:02:05.670 align:start position:0%
integrity across tables
here's<00:02:04.079><c> a</c><00:02:04.240><c> sample</c><00:02:04.719><c> of</c><00:02:04.880><c> a</c><00:02:04.960><c> relational</c><00:02:05.439><c> data</c>

00:02:05.670 --> 00:02:05.680 align:start position:0%
here's a sample of a relational data
 

00:02:05.680 --> 00:02:06.550 align:start position:0%
here's a sample of a relational data
model

00:02:06.550 --> 00:02:06.560 align:start position:0%
model
 

00:02:06.560 --> 00:02:08.550 align:start position:0%
model
this<00:02:06.799><c> is</c><00:02:06.880><c> one</c><00:02:07.119><c> of</c><00:02:07.200><c> many</c><00:02:07.600><c> types</c><00:02:08.000><c> of</c><00:02:08.160><c> relational</c>

00:02:08.550 --> 00:02:08.560 align:start position:0%
this is one of many types of relational
 

00:02:08.560 --> 00:02:09.749 align:start position:0%
this is one of many types of relational
data<00:02:08.800><c> models</c>

00:02:09.749 --> 00:02:09.759 align:start position:0%
data models
 

00:02:09.759 --> 00:02:12.070 align:start position:0%
data models
this<00:02:10.000><c> model</c><00:02:10.319><c> produces</c><00:02:10.800><c> conceptual</c><00:02:11.520><c> logical</c>

00:02:12.070 --> 00:02:12.080 align:start position:0%
this model produces conceptual logical
 

00:02:12.080 --> 00:02:14.150 align:start position:0%
this model produces conceptual logical
and<00:02:12.319><c> physical</c><00:02:12.640><c> data</c><00:02:12.879><c> models</c><00:02:13.360><c> including</c><00:02:13.760><c> steps</c>

00:02:14.150 --> 00:02:14.160 align:start position:0%
and physical data models including steps
 

00:02:14.160 --> 00:02:16.150 align:start position:0%
and physical data models including steps
for<00:02:14.319><c> normalization</c><00:02:15.200><c> and</c><00:02:15.360><c> optimizing</c><00:02:16.000><c> the</c>

00:02:16.150 --> 00:02:16.160 align:start position:0%
for normalization and optimizing the
 

00:02:16.160 --> 00:02:17.350 align:start position:0%
for normalization and optimizing the
data<00:02:16.400><c> model</c>

00:02:17.350 --> 00:02:17.360 align:start position:0%
data model
 

00:02:17.360 --> 00:02:19.030 align:start position:0%
data model
note<00:02:17.599><c> that</c><00:02:17.760><c> queries</c><00:02:18.319><c> aren't</c><00:02:18.480><c> considered</c>

00:02:19.030 --> 00:02:19.040 align:start position:0%
note that queries aren't considered
 

00:02:19.040 --> 00:02:20.949 align:start position:0%
note that queries aren't considered
until<00:02:19.280><c> the</c><00:02:19.440><c> very</c><00:02:19.840><c> late</c><00:02:20.080><c> stages</c><00:02:20.640><c> of</c><00:02:20.800><c> the</c>

00:02:20.949 --> 00:02:20.959 align:start position:0%
until the very late stages of the
 

00:02:20.959 --> 00:02:22.630 align:start position:0%
until the very late stages of the
process

00:02:22.630 --> 00:02:22.640 align:start position:0%
process
 

00:02:22.640 --> 00:02:24.229 align:start position:0%
process
let's<00:02:22.879><c> now</c><00:02:23.040><c> look</c><00:02:23.280><c> at</c><00:02:23.360><c> the</c><00:02:23.440><c> apache</c><00:02:23.840><c> cassandra</c>

00:02:24.229 --> 00:02:24.239 align:start position:0%
let's now look at the apache cassandra
 

00:02:24.239 --> 00:02:25.990 align:start position:0%
let's now look at the apache cassandra
data<00:02:24.480><c> modeling</c><00:02:24.879><c> approach</c>

00:02:25.990 --> 00:02:26.000 align:start position:0%
data modeling approach
 

00:02:26.000 --> 00:02:28.150 align:start position:0%
data modeling approach
here<00:02:26.400><c> we</c><00:02:26.640><c> still</c><00:02:26.800><c> have</c><00:02:26.959><c> conceptual</c><00:02:27.680><c> logical</c>

00:02:28.150 --> 00:02:28.160 align:start position:0%
here we still have conceptual logical
 

00:02:28.160 --> 00:02:29.830 align:start position:0%
here we still have conceptual logical
and<00:02:28.400><c> physical</c><00:02:28.720><c> data</c><00:02:29.040><c> models</c><00:02:29.520><c> but</c><00:02:29.680><c> the</c>

00:02:29.830 --> 00:02:29.840 align:start position:0%
and physical data models but the
 

00:02:29.840 --> 00:02:31.990 align:start position:0%
and physical data models but the
application<00:02:30.480><c> workflow</c><00:02:31.120><c> and</c><00:02:31.360><c> inquiries</c><00:02:31.840><c> are</c>

00:02:31.990 --> 00:02:32.000 align:start position:0%
application workflow and inquiries are
 

00:02:32.000 --> 00:02:34.390 align:start position:0%
application workflow and inquiries are
considered<00:02:32.560><c> earlier</c><00:02:32.959><c> in</c><00:02:33.040><c> the</c><00:02:33.200><c> process</c>

00:02:34.390 --> 00:02:34.400 align:start position:0%
considered earlier in the process
 

00:02:34.400 --> 00:02:36.630 align:start position:0%
considered earlier in the process
this<00:02:34.640><c> analysis</c><00:02:35.280><c> is</c><00:02:35.440><c> incorporated</c><00:02:36.160><c> early</c><00:02:36.400><c> into</c>

00:02:36.630 --> 00:02:36.640 align:start position:0%
this analysis is incorporated early into
 

00:02:36.640 --> 00:02:38.630 align:start position:0%
this analysis is incorporated early into
the<00:02:36.879><c> logical</c><00:02:37.280><c> data</c><00:02:37.599><c> modeling</c><00:02:38.000><c> phase</c><00:02:38.400><c> rather</c>

00:02:38.630 --> 00:02:38.640 align:start position:0%
the logical data modeling phase rather
 

00:02:38.640 --> 00:02:40.229 align:start position:0%
the logical data modeling phase rather
than<00:02:38.879><c> waiting</c><00:02:39.200><c> until</c><00:02:39.519><c> the</c><00:02:39.680><c> end</c><00:02:39.920><c> of</c><00:02:40.080><c> the</c>

00:02:40.229 --> 00:02:40.239 align:start position:0%
than waiting until the end of the
 

00:02:40.239 --> 00:02:42.070 align:start position:0%
than waiting until the end of the
process

00:02:42.070 --> 00:02:42.080 align:start position:0%
process
 

00:02:42.080 --> 00:02:43.830 align:start position:0%
process
let's<00:02:42.319><c> look</c><00:02:42.560><c> at</c><00:02:42.640><c> the</c><00:02:42.800><c> difference</c><00:02:43.280><c> between</c><00:02:43.680><c> the</c>

00:02:43.830 --> 00:02:43.840 align:start position:0%
let's look at the difference between the
 

00:02:43.840 --> 00:02:45.509 align:start position:0%
let's look at the difference between the
modeling<00:02:44.239><c> approaches</c>

00:02:45.509 --> 00:02:45.519 align:start position:0%
modeling approaches
 

00:02:45.519 --> 00:02:47.270 align:start position:0%
modeling approaches
in<00:02:45.680><c> the</c><00:02:45.760><c> relational</c><00:02:46.319><c> approach</c><00:02:46.800><c> we</c><00:02:46.959><c> first</c>

00:02:47.270 --> 00:02:47.280 align:start position:0%
in the relational approach we first
 

00:02:47.280 --> 00:02:49.350 align:start position:0%
in the relational approach we first
think<00:02:47.519><c> about</c><00:02:47.840><c> the</c><00:02:48.000><c> type</c><00:02:48.239><c> of</c><00:02:48.400><c> data</c><00:02:48.959><c> create</c><00:02:49.280><c> a</c>

00:02:49.350 --> 00:02:49.360 align:start position:0%
think about the type of data create a
 

00:02:49.360 --> 00:02:51.430 align:start position:0%
think about the type of data create a
data<00:02:49.599><c> model</c><00:02:50.000><c> based</c><00:02:50.319><c> on</c><00:02:50.480><c> the</c><00:02:50.560><c> data</c><00:02:51.040><c> and</c><00:02:51.200><c> then</c>

00:02:51.430 --> 00:02:51.440 align:start position:0%
data model based on the data and then
 

00:02:51.440 --> 00:02:53.910 align:start position:0%
data model based on the data and then
think<00:02:51.680><c> about</c><00:02:52.000><c> our</c><00:02:52.239><c> application</c><00:02:52.959><c> last</c>

00:02:53.910 --> 00:02:53.920 align:start position:0%
think about our application last
 

00:02:53.920 --> 00:02:55.910 align:start position:0%
think about our application last
the<00:02:54.080><c> developer</c><00:02:54.640><c> can</c><00:02:54.879><c> then</c><00:02:55.120><c> make</c><00:02:55.360><c> queries</c><00:02:55.760><c> to</c>

00:02:55.910 --> 00:02:55.920 align:start position:0%
the developer can then make queries to
 

00:02:55.920 --> 00:02:58.070 align:start position:0%
the developer can then make queries to
retrieve<00:02:56.480><c> this</c><00:02:56.720><c> information</c>

00:02:58.070 --> 00:02:58.080 align:start position:0%
retrieve this information
 

00:02:58.080 --> 00:03:00.070 align:start position:0%
retrieve this information
in<00:02:58.160><c> the</c><00:02:58.319><c> approach</c><00:02:58.800><c> followed</c><00:02:59.120><c> by</c><00:02:59.360><c> cassandra</c>

00:03:00.070 --> 00:03:00.080 align:start position:0%
in the approach followed by cassandra
 

00:03:00.080 --> 00:03:02.149 align:start position:0%
in the approach followed by cassandra
the<00:03:00.319><c> process</c><00:03:00.720><c> is</c><00:03:00.879><c> reversed</c>

00:03:02.149 --> 00:03:02.159 align:start position:0%
the process is reversed
 

00:03:02.159 --> 00:03:04.229 align:start position:0%
the process is reversed
here<00:03:02.560><c> the</c><00:03:02.720><c> application</c><00:03:03.280><c> of</c><00:03:03.360><c> the</c><00:03:03.440><c> data</c><00:03:03.840><c> must</c><00:03:04.080><c> be</c>

00:03:04.229 --> 00:03:04.239 align:start position:0%
here the application of the data must be
 

00:03:04.239 --> 00:03:06.949 align:start position:0%
here the application of the data must be
decided<00:03:04.800><c> up</c><00:03:04.959><c> front</c><00:03:05.680><c> in</c><00:03:05.920><c> other</c><00:03:06.080><c> words</c><00:03:06.640><c> what</c>

00:03:06.949 --> 00:03:06.959 align:start position:0%
decided up front in other words what
 

00:03:06.959 --> 00:03:09.350 align:start position:0%
decided up front in other words what
queries<00:03:07.440><c> are</c><00:03:07.599><c> going</c><00:03:07.760><c> to</c><00:03:07.920><c> be</c><00:03:08.080><c> performed</c>

00:03:09.350 --> 00:03:09.360 align:start position:0%
queries are going to be performed
 

00:03:09.360 --> 00:03:11.270 align:start position:0%
queries are going to be performed
that<00:03:09.519><c> will</c><00:03:09.680><c> dictate</c><00:03:10.159><c> how</c><00:03:10.319><c> your</c><00:03:10.480><c> logical</c><00:03:10.959><c> model</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
that will dictate how your logical model
 

00:03:11.280 --> 00:03:12.470 align:start position:0%
that will dictate how your logical model
will<00:03:11.440><c> take</c><00:03:11.680><c> shape</c>

00:03:12.470 --> 00:03:12.480 align:start position:0%
will take shape
 

00:03:12.480 --> 00:03:14.149 align:start position:0%
will take shape
once<00:03:12.640><c> your</c><00:03:12.879><c> queries</c><00:03:13.360><c> and</c><00:03:13.440><c> data</c><00:03:13.680><c> model</c><00:03:14.000><c> are</c>

00:03:14.149 --> 00:03:14.159 align:start position:0%
once your queries and data model are
 

00:03:14.159 --> 00:03:15.990 align:start position:0%
once your queries and data model are
complete<00:03:14.640><c> you</c><00:03:14.800><c> can</c><00:03:14.959><c> load</c><00:03:15.200><c> the</c><00:03:15.360><c> data</c><00:03:15.680><c> into</c><00:03:15.920><c> your</c>

00:03:15.990 --> 00:03:16.000 align:start position:0%
complete you can load the data into your
 

00:03:16.000 --> 00:03:17.670 align:start position:0%
complete you can load the data into your
tables

00:03:17.670 --> 00:03:17.680 align:start position:0%
tables
 

00:03:17.680 --> 00:03:19.990 align:start position:0%
tables
relational<00:03:18.159><c> databases</c><00:03:18.879><c> are</c><00:03:19.120><c> asset</c><00:03:19.440><c> compliant</c>

00:03:19.990 --> 00:03:20.000 align:start position:0%
relational databases are asset compliant
 

00:03:20.000 --> 00:03:21.270 align:start position:0%
relational databases are asset compliant
by<00:03:20.159><c> default</c>

00:03:21.270 --> 00:03:21.280 align:start position:0%
by default
 

00:03:21.280 --> 00:03:22.869 align:start position:0%
by default
acid<00:03:21.840><c> is</c><00:03:21.920><c> used</c><00:03:22.159><c> to</c><00:03:22.319><c> describe</c><00:03:22.720><c> the</c>

00:03:22.869 --> 00:03:22.879 align:start position:0%
acid is used to describe the
 

00:03:22.879 --> 00:03:24.710 align:start position:0%
acid is used to describe the
transactional<00:03:23.599><c> behavior</c><00:03:24.080><c> in</c><00:03:24.159><c> a</c><00:03:24.239><c> relational</c>

00:03:24.710 --> 00:03:24.720 align:start position:0%
transactional behavior in a relational
 

00:03:24.720 --> 00:03:26.949 align:start position:0%
transactional behavior in a relational
database<00:03:25.200><c> and</c><00:03:25.360><c> stands</c><00:03:25.599><c> for</c><00:03:26.080><c> atomicity</c>

00:03:26.949 --> 00:03:26.959 align:start position:0%
database and stands for atomicity
 

00:03:26.959 --> 00:03:30.309 align:start position:0%
database and stands for atomicity
consistency<00:03:27.920><c> isolation</c><00:03:28.720><c> and</c><00:03:28.879><c> durability</c>

00:03:30.309 --> 00:03:30.319 align:start position:0%
consistency isolation and durability
 

00:03:30.319 --> 00:03:32.630 align:start position:0%
consistency isolation and durability
atomicity<00:03:30.959><c> refers</c><00:03:31.280><c> to</c><00:03:31.440><c> the</c><00:03:31.680><c> integrity</c><00:03:32.239><c> of</c><00:03:32.480><c> the</c>

00:03:32.630 --> 00:03:32.640 align:start position:0%
atomicity refers to the integrity of the
 

00:03:32.640 --> 00:03:34.869 align:start position:0%
atomicity refers to the integrity of the
database<00:03:33.120><c> transaction</c><00:03:34.159><c> either</c><00:03:34.560><c> all</c><00:03:34.720><c> the</c>

00:03:34.869 --> 00:03:34.879 align:start position:0%
database transaction either all the
 

00:03:34.879 --> 00:03:36.710 align:start position:0%
database transaction either all the
statements<00:03:35.280><c> in</c><00:03:35.440><c> a</c><00:03:35.519><c> transaction</c><00:03:36.000><c> will</c><00:03:36.239><c> succeed</c>

00:03:36.710 --> 00:03:36.720 align:start position:0%
statements in a transaction will succeed
 

00:03:36.720 --> 00:03:38.470 align:start position:0%
statements in a transaction will succeed
or<00:03:36.959><c> none</c><00:03:37.120><c> of</c><00:03:37.280><c> them</c><00:03:37.440><c> will</c>

00:03:38.470 --> 00:03:38.480 align:start position:0%
or none of them will
 

00:03:38.480 --> 00:03:40.470 align:start position:0%
or none of them will
consistency<00:03:39.200><c> means</c><00:03:39.440><c> that</c><00:03:39.599><c> the</c><00:03:39.680><c> data</c><00:03:40.080><c> within</c><00:03:40.400><c> a</c>

00:03:40.470 --> 00:03:40.480 align:start position:0%
consistency means that the data within a
 

00:03:40.480 --> 00:03:42.229 align:start position:0%
consistency means that the data within a
database<00:03:41.040><c> should</c><00:03:41.280><c> comply</c><00:03:41.680><c> with</c><00:03:41.920><c> certain</c>

00:03:42.229 --> 00:03:42.239 align:start position:0%
database should comply with certain
 

00:03:42.239 --> 00:03:43.190 align:start position:0%
database should comply with certain
rules

00:03:43.190 --> 00:03:43.200 align:start position:0%
rules
 

00:03:43.200 --> 00:03:45.030 align:start position:0%
rules
transactions<00:03:43.920><c> cannot</c><00:03:44.239><c> leave</c><00:03:44.400><c> the</c><00:03:44.560><c> database</c>

00:03:45.030 --> 00:03:45.040 align:start position:0%
transactions cannot leave the database
 

00:03:45.040 --> 00:03:46.949 align:start position:0%
transactions cannot leave the database
in<00:03:45.200><c> an</c><00:03:45.360><c> inconsistent</c><00:03:46.080><c> state</c>

00:03:46.949 --> 00:03:46.959 align:start position:0%
in an inconsistent state
 

00:03:46.959 --> 00:03:49.350 align:start position:0%
in an inconsistent state
the<00:03:47.120><c> new</c><00:03:47.360><c> database</c><00:03:47.920><c> state</c><00:03:48.400><c> must</c><00:03:48.799><c> satisfy</c>

00:03:49.350 --> 00:03:49.360 align:start position:0%
the new database state must satisfy
 

00:03:49.360 --> 00:03:51.270 align:start position:0%
the new database state must satisfy
integrity<00:03:49.920><c> constraints</c>

00:03:51.270 --> 00:03:51.280 align:start position:0%
integrity constraints
 

00:03:51.280 --> 00:03:53.190 align:start position:0%
integrity constraints
isolation<00:03:52.000><c> refers</c><00:03:52.319><c> to</c><00:03:52.480><c> the</c><00:03:52.560><c> ability</c><00:03:53.040><c> to</c>

00:03:53.190 --> 00:03:53.200 align:start position:0%
isolation refers to the ability to
 

00:03:53.200 --> 00:03:54.949 align:start position:0%
isolation refers to the ability to
process<00:03:53.680><c> multiple</c><00:03:54.080><c> transactions</c><00:03:54.720><c> at</c><00:03:54.799><c> the</c>

00:03:54.949 --> 00:03:54.959 align:start position:0%
process multiple transactions at the
 

00:03:54.959 --> 00:03:57.509 align:start position:0%
process multiple transactions at the
same<00:03:55.200><c> time</c><00:03:55.519><c> without</c><00:03:55.920><c> interference</c>

00:03:57.509 --> 00:03:57.519 align:start position:0%
same time without interference
 

00:03:57.519 --> 00:03:59.509 align:start position:0%
same time without interference
durability<00:03:58.239><c> refers</c><00:03:58.560><c> to</c><00:03:58.720><c> the</c><00:03:58.799><c> ability</c><00:03:59.200><c> of</c><00:03:59.439><c> a</c>

00:03:59.509 --> 00:03:59.519 align:start position:0%
durability refers to the ability of a
 

00:03:59.519 --> 00:04:01.910 align:start position:0%
durability refers to the ability of a
completed<00:04:00.000><c> transaction</c><00:04:00.640><c> persisting</c><00:04:01.519><c> even</c>

00:04:01.910 --> 00:04:01.920 align:start position:0%
completed transaction persisting even
 

00:04:01.920 --> 00:04:04.630 align:start position:0%
completed transaction persisting even
after<00:04:02.400><c> a</c><00:04:02.560><c> subsequent</c><00:04:03.120><c> failure</c>

00:04:04.630 --> 00:04:04.640 align:start position:0%
after a subsequent failure
 

00:04:04.640 --> 00:04:06.630 align:start position:0%
after a subsequent failure
apache<00:04:05.040><c> cassandra</c><00:04:05.519><c> does</c><00:04:05.680><c> not</c><00:04:05.840><c> support</c><00:04:06.319><c> asset</c>

00:04:06.630 --> 00:04:06.640 align:start position:0%
apache cassandra does not support asset
 

00:04:06.640 --> 00:04:07.990 align:start position:0%
apache cassandra does not support asset
properties<00:04:07.120><c> like</c><00:04:07.360><c> most</c><00:04:07.599><c> relational</c>

00:04:07.990 --> 00:04:08.000 align:start position:0%
properties like most relational
 

00:04:08.000 --> 00:04:09.190 align:start position:0%
properties like most relational
databases

00:04:09.190 --> 00:04:09.200 align:start position:0%
databases
 

00:04:09.200 --> 00:04:11.429 align:start position:0%
databases
in<00:04:09.439><c> database</c><00:04:09.920><c> management</c><00:04:10.480><c> both</c><00:04:10.799><c> commit</c><00:04:11.280><c> and</c>

00:04:11.429 --> 00:04:11.439 align:start position:0%
in database management both commit and
 

00:04:11.439 --> 00:04:13.670 align:start position:0%
in database management both commit and
rollback<00:04:11.920><c> can</c><00:04:12.080><c> easily</c><00:04:12.560><c> be</c><00:04:12.799><c> achieved</c><00:04:13.360><c> using</c>

00:04:13.670 --> 00:04:13.680 align:start position:0%
rollback can easily be achieved using
 

00:04:13.680 --> 00:04:15.670 align:start position:0%
rollback can easily be achieved using
transaction<00:04:14.319><c> logging</c><00:04:14.720><c> when</c><00:04:14.959><c> a</c><00:04:15.040><c> single</c><00:04:15.360><c> server</c>

00:04:15.670 --> 00:04:15.680 align:start position:0%
transaction logging when a single server
 

00:04:15.680 --> 00:04:16.789 align:start position:0%
transaction logging when a single server
is<00:04:15.840><c> involved</c>

00:04:16.789 --> 00:04:16.799 align:start position:0%
is involved
 

00:04:16.799 --> 00:04:18.150 align:start position:0%
is involved
but<00:04:16.959><c> when</c><00:04:17.120><c> the</c><00:04:17.280><c> data</c><00:04:17.519><c> is</c><00:04:17.600><c> spread</c><00:04:17.840><c> across</c>

00:04:18.150 --> 00:04:18.160 align:start position:0%
but when the data is spread across
 

00:04:18.160 --> 00:04:19.909 align:start position:0%
but when the data is spread across
servers<00:04:18.560><c> in</c><00:04:18.720><c> distributed</c><00:04:19.199><c> databases</c><00:04:19.759><c> like</c>

00:04:19.909 --> 00:04:19.919 align:start position:0%
servers in distributed databases like
 

00:04:19.919 --> 00:04:22.469 align:start position:0%
servers in distributed databases like
cassandra<00:04:20.639><c> the</c><00:04:20.720><c> situation</c><00:04:21.280><c> becomes</c><00:04:21.600><c> tricky</c>

00:04:22.469 --> 00:04:22.479 align:start position:0%
cassandra the situation becomes tricky
 

00:04:22.479 --> 00:04:24.710 align:start position:0%
cassandra the situation becomes tricky
the<00:04:22.720><c> locking</c><00:04:23.199><c> and</c><00:04:23.360><c> coordination</c><00:04:24.000><c> required</c><00:04:24.479><c> to</c>

00:04:24.710 --> 00:04:24.720 align:start position:0%
the locking and coordination required to
 

00:04:24.720 --> 00:04:27.270 align:start position:0%
the locking and coordination required to
ensure<00:04:25.040><c> these</c><00:04:25.360><c> two-phase</c><00:04:25.840><c> semantics</c><00:04:26.479><c> of</c><00:04:26.800><c> acid</c>

00:04:27.270 --> 00:04:27.280 align:start position:0%
ensure these two-phase semantics of acid
 

00:04:27.280 --> 00:04:29.990 align:start position:0%
ensure these two-phase semantics of acid
can<00:04:27.520><c> cause</c><00:04:27.759><c> severe</c><00:04:28.160><c> performance</c><00:04:28.639><c> penalties</c>

00:04:29.990 --> 00:04:30.000 align:start position:0%
can cause severe performance penalties
 

00:04:30.000 --> 00:04:32.629 align:start position:0%
can cause severe performance penalties
however<00:04:30.560><c> cassandra</c><00:04:31.040><c> does</c><00:04:31.360><c> provide</c><00:04:31.919><c> atomicity</c>

00:04:32.629 --> 00:04:32.639 align:start position:0%
however cassandra does provide atomicity
 

00:04:32.639 --> 00:04:34.790 align:start position:0%
however cassandra does provide atomicity
isolation<00:04:33.360><c> and</c><00:04:33.520><c> durability</c><00:04:34.080><c> when</c><00:04:34.320><c> performing</c>

00:04:34.790 --> 00:04:34.800 align:start position:0%
isolation and durability when performing
 

00:04:34.800 --> 00:04:37.270 align:start position:0%
isolation and durability when performing
read<00:04:35.120><c> and</c><00:04:35.199><c> write</c><00:04:35.440><c> commands</c><00:04:35.840><c> on</c><00:04:36.000><c> a</c><00:04:36.080><c> single</c><00:04:36.400><c> row</c>

00:04:37.270 --> 00:04:37.280 align:start position:0%
read and write commands on a single row
 

00:04:37.280 --> 00:04:39.189 align:start position:0%
read and write commands on a single row
additionally<00:04:38.080><c> it</c><00:04:38.240><c> also</c><00:04:38.479><c> provides</c><00:04:38.880><c> something</c>

00:04:39.189 --> 00:04:39.199 align:start position:0%
additionally it also provides something
 

00:04:39.199 --> 00:04:41.030 align:start position:0%
additionally it also provides something
called<00:04:39.440><c> tunable</c><00:04:39.840><c> consistency</c><00:04:40.560><c> which</c><00:04:40.720><c> can</c><00:04:40.880><c> be</c>

00:04:41.030 --> 00:04:41.040 align:start position:0%
called tunable consistency which can be
 

00:04:41.040 --> 00:04:42.790 align:start position:0%
called tunable consistency which can be
adjusted<00:04:41.440><c> depending</c><00:04:41.919><c> upon</c><00:04:42.160><c> the</c><00:04:42.320><c> number</c><00:04:42.639><c> of</c>

00:04:42.790 --> 00:04:42.800 align:start position:0%
adjusted depending upon the number of
 

00:04:42.800 --> 00:04:44.790 align:start position:0%
adjusted depending upon the number of
nodes<00:04:43.120><c> which</c><00:04:43.360><c> have</c><00:04:43.520><c> to</c><00:04:43.759><c> agree</c><00:04:44.080><c> to</c><00:04:44.240><c> execute</c><00:04:44.720><c> a</c>

00:04:44.790 --> 00:04:44.800 align:start position:0%
nodes which have to agree to execute a
 

00:04:44.800 --> 00:04:47.909 align:start position:0%
nodes which have to agree to execute a
particular<00:04:45.360><c> read</c><00:04:45.680><c> or</c><00:04:45.919><c> write</c><00:04:46.240><c> command</c>

00:04:47.909 --> 00:04:47.919 align:start position:0%
particular read or write command
 

00:04:47.919 --> 00:04:49.990 align:start position:0%
particular read or write command
to<00:04:48.080><c> understand</c><00:04:48.560><c> tunable</c><00:04:48.960><c> consistency</c><00:04:49.759><c> let's</c>

00:04:49.990 --> 00:04:50.000 align:start position:0%
to understand tunable consistency let's
 

00:04:50.000 --> 00:04:52.310 align:start position:0%
to understand tunable consistency let's
look<00:04:50.240><c> at</c><00:04:50.400><c> the</c><00:04:50.560><c> cap</c><00:04:50.880><c> theorem</c><00:04:51.280><c> first</c>

00:04:52.310 --> 00:04:52.320 align:start position:0%
look at the cap theorem first
 

00:04:52.320 --> 00:04:54.390 align:start position:0%
look at the cap theorem first
given<00:04:52.560><c> by</c><00:04:52.800><c> eric</c><00:04:53.040><c> brewer</c><00:04:53.520><c> this</c><00:04:53.680><c> theorem</c><00:04:54.080><c> talks</c>

00:04:54.390 --> 00:04:54.400 align:start position:0%
given by eric brewer this theorem talks
 

00:04:54.400 --> 00:04:56.310 align:start position:0%
given by eric brewer this theorem talks
about<00:04:54.639><c> the</c><00:04:54.800><c> trade-offs</c><00:04:55.440><c> in</c><00:04:55.680><c> implementing</c><00:04:56.240><c> a</c>

00:04:56.310 --> 00:04:56.320 align:start position:0%
about the trade-offs in implementing a
 

00:04:56.320 --> 00:04:58.070 align:start position:0%
about the trade-offs in implementing a
distributed<00:04:56.880><c> database</c>

00:04:58.070 --> 00:04:58.080 align:start position:0%
distributed database
 

00:04:58.080 --> 00:05:00.390 align:start position:0%
distributed database
all<00:04:58.320><c> distributed</c><00:04:58.880><c> databases</c><00:04:59.520><c> are</c><00:04:59.759><c> primarily</c>

00:05:00.390 --> 00:05:00.400 align:start position:0%
all distributed databases are primarily
 

00:05:00.400 --> 00:05:02.390 align:start position:0%
all distributed databases are primarily
tolerant<00:05:00.800><c> to</c><00:05:00.960><c> partitions</c><00:05:01.680><c> hence</c><00:05:02.000><c> the</c><00:05:02.080><c> choice</c>

00:05:02.390 --> 00:05:02.400 align:start position:0%
tolerant to partitions hence the choice
 

00:05:02.400 --> 00:05:04.070 align:start position:0%
tolerant to partitions hence the choice
is<00:05:02.479><c> really</c><00:05:02.800><c> between</c><00:05:03.120><c> consistency</c><00:05:03.840><c> and</c>

00:05:04.070 --> 00:05:04.080 align:start position:0%
is really between consistency and
 

00:05:04.080 --> 00:05:05.510 align:start position:0%
is really between consistency and
availability

00:05:05.510 --> 00:05:05.520 align:start position:0%
availability
 

00:05:05.520 --> 00:05:08.469 align:start position:0%
availability
cassandra<00:05:06.080><c> by</c><00:05:06.320><c> default</c><00:05:06.960><c> is</c><00:05:07.120><c> an</c><00:05:07.360><c> ap</c><00:05:07.840><c> system</c>

00:05:08.469 --> 00:05:08.479 align:start position:0%
cassandra by default is an ap system
 

00:05:08.479 --> 00:05:10.469 align:start position:0%
cassandra by default is an ap system
which<00:05:08.720><c> means</c><00:05:08.960><c> it</c><00:05:09.120><c> chooses</c><00:05:09.520><c> availability</c><00:05:10.320><c> and</c>

00:05:10.469 --> 00:05:10.479 align:start position:0%
which means it chooses availability and
 

00:05:10.479 --> 00:05:12.469 align:start position:0%
which means it chooses availability and
partition<00:05:10.880><c> tolerance</c><00:05:11.440><c> while</c><00:05:11.680><c> sacrificing</c>

00:05:12.469 --> 00:05:12.479 align:start position:0%
partition tolerance while sacrificing
 

00:05:12.479 --> 00:05:13.909 align:start position:0%
partition tolerance while sacrificing
consistency

00:05:13.909 --> 00:05:13.919 align:start position:0%
consistency
 

00:05:13.919 --> 00:05:15.909 align:start position:0%
consistency
however<00:05:14.560><c> it</c><00:05:14.720><c> does</c><00:05:14.960><c> provide</c><00:05:15.280><c> the</c><00:05:15.440><c> option</c><00:05:15.759><c> to</c>

00:05:15.909 --> 00:05:15.919 align:start position:0%
however it does provide the option to
 

00:05:15.919 --> 00:05:17.670 align:start position:0%
however it does provide the option to
make<00:05:16.080><c> the</c><00:05:16.160><c> system</c><00:05:16.560><c> more</c><00:05:16.800><c> consistent</c><00:05:17.440><c> by</c>

00:05:17.670 --> 00:05:17.680 align:start position:0%
make the system more consistent by
 

00:05:17.680 --> 00:05:19.909 align:start position:0%
make the system more consistent by
sacrificing<00:05:18.320><c> availability</c><00:05:19.520><c> this</c><00:05:19.840><c> is</c>

00:05:19.909 --> 00:05:19.919 align:start position:0%
sacrificing availability this is
 

00:05:19.919 --> 00:05:21.830 align:start position:0%
sacrificing availability this is
referred<00:05:20.240><c> to</c><00:05:20.479><c> as</c><00:05:20.639><c> tunable</c><00:05:21.120><c> consistency</c>

00:05:21.830 --> 00:05:21.840 align:start position:0%
referred to as tunable consistency
 

00:05:21.840 --> 00:05:23.510 align:start position:0%
referred to as tunable consistency
wherein<00:05:22.160><c> the</c><00:05:22.320><c> consistency</c><00:05:22.880><c> of</c><00:05:23.039><c> the</c><00:05:23.120><c> database</c>

00:05:23.510 --> 00:05:23.520 align:start position:0%
wherein the consistency of the database
 

00:05:23.520 --> 00:05:25.590 align:start position:0%
wherein the consistency of the database
can<00:05:23.680><c> be</c><00:05:23.840><c> adjusted</c><00:05:24.400><c> or</c><00:05:24.639><c> tuned</c><00:05:24.960><c> by</c><00:05:25.199><c> adjusting</c>

00:05:25.590 --> 00:05:25.600 align:start position:0%
can be adjusted or tuned by adjusting
 

00:05:25.600 --> 00:05:27.270 align:start position:0%
can be adjusted or tuned by adjusting
the<00:05:25.759><c> number</c><00:05:25.919><c> of</c><00:05:26.080><c> nodes</c><00:05:26.400><c> which</c><00:05:26.639><c> have</c><00:05:26.800><c> to</c><00:05:26.880><c> return</c>

00:05:27.270 --> 00:05:27.280 align:start position:0%
the number of nodes which have to return
 

00:05:27.280 --> 00:05:29.430 align:start position:0%
the number of nodes which have to return
a<00:05:27.440><c> read</c><00:05:27.759><c> or</c><00:05:27.919><c> write</c><00:05:28.160><c> request</c>

00:05:29.430 --> 00:05:29.440 align:start position:0%
a read or write request
 

00:05:29.440 --> 00:05:31.749 align:start position:0%
a read or write request
cassandra<00:05:30.080><c> primarily</c><00:05:30.880><c> operates</c><00:05:31.360><c> under</c><00:05:31.520><c> the</c>

00:05:31.749 --> 00:05:31.759 align:start position:0%
cassandra primarily operates under the
 

00:05:31.759 --> 00:05:34.070 align:start position:0%
cassandra primarily operates under the
ap<00:05:32.160><c> model</c><00:05:32.560><c> because</c><00:05:32.960><c> all</c><00:05:33.280><c> data</c><00:05:33.600><c> eventually</c>

00:05:34.070 --> 00:05:34.080 align:start position:0%
ap model because all data eventually
 

00:05:34.080 --> 00:05:35.670 align:start position:0%
ap model because all data eventually
becomes<00:05:34.479><c> consistent</c>

00:05:35.670 --> 00:05:35.680 align:start position:0%
becomes consistent
 

00:05:35.680 --> 00:05:36.950 align:start position:0%
becomes consistent
one<00:05:35.840><c> more</c><00:05:36.080><c> point</c><00:05:36.320><c> of</c><00:05:36.400><c> difference</c><00:05:36.720><c> between</c>

00:05:36.950 --> 00:05:36.960 align:start position:0%
one more point of difference between
 

00:05:36.960 --> 00:05:38.790 align:start position:0%
one more point of difference between
cassandra<00:05:37.520><c> and</c><00:05:37.600><c> relational</c><00:05:38.080><c> databases</c><00:05:38.639><c> is</c>

00:05:38.790 --> 00:05:38.800 align:start position:0%
cassandra and relational databases is
 

00:05:38.800 --> 00:05:40.629 align:start position:0%
cassandra and relational databases is
the<00:05:38.960><c> support</c><00:05:39.360><c> of</c><00:05:39.520><c> joins</c>

00:05:40.629 --> 00:05:40.639 align:start position:0%
the support of joins
 

00:05:40.639 --> 00:05:42.870 align:start position:0%
the support of joins
to<00:05:40.800><c> recall</c><00:05:41.440><c> joins</c><00:05:41.759><c> are</c><00:05:41.919><c> a</c><00:05:42.080><c> statement</c><00:05:42.560><c> often</c>

00:05:42.870 --> 00:05:42.880 align:start position:0%
to recall joins are a statement often
 

00:05:42.880 --> 00:05:44.870 align:start position:0%
to recall joins are a statement often
used<00:05:43.120><c> by</c><00:05:43.360><c> relational</c><00:05:43.759><c> databases</c><00:05:44.320><c> to</c><00:05:44.400><c> combine</c>

00:05:44.870 --> 00:05:44.880 align:start position:0%
used by relational databases to combine
 

00:05:44.880 --> 00:05:45.749 align:start position:0%
used by relational databases to combine
data

00:05:45.749 --> 00:05:45.759 align:start position:0%
data
 

00:05:45.759 --> 00:05:47.909 align:start position:0%
data
a<00:05:46.000><c> join</c><00:05:46.320><c> statement</c><00:05:46.720><c> facilitates</c><00:05:47.360><c> the</c><00:05:47.520><c> query</c>

00:05:47.909 --> 00:05:47.919 align:start position:0%
a join statement facilitates the query
 

00:05:47.919 --> 00:05:49.350 align:start position:0%
a join statement facilitates the query
through<00:05:48.160><c> the</c><00:05:48.320><c> joining</c><00:05:48.720><c> of</c><00:05:48.800><c> data</c><00:05:49.120><c> from</c>

00:05:49.350 --> 00:05:49.360 align:start position:0%
through the joining of data from
 

00:05:49.360 --> 00:05:50.870 align:start position:0%
through the joining of data from
different<00:05:49.680><c> tables</c>

00:05:50.870 --> 00:05:50.880 align:start position:0%
different tables
 

00:05:50.880 --> 00:05:52.950 align:start position:0%
different tables
take<00:05:51.039><c> a</c><00:05:51.120><c> look</c><00:05:51.280><c> at</c><00:05:51.360><c> the</c><00:05:51.520><c> example</c><00:05:51.919><c> below</c><00:05:52.800><c> the</c>

00:05:52.950 --> 00:05:52.960 align:start position:0%
take a look at the example below the
 

00:05:52.960 --> 00:05:54.950 align:start position:0%
take a look at the example below the
join<00:05:53.280><c> statement</c><00:05:53.680><c> combines</c><00:05:54.160><c> results</c><00:05:54.479><c> from</c><00:05:54.720><c> two</c>

00:05:54.950 --> 00:05:54.960 align:start position:0%
join statement combines results from two
 

00:05:54.960 --> 00:05:57.189 align:start position:0%
join statement combines results from two
tables<00:05:55.360><c> namely</c><00:05:55.919><c> videos</c><00:05:56.560><c> which</c><00:05:56.800><c> stores</c><00:05:57.120><c> the</c>

00:05:57.189 --> 00:05:57.199 align:start position:0%
tables namely videos which stores the
 

00:05:57.199 --> 00:05:59.350 align:start position:0%
tables namely videos which stores the
details<00:05:57.680><c> of</c><00:05:57.759><c> videos</c><00:05:58.400><c> and</c><00:05:58.720><c> comments</c><00:05:59.120><c> which</c>

00:05:59.350 --> 00:05:59.360 align:start position:0%
details of videos and comments which
 

00:05:59.360 --> 00:06:00.790 align:start position:0%
details of videos and comments which
stores<00:05:59.680><c> the</c><00:05:59.759><c> comments</c><00:06:00.160><c> made</c><00:06:00.320><c> by</c><00:06:00.479><c> different</c>

00:06:00.790 --> 00:06:00.800 align:start position:0%
stores the comments made by different
 

00:06:00.800 --> 00:06:03.350 align:start position:0%
stores the comments made by different
users<00:06:01.199><c> on</c><00:06:01.360><c> the</c><00:06:01.520><c> videos</c><00:06:02.479><c> this</c><00:06:02.720><c> is</c><00:06:02.800><c> done</c><00:06:03.039><c> by</c><00:06:03.199><c> the</c>

00:06:03.350 --> 00:06:03.360 align:start position:0%
users on the videos this is done by the
 

00:06:03.360 --> 00:06:05.990 align:start position:0%
users on the videos this is done by the
matching<00:06:03.840><c> of</c><00:06:04.160><c> video</c><00:06:04.560><c> id</c><00:06:05.039><c> as</c><00:06:05.280><c> specified</c><00:06:05.840><c> in</c>

00:06:05.990 --> 00:06:06.000 align:start position:0%
matching of video id as specified in
 

00:06:06.000 --> 00:06:08.390 align:start position:0%
matching of video id as specified in
both<00:06:06.240><c> the</c><00:06:06.400><c> tables</c><00:06:07.280><c> the</c><00:06:07.440><c> database</c><00:06:07.919><c> matches</c><00:06:08.319><c> the</c>

00:06:08.390 --> 00:06:08.400 align:start position:0%
both the tables the database matches the
 

00:06:08.400 --> 00:06:10.790 align:start position:0%
both the tables the database matches the
video<00:06:08.639><c> id</c><00:06:08.960><c> for</c><00:06:09.120><c> each</c><00:06:09.520><c> video</c><00:06:09.919><c> and</c><00:06:10.160><c> generates</c><00:06:10.639><c> a</c>

00:06:10.790 --> 00:06:10.800 align:start position:0%
video id for each video and generates a
 

00:06:10.800 --> 00:06:12.309 align:start position:0%
video id for each video and generates a
result

00:06:12.309 --> 00:06:12.319 align:start position:0%
result
 

00:06:12.319 --> 00:06:14.629 align:start position:0%
result
this<00:06:12.560><c> is</c><00:06:12.639><c> the</c><00:06:12.800><c> output</c><00:06:13.199><c> of</c><00:06:13.280><c> the</c><00:06:13.440><c> join</c><00:06:13.680><c> command</c>

00:06:14.629 --> 00:06:14.639 align:start position:0%
this is the output of the join command
 

00:06:14.639 --> 00:06:16.150 align:start position:0%
this is the output of the join command
the<00:06:14.800><c> select</c><00:06:15.199><c> statement</c><00:06:15.600><c> in</c><00:06:15.680><c> the</c><00:06:15.840><c> given</c>

00:06:16.150 --> 00:06:16.160 align:start position:0%
the select statement in the given
 

00:06:16.160 --> 00:06:18.390 align:start position:0%
the select statement in the given
transaction<00:06:16.800><c> selects</c><00:06:17.199><c> the</c><00:06:17.360><c> column</c><00:06:17.759><c> specified</c>

00:06:18.390 --> 00:06:18.400 align:start position:0%
transaction selects the column specified
 

00:06:18.400 --> 00:06:20.390 align:start position:0%
transaction selects the column specified
from<00:06:18.560><c> the</c><00:06:18.720><c> output</c><00:06:19.120><c> of</c><00:06:19.280><c> the</c><00:06:19.360><c> join</c><00:06:19.680><c> command</c><00:06:20.240><c> and</c>

00:06:20.390 --> 00:06:20.400 align:start position:0%
from the output of the join command and
 

00:06:20.400 --> 00:06:22.150 align:start position:0%
from the output of the join command and
the<00:06:20.639><c> where</c><00:06:20.960><c> statement</c><00:06:21.440><c> is</c><00:06:21.600><c> the</c><00:06:21.759><c> filtering</c>

00:06:22.150 --> 00:06:22.160 align:start position:0%
the where statement is the filtering
 

00:06:22.160 --> 00:06:23.510 align:start position:0%
the where statement is the filtering
criteria

00:06:23.510 --> 00:06:23.520 align:start position:0%
criteria
 

00:06:23.520 --> 00:06:25.670 align:start position:0%
criteria
therefore<00:06:24.240><c> the</c><00:06:24.400><c> output</c><00:06:24.720><c> of</c><00:06:24.800><c> this</c><00:06:25.039><c> transaction</c>

00:06:25.670 --> 00:06:25.680 align:start position:0%
therefore the output of this transaction
 

00:06:25.680 --> 00:06:27.830 align:start position:0%
therefore the output of this transaction
only<00:06:25.919><c> provides</c><00:06:26.400><c> the</c><00:06:26.560><c> comments</c><00:06:27.199><c> of</c><00:06:27.360><c> the</c><00:06:27.440><c> video</c>

00:06:27.830 --> 00:06:27.840 align:start position:0%
only provides the comments of the video
 

00:06:27.840 --> 00:06:29.670 align:start position:0%
only provides the comments of the video
titled<00:06:28.400><c> interstellar</c>

00:06:29.670 --> 00:06:29.680 align:start position:0%
titled interstellar
 

00:06:29.680 --> 00:06:31.670 align:start position:0%
titled interstellar
the<00:06:29.840><c> basic</c><00:06:30.160><c> requirement</c><00:06:30.720><c> for</c><00:06:30.880><c> a</c><00:06:31.039><c> join</c><00:06:31.280><c> command</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
the basic requirement for a join command
 

00:06:31.680 --> 00:06:33.510 align:start position:0%
the basic requirement for a join command
to<00:06:31.840><c> work</c><00:06:32.160><c> is</c><00:06:32.319><c> that</c><00:06:32.479><c> the</c><00:06:32.639><c> results</c><00:06:33.120><c> from</c><00:06:33.360><c> two</c>

00:06:33.510 --> 00:06:33.520 align:start position:0%
to work is that the results from two
 

00:06:33.520 --> 00:06:35.670 align:start position:0%
to work is that the results from two
combined<00:06:34.000><c> tables</c><00:06:34.479><c> should</c><00:06:34.639><c> be</c><00:06:34.800><c> stored</c><00:06:35.280><c> at</c><00:06:35.440><c> one</c>

00:06:35.670 --> 00:06:35.680 align:start position:0%
combined tables should be stored at one
 

00:06:35.680 --> 00:06:36.790 align:start position:0%
combined tables should be stored at one
location

00:06:36.790 --> 00:06:36.800 align:start position:0%
location
 

00:06:36.800 --> 00:06:38.870 align:start position:0%
location
however<00:06:37.360><c> in</c><00:06:37.440><c> distributed</c><00:06:38.080><c> databases</c><00:06:38.720><c> the</c>

00:06:38.870 --> 00:06:38.880 align:start position:0%
however in distributed databases the
 

00:06:38.880 --> 00:06:40.790 align:start position:0%
however in distributed databases the
different<00:06:39.280><c> partitions</c><00:06:39.840><c> of</c><00:06:40.000><c> data</c><00:06:40.319><c> are</c><00:06:40.400><c> stored</c>

00:06:40.790 --> 00:06:40.800 align:start position:0%
different partitions of data are stored
 

00:06:40.800 --> 00:06:43.029 align:start position:0%
different partitions of data are stored
on<00:06:40.880><c> different</c><00:06:41.199><c> nodes</c><00:06:42.000><c> hence</c><00:06:42.560><c> joins</c><00:06:42.880><c> would</c>

00:06:43.029 --> 00:06:43.039 align:start position:0%
on different nodes hence joins would
 

00:06:43.039 --> 00:06:45.189 align:start position:0%
on different nodes hence joins would
have<00:06:43.199><c> a</c><00:06:43.360><c> negative</c><00:06:43.759><c> impact</c><00:06:44.160><c> on</c><00:06:44.319><c> the</c><00:06:44.479><c> latency</c><00:06:45.039><c> as</c>

00:06:45.189 --> 00:06:45.199 align:start position:0%
have a negative impact on the latency as
 

00:06:45.199 --> 00:06:47.510 align:start position:0%
have a negative impact on the latency as
the<00:06:45.360><c> scale</c><00:06:45.759><c> of</c><00:06:45.840><c> the</c><00:06:45.919><c> databases</c><00:06:46.639><c> increases</c><00:06:47.360><c> and</c>

00:06:47.510 --> 00:06:47.520 align:start position:0%
the scale of the databases increases and
 

00:06:47.520 --> 00:06:49.430 align:start position:0%
the scale of the databases increases and
the<00:06:47.680><c> random</c><00:06:48.000><c> distributions</c><00:06:48.720><c> become</c><00:06:49.120><c> more</c>

00:06:49.430 --> 00:06:49.440 align:start position:0%
the random distributions become more
 

00:06:49.440 --> 00:06:51.110 align:start position:0%
the random distributions become more
prevalent

00:06:51.110 --> 00:06:51.120 align:start position:0%
prevalent
 

00:06:51.120 --> 00:06:53.350 align:start position:0%
prevalent
unlike<00:06:51.520><c> relational</c><00:06:52.000><c> databases</c><00:06:52.720><c> cassandra</c>

00:06:53.350 --> 00:06:53.360 align:start position:0%
unlike relational databases cassandra
 

00:06:53.360 --> 00:06:55.350 align:start position:0%
unlike relational databases cassandra
does<00:06:53.520><c> not</c><00:06:53.680><c> support</c><00:06:54.160><c> joints</c><00:06:54.720><c> but</c><00:06:55.039><c> uses</c>

00:06:55.350 --> 00:06:55.360 align:start position:0%
does not support joints but uses
 

00:06:55.360 --> 00:06:57.590 align:start position:0%
does not support joints but uses
denormalization<00:06:56.319><c> instead</c>

00:06:57.590 --> 00:06:57.600 align:start position:0%
denormalization instead
 

00:06:57.600 --> 00:06:59.510 align:start position:0%
denormalization instead
denormalization<00:06:58.560><c> ensures</c><00:06:59.039><c> that</c><00:06:59.199><c> all</c><00:06:59.360><c> the</c>

00:06:59.510 --> 00:06:59.520 align:start position:0%
denormalization ensures that all the
 

00:06:59.520 --> 00:07:01.749 align:start position:0%
denormalization ensures that all the
required<00:07:00.000><c> information</c><00:07:00.560><c> is</c><00:07:00.720><c> confined</c><00:07:01.440><c> to</c><00:07:01.599><c> the</c>

00:07:01.749 --> 00:07:01.759 align:start position:0%
required information is confined to the
 

00:07:01.759 --> 00:07:03.350 align:start position:0%
required information is confined to the
appropriate<00:07:02.240><c> table</c><00:07:02.639><c> without</c><00:07:02.960><c> having</c><00:07:03.280><c> to</c>

00:07:03.350 --> 00:07:03.360 align:start position:0%
appropriate table without having to
 

00:07:03.360 --> 00:07:04.950 align:start position:0%
appropriate table without having to
perform<00:07:03.919><c> joins</c>

00:07:04.950 --> 00:07:04.960 align:start position:0%
perform joins
 

00:07:04.960 --> 00:07:06.790 align:start position:0%
perform joins
organizing<00:07:05.520><c> data</c><00:07:05.759><c> like</c><00:07:05.919><c> this</c><00:07:06.080><c> can</c><00:07:06.240><c> duplicate</c>

00:07:06.790 --> 00:07:06.800 align:start position:0%
organizing data like this can duplicate
 

00:07:06.800 --> 00:07:08.629 align:start position:0%
organizing data like this can duplicate
data<00:07:07.039><c> in</c><00:07:07.120><c> multiple</c><00:07:07.520><c> tables</c><00:07:07.919><c> which</c><00:07:08.160><c> is</c><00:07:08.319><c> cost</c>

00:07:08.629 --> 00:07:08.639 align:start position:0%
data in multiple tables which is cost
 

00:07:08.639 --> 00:07:10.230 align:start position:0%
data in multiple tables which is cost
efficient<00:07:09.120><c> and</c><00:07:09.199><c> allows</c><00:07:09.599><c> for</c><00:07:09.840><c> faster</c>

00:07:10.230 --> 00:07:10.240 align:start position:0%
efficient and allows for faster
 

00:07:10.240 --> 00:07:12.550 align:start position:0%
efficient and allows for faster
retrieval<00:07:10.800><c> of</c><00:07:11.039><c> said</c><00:07:11.280><c> data</c><00:07:12.080><c> while</c><00:07:12.319><c> using</c>

00:07:12.550 --> 00:07:12.560 align:start position:0%
retrieval of said data while using
 

00:07:12.560 --> 00:07:14.390 align:start position:0%
retrieval of said data while using
cassandra<00:07:13.039><c> to</c><00:07:13.199><c> organize</c><00:07:13.680><c> the</c><00:07:13.759><c> data</c><00:07:14.240><c> the</c>

00:07:14.390 --> 00:07:14.400 align:start position:0%
cassandra to organize the data the
 

00:07:14.400 --> 00:07:16.710 align:start position:0%
cassandra to organize the data the
developer<00:07:14.880><c> can</c><00:07:15.039><c> decide</c><00:07:15.520><c> upfront</c><00:07:16.080><c> what</c><00:07:16.319><c> tables</c>

00:07:16.710 --> 00:07:16.720 align:start position:0%
developer can decide upfront what tables
 

00:07:16.720 --> 00:07:19.589 align:start position:0%
developer can decide upfront what tables
they<00:07:16.880><c> want</c><00:07:17.199><c> their</c><00:07:17.440><c> data</c><00:07:17.680><c> to</c><00:07:17.840><c> be</c><00:07:18.000><c> in</c>

00:07:19.589 --> 00:07:19.599 align:start position:0%
they want their data to be in
 

00:07:19.599 --> 00:07:21.510 align:start position:0%
they want their data to be in
in<00:07:19.680><c> this</c><00:07:19.919><c> example</c><00:07:20.319><c> we</c><00:07:20.479><c> have</c><00:07:20.639><c> two</c><00:07:20.800><c> scenarios</c><00:07:21.360><c> in</c>

00:07:21.510 --> 00:07:21.520 align:start position:0%
in this example we have two scenarios in
 

00:07:21.520 --> 00:07:23.909 align:start position:0%
in this example we have two scenarios in
which<00:07:21.680><c> we</c><00:07:21.759><c> want</c><00:07:22.000><c> to</c><00:07:22.240><c> access</c><00:07:22.720><c> comments</c>

00:07:23.909 --> 00:07:23.919 align:start position:0%
which we want to access comments
 

00:07:23.919 --> 00:07:25.990 align:start position:0%
which we want to access comments
first<00:07:24.400><c> a</c><00:07:24.560><c> video</c><00:07:24.960><c> view</c><00:07:25.280><c> where</c><00:07:25.680><c> all</c><00:07:25.840><c> the</c>

00:07:25.990 --> 00:07:26.000 align:start position:0%
first a video view where all the
 

00:07:26.000 --> 00:07:27.749 align:start position:0%
first a video view where all the
comments<00:07:26.319><c> for</c><00:07:26.479><c> a</c><00:07:26.560><c> particular</c><00:07:27.039><c> video</c><00:07:27.440><c> can</c><00:07:27.599><c> be</c>

00:07:27.749 --> 00:07:27.759 align:start position:0%
comments for a particular video can be
 

00:07:27.759 --> 00:07:30.230 align:start position:0%
comments for a particular video can be
viewed<00:07:28.319><c> and</c><00:07:28.479><c> a</c><00:07:28.639><c> second</c><00:07:29.199><c> a</c><00:07:29.440><c> user</c><00:07:29.759><c> view</c><00:07:30.000><c> that</c>

00:07:30.230 --> 00:07:30.240 align:start position:0%
viewed and a second a user view that
 

00:07:30.240 --> 00:07:32.469 align:start position:0%
viewed and a second a user view that
displays<00:07:30.800><c> comments</c><00:07:31.199><c> made</c><00:07:31.440><c> by</c><00:07:31.680><c> a</c><00:07:31.840><c> particular</c>

00:07:32.469 --> 00:07:32.479 align:start position:0%
displays comments made by a particular
 

00:07:32.479 --> 00:07:33.589 align:start position:0%
displays comments made by a particular
user

00:07:33.589 --> 00:07:33.599 align:start position:0%
user
 

00:07:33.599 --> 00:07:35.510 align:start position:0%
user
to<00:07:33.759><c> support</c><00:07:34.160><c> this</c><00:07:34.560><c> two</c><00:07:34.800><c> tables</c><00:07:35.199><c> must</c><00:07:35.360><c> be</c>

00:07:35.510 --> 00:07:35.520 align:start position:0%
to support this two tables must be
 

00:07:35.520 --> 00:07:36.469 align:start position:0%
to support this two tables must be
created

00:07:36.469 --> 00:07:36.479 align:start position:0%
created
 

00:07:36.479 --> 00:07:38.550 align:start position:0%
created
the<00:07:36.639><c> first</c><00:07:37.039><c> table</c><00:07:37.520><c> comments</c><00:07:37.919><c> by</c><00:07:38.080><c> video</c>

00:07:38.550 --> 00:07:38.560 align:start position:0%
the first table comments by video
 

00:07:38.560 --> 00:07:40.469 align:start position:0%
the first table comments by video
supports<00:07:38.960><c> the</c><00:07:39.120><c> ability</c><00:07:39.440><c> to</c><00:07:39.680><c> access</c><00:07:40.080><c> comments</c>

00:07:40.469 --> 00:07:40.479 align:start position:0%
supports the ability to access comments
 

00:07:40.479 --> 00:07:42.230 align:start position:0%
supports the ability to access comments
for<00:07:40.560><c> a</c><00:07:40.720><c> specific</c><00:07:41.120><c> video</c>

00:07:42.230 --> 00:07:42.240 align:start position:0%
for a specific video
 

00:07:42.240 --> 00:07:44.790 align:start position:0%
for a specific video
here<00:07:42.800><c> video</c><00:07:43.280><c> title</c><00:07:43.599><c> is</c><00:07:43.759><c> used</c><00:07:44.000><c> as</c><00:07:44.240><c> a</c><00:07:44.319><c> partition</c>

00:07:44.790 --> 00:07:44.800 align:start position:0%
here video title is used as a partition
 

00:07:44.800 --> 00:07:45.589 align:start position:0%
here video title is used as a partition
key

00:07:45.589 --> 00:07:45.599 align:start position:0%
key
 

00:07:45.599 --> 00:07:47.749 align:start position:0%
key
the<00:07:45.840><c> comment</c><00:07:46.240><c> id</c><00:07:46.560><c> helps</c><00:07:46.880><c> in</c><00:07:47.039><c> defining</c><00:07:47.599><c> a</c>

00:07:47.749 --> 00:07:47.759 align:start position:0%
the comment id helps in defining a
 

00:07:47.759 --> 00:07:49.589 align:start position:0%
the comment id helps in defining a
unique<00:07:48.160><c> row</c><00:07:48.479><c> in</c><00:07:48.560><c> the</c><00:07:48.639><c> database</c><00:07:49.120><c> for</c><00:07:49.280><c> each</c>

00:07:49.589 --> 00:07:49.599 align:start position:0%
unique row in the database for each
 

00:07:49.599 --> 00:07:50.550 align:start position:0%
unique row in the database for each
comment

00:07:50.550 --> 00:07:50.560 align:start position:0%
comment
 

00:07:50.560 --> 00:07:52.469 align:start position:0%
comment
the<00:07:50.720><c> second</c><00:07:51.039><c> table</c><00:07:51.440><c> comments</c><00:07:51.840><c> by</c><00:07:52.080><c> user</c>

00:07:52.469 --> 00:07:52.479 align:start position:0%
the second table comments by user
 

00:07:52.479 --> 00:07:54.150 align:start position:0%
the second table comments by user
supports<00:07:52.880><c> the</c><00:07:53.039><c> same</c><00:07:53.280><c> data</c><00:07:53.599><c> but</c><00:07:53.840><c> has</c><00:07:54.080><c> a</c>

00:07:54.150 --> 00:07:54.160 align:start position:0%
supports the same data but has a
 

00:07:54.160 --> 00:07:55.830 align:start position:0%
supports the same data but has a
different<00:07:54.479><c> partition</c><00:07:54.960><c> key</c>

00:07:55.830 --> 00:07:55.840 align:start position:0%
different partition key
 

00:07:55.840 --> 00:07:57.909 align:start position:0%
different partition key
here<00:07:56.319><c> the</c><00:07:56.560><c> user</c><00:07:56.879><c> id</c><00:07:57.199><c> is</c><00:07:57.360><c> used</c><00:07:57.599><c> as</c><00:07:57.840><c> the</c>

00:07:57.909 --> 00:07:57.919 align:start position:0%
here the user id is used as the
 

00:07:57.919 --> 00:07:59.430 align:start position:0%
here the user id is used as the
partition<00:07:58.400><c> key</c>

00:07:59.430 --> 00:07:59.440 align:start position:0%
partition key
 

00:07:59.440 --> 00:08:01.189 align:start position:0%
partition key
note<00:07:59.680><c> that</c><00:07:59.759><c> these</c><00:08:00.000><c> two</c><00:08:00.160><c> tables</c><00:08:00.560><c> reflect</c><00:08:01.039><c> the</c>

00:08:01.189 --> 00:08:01.199 align:start position:0%
note that these two tables reflect the
 

00:08:01.199 --> 00:08:02.790 align:start position:0%
note that these two tables reflect the
common<00:08:01.680><c> naming</c><00:08:02.000><c> convention</c><00:08:02.400><c> we</c><00:08:02.560><c> have</c><00:08:02.720><c> for</c>

00:08:02.790 --> 00:08:02.800 align:start position:0%
common naming convention we have for
 

00:08:02.800 --> 00:08:05.510 align:start position:0%
common naming convention we have for
cassandra<00:08:03.360><c> tables</c><00:08:04.240><c> we</c><00:08:04.400><c> append</c><00:08:04.800><c> by</c><00:08:05.039><c> something</c>

00:08:05.510 --> 00:08:05.520 align:start position:0%
cassandra tables we append by something
 

00:08:05.520 --> 00:08:07.830 align:start position:0%
cassandra tables we append by something
to<00:08:05.680><c> the</c><00:08:05.840><c> table</c><00:08:06.160><c> name</c><00:08:06.479><c> to</c><00:08:06.639><c> convey</c><00:08:07.039><c> some</c><00:08:07.280><c> idea</c><00:08:07.680><c> of</c>

00:08:07.830 --> 00:08:07.840 align:start position:0%
to the table name to convey some idea of
 

00:08:07.840 --> 00:08:09.990 align:start position:0%
to the table name to convey some idea of
the<00:08:08.000><c> query</c><00:08:08.400><c> that</c><00:08:08.560><c> the</c><00:08:08.720><c> table</c><00:08:09.120><c> is</c><00:08:09.199><c> designed</c><00:08:09.759><c> to</c>

00:08:09.990 --> 00:08:10.000 align:start position:0%
the query that the table is designed to
 

00:08:10.000 --> 00:08:11.749 align:start position:0%
the query that the table is designed to
support

00:08:11.749 --> 00:08:11.759 align:start position:0%
support
 

00:08:11.759 --> 00:08:13.909 align:start position:0%
support
joins<00:08:12.240><c> rely</c><00:08:12.720><c> on</c><00:08:12.879><c> referential</c><00:08:13.440><c> integrity</c>

00:08:13.909 --> 00:08:13.919 align:start position:0%
joins rely on referential integrity
 

00:08:13.919 --> 00:08:15.990 align:start position:0%
joins rely on referential integrity
constraints<00:08:14.400><c> to</c><00:08:14.560><c> combine</c><00:08:14.960><c> data</c>

00:08:15.990 --> 00:08:16.000 align:start position:0%
constraints to combine data
 

00:08:16.000 --> 00:08:18.150 align:start position:0%
constraints to combine data
let's<00:08:16.319><c> look</c><00:08:16.560><c> at</c><00:08:16.639><c> this</c><00:08:16.879><c> point</c><00:08:17.280><c> of</c><00:08:17.599><c> difference</c>

00:08:18.150 --> 00:08:18.160 align:start position:0%
let's look at this point of difference
 

00:08:18.160 --> 00:08:19.749 align:start position:0%
let's look at this point of difference
between<00:08:18.639><c> relational</c><00:08:19.039><c> data</c><00:08:19.280><c> modeling</c><00:08:19.680><c> and</c>

00:08:19.749 --> 00:08:19.759 align:start position:0%
between relational data modeling and
 

00:08:19.759 --> 00:08:21.430 align:start position:0%
between relational data modeling and
cassandra<00:08:20.240><c> data</c><00:08:20.479><c> modeling</c>

00:08:21.430 --> 00:08:21.440 align:start position:0%
cassandra data modeling
 

00:08:21.440 --> 00:08:23.510 align:start position:0%
cassandra data modeling
ri<00:08:21.919><c> refers</c><00:08:22.319><c> to</c><00:08:22.479><c> the</c><00:08:22.560><c> relationship</c><00:08:23.120><c> between</c>

00:08:23.510 --> 00:08:23.520 align:start position:0%
ri refers to the relationship between
 

00:08:23.520 --> 00:08:24.710 align:start position:0%
ri refers to the relationship between
tables

00:08:24.710 --> 00:08:24.720 align:start position:0%
tables
 

00:08:24.720 --> 00:08:27.270 align:start position:0%
tables
a<00:08:24.960><c> value</c><00:08:25.440><c> in</c><00:08:25.599><c> one</c><00:08:25.840><c> table</c><00:08:26.319><c> requires</c><00:08:26.800><c> the</c><00:08:26.960><c> same</c>

00:08:27.270 --> 00:08:27.280 align:start position:0%
a value in one table requires the same
 

00:08:27.280 --> 00:08:29.749 align:start position:0%
a value in one table requires the same
value<00:08:27.599><c> to</c><00:08:27.840><c> exist</c><00:08:28.160><c> in</c><00:08:28.319><c> another</c><00:08:28.639><c> table</c>

00:08:29.749 --> 00:08:29.759 align:start position:0%
value to exist in another table
 

00:08:29.759 --> 00:08:32.230 align:start position:0%
value to exist in another table
if<00:08:29.919><c> there</c><00:08:30.240><c> is</c><00:08:30.400><c> a</c><00:08:30.720><c> user</c><00:08:31.120><c> in</c><00:08:31.280><c> the</c><00:08:31.440><c> user</c><00:08:31.680><c> by</c><00:08:31.919><c> email</c>

00:08:32.230 --> 00:08:32.240 align:start position:0%
if there is a user in the user by email
 

00:08:32.240 --> 00:08:34.550 align:start position:0%
if there is a user in the user by email
table<00:08:32.719><c> then</c><00:08:32.959><c> the</c><00:08:33.120><c> user</c><00:08:33.440><c> must</c><00:08:33.760><c> also</c><00:08:34.080><c> exist</c><00:08:34.479><c> in</c>

00:08:34.550 --> 00:08:34.560 align:start position:0%
table then the user must also exist in
 

00:08:34.560 --> 00:08:37.269 align:start position:0%
table then the user must also exist in
the<00:08:34.719><c> users</c><00:08:35.120><c> table</c><00:08:35.599><c> and</c><00:08:35.839><c> vice</c><00:08:36.080><c> versa</c><00:08:37.039><c> this</c>

00:08:37.269 --> 00:08:37.279 align:start position:0%
the users table and vice versa this
 

00:08:37.279 --> 00:08:39.029 align:start position:0%
the users table and vice versa this
referential<00:08:38.000><c> integrity</c><00:08:38.479><c> is</c><00:08:38.640><c> required</c>

00:08:39.029 --> 00:08:39.039 align:start position:0%
referential integrity is required
 

00:08:39.039 --> 00:08:41.190 align:start position:0%
referential integrity is required
between<00:08:39.440><c> tables</c><00:08:39.919><c> such</c><00:08:40.240><c> that</c><00:08:40.479><c> a</c><00:08:40.640><c> user</c><00:08:41.039><c> is</c>

00:08:41.190 --> 00:08:41.200 align:start position:0%
between tables such that a user is
 

00:08:41.200 --> 00:08:43.029 align:start position:0%
between tables such that a user is
either<00:08:41.519><c> represented</c><00:08:42.000><c> in</c><00:08:42.159><c> both</c><00:08:42.399><c> tables</c><00:08:42.880><c> or</c>

00:08:43.029 --> 00:08:43.039 align:start position:0%
either represented in both tables or
 

00:08:43.039 --> 00:08:44.949 align:start position:0%
either represented in both tables or
none<00:08:43.279><c> of</c><00:08:43.440><c> them</c><00:08:43.760><c> and</c><00:08:44.000><c> also</c><00:08:44.320><c> requires</c><00:08:44.720><c> for</c><00:08:44.880><c> a</c>

00:08:44.949 --> 00:08:44.959 align:start position:0%
none of them and also requires for a
 

00:08:44.959 --> 00:08:46.710 align:start position:0%
none of them and also requires for a
join<00:08:45.279><c> to</c><00:08:45.360><c> work</c><00:08:45.600><c> properly</c>

00:08:46.710 --> 00:08:46.720 align:start position:0%
join to work properly
 

00:08:46.720 --> 00:08:48.630 align:start position:0%
join to work properly
cassandra<00:08:47.279><c> does</c><00:08:47.440><c> not</c><00:08:47.600><c> enforce</c><00:08:48.000><c> referential</c>

00:08:48.630 --> 00:08:48.640 align:start position:0%
cassandra does not enforce referential
 

00:08:48.640 --> 00:08:50.389 align:start position:0%
cassandra does not enforce referential
integrity<00:08:49.200><c> because</c><00:08:49.519><c> this</c><00:08:49.680><c> capability</c>

00:08:50.389 --> 00:08:50.399 align:start position:0%
integrity because this capability
 

00:08:50.399 --> 00:08:53.030 align:start position:0%
integrity because this capability
requires<00:08:50.880><c> a</c><00:08:51.040><c> read</c><00:08:51.360><c> before</c><00:08:51.760><c> a</c><00:08:51.920><c> write</c>

00:08:53.030 --> 00:08:53.040 align:start position:0%
requires a read before a write
 

00:08:53.040 --> 00:08:54.790 align:start position:0%
requires a read before a write
it<00:08:53.279><c> is</c><00:08:53.360><c> not</c><00:08:53.519><c> considered</c><00:08:54.000><c> an</c><00:08:54.240><c> issue</c><00:08:54.480><c> that</c><00:08:54.560><c> has</c>

00:08:54.790 --> 00:08:54.800 align:start position:0%
it is not considered an issue that has
 

00:08:54.800 --> 00:08:57.269 align:start position:0%
it is not considered an issue that has
to<00:08:54.880><c> be</c><00:08:54.959><c> fixed</c><00:08:55.360><c> on</c><00:08:55.519><c> the</c><00:08:55.600><c> cassandra</c><00:08:56.160><c> side</c>

00:08:57.269 --> 00:08:57.279 align:start position:0%
to be fixed on the cassandra side
 

00:08:57.279 --> 00:08:59.110 align:start position:0%
to be fixed on the cassandra side
although<00:08:57.839><c> it</c><00:08:58.000><c> is</c><00:08:58.160><c> a</c><00:08:58.240><c> feature</c><00:08:58.560><c> that</c><00:08:58.720><c> improves</c>

00:08:59.110 --> 00:08:59.120 align:start position:0%
although it is a feature that improves
 

00:08:59.120 --> 00:09:00.949 align:start position:0%
although it is a feature that improves
performance<00:08:59.680><c> and</c><00:08:59.920><c> accessibility</c><00:09:00.720><c> it</c><00:09:00.880><c> is</c>

00:09:00.949 --> 00:09:00.959 align:start position:0%
performance and accessibility it is
 

00:09:00.959 --> 00:09:03.670 align:start position:0%
performance and accessibility it is
considered<00:09:01.519><c> a</c><00:09:01.760><c> developer</c><00:09:02.320><c> prerogative</c>

00:09:03.670 --> 00:09:03.680 align:start position:0%
considered a developer prerogative
 

00:09:03.680 --> 00:09:05.509 align:start position:0%
considered a developer prerogative
referential<00:09:04.240><c> integrity</c><00:09:04.720><c> can</c><00:09:04.880><c> be</c><00:09:05.040><c> enforced</c><00:09:05.440><c> in</c>

00:09:05.509 --> 00:09:05.519 align:start position:0%
referential integrity can be enforced in
 

00:09:05.519 --> 00:09:07.269 align:start position:0%
referential integrity can be enforced in
an<00:09:05.680><c> application</c><00:09:06.240><c> design</c><00:09:06.640><c> but</c><00:09:06.800><c> that</c><00:09:06.959><c> means</c>

00:09:07.269 --> 00:09:07.279 align:start position:0%
an application design but that means
 

00:09:07.279 --> 00:09:10.790 align:start position:0%
an application design but that means
more<00:09:07.519><c> work</c><00:09:07.760><c> for</c><00:09:07.920><c> the</c><00:09:08.080><c> developers</c>

00:09:10.790 --> 00:09:10.800 align:start position:0%
 
 

00:09:10.800 --> 00:09:13.590 align:start position:0%
 
upon<00:09:11.360><c> completing</c><00:09:12.000><c> this</c><00:09:12.320><c> topic</c><00:09:12.959><c> you</c><00:09:13.120><c> will</c><00:09:13.360><c> be</c>

00:09:13.590 --> 00:09:13.600 align:start position:0%
upon completing this topic you will be
 

00:09:13.600 --> 00:09:15.030 align:start position:0%
upon completing this topic you will be
able<00:09:13.839><c> to</c>

00:09:15.030 --> 00:09:15.040 align:start position:0%
able to
 

00:09:15.040 --> 00:09:17.750 align:start position:0%
able to
differentiate<00:09:16.000><c> between</c><00:09:16.399><c> the</c><00:09:16.640><c> terminologies</c>

00:09:17.750 --> 00:09:17.760 align:start position:0%
differentiate between the terminologies
 

00:09:17.760 --> 00:09:21.030 align:start position:0%
differentiate between the terminologies
used<00:09:18.160><c> in</c><00:09:18.320><c> apache</c><00:09:18.880><c> cassandra</c><00:09:19.680><c> tables</c>

00:09:21.030 --> 00:09:21.040 align:start position:0%
used in apache cassandra tables
 

00:09:21.040 --> 00:09:23.269 align:start position:0%
used in apache cassandra tables
understand<00:09:21.760><c> the</c><00:09:21.920><c> different</c><00:09:22.399><c> data</c><00:09:22.800><c> types</c>

00:09:23.269 --> 00:09:23.279 align:start position:0%
understand the different data types
 

00:09:23.279 --> 00:09:25.509 align:start position:0%
understand the different data types
available<00:09:24.000><c> in</c><00:09:24.080><c> cassandra</c>

00:09:25.509 --> 00:09:25.519 align:start position:0%
available in cassandra
 

00:09:25.519 --> 00:09:29.110 align:start position:0%
available in cassandra
cassandra<00:09:26.399><c> uses</c><00:09:27.360><c> database</c><00:09:28.080><c> terms</c><00:09:28.560><c> that</c><00:09:28.800><c> have</c>

00:09:29.110 --> 00:09:29.120 align:start position:0%
cassandra uses database terms that have
 

00:09:29.120 --> 00:09:31.750 align:start position:0%
cassandra uses database terms that have
specific<00:09:29.760><c> connotations</c><00:09:30.800><c> in</c><00:09:30.880><c> the</c><00:09:31.040><c> context</c><00:09:31.680><c> of</c>

00:09:31.750 --> 00:09:31.760 align:start position:0%
specific connotations in the context of
 

00:09:31.760 --> 00:09:33.269 align:start position:0%
specific connotations in the context of
data<00:09:32.160><c> modeling</c>

00:09:33.269 --> 00:09:33.279 align:start position:0%
data modeling
 

00:09:33.279 --> 00:09:36.389 align:start position:0%
data modeling
the<00:09:33.519><c> key</c><00:09:33.760><c> terms</c><00:09:34.160><c> are</c><00:09:34.320><c> data</c><00:09:34.720><c> model</c><00:09:35.440><c> key</c><00:09:35.600><c> space</c>

00:09:36.389 --> 00:09:36.399 align:start position:0%
the key terms are data model key space
 

00:09:36.399 --> 00:09:38.550 align:start position:0%
the key terms are data model key space
table<00:09:36.880><c> and</c><00:09:37.120><c> partition</c>

00:09:38.550 --> 00:09:38.560 align:start position:0%
table and partition
 

00:09:38.560 --> 00:09:41.269 align:start position:0%
table and partition
a<00:09:38.720><c> data</c><00:09:39.120><c> model</c><00:09:39.519><c> is</c><00:09:39.680><c> an</c><00:09:39.839><c> abstract</c><00:09:40.560><c> model</c><00:09:41.040><c> for</c>

00:09:41.269 --> 00:09:41.279 align:start position:0%
a data model is an abstract model for
 

00:09:41.279 --> 00:09:43.990 align:start position:0%
a data model is an abstract model for
organizing<00:09:42.000><c> elements</c><00:09:42.480><c> of</c><00:09:42.560><c> the</c><00:09:42.720><c> data</c>

00:09:43.990 --> 00:09:44.000 align:start position:0%
organizing elements of the data
 

00:09:44.000 --> 00:09:46.710 align:start position:0%
organizing elements of the data
data<00:09:44.399><c> models</c><00:09:45.040><c> vary</c><00:09:45.440><c> depending</c><00:09:45.920><c> on</c><00:09:46.080><c> the</c><00:09:46.240><c> type</c>

00:09:46.710 --> 00:09:46.720 align:start position:0%
data models vary depending on the type
 

00:09:46.720 --> 00:09:50.070 align:start position:0%
data models vary depending on the type
capability<00:09:47.600><c> and</c><00:09:47.760><c> purpose</c><00:09:48.240><c> of</c><00:09:48.320><c> the</c><00:09:48.480><c> database</c>

00:09:50.070 --> 00:09:50.080 align:start position:0%
capability and purpose of the database
 

00:09:50.080 --> 00:09:52.230 align:start position:0%
capability and purpose of the database
the<00:09:50.240><c> type</c><00:09:50.560><c> of</c><00:09:50.720><c> the</c><00:09:50.800><c> data</c><00:09:51.200><c> model</c><00:09:51.600><c> depends</c><00:09:52.080><c> on</c>

00:09:52.230 --> 00:09:52.240 align:start position:0%
the type of the data model depends on
 

00:09:52.240 --> 00:09:55.110 align:start position:0%
the type of the data model depends on
the<00:09:52.320><c> capability</c><00:09:53.200><c> of</c><00:09:53.279><c> the</c><00:09:53.360><c> database</c>

00:09:55.110 --> 00:09:55.120 align:start position:0%
the capability of the database
 

00:09:55.120 --> 00:09:58.550 align:start position:0%
the capability of the database
for<00:09:55.600><c> cassandra</c><00:09:56.640><c> the</c><00:09:56.800><c> data</c><00:09:57.200><c> model</c><00:09:57.760><c> is</c><00:09:58.000><c> based</c><00:09:58.399><c> on</c>

00:09:58.550 --> 00:09:58.560 align:start position:0%
for cassandra the data model is based on
 

00:09:58.560 --> 00:10:01.509 align:start position:0%
for cassandra the data model is based on
the<00:09:58.640><c> queries</c><00:09:59.200><c> that</c><00:09:59.440><c> you</c><00:09:59.600><c> may</c><00:09:59.760><c> want</c><00:10:00.000><c> to</c><00:10:00.160><c> perform</c>

00:10:01.509 --> 00:10:01.519 align:start position:0%
the queries that you may want to perform
 

00:10:01.519 --> 00:10:03.910 align:start position:0%
the queries that you may want to perform
a<00:10:01.760><c> key</c><00:10:02.000><c> space</c><00:10:02.480><c> is</c><00:10:02.560><c> the</c><00:10:02.720><c> outermost</c><00:10:03.360><c> logical</c>

00:10:03.910 --> 00:10:03.920 align:start position:0%
a key space is the outermost logical
 

00:10:03.920 --> 00:10:06.230 align:start position:0%
a key space is the outermost logical
container<00:10:04.640><c> of</c><00:10:04.800><c> tables</c>

00:10:06.230 --> 00:10:06.240 align:start position:0%
container of tables
 

00:10:06.240 --> 00:10:09.590 align:start position:0%
container of tables
it<00:10:06.399><c> stores</c><00:10:06.959><c> tables</c><00:10:07.519><c> and</c><00:10:07.680><c> replication</c><00:10:08.560><c> data</c>

00:10:09.590 --> 00:10:09.600 align:start position:0%
it stores tables and replication data
 

00:10:09.600 --> 00:10:11.590 align:start position:0%
it stores tables and replication data
in<00:10:09.760><c> other</c><00:10:10.000><c> words</c><00:10:10.320><c> it's</c><00:10:10.560><c> a</c><00:10:10.640><c> container</c><00:10:11.360><c> for</c>

00:10:11.590 --> 00:10:11.600 align:start position:0%
in other words it's a container for
 

00:10:11.600 --> 00:10:13.110 align:start position:0%
in other words it's a container for
replication

00:10:13.110 --> 00:10:13.120 align:start position:0%
replication
 

00:10:13.120 --> 00:10:15.590 align:start position:0%
replication
a<00:10:13.279><c> table</c><00:10:13.760><c> is</c><00:10:13.839><c> a</c><00:10:14.000><c> combination</c><00:10:14.800><c> of</c><00:10:15.040><c> rows</c><00:10:15.440><c> and</c>

00:10:15.590 --> 00:10:15.600 align:start position:0%
a table is a combination of rows and
 

00:10:15.600 --> 00:10:16.949 align:start position:0%
a table is a combination of rows and
columns

00:10:16.949 --> 00:10:16.959 align:start position:0%
columns
 

00:10:16.959 --> 00:10:19.190 align:start position:0%
columns
the<00:10:17.120><c> tables</c><00:10:17.600><c> are</c><00:10:17.760><c> contained</c><00:10:18.399><c> within</c><00:10:18.800><c> the</c><00:10:18.959><c> k</c>

00:10:19.190 --> 00:10:19.200 align:start position:0%
the tables are contained within the k
 

00:10:19.200 --> 00:10:20.870 align:start position:0%
the tables are contained within the k
space

00:10:20.870 --> 00:10:20.880 align:start position:0%
space
 

00:10:20.880 --> 00:10:24.150 align:start position:0%
space
as<00:10:21.120><c> a</c><00:10:21.279><c> columnar</c><00:10:21.839><c> database</c><00:10:22.880><c> cassandra</c><00:10:23.519><c> stores</c>

00:10:24.150 --> 00:10:24.160 align:start position:0%
as a columnar database cassandra stores
 

00:10:24.160 --> 00:10:26.949 align:start position:0%
as a columnar database cassandra stores
data<00:10:24.480><c> based</c><00:10:25.040><c> on</c><00:10:25.360><c> partitions</c>

00:10:26.949 --> 00:10:26.959 align:start position:0%
data based on partitions
 

00:10:26.959 --> 00:10:29.829 align:start position:0%
data based on partitions
partition<00:10:27.839><c> is</c><00:10:28.000><c> a</c><00:10:28.160><c> raw</c><00:10:28.640><c> rows</c><00:10:28.959><c> of</c><00:10:29.040><c> data</c><00:10:29.519><c> that</c><00:10:29.760><c> are</c>

00:10:29.829 --> 00:10:29.839 align:start position:0%
partition is a raw rows of data that are
 

00:10:29.839 --> 00:10:32.790 align:start position:0%
partition is a raw rows of data that are
stored<00:10:30.320><c> on</c><00:10:30.480><c> a</c><00:10:30.640><c> node</c><00:10:31.040><c> in</c><00:10:31.120><c> the</c><00:10:31.279><c> data</c><00:10:31.600><c> table</c><00:10:32.320><c> based</c>

00:10:32.790 --> 00:10:32.800 align:start position:0%
stored on a node in the data table based
 

00:10:32.800 --> 00:10:35.509 align:start position:0%
stored on a node in the data table based
on<00:10:32.959><c> the</c><00:10:33.200><c> partitioning</c><00:10:34.000><c> strategy</c>

00:10:35.509 --> 00:10:35.519 align:start position:0%
on the partitioning strategy
 

00:10:35.519 --> 00:10:38.069 align:start position:0%
on the partitioning strategy
each<00:10:35.920><c> row</c><00:10:36.240><c> in</c><00:10:36.320><c> the</c><00:10:36.480><c> partition</c><00:10:37.200><c> consists</c><00:10:37.839><c> of</c>

00:10:38.069 --> 00:10:38.079 align:start position:0%
each row in the partition consists of
 

00:10:38.079 --> 00:10:40.470 align:start position:0%
each row in the partition consists of
key<00:10:38.399><c> and</c><00:10:38.640><c> value</c><00:10:39.200><c> pairs</c>

00:10:40.470 --> 00:10:40.480 align:start position:0%
key and value pairs
 

00:10:40.480 --> 00:10:43.269 align:start position:0%
key and value pairs
cassandra<00:10:41.200><c> stores</c><00:10:41.760><c> and</c><00:10:41.920><c> retrieves</c><00:10:42.640><c> data</c>

00:10:43.269 --> 00:10:43.279 align:start position:0%
cassandra stores and retrieves data
 

00:10:43.279 --> 00:10:45.829 align:start position:0%
cassandra stores and retrieves data
based<00:10:43.760><c> on</c><00:10:44.240><c> partitions</c>

00:10:45.829 --> 00:10:45.839 align:start position:0%
based on partitions
 

00:10:45.839 --> 00:10:48.389 align:start position:0%
based on partitions
a<00:10:46.000><c> partition</c><00:10:46.640><c> is</c><00:10:46.800><c> a</c><00:10:46.959><c> terminology</c><00:10:48.000><c> where</c><00:10:48.240><c> you</c>

00:10:48.389 --> 00:10:48.399 align:start position:0%
a partition is a terminology where you
 

00:10:48.399 --> 00:10:51.990 align:start position:0%
a partition is a terminology where you
can<00:10:48.720><c> make</c><00:10:49.200><c> or</c><00:10:49.519><c> break</c><00:10:50.079><c> the</c><00:10:50.240><c> data</c><00:10:50.640><c> model</c>

00:10:51.990 --> 00:10:52.000 align:start position:0%
can make or break the data model
 

00:10:52.000 --> 00:10:54.630 align:start position:0%
can make or break the data model
a<00:10:52.240><c> primary</c><00:10:52.800><c> key</c><00:10:53.040><c> is</c><00:10:53.120><c> the</c><00:10:53.279><c> most</c><00:10:53.680><c> important</c><00:10:54.240><c> part</c>

00:10:54.630 --> 00:10:54.640 align:start position:0%
a primary key is the most important part
 

00:10:54.640 --> 00:10:56.230 align:start position:0%
a primary key is the most important part
of<00:10:54.720><c> the</c><00:10:54.800><c> data</c><00:10:55.200><c> model</c>

00:10:56.230 --> 00:10:56.240 align:start position:0%
of the data model
 

00:10:56.240 --> 00:10:58.150 align:start position:0%
of the data model
it<00:10:56.399><c> does</c><00:10:56.720><c> two</c><00:10:56.959><c> things</c>

00:10:58.150 --> 00:10:58.160 align:start position:0%
it does two things
 

00:10:58.160 --> 00:11:00.389 align:start position:0%
it does two things
first<00:10:58.480><c> it</c><00:10:58.720><c> guarantees</c><00:10:59.440><c> the</c><00:10:59.600><c> uniqueness</c><00:11:00.320><c> of</c>

00:11:00.389 --> 00:11:00.399 align:start position:0%
first it guarantees the uniqueness of
 

00:11:00.399 --> 00:11:03.190 align:start position:0%
first it guarantees the uniqueness of
the<00:11:00.560><c> data</c><00:11:01.360><c> and</c><00:11:01.600><c> second</c><00:11:02.160><c> it</c><00:11:02.320><c> defines</c><00:11:02.959><c> the</c>

00:11:03.190 --> 00:11:03.200 align:start position:0%
the data and second it defines the
 

00:11:03.200 --> 00:11:05.750 align:start position:0%
the data and second it defines the
placement<00:11:03.760><c> of</c><00:11:03.839><c> the</c><00:11:04.079><c> record</c><00:11:04.640><c> in</c><00:11:04.720><c> the</c><00:11:04.880><c> cluster</c>

00:11:05.750 --> 00:11:05.760 align:start position:0%
placement of the record in the cluster
 

00:11:05.760 --> 00:11:08.389 align:start position:0%
placement of the record in the cluster
this<00:11:06.000><c> allows</c><00:11:06.399><c> for</c><00:11:06.640><c> easy</c><00:11:07.040><c> access</c><00:11:07.600><c> to</c><00:11:07.760><c> the</c><00:11:07.920><c> data</c>

00:11:08.389 --> 00:11:08.399 align:start position:0%
this allows for easy access to the data
 

00:11:08.399 --> 00:11:10.069 align:start position:0%
this allows for easy access to the data
in<00:11:08.560><c> the</c><00:11:08.720><c> model</c>

00:11:10.069 --> 00:11:10.079 align:start position:0%
in the model
 

00:11:10.079 --> 00:11:12.790 align:start position:0%
in the model
a<00:11:10.480><c> partition</c><00:11:11.120><c> key</c><00:11:11.519><c> is</c><00:11:11.680><c> the</c><00:11:11.839><c> first</c><00:11:12.240><c> part</c><00:11:12.560><c> of</c><00:11:12.640><c> the</c>

00:11:12.790 --> 00:11:12.800 align:start position:0%
a partition key is the first part of the
 

00:11:12.800 --> 00:11:15.829 align:start position:0%
a partition key is the first part of the
primary<00:11:13.440><c> key</c><00:11:14.320><c> it</c><00:11:14.560><c> determines</c><00:11:15.279><c> where</c><00:11:15.519><c> in</c><00:11:15.680><c> the</c>

00:11:15.829 --> 00:11:15.839 align:start position:0%
primary key it determines where in the
 

00:11:15.839 --> 00:11:18.310 align:start position:0%
primary key it determines where in the
cluster<00:11:16.320><c> your</c><00:11:16.560><c> data</c><00:11:16.959><c> will</c><00:11:17.120><c> be</c><00:11:17.360><c> stored</c><00:11:18.160><c> on</c>

00:11:18.310 --> 00:11:18.320 align:start position:0%
cluster your data will be stored on
 

00:11:18.320 --> 00:11:20.949 align:start position:0%
cluster your data will be stored on
which<00:11:18.800><c> node</c><00:11:19.200><c> it</c><00:11:19.360><c> will</c><00:11:19.440><c> be</c><00:11:19.680><c> stored</c>

00:11:20.949 --> 00:11:20.959 align:start position:0%
which node it will be stored
 

00:11:20.959 --> 00:11:23.509 align:start position:0%
which node it will be stored
a<00:11:21.120><c> partition</c><00:11:21.760><c> key</c><00:11:22.079><c> is</c><00:11:22.240><c> a</c><00:11:22.320><c> left</c><00:11:22.560><c> hand</c><00:11:22.959><c> column</c><00:11:23.440><c> in</c>

00:11:23.509 --> 00:11:23.519 align:start position:0%
a partition key is a left hand column in
 

00:11:23.519 --> 00:11:27.269 align:start position:0%
a partition key is a left hand column in
the<00:11:23.760><c> graphic</c><00:11:24.480><c> indicating</c><00:11:25.519><c> one</c><00:11:26.160><c> two</c><00:11:26.480><c> or</c><00:11:26.800><c> three</c>

00:11:27.269 --> 00:11:27.279 align:start position:0%
the graphic indicating one two or three
 

00:11:27.279 --> 00:11:28.870 align:start position:0%
the graphic indicating one two or three
respectively

00:11:28.870 --> 00:11:28.880 align:start position:0%
respectively
 

00:11:28.880 --> 00:11:31.269 align:start position:0%
respectively
inside<00:11:29.360><c> each</c><00:11:29.600><c> partition</c><00:11:30.240><c> there</c><00:11:30.480><c> are</c><00:11:30.640><c> rows</c><00:11:31.040><c> and</c>

00:11:31.269 --> 00:11:31.279 align:start position:0%
inside each partition there are rows and
 

00:11:31.279 --> 00:11:32.710 align:start position:0%
inside each partition there are rows and
columns

00:11:32.710 --> 00:11:32.720 align:start position:0%
columns
 

00:11:32.720 --> 00:11:34.870 align:start position:0%
columns
columns<00:11:33.200><c> are</c><00:11:33.279><c> stored</c><00:11:33.760><c> locally</c><00:11:34.320><c> and</c><00:11:34.480><c> referred</c>

00:11:34.870 --> 00:11:34.880 align:start position:0%
columns are stored locally and referred
 

00:11:34.880 --> 00:11:37.350 align:start position:0%
columns are stored locally and referred
to<00:11:35.120><c> as</c><00:11:35.440><c> cells</c><00:11:36.000><c> in</c><00:11:36.079><c> the</c><00:11:36.240><c> table</c>

00:11:37.350 --> 00:11:37.360 align:start position:0%
to as cells in the table
 

00:11:37.360 --> 00:11:40.550 align:start position:0%
to as cells in the table
a<00:11:37.519><c> row</c><00:11:37.920><c> is</c><00:11:38.079><c> contained</c><00:11:38.720><c> inside</c><00:11:39.200><c> a</c><00:11:39.279><c> partition</c>

00:11:40.550 --> 00:11:40.560 align:start position:0%
a row is contained inside a partition
 

00:11:40.560 --> 00:11:42.949 align:start position:0%
a row is contained inside a partition
there<00:11:40.720><c> can</c><00:11:40.880><c> be</c><00:11:41.120><c> more</c><00:11:41.839><c> rows</c><00:11:42.560><c> and</c><00:11:42.720><c> they</c><00:11:42.800><c> are</c>

00:11:42.949 --> 00:11:42.959 align:start position:0%
there can be more rows and they are
 

00:11:42.959 --> 00:11:45.910 align:start position:0%
there can be more rows and they are
stored<00:11:43.360><c> together</c><00:11:44.160><c> on</c><00:11:44.399><c> a</c><00:11:44.480><c> partition</c>

00:11:45.910 --> 00:11:45.920 align:start position:0%
stored together on a partition
 

00:11:45.920 --> 00:11:48.550 align:start position:0%
stored together on a partition
clustering<00:11:46.560><c> columns</c><00:11:47.200><c> define</c><00:11:47.760><c> the</c><00:11:48.000><c> order</c><00:11:48.399><c> of</c>

00:11:48.550 --> 00:11:48.560 align:start position:0%
clustering columns define the order of
 

00:11:48.560 --> 00:11:50.949 align:start position:0%
clustering columns define the order of
data<00:11:48.959><c> within</c><00:11:49.279><c> a</c><00:11:49.360><c> given</c><00:11:49.760><c> partition</c>

00:11:50.949 --> 00:11:50.959 align:start position:0%
data within a given partition
 

00:11:50.959 --> 00:11:54.470 align:start position:0%
data within a given partition
the<00:11:51.120><c> default</c><00:11:51.920><c> sorting</c><00:11:52.880><c> is</c><00:11:53.440><c> in</c><00:11:53.600><c> the</c><00:11:53.760><c> ascending</c>

00:11:54.470 --> 00:11:54.480 align:start position:0%
the default sorting is in the ascending
 

00:11:54.480 --> 00:11:57.190 align:start position:0%
the default sorting is in the ascending
order

00:11:57.190 --> 00:11:57.200 align:start position:0%
order
 

00:11:57.200 --> 00:11:58.790 align:start position:0%
order
upon<00:11:57.519><c> completing</c><00:11:57.920><c> this</c><00:11:58.160><c> lesson</c><00:11:58.480><c> you</c><00:11:58.560><c> will</c><00:11:58.640><c> be</c>

00:11:58.790 --> 00:11:58.800 align:start position:0%
upon completing this lesson you will be
 

00:11:58.800 --> 00:12:01.110 align:start position:0%
upon completing this lesson you will be
able<00:11:58.959><c> to</c><00:11:59.120><c> explore</c><00:11:59.519><c> the</c><00:11:59.680><c> basic</c><00:12:00.079><c> cql</c><00:12:00.640><c> concepts</c>

00:12:01.110 --> 00:12:01.120 align:start position:0%
able to explore the basic cql concepts
 

00:12:01.120 --> 00:12:04.710 align:start position:0%
able to explore the basic cql concepts
within<00:12:01.440><c> an</c><00:12:01.600><c> apache</c><00:12:02.000><c> cassandra</c><00:12:02.480><c> database</c>

00:12:04.710 --> 00:12:04.720 align:start position:0%
within an apache cassandra database
 

00:12:04.720 --> 00:12:07.509 align:start position:0%
within an apache cassandra database
cassandra<00:12:05.200><c> query</c><00:12:05.519><c> language</c><00:12:06.079><c> or</c><00:12:06.320><c> cql</c><00:12:07.200><c> is</c><00:12:07.360><c> a</c>

00:12:07.509 --> 00:12:07.519 align:start position:0%
cassandra query language or cql is a
 

00:12:07.519 --> 00:12:10.389 align:start position:0%
cassandra query language or cql is a
nosql<00:12:08.160><c> language</c><00:12:08.800><c> also</c><00:12:09.120><c> known</c><00:12:09.360><c> as</c><00:12:09.760><c> not</c><00:12:10.079><c> only</c>

00:12:10.389 --> 00:12:10.399 align:start position:0%
nosql language also known as not only
 

00:12:10.399 --> 00:12:11.350 align:start position:0%
nosql language also known as not only
sql

00:12:11.350 --> 00:12:11.360 align:start position:0%
sql
 

00:12:11.360 --> 00:12:13.030 align:start position:0%
sql
let's<00:12:11.600><c> learn</c><00:12:11.839><c> about</c><00:12:12.000><c> some</c><00:12:12.160><c> basic</c><00:12:12.480><c> cql</c>

00:12:13.030 --> 00:12:13.040 align:start position:0%
let's learn about some basic cql
 

00:12:13.040 --> 00:12:14.550 align:start position:0%
let's learn about some basic cql
concepts<00:12:13.519><c> including</c>

00:12:14.550 --> 00:12:14.560 align:start position:0%
concepts including
 

00:12:14.560 --> 00:12:16.629 align:start position:0%
concepts including
building<00:12:14.880><c> blocks</c><00:12:15.360><c> such</c><00:12:15.600><c> as</c><00:12:15.760><c> key</c><00:12:16.000><c> spaces</c>

00:12:16.629 --> 00:12:16.639 align:start position:0%
building blocks such as key spaces
 

00:12:16.639 --> 00:12:19.509 align:start position:0%
building blocks such as key spaces
tables<00:12:17.200><c> and</c><00:12:17.360><c> the</c><00:12:17.519><c> primary</c><00:12:18.000><c> keys</c><00:12:18.800><c> as</c><00:12:18.959><c> well</c><00:12:19.120><c> as</c>

00:12:19.509 --> 00:12:19.519 align:start position:0%
tables and the primary keys as well as
 

00:12:19.519 --> 00:12:22.069 align:start position:0%
tables and the primary keys as well as
basic<00:12:19.839><c> cql</c><00:12:20.320><c> commands</c><00:12:20.959><c> such</c><00:12:21.200><c> as</c><00:12:21.519><c> select</c>

00:12:22.069 --> 00:12:22.079 align:start position:0%
basic cql commands such as select
 

00:12:22.079 --> 00:12:25.590 align:start position:0%
basic cql commands such as select
truncate<00:12:22.800><c> alter</c><00:12:23.120><c> table</c><00:12:23.600><c> and</c><00:12:23.839><c> source</c>

00:12:25.590 --> 00:12:25.600 align:start position:0%
truncate alter table and source
 

00:12:25.600 --> 00:12:27.670 align:start position:0%
truncate alter table and source
the<00:12:25.760><c> key</c><00:12:26.000><c> space</c><00:12:26.320><c> is</c><00:12:26.480><c> a</c><00:12:26.560><c> top</c><00:12:26.800><c> level</c><00:12:27.200><c> container</c>

00:12:27.670 --> 00:12:27.680 align:start position:0%
the key space is a top level container
 

00:12:27.680 --> 00:12:29.670 align:start position:0%
the key space is a top level container
in<00:12:27.839><c> apache</c><00:12:28.160><c> cassandra</c><00:12:28.720><c> to</c><00:12:28.959><c> organize</c><00:12:29.519><c> a</c>

00:12:29.670 --> 00:12:29.680 align:start position:0%
in apache cassandra to organize a
 

00:12:29.680 --> 00:12:31.509 align:start position:0%
in apache cassandra to organize a
related<00:12:30.160><c> set</c><00:12:30.399><c> of</c><00:12:30.560><c> tables</c>

00:12:31.509 --> 00:12:31.519 align:start position:0%
related set of tables
 

00:12:31.519 --> 00:12:33.110 align:start position:0%
related set of tables
it<00:12:31.760><c> is</c><00:12:31.839><c> very</c><00:12:32.079><c> similar</c><00:12:32.399><c> to</c><00:12:32.560><c> a</c><00:12:32.720><c> relational</c>

00:12:33.110 --> 00:12:33.120 align:start position:0%
it is very similar to a relational
 

00:12:33.120 --> 00:12:34.870 align:start position:0%
it is very similar to a relational
databases<00:12:33.760><c> schema</c>

00:12:34.870 --> 00:12:34.880 align:start position:0%
databases schema
 

00:12:34.880 --> 00:12:37.190 align:start position:0%
databases schema
cassandra<00:12:35.440><c> key</c><00:12:35.600><c> space</c><00:12:35.920><c> defines</c><00:12:36.560><c> replication</c>

00:12:37.190 --> 00:12:37.200 align:start position:0%
cassandra key space defines replication
 

00:12:37.200 --> 00:12:39.190 align:start position:0%
cassandra key space defines replication
settings<00:12:37.519><c> that</c><00:12:37.680><c> describe</c><00:12:38.240><c> how</c><00:12:38.480><c> many</c><00:12:38.720><c> copies</c>

00:12:39.190 --> 00:12:39.200 align:start position:0%
settings that describe how many copies
 

00:12:39.200 --> 00:12:41.110 align:start position:0%
settings that describe how many copies
of<00:12:39.360><c> a</c><00:12:39.440><c> given</c><00:12:39.839><c> piece</c><00:12:40.079><c> of</c><00:12:40.240><c> data</c><00:12:40.639><c> are</c><00:12:40.800><c> being</c>

00:12:41.110 --> 00:12:41.120 align:start position:0%
of a given piece of data are being
 

00:12:41.120 --> 00:12:43.269 align:start position:0%
of a given piece of data are being
stored<00:12:41.600><c> within</c><00:12:42.000><c> a</c><00:12:42.160><c> cluster</c>

00:12:43.269 --> 00:12:43.279 align:start position:0%
stored within a cluster
 

00:12:43.279 --> 00:12:46.069 align:start position:0%
stored within a cluster
once<00:12:43.519><c> you've</c><00:12:43.680><c> created</c><00:12:44.079><c> a</c><00:12:44.160><c> key</c><00:12:44.320><c> space</c><00:12:44.720><c> in</c><00:12:44.880><c> cqlsh</c>

00:12:46.069 --> 00:12:46.079 align:start position:0%
once you've created a key space in cqlsh
 

00:12:46.079 --> 00:12:47.670 align:start position:0%
once you've created a key space in cqlsh
you<00:12:46.240><c> may</c><00:12:46.399><c> want</c><00:12:46.560><c> to</c><00:12:46.720><c> select</c><00:12:47.040><c> the</c><00:12:47.200><c> key</c><00:12:47.360><c> space</c>

00:12:47.670 --> 00:12:47.680 align:start position:0%
you may want to select the key space
 

00:12:47.680 --> 00:12:49.269 align:start position:0%
you may want to select the key space
that<00:12:47.760><c> will</c><00:12:47.920><c> be</c><00:12:48.079><c> used</c><00:12:48.399><c> for</c><00:12:48.560><c> your</c><00:12:48.800><c> subsequent</c>

00:12:49.269 --> 00:12:49.279 align:start position:0%
that will be used for your subsequent
 

00:12:49.279 --> 00:12:50.230 align:start position:0%
that will be used for your subsequent
command

00:12:50.230 --> 00:12:50.240 align:start position:0%
command
 

00:12:50.240 --> 00:12:52.710 align:start position:0%
command
you<00:12:50.399><c> can</c><00:12:50.639><c> enter</c><00:12:50.959><c> a</c><00:12:51.360><c> use</c><00:12:51.680><c> command</c><00:12:52.240><c> followed</c><00:12:52.560><c> by</c>

00:12:52.710 --> 00:12:52.720 align:start position:0%
you can enter a use command followed by
 

00:12:52.720 --> 00:12:54.550 align:start position:0%
you can enter a use command followed by
the<00:12:52.880><c> name</c><00:12:53.200><c> of</c><00:12:53.279><c> the</c><00:12:53.360><c> key</c><00:12:53.600><c> space</c>

00:12:54.550 --> 00:12:54.560 align:start position:0%
the name of the key space
 

00:12:54.560 --> 00:12:56.150 align:start position:0%
the name of the key space
if<00:12:54.720><c> you</c><00:12:54.880><c> do</c><00:12:54.959><c> not</c><00:12:55.120><c> select</c><00:12:55.440><c> a</c><00:12:55.600><c> key</c><00:12:55.760><c> space</c><00:12:56.000><c> with</c>

00:12:56.150 --> 00:12:56.160 align:start position:0%
if you do not select a key space with
 

00:12:56.160 --> 00:12:57.750 align:start position:0%
if you do not select a key space with
the<00:12:56.240><c> use</c><00:12:56.480><c> command</c><00:12:56.959><c> you'll</c><00:12:57.120><c> have</c><00:12:57.279><c> to</c><00:12:57.440><c> include</c>

00:12:57.750 --> 00:12:57.760 align:start position:0%
the use command you'll have to include
 

00:12:57.760 --> 00:12:59.670 align:start position:0%
the use command you'll have to include
the<00:12:57.920><c> name</c><00:12:58.240><c> of</c><00:12:58.320><c> the</c><00:12:58.480><c> key</c><00:12:58.720><c> space</c><00:12:59.040><c> whenever</c><00:12:59.440><c> you</c>

00:12:59.670 --> 00:12:59.680 align:start position:0%
the name of the key space whenever you
 

00:12:59.680 --> 00:13:01.829 align:start position:0%
the name of the key space whenever you
reference<00:13:00.160><c> the</c><00:13:00.320><c> name</c><00:13:00.639><c> of</c><00:13:00.880><c> a</c><00:13:00.959><c> table</c>

00:13:01.829 --> 00:13:01.839 align:start position:0%
reference the name of a table
 

00:13:01.839 --> 00:13:03.590 align:start position:0%
reference the name of a table
this<00:13:02.000><c> helps</c><00:13:02.320><c> cassandra</c><00:13:02.880><c> interpret</c><00:13:03.360><c> your</c>

00:13:03.590 --> 00:13:03.600 align:start position:0%
this helps cassandra interpret your
 

00:13:03.600 --> 00:13:05.670 align:start position:0%
this helps cassandra interpret your
request

00:13:05.670 --> 00:13:05.680 align:start position:0%
request
 

00:13:05.680 --> 00:13:07.430 align:start position:0%
request
let's<00:13:05.920><c> take</c><00:13:06.079><c> a</c><00:13:06.160><c> quick</c><00:13:06.399><c> look</c><00:13:06.639><c> at</c><00:13:06.800><c> the</c><00:13:06.880><c> syntax</c>

00:13:07.430 --> 00:13:07.440 align:start position:0%
let's take a quick look at the syntax
 

00:13:07.440 --> 00:13:09.030 align:start position:0%
let's take a quick look at the syntax
for<00:13:07.600><c> creating</c><00:13:08.000><c> a</c><00:13:08.160><c> table</c>

00:13:09.030 --> 00:13:09.040 align:start position:0%
for creating a table
 

00:13:09.040 --> 00:13:10.629 align:start position:0%
for creating a table
the<00:13:09.200><c> code</c><00:13:09.519><c> here</c><00:13:09.680><c> shows</c><00:13:10.000><c> the</c><00:13:10.079><c> statements</c><00:13:10.480><c> for</c>

00:13:10.629 --> 00:13:10.639 align:start position:0%
the code here shows the statements for
 

00:13:10.639 --> 00:13:12.870 align:start position:0%
the code here shows the statements for
creating<00:13:11.120><c> two</c><00:13:11.440><c> different</c><00:13:11.839><c> tables</c>

00:13:12.870 --> 00:13:12.880 align:start position:0%
creating two different tables
 

00:13:12.880 --> 00:13:15.030 align:start position:0%
creating two different tables
remember<00:13:13.360><c> the</c><00:13:13.519><c> key</c><00:13:13.760><c> spaces</c><00:13:14.160><c> contain</c><00:13:14.560><c> tables</c>

00:13:15.030 --> 00:13:15.040 align:start position:0%
remember the key spaces contain tables
 

00:13:15.040 --> 00:13:17.110 align:start position:0%
remember the key spaces contain tables
and<00:13:15.279><c> tables</c><00:13:15.680><c> contain</c><00:13:16.079><c> our</c><00:13:16.240><c> data</c>

00:13:17.110 --> 00:13:17.120 align:start position:0%
and tables contain our data
 

00:13:17.120 --> 00:13:19.110 align:start position:0%
and tables contain our data
note<00:13:17.360><c> that</c><00:13:17.519><c> every</c><00:13:17.760><c> cassandra</c><00:13:18.240><c> table</c><00:13:18.639><c> has</c><00:13:18.959><c> a</c>

00:13:19.110 --> 00:13:19.120 align:start position:0%
note that every cassandra table has a
 

00:13:19.120 --> 00:13:21.030 align:start position:0%
note that every cassandra table has a
primary<00:13:19.600><c> key</c>

00:13:21.030 --> 00:13:21.040 align:start position:0%
primary key
 

00:13:21.040 --> 00:13:23.670 align:start position:0%
primary key
inside<00:13:21.519><c> each</c><00:13:21.839><c> key</c><00:13:22.000><c> space</c><00:13:22.480><c> is</c><00:13:22.639><c> the</c><00:13:22.720><c> table</c><00:13:23.519><c> the</c>

00:13:23.670 --> 00:13:23.680 align:start position:0%
inside each key space is the table the
 

00:13:23.680 --> 00:13:25.430 align:start position:0%
inside each key space is the table the
primary<00:13:24.160><c> key</c><00:13:24.399><c> clause</c><00:13:24.880><c> is</c><00:13:25.040><c> a</c><00:13:25.120><c> unique</c>

00:13:25.430 --> 00:13:25.440 align:start position:0%
primary key clause is a unique
 

00:13:25.440 --> 00:13:27.350 align:start position:0%
primary key clause is a unique
identification<00:13:26.240><c> for</c><00:13:26.399><c> each</c><00:13:26.720><c> row</c><00:13:26.959><c> within</c><00:13:27.200><c> the</c>

00:13:27.350 --> 00:13:27.360 align:start position:0%
identification for each row within the
 

00:13:27.360 --> 00:13:28.230 align:start position:0%
identification for each row within the
table

00:13:28.230 --> 00:13:28.240 align:start position:0%
table
 

00:13:28.240 --> 00:13:30.389 align:start position:0%
table
cassandra's<00:13:28.959><c> primary</c><00:13:29.440><c> keys</c><00:13:29.839><c> uniquely</c>

00:13:30.389 --> 00:13:30.399 align:start position:0%
cassandra's primary keys uniquely
 

00:13:30.399 --> 00:13:32.629 align:start position:0%
cassandra's primary keys uniquely
identify<00:13:31.040><c> rows</c><00:13:31.440><c> of</c><00:13:31.519><c> data</c>

00:13:32.629 --> 00:13:32.639 align:start position:0%
identify rows of data
 

00:13:32.639 --> 00:13:35.829 align:start position:0%
identify rows of data
in<00:13:32.720><c> this</c><00:13:32.959><c> example</c><00:13:33.600><c> we</c><00:13:33.760><c> see</c><00:13:34.079><c> a</c><00:13:34.240><c> uuid</c><00:13:35.200><c> used</c><00:13:35.519><c> as</c><00:13:35.760><c> a</c>

00:13:35.829 --> 00:13:35.839 align:start position:0%
in this example we see a uuid used as a
 

00:13:35.839 --> 00:13:38.389 align:start position:0%
in this example we see a uuid used as a
partition<00:13:36.320><c> key</c><00:13:36.639><c> to</c><00:13:36.800><c> uniquely</c><00:13:37.440><c> identify</c><00:13:38.079><c> each</c>

00:13:38.389 --> 00:13:38.399 align:start position:0%
partition key to uniquely identify each
 

00:13:38.399 --> 00:13:40.389 align:start position:0%
partition key to uniquely identify each
user<00:13:38.800><c> in</c><00:13:38.959><c> our</c><00:13:39.120><c> users</c><00:13:39.519><c> table</c>

00:13:40.389 --> 00:13:40.399 align:start position:0%
user in our users table
 

00:13:40.399 --> 00:13:42.870 align:start position:0%
user in our users table
however<00:13:41.120><c> a</c><00:13:41.279><c> partition</c><00:13:41.760><c> key</c><00:13:42.000><c> alone</c><00:13:42.480><c> is</c><00:13:42.639><c> not</c>

00:13:42.870 --> 00:13:42.880 align:start position:0%
however a partition key alone is not
 

00:13:42.880 --> 00:13:45.430 align:start position:0%
however a partition key alone is not
enough<00:13:43.200><c> to</c><00:13:43.360><c> ensure</c><00:13:43.839><c> uniqueness</c><00:13:44.399><c> of</c><00:13:44.560><c> a</c><00:13:44.639><c> row</c>

00:13:45.430 --> 00:13:45.440 align:start position:0%
enough to ensure uniqueness of a row
 

00:13:45.440 --> 00:13:47.910 align:start position:0%
enough to ensure uniqueness of a row
it<00:13:45.600><c> is</c><00:13:45.760><c> the</c><00:13:45.920><c> primary</c><00:13:46.399><c> key</c><00:13:46.720><c> clause</c><00:13:47.200><c> as</c><00:13:47.440><c> a</c><00:13:47.519><c> whole</c>

00:13:47.910 --> 00:13:47.920 align:start position:0%
it is the primary key clause as a whole
 

00:13:47.920 --> 00:13:49.750 align:start position:0%
it is the primary key clause as a whole
that<00:13:48.160><c> determines</c><00:13:48.720><c> uniqueness</c><00:13:49.279><c> of</c><00:13:49.440><c> a</c><00:13:49.519><c> row</c>

00:13:49.750 --> 00:13:49.760 align:start position:0%
that determines uniqueness of a row
 

00:13:49.760 --> 00:13:52.230 align:start position:0%
that determines uniqueness of a row
within<00:13:50.079><c> a</c><00:13:50.160><c> partition</c>

00:13:52.230 --> 00:13:52.240 align:start position:0%
within a partition
 

00:13:52.240 --> 00:13:54.550 align:start position:0%
within a partition
the<00:13:52.399><c> cql</c><00:13:52.880><c> select</c><00:13:53.200><c> command</c><00:13:53.680><c> is</c><00:13:53.839><c> used</c><00:13:54.160><c> to</c><00:13:54.320><c> read</c>

00:13:54.550 --> 00:13:54.560 align:start position:0%
the cql select command is used to read
 

00:13:54.560 --> 00:13:56.790 align:start position:0%
the cql select command is used to read
data<00:13:54.880><c> from</c><00:13:55.040><c> cassandra</c><00:13:55.600><c> tables</c>

00:13:56.790 --> 00:13:56.800 align:start position:0%
data from cassandra tables
 

00:13:56.800 --> 00:13:58.870 align:start position:0%
data from cassandra tables
selecting<00:13:57.360><c> all</c><00:13:57.519><c> the</c><00:13:57.680><c> rows</c><00:13:58.079><c> of</c><00:13:58.240><c> the</c><00:13:58.399><c> table</c>

00:13:58.870 --> 00:13:58.880 align:start position:0%
selecting all the rows of the table
 

00:13:58.880 --> 00:14:00.550 align:start position:0%
selecting all the rows of the table
using<00:13:59.120><c> an</c><00:13:59.279><c> asterisk</c><00:13:59.680><c> notation</c><00:14:00.240><c> causes</c>

00:14:00.550 --> 00:14:00.560 align:start position:0%
using an asterisk notation causes
 

00:14:00.560 --> 00:14:03.269 align:start position:0%
using an asterisk notation causes
cassandra<00:14:01.040><c> to</c><00:14:01.120><c> perform</c><00:14:01.519><c> a</c><00:14:01.680><c> full</c><00:14:02.160><c> table</c><00:14:02.480><c> scan</c>

00:14:03.269 --> 00:14:03.279 align:start position:0%
cassandra to perform a full table scan
 

00:14:03.279 --> 00:14:04.949 align:start position:0%
cassandra to perform a full table scan
this<00:14:03.519><c> could</c><00:14:03.680><c> be</c><00:14:03.839><c> very</c><00:14:04.079><c> expensive</c><00:14:04.560><c> on</c><00:14:04.639><c> a</c><00:14:04.720><c> table</c>

00:14:04.949 --> 00:14:04.959 align:start position:0%
this could be very expensive on a table
 

00:14:04.959 --> 00:14:07.030 align:start position:0%
this could be very expensive on a table
with<00:14:05.120><c> a</c><00:14:05.279><c> large</c><00:14:05.600><c> number</c><00:14:05.839><c> of</c><00:14:06.000><c> rows</c>

00:14:07.030 --> 00:14:07.040 align:start position:0%
with a large number of rows
 

00:14:07.040 --> 00:14:09.590 align:start position:0%
with a large number of rows
instead<00:14:07.760><c> use</c><00:14:08.000><c> the</c><00:14:08.160><c> limit</c><00:14:08.480><c> keyword</c><00:14:09.040><c> to</c><00:14:09.199><c> get</c><00:14:09.440><c> a</c>

00:14:09.590 --> 00:14:09.600 align:start position:0%
instead use the limit keyword to get a
 

00:14:09.600 --> 00:14:11.590 align:start position:0%
instead use the limit keyword to get a
subset<00:14:10.160><c> of</c><00:14:10.240><c> the</c><00:14:10.399><c> rows</c>

00:14:11.590 --> 00:14:11.600 align:start position:0%
subset of the rows
 

00:14:11.600 --> 00:14:13.430 align:start position:0%
subset of the rows
cassandra<00:14:12.160><c> also</c><00:14:12.399><c> supports</c><00:14:12.800><c> a</c><00:14:13.040><c> paging</c>

00:14:13.430 --> 00:14:13.440 align:start position:0%
cassandra also supports a paging
 

00:14:13.440 --> 00:14:15.350 align:start position:0%
cassandra also supports a paging
mechanism<00:14:14.000><c> which</c><00:14:14.240><c> indicates</c><00:14:14.800><c> specific</c>

00:14:15.350 --> 00:14:15.360 align:start position:0%
mechanism which indicates specific
 

00:14:15.360 --> 00:14:18.069 align:start position:0%
mechanism which indicates specific
columns<00:14:15.760><c> we</c><00:14:16.000><c> desire</c><00:14:16.399><c> to</c><00:14:16.560><c> read</c><00:14:16.880><c> by</c><00:14:17.199><c> name</c><00:14:17.680><c> or</c>

00:14:18.069 --> 00:14:18.079 align:start position:0%
columns we desire to read by name or
 

00:14:18.079 --> 00:14:19.990 align:start position:0%
columns we desire to read by name or
uses<00:14:18.399><c> the</c><00:14:18.560><c> asterisks</c><00:14:19.040><c> to</c><00:14:19.199><c> indicate</c><00:14:19.680><c> all</c>

00:14:19.990 --> 00:14:20.000 align:start position:0%
uses the asterisks to indicate all
 

00:14:20.000 --> 00:14:21.189 align:start position:0%
uses the asterisks to indicate all
columns

00:14:21.189 --> 00:14:21.199 align:start position:0%
columns
 

00:14:21.199 --> 00:14:23.189 align:start position:0%
columns
cassandra<00:14:21.839><c> also</c><00:14:22.079><c> supports</c><00:14:22.560><c> a</c><00:14:22.720><c> couple</c><00:14:23.040><c> of</c>

00:14:23.189 --> 00:14:23.199 align:start position:0%
cassandra also supports a couple of
 

00:14:23.199 --> 00:14:25.350 align:start position:0%
cassandra also supports a couple of
built-in<00:14:23.760><c> aggregation</c><00:14:24.399><c> functions</c><00:14:24.880><c> such</c><00:14:25.199><c> as</c>

00:14:25.350 --> 00:14:25.360 align:start position:0%
built-in aggregation functions such as
 

00:14:25.360 --> 00:14:26.949 align:start position:0%
built-in aggregation functions such as
the<00:14:25.600><c> count</c><00:14:25.920><c> function</c>

00:14:26.949 --> 00:14:26.959 align:start position:0%
the count function
 

00:14:26.959 --> 00:14:28.870 align:start position:0%
the count function
for<00:14:27.199><c> counts</c><00:14:27.519><c> on</c><00:14:27.600><c> larger</c><00:14:27.920><c> tables</c><00:14:28.399><c> you</c><00:14:28.560><c> may</c><00:14:28.720><c> want</c>

00:14:28.870 --> 00:14:28.880 align:start position:0%
for counts on larger tables you may want
 

00:14:28.880 --> 00:14:31.030 align:start position:0%
for counts on larger tables you may want
to<00:14:29.040><c> consider</c><00:14:29.440><c> using</c><00:14:29.680><c> the</c><00:14:29.920><c> spark</c><00:14:30.240><c> part</c><00:14:30.560><c> of</c><00:14:30.720><c> disk</c>

00:14:31.030 --> 00:14:31.040 align:start position:0%
to consider using the spark part of disk
 

00:14:31.040 --> 00:14:32.790 align:start position:0%
to consider using the spark part of disk
analytics

00:14:32.790 --> 00:14:32.800 align:start position:0%
analytics
 

00:14:32.800 --> 00:14:34.389 align:start position:0%
analytics
another<00:14:33.120><c> command</c><00:14:33.440><c> you'll</c><00:14:33.600><c> find</c><00:14:33.839><c> useful</c><00:14:34.240><c> is</c>

00:14:34.389 --> 00:14:34.399 align:start position:0%
another command you'll find useful is
 

00:14:34.399 --> 00:14:35.990 align:start position:0%
another command you'll find useful is
the<00:14:34.480><c> truncate</c><00:14:35.040><c> command</c>

00:14:35.990 --> 00:14:36.000 align:start position:0%
the truncate command
 

00:14:36.000 --> 00:14:37.829 align:start position:0%
the truncate command
this<00:14:36.240><c> command</c><00:14:36.639><c> causes</c><00:14:37.040><c> all</c><00:14:37.279><c> rows</c><00:14:37.600><c> to</c><00:14:37.680><c> be</c>

00:14:37.829 --> 00:14:37.839 align:start position:0%
this command causes all rows to be
 

00:14:37.839 --> 00:14:39.509 align:start position:0%
this command causes all rows to be
deleted<00:14:38.240><c> from</c><00:14:38.399><c> a</c><00:14:38.560><c> table</c><00:14:38.880><c> while</c><00:14:39.120><c> leaving</c><00:14:39.360><c> the</c>

00:14:39.509 --> 00:14:39.519 align:start position:0%
deleted from a table while leaving the
 

00:14:39.519 --> 00:14:41.189 align:start position:0%
deleted from a table while leaving the
schema<00:14:40.000><c> in</c><00:14:40.160><c> place</c>

00:14:41.189 --> 00:14:41.199 align:start position:0%
schema in place
 

00:14:41.199 --> 00:14:43.110 align:start position:0%
schema in place
this<00:14:41.440><c> command</c><00:14:41.920><c> should</c><00:14:42.160><c> obviously</c><00:14:42.720><c> be</c><00:14:42.880><c> used</c>

00:14:43.110 --> 00:14:43.120 align:start position:0%
this command should obviously be used
 

00:14:43.120 --> 00:14:44.870 align:start position:0%
this command should obviously be used
with<00:14:43.360><c> care</c><00:14:43.680><c> as</c><00:14:43.839><c> the</c><00:14:44.000><c> data</c><00:14:44.240><c> is</c><00:14:44.399><c> removed</c><00:14:44.720><c> from</c>

00:14:44.870 --> 00:14:44.880 align:start position:0%
with care as the data is removed from
 

00:14:44.880 --> 00:14:46.629 align:start position:0%
with care as the data is removed from
persistent<00:14:45.440><c> storage</c><00:14:45.920><c> and</c><00:14:46.160><c> you</c><00:14:46.240><c> would</c><00:14:46.399><c> have</c><00:14:46.560><c> to</c>

00:14:46.629 --> 00:14:46.639 align:start position:0%
persistent storage and you would have to
 

00:14:46.639 --> 00:14:49.350 align:start position:0%
persistent storage and you would have to
restore<00:14:47.040><c> it</c><00:14:47.120><c> from</c><00:14:47.279><c> a</c><00:14:47.360><c> backup</c><00:14:47.839><c> to</c><00:14:48.160><c> retrieve</c><00:14:48.639><c> it</c>

00:14:49.350 --> 00:14:49.360 align:start position:0%
restore it from a backup to retrieve it
 

00:14:49.360 --> 00:14:51.509 align:start position:0%
restore it from a backup to retrieve it
truncate<00:14:49.839><c> sends</c><00:14:50.079><c> a</c><00:14:50.160><c> jmx</c><00:14:50.639><c> command</c><00:14:51.040><c> to</c><00:14:51.279><c> all</c>

00:14:51.509 --> 00:14:51.519 align:start position:0%
truncate sends a jmx command to all
 

00:14:51.519 --> 00:14:53.829 align:start position:0%
truncate sends a jmx command to all
nodes<00:14:51.839><c> to</c><00:14:52.000><c> delete</c><00:14:52.480><c> ss</c><00:14:52.959><c> tables</c><00:14:53.279><c> that</c><00:14:53.440><c> hold</c><00:14:53.680><c> the</c>

00:14:53.829 --> 00:14:53.839 align:start position:0%
nodes to delete ss tables that hold the
 

00:14:53.839 --> 00:14:54.710 align:start position:0%
nodes to delete ss tables that hold the
data

00:14:54.710 --> 00:14:54.720 align:start position:0%
data
 

00:14:54.720 --> 00:14:56.310 align:start position:0%
data
if<00:14:54.959><c> any</c><00:14:55.120><c> of</c><00:14:55.199><c> these</c><00:14:55.360><c> nodes</c><00:14:55.680><c> are</c><00:14:55.839><c> down</c><00:14:56.160><c> the</c>

00:14:56.310 --> 00:14:56.320 align:start position:0%
if any of these nodes are down the
 

00:14:56.320 --> 00:14:58.870 align:start position:0%
if any of these nodes are down the
command<00:14:56.720><c> will</c><00:14:56.880><c> fail</c><00:14:58.160><c> while</c><00:14:58.399><c> working</c><00:14:58.720><c> with</c>

00:14:58.870 --> 00:14:58.880 align:start position:0%
command will fail while working with
 

00:14:58.880 --> 00:15:00.790 align:start position:0%
command will fail while working with
cassandra<00:14:59.519><c> you'll</c><00:14:59.760><c> most</c><00:15:00.000><c> likely</c><00:15:00.320><c> encounter</c>

00:15:00.790 --> 00:15:00.800 align:start position:0%
cassandra you'll most likely encounter
 

00:15:00.800 --> 00:15:02.470 align:start position:0%
cassandra you'll most likely encounter
situations<00:15:01.440><c> when</c><00:15:01.600><c> you'll</c><00:15:01.839><c> need</c><00:15:02.000><c> to</c><00:15:02.160><c> make</c>

00:15:02.470 --> 00:15:02.480 align:start position:0%
situations when you'll need to make
 

00:15:02.480 --> 00:15:04.310 align:start position:0%
situations when you'll need to make
changes<00:15:02.880><c> to</c><00:15:03.040><c> your</c><00:15:03.199><c> table</c>

00:15:04.310 --> 00:15:04.320 align:start position:0%
changes to your table
 

00:15:04.320 --> 00:15:06.069 align:start position:0%
changes to your table
this<00:15:04.560><c> is</c><00:15:04.639><c> where</c><00:15:04.880><c> the</c><00:15:05.120><c> altered</c><00:15:05.440><c> table</c><00:15:05.760><c> command</c>

00:15:06.069 --> 00:15:06.079 align:start position:0%
this is where the altered table command
 

00:15:06.079 --> 00:15:07.670 align:start position:0%
this is where the altered table command
comes<00:15:06.399><c> into</c><00:15:06.639><c> play</c>

00:15:07.670 --> 00:15:07.680 align:start position:0%
comes into play
 

00:15:07.680 --> 00:15:09.750 align:start position:0%
comes into play
you<00:15:07.839><c> can</c><00:15:08.000><c> change</c><00:15:08.240><c> the</c><00:15:08.399><c> data</c><00:15:08.639><c> type</c><00:15:08.880><c> of</c><00:15:09.040><c> a</c><00:15:09.120><c> column</c>

00:15:09.750 --> 00:15:09.760 align:start position:0%
you can change the data type of a column
 

00:15:09.760 --> 00:15:13.110 align:start position:0%
you can change the data type of a column
add<00:15:10.000><c> columns</c><00:15:10.880><c> drop</c><00:15:11.199><c> columns</c><00:15:12.000><c> rename</c><00:15:12.399><c> columns</c>

00:15:13.110 --> 00:15:13.120 align:start position:0%
add columns drop columns rename columns
 

00:15:13.120 --> 00:15:15.189 align:start position:0%
add columns drop columns rename columns
and<00:15:13.360><c> change</c><00:15:13.680><c> table</c><00:15:14.079><c> properties</c><00:15:14.800><c> but</c><00:15:14.959><c> you</c>

00:15:15.189 --> 00:15:15.199 align:start position:0%
and change table properties but you
 

00:15:15.199 --> 00:15:17.269 align:start position:0%
and change table properties but you
cannot<00:15:15.760><c> change</c><00:15:16.079><c> the</c><00:15:16.240><c> columns</c><00:15:16.639><c> in</c><00:15:16.720><c> a</c><00:15:16.880><c> primary</c>

00:15:17.269 --> 00:15:17.279 align:start position:0%
cannot change the columns in a primary
 

00:15:17.279 --> 00:15:18.629 align:start position:0%
cannot change the columns in a primary
key<00:15:17.519><c> clause</c>

00:15:18.629 --> 00:15:18.639 align:start position:0%
key clause
 

00:15:18.639 --> 00:15:20.389 align:start position:0%
key clause
here's<00:15:18.880><c> an</c><00:15:19.040><c> example</c><00:15:19.440><c> code</c><00:15:19.680><c> for</c><00:15:19.920><c> adding</c><00:15:20.240><c> and</c>

00:15:20.389 --> 00:15:20.399 align:start position:0%
here's an example code for adding and
 

00:15:20.399 --> 00:15:22.870 align:start position:0%
here's an example code for adding and
dropping<00:15:20.800><c> columns</c><00:15:21.120><c> from</c><00:15:21.279><c> a</c><00:15:21.360><c> table</c>

00:15:22.870 --> 00:15:22.880 align:start position:0%
dropping columns from a table
 

00:15:22.880 --> 00:15:24.389 align:start position:0%
dropping columns from a table
the<00:15:23.040><c> last</c><00:15:23.279><c> command</c><00:15:23.600><c> is</c><00:15:23.760><c> the</c><00:15:23.839><c> source</c><00:15:24.079><c> command</c>

00:15:24.389 --> 00:15:24.399 align:start position:0%
the last command is the source command
 

00:15:24.399 --> 00:15:26.949 align:start position:0%
the last command is the source command
which<00:15:24.639><c> allows</c><00:15:24.959><c> you</c><00:15:25.120><c> to</c><00:15:25.279><c> execute</c><00:15:25.760><c> a</c><00:15:26.000><c> set</c><00:15:26.240><c> of</c><00:15:26.399><c> cql</c>

00:15:26.949 --> 00:15:26.959 align:start position:0%
which allows you to execute a set of cql
 

00:15:26.959 --> 00:15:28.870 align:start position:0%
which allows you to execute a set of cql
statements<00:15:27.360><c> from</c><00:15:27.600><c> a</c><00:15:27.839><c> file</c>

00:15:28.870 --> 00:15:28.880 align:start position:0%
statements from a file
 

00:15:28.880 --> 00:15:30.629 align:start position:0%
statements from a file
to<00:15:29.120><c> execute</c><00:15:29.600><c> a</c><00:15:29.760><c> source</c><00:15:30.000><c> command</c><00:15:30.320><c> you'll</c><00:15:30.480><c> want</c>

00:15:30.629 --> 00:15:30.639 align:start position:0%
to execute a source command you'll want
 

00:15:30.639 --> 00:15:33.110 align:start position:0%
to execute a source command you'll want
to<00:15:30.720><c> put</c><00:15:30.880><c> the</c><00:15:31.040><c> file</c><00:15:31.360><c> name</c><00:15:31.600><c> in</c><00:15:31.760><c> single</c><00:15:32.079><c> quotes</c>

00:15:33.110 --> 00:15:33.120 align:start position:0%
to put the file name in single quotes
 

00:15:33.120 --> 00:15:35.430 align:start position:0%
to put the file name in single quotes
cqlsh<00:15:34.000><c> will</c><00:15:34.160><c> output</c><00:15:34.480><c> the</c><00:15:34.560><c> results</c><00:15:35.040><c> of</c><00:15:35.199><c> each</c>

00:15:35.430 --> 00:15:35.440 align:start position:0%
cqlsh will output the results of each
 

00:15:35.440 --> 00:15:39.509 align:start position:0%
cqlsh will output the results of each
command<00:15:35.839><c> sequentially</c><00:15:36.480><c> as</c><00:15:36.720><c> it</c><00:15:36.880><c> executes</c>

00:15:39.509 --> 00:15:39.519 align:start position:0%
 
 

00:15:39.519 --> 00:15:42.550 align:start position:0%
 
upon<00:15:40.079><c> completing</c><00:15:40.639><c> this</c><00:15:40.959><c> topic</c><00:15:41.839><c> you</c><00:15:42.079><c> will</c><00:15:42.320><c> be</c>

00:15:42.550 --> 00:15:42.560 align:start position:0%
upon completing this topic you will be
 

00:15:42.560 --> 00:15:44.150 align:start position:0%
upon completing this topic you will be
able<00:15:42.959><c> to</c>

00:15:44.150 --> 00:15:44.160 align:start position:0%
able to
 

00:15:44.160 --> 00:15:46.710 align:start position:0%
able to
learn<00:15:44.480><c> about</c><00:15:44.880><c> the</c><00:15:45.040><c> basic</c><00:15:45.600><c> concepts</c><00:15:46.560><c> of</c>

00:15:46.710 --> 00:15:46.720 align:start position:0%
learn about the basic concepts of
 

00:15:46.720 --> 00:15:50.470 align:start position:0%
learn about the basic concepts of
partitions<00:15:48.079><c> table</c><00:15:48.480><c> partitions</c><00:15:49.759><c> partition</c>

00:15:50.470 --> 00:15:50.480 align:start position:0%
partitions table partitions partition
 

00:15:50.480 --> 00:15:53.350 align:start position:0%
partitions table partitions partition
ordering<00:15:51.360><c> partition</c><00:15:52.240><c> distribution</c><00:15:53.199><c> and</c>

00:15:53.350 --> 00:15:53.360 align:start position:0%
ordering partition distribution and
 

00:15:53.360 --> 00:15:56.150 align:start position:0%
ordering partition distribution and
partition<00:15:54.079><c> storage</c>

00:15:56.150 --> 00:15:56.160 align:start position:0%
partition storage
 

00:15:56.160 --> 00:15:58.949 align:start position:0%
partition storage
to<00:15:56.320><c> truly</c><00:15:56.800><c> understand</c><00:15:57.600><c> the</c><00:15:57.680><c> data</c><00:15:58.079><c> modeling</c>

00:15:58.949 --> 00:15:58.959 align:start position:0%
to truly understand the data modeling
 

00:15:58.959 --> 00:16:02.629 align:start position:0%
to truly understand the data modeling
you<00:15:59.279><c> must</c><00:15:59.759><c> master</c><00:16:00.320><c> partitioning</c><00:16:01.040><c> concepts</c>

00:16:02.629 --> 00:16:02.639 align:start position:0%
you must master partitioning concepts
 

00:16:02.639 --> 00:16:05.110 align:start position:0%
you must master partitioning concepts
partitions<00:16:03.440><c> give</c><00:16:03.600><c> you</c><00:16:03.839><c> an</c><00:16:04.000><c> indication</c><00:16:04.959><c> of</c>

00:16:05.110 --> 00:16:05.120 align:start position:0%
partitions give you an indication of
 

00:16:05.120 --> 00:16:08.150 align:start position:0%
partitions give you an indication of
where<00:16:05.279><c> your</c><00:16:05.519><c> data</c><00:16:06.000><c> is</c><00:16:06.480><c> in</c><00:16:06.639><c> your</c><00:16:06.800><c> data</c><00:16:07.199><c> model</c><00:16:07.920><c> as</c>

00:16:08.150 --> 00:16:08.160 align:start position:0%
where your data is in your data model as
 

00:16:08.160 --> 00:16:10.790 align:start position:0%
where your data is in your data model as
well<00:16:08.399><c> as</c><00:16:08.720><c> in</c><00:16:08.880><c> the</c><00:16:09.040><c> cluster</c>

00:16:10.790 --> 00:16:10.800 align:start position:0%
well as in the cluster
 

00:16:10.800 --> 00:16:12.710 align:start position:0%
well as in the cluster
we<00:16:10.959><c> will</c><00:16:11.199><c> go</c><00:16:11.519><c> through</c><00:16:11.920><c> some</c><00:16:12.079><c> of</c><00:16:12.240><c> these</c>

00:16:12.710 --> 00:16:12.720 align:start position:0%
we will go through some of these
 

00:16:12.720 --> 00:16:14.790 align:start position:0%
we will go through some of these
concepts<00:16:13.600><c> in</c><00:16:13.839><c> depth</c>

00:16:14.790 --> 00:16:14.800 align:start position:0%
concepts in depth
 

00:16:14.800 --> 00:16:17.670 align:start position:0%
concepts in depth
partitions<00:16:15.759><c> partition</c><00:16:16.399><c> keys</c><00:16:17.040><c> composite</c>

00:16:17.670 --> 00:16:17.680 align:start position:0%
partitions partition keys composite
 

00:16:17.680 --> 00:16:21.990 align:start position:0%
partitions partition keys composite
partition<00:16:18.320><c> keys</c><00:16:18.800><c> and</c><00:16:19.040><c> clustering</c><00:16:19.839><c> columns</c>

00:16:21.990 --> 00:16:22.000 align:start position:0%
partition keys and clustering columns
 

00:16:22.000 --> 00:16:23.990 align:start position:0%
partition keys and clustering columns
here<00:16:22.320><c> are</c><00:16:22.480><c> two</c><00:16:22.720><c> commands</c><00:16:23.360><c> that</c><00:16:23.600><c> can</c><00:16:23.759><c> be</c>

00:16:23.990 --> 00:16:24.000 align:start position:0%
here are two commands that can be
 

00:16:24.000 --> 00:16:28.069 align:start position:0%
here are two commands that can be
executed<00:16:25.040><c> on</c><00:16:25.360><c> a</c><00:16:25.920><c> relational</c><00:16:26.639><c> database</c><00:16:27.839><c> as</c>

00:16:28.069 --> 00:16:28.079 align:start position:0%
executed on a relational database as
 

00:16:28.079 --> 00:16:30.710 align:start position:0%
executed on a relational database as
well<00:16:28.320><c> as</c><00:16:28.560><c> on</c><00:16:28.720><c> apache</c><00:16:29.279><c> cassandra</c>

00:16:30.710 --> 00:16:30.720 align:start position:0%
well as on apache cassandra
 

00:16:30.720 --> 00:16:32.790 align:start position:0%
well as on apache cassandra
in<00:16:30.880><c> a</c><00:16:31.040><c> relational</c><00:16:31.759><c> world</c><00:16:32.079><c> these</c><00:16:32.399><c> queries</c>

00:16:32.790 --> 00:16:32.800 align:start position:0%
in a relational world these queries
 

00:16:32.800 --> 00:16:35.350 align:start position:0%
in a relational world these queries
should<00:16:33.120><c> work</c><00:16:33.440><c> on</c><00:16:33.600><c> a</c><00:16:33.680><c> video</c><00:16:34.079><c> table</c><00:16:34.639><c> because</c><00:16:35.120><c> of</c>

00:16:35.350 --> 00:16:35.360 align:start position:0%
should work on a video table because of
 

00:16:35.360 --> 00:16:37.030 align:start position:0%
should work on a video table because of
joins

00:16:37.030 --> 00:16:37.040 align:start position:0%
joins
 

00:16:37.040 --> 00:16:41.350 align:start position:0%
joins
here<00:16:37.519><c> common</c><00:16:37.920><c> queries</c><00:16:38.720><c> are</c><00:16:39.440><c> title</c><00:16:40.000><c> equals</c><00:16:40.959><c> and</c>

00:16:41.350 --> 00:16:41.360 align:start position:0%
here common queries are title equals and
 

00:16:41.360 --> 00:16:44.389 align:start position:0%
here common queries are title equals and
added<00:16:41.839><c> date</c><00:16:42.240><c> is</c><00:16:42.720><c> less</c><00:16:43.040><c> than</c>

00:16:44.389 --> 00:16:44.399 align:start position:0%
added date is less than
 

00:16:44.399 --> 00:16:47.189 align:start position:0%
added date is less than
if<00:16:44.560><c> you</c><00:16:44.720><c> run</c><00:16:44.959><c> this</c><00:16:45.279><c> in</c><00:16:45.440><c> a</c><00:16:45.519><c> cassandra</c><00:16:46.240><c> database</c>

00:16:47.189 --> 00:16:47.199 align:start position:0%
if you run this in a cassandra database
 

00:16:47.199 --> 00:16:50.629 align:start position:0%
if you run this in a cassandra database
the<00:16:47.360><c> output</c><00:16:47.839><c> appears</c><00:16:48.320><c> as</c><00:16:48.399><c> an</c><00:16:48.639><c> invalid</c><00:16:49.199><c> request</c>

00:16:50.629 --> 00:16:50.639 align:start position:0%
the output appears as an invalid request
 

00:16:50.639 --> 00:16:52.870 align:start position:0%
the output appears as an invalid request
this<00:16:50.880><c> is</c><00:16:51.040><c> because</c><00:16:51.600><c> the</c><00:16:51.839><c> partition</c><00:16:52.480><c> keys</c>

00:16:52.870 --> 00:16:52.880 align:start position:0%
this is because the partition keys
 

00:16:52.880 --> 00:16:55.269 align:start position:0%
this is because the partition keys
absent<00:16:53.519><c> from</c><00:16:53.759><c> the</c><00:16:53.920><c> equality</c><00:16:54.639><c> clause</c><00:16:55.040><c> of</c><00:16:55.199><c> the</c>

00:16:55.269 --> 00:16:55.279 align:start position:0%
absent from the equality clause of the
 

00:16:55.279 --> 00:16:58.150 align:start position:0%
absent from the equality clause of the
search<00:16:55.680><c> expression</c><00:16:56.800><c> these</c><00:16:57.120><c> commands</c><00:16:57.759><c> fail</c>

00:16:58.150 --> 00:16:58.160 align:start position:0%
search expression these commands fail
 

00:16:58.160 --> 00:17:01.269 align:start position:0%
search expression these commands fail
because<00:16:58.639><c> joins</c><00:16:59.040><c> are</c><00:16:59.199><c> not</c><00:16:59.519><c> supported</c>

00:17:01.269 --> 00:17:01.279 align:start position:0%
because joins are not supported
 

00:17:01.279 --> 00:17:03.670 align:start position:0%
because joins are not supported
you've<00:17:01.600><c> already</c><00:17:02.079><c> seen</c><00:17:02.560><c> the</c><00:17:02.800><c> structure</c><00:17:03.360><c> of</c><00:17:03.440><c> the</c>

00:17:03.670 --> 00:17:03.680 align:start position:0%
you've already seen the structure of the
 

00:17:03.680 --> 00:17:07.750 align:start position:0%
you've already seen the structure of the
storage<00:17:04.480><c> engine</c><00:17:05.199><c> in</c><00:17:05.760><c> lesson</c><00:17:06.319><c> two</c>

00:17:07.750 --> 00:17:07.760 align:start position:0%
storage engine in lesson two
 

00:17:07.760 --> 00:17:10.549 align:start position:0%
storage engine in lesson two
this<00:17:08.079><c> diagram</c><00:17:08.640><c> demonstrates</c><00:17:09.600><c> how</c><00:17:09.919><c> the</c><00:17:10.079><c> data</c>

00:17:10.549 --> 00:17:10.559 align:start position:0%
this diagram demonstrates how the data
 

00:17:10.559 --> 00:17:13.350 align:start position:0%
this diagram demonstrates how the data
is<00:17:10.720><c> translated</c><00:17:11.679><c> from</c><00:17:11.919><c> the</c><00:17:12.079><c> storage</c><00:17:12.720><c> engine</c>

00:17:13.350 --> 00:17:13.360 align:start position:0%
is translated from the storage engine
 

00:17:13.360 --> 00:17:16.630 align:start position:0%
is translated from the storage engine
into<00:17:13.760><c> a</c><00:17:14.280><c> cql</c><00:17:15.439><c> table</c>

00:17:16.630 --> 00:17:16.640 align:start position:0%
into a cql table
 

00:17:16.640 --> 00:17:19.669 align:start position:0%
into a cql table
when<00:17:16.880><c> used</c><00:17:17.400><c> programmatically</c><00:17:18.799><c> that</c><00:17:19.039><c> is</c><00:17:19.439><c> when</c>

00:17:19.669 --> 00:17:19.679 align:start position:0%
when used programmatically that is when
 

00:17:19.679 --> 00:17:22.630 align:start position:0%
when used programmatically that is when
we<00:17:19.839><c> select</c><00:17:20.240><c> data</c><00:17:20.640><c> from</c><00:17:20.959><c> the</c><00:17:21.199><c> table</c><00:17:22.000><c> we</c><00:17:22.240><c> see</c><00:17:22.480><c> it</c>

00:17:22.630 --> 00:17:22.640 align:start position:0%
we select data from the table we see it
 

00:17:22.640 --> 00:17:25.750 align:start position:0%
we select data from the table we see it
in<00:17:22.799><c> rows</c><00:17:23.280><c> and</c><00:17:23.520><c> columns</c><00:17:24.400><c> just</c><00:17:24.720><c> like</c><00:17:24.959><c> we</c><00:17:25.199><c> use</c><00:17:25.600><c> in</c>

00:17:25.750 --> 00:17:25.760 align:start position:0%
in rows and columns just like we use in
 

00:17:25.760 --> 00:17:27.630 align:start position:0%
in rows and columns just like we use in
our<00:17:25.919><c> application</c>

00:17:27.630 --> 00:17:27.640 align:start position:0%
our application
 

00:17:27.640 --> 00:17:30.870 align:start position:0%
our application
determination<00:17:28.720><c> of</c><00:17:28.799><c> the</c><00:17:28.960><c> partition</c><00:17:29.679><c> key</c><00:17:30.240><c> is</c><00:17:30.720><c> a</c>

00:17:30.870 --> 00:17:30.880 align:start position:0%
determination of the partition key is a
 

00:17:30.880 --> 00:17:32.549 align:start position:0%
determination of the partition key is a
critical<00:17:31.360><c> step</c>

00:17:32.549 --> 00:17:32.559 align:start position:0%
critical step
 

00:17:32.559 --> 00:17:35.190 align:start position:0%
critical step
if<00:17:32.720><c> you</c><00:17:32.799><c> look</c><00:17:33.039><c> at</c><00:17:33.200><c> this</c><00:17:33.440><c> diagram</c><00:17:34.080><c> closely</c><00:17:35.039><c> we</c>

00:17:35.190 --> 00:17:35.200 align:start position:0%
if you look at this diagram closely we
 

00:17:35.200 --> 00:17:39.029 align:start position:0%
if you look at this diagram closely we
have<00:17:35.600><c> the</c><00:17:35.760><c> primary</c><00:17:36.480><c> key</c><00:17:37.200><c> as</c><00:17:37.520><c> the</c><00:17:37.760><c> id</c>

00:17:39.029 --> 00:17:39.039 align:start position:0%
have the primary key as the id
 

00:17:39.039 --> 00:17:41.590 align:start position:0%
have the primary key as the id
there<00:17:39.280><c> is</c><00:17:39.440><c> just</c><00:17:39.760><c> one</c><00:17:40.160><c> column</c><00:17:40.640><c> in</c><00:17:40.720><c> the</c><00:17:40.960><c> primary</c>

00:17:41.590 --> 00:17:41.600 align:start position:0%
there is just one column in the primary
 

00:17:41.600 --> 00:17:42.710 align:start position:0%
there is just one column in the primary
key

00:17:42.710 --> 00:17:42.720 align:start position:0%
key
 

00:17:42.720 --> 00:17:45.350 align:start position:0%
key
the<00:17:42.960><c> partition</c><00:17:43.600><c> key</c><00:17:43.840><c> is</c><00:17:44.080><c> always</c><00:17:44.640><c> the</c><00:17:44.880><c> first</c>

00:17:45.350 --> 00:17:45.360 align:start position:0%
the partition key is always the first
 

00:17:45.360 --> 00:17:50.950 align:start position:0%
the partition key is always the first
value<00:17:46.320><c> in</c><00:17:46.559><c> the</c><00:17:46.799><c> primary</c><00:17:47.520><c> key</c>

00:17:50.950 --> 00:17:50.960 align:start position:0%
 
 

00:17:50.960 --> 00:17:53.590 align:start position:0%
 
this<00:17:51.280><c> module</c><00:17:51.840><c> will</c><00:17:52.080><c> cover</c><00:17:52.400><c> the</c><00:17:52.640><c> basics</c><00:17:53.280><c> of</c><00:17:53.520><c> a</c>

00:17:53.590 --> 00:17:53.600 align:start position:0%
this module will cover the basics of a
 

00:17:53.600 --> 00:17:55.830 align:start position:0%
this module will cover the basics of a
cassandra<00:17:54.320><c> data</c><00:17:54.720><c> model</c>

00:17:55.830 --> 00:17:55.840 align:start position:0%
cassandra data model
 

00:17:55.840 --> 00:17:58.630 align:start position:0%
cassandra data model
upon<00:17:56.320><c> completion</c><00:17:57.039><c> of</c><00:17:57.120><c> this</c><00:17:57.440><c> module</c><00:17:58.160><c> you</c><00:17:58.320><c> will</c>

00:17:58.630 --> 00:17:58.640 align:start position:0%
upon completion of this module you will
 

00:17:58.640 --> 00:18:02.070 align:start position:0%
upon completion of this module you will
be<00:17:58.880><c> able</c><00:17:59.120><c> to</c><00:18:00.320><c> explore</c><00:18:01.120><c> the</c><00:18:01.360><c> concept</c><00:18:01.919><c> of</c>

00:18:02.070 --> 00:18:02.080 align:start position:0%
be able to explore the concept of
 

00:18:02.080 --> 00:18:04.390 align:start position:0%
be able to explore the concept of
denormalization

00:18:04.390 --> 00:18:04.400 align:start position:0%
denormalization
 

00:18:04.400 --> 00:18:07.830 align:start position:0%
denormalization
and<00:18:05.039><c> investigate</c><00:18:06.080><c> collection</c><00:18:06.960><c> counters</c><00:18:07.679><c> and</c>

00:18:07.830 --> 00:18:07.840 align:start position:0%
and investigate collection counters and
 

00:18:07.840 --> 00:18:11.990 align:start position:0%
and investigate collection counters and
user<00:18:08.240><c> defined</c><00:18:09.120><c> data</c><00:18:09.520><c> types</c>

00:18:11.990 --> 00:18:12.000 align:start position:0%
user defined data types
 

00:18:12.000 --> 00:18:14.950 align:start position:0%
user defined data types
upon<00:18:12.480><c> completing</c><00:18:13.120><c> this</c><00:18:13.440><c> topic</c><00:18:14.240><c> you</c><00:18:14.480><c> will</c><00:18:14.720><c> be</c>

00:18:14.950 --> 00:18:14.960 align:start position:0%
upon completing this topic you will be
 

00:18:14.960 --> 00:18:16.470 align:start position:0%
upon completing this topic you will be
able<00:18:15.200><c> to</c>

00:18:16.470 --> 00:18:16.480 align:start position:0%
able to
 

00:18:16.480 --> 00:18:18.789 align:start position:0%
able to
explain<00:18:17.200><c> how</c><00:18:17.520><c> joints</c><00:18:18.000><c> are</c><00:18:18.240><c> used</c><00:18:18.640><c> in</c>

00:18:18.789 --> 00:18:18.799 align:start position:0%
explain how joints are used in
 

00:18:18.799 --> 00:18:21.430 align:start position:0%
explain how joints are used in
relational<00:18:19.440><c> data</c><00:18:19.840><c> modeling</c>

00:18:21.430 --> 00:18:21.440 align:start position:0%
relational data modeling
 

00:18:21.440 --> 00:18:24.630 align:start position:0%
relational data modeling
relay<00:18:21.919><c> the</c><00:18:22.160><c> concept</c><00:18:22.880><c> of</c><00:18:23.039><c> denormalization</c>

00:18:24.630 --> 00:18:24.640 align:start position:0%
relay the concept of denormalization
 

00:18:24.640 --> 00:18:28.150 align:start position:0%
relay the concept of denormalization
used<00:18:25.120><c> by</c><00:18:25.520><c> cassandra</c>

00:18:28.150 --> 00:18:28.160 align:start position:0%
used by cassandra
 

00:18:28.160 --> 00:18:30.070 align:start position:0%
used by cassandra
you<00:18:28.400><c> have</c><00:18:28.640><c> already</c><00:18:29.200><c> learned</c><00:18:29.760><c> that</c><00:18:30.000><c> the</c>

00:18:30.070 --> 00:18:30.080 align:start position:0%
you have already learned that the
 

00:18:30.080 --> 00:18:33.669 align:start position:0%
you have already learned that the
relational<00:18:31.039><c> data</c><00:18:31.440><c> model</c><00:18:31.919><c> supports</c><00:18:32.880><c> joins</c><00:18:33.520><c> and</c>

00:18:33.669 --> 00:18:33.679 align:start position:0%
relational data model supports joins and
 

00:18:33.679 --> 00:18:36.789 align:start position:0%
relational data model supports joins and
apache<00:18:34.160><c> cassandra</c><00:18:34.799><c> supports</c><00:18:35.720><c> denormalized</c>

00:18:36.789 --> 00:18:36.799 align:start position:0%
apache cassandra supports denormalized
 

00:18:36.799 --> 00:18:38.390 align:start position:0%
apache cassandra supports denormalized
tables

00:18:38.390 --> 00:18:38.400 align:start position:0%
tables
 

00:18:38.400 --> 00:18:41.190 align:start position:0%
tables
here<00:18:38.720><c> you</c><00:18:38.880><c> see</c><00:18:39.200><c> three</c><00:18:39.520><c> tables</c><00:18:40.160><c> named</c><00:18:40.559><c> videos</c>

00:18:41.190 --> 00:18:41.200 align:start position:0%
here you see three tables named videos
 

00:18:41.200 --> 00:18:43.510 align:start position:0%
here you see three tables named videos
users<00:18:41.760><c> and</c><00:18:42.000><c> comments</c>

00:18:43.510 --> 00:18:43.520 align:start position:0%
users and comments
 

00:18:43.520 --> 00:18:47.669 align:start position:0%
users and comments
each<00:18:43.840><c> table</c><00:18:44.320><c> has</c><00:18:44.559><c> unique</c><00:18:45.360><c> information</c><00:18:46.320><c> in</c><00:18:46.559><c> it</c>

00:18:47.669 --> 00:18:47.679 align:start position:0%
each table has unique information in it
 

00:18:47.679 --> 00:18:51.270 align:start position:0%
each table has unique information in it
this<00:18:47.919><c> is</c><00:18:48.080><c> a</c><00:18:48.240><c> typical</c><00:18:49.120><c> relational</c><00:18:49.919><c> example</c>

00:18:51.270 --> 00:18:51.280 align:start position:0%
this is a typical relational example
 

00:18:51.280 --> 00:18:53.510 align:start position:0%
this is a typical relational example
we're<00:18:51.440><c> going</c><00:18:51.600><c> to</c><00:18:51.679><c> make</c><00:18:52.000><c> all</c><00:18:52.320><c> these</c><00:18:53.200><c> work</c>

00:18:53.510 --> 00:18:53.520 align:start position:0%
we're going to make all these work
 

00:18:53.520 --> 00:18:56.630 align:start position:0%
we're going to make all these work
together<00:18:54.240><c> by</c><00:18:54.480><c> running</c><00:18:54.880><c> a</c><00:18:55.039><c> join</c><00:18:55.440><c> query</c><00:18:56.160><c> to</c><00:18:56.320><c> see</c>

00:18:56.630 --> 00:18:56.640 align:start position:0%
together by running a join query to see
 

00:18:56.640 --> 00:18:59.430 align:start position:0%
together by running a join query to see
how<00:18:56.799><c> they</c><00:18:57.039><c> can</c><00:18:57.200><c> be</c><00:18:57.440><c> used</c><00:18:58.000><c> in</c><00:18:58.160><c> relation</c><00:18:58.880><c> to</c><00:18:59.120><c> each</c>

00:18:59.430 --> 00:18:59.440 align:start position:0%
how they can be used in relation to each
 

00:18:59.440 --> 00:19:01.430 align:start position:0%
how they can be used in relation to each
other

00:19:01.430 --> 00:19:01.440 align:start position:0%
other
 

00:19:01.440 --> 00:19:05.350 align:start position:0%
other
join<00:19:01.919><c> query</c><00:19:02.880><c> joins</c><00:19:03.440><c> two</c><00:19:03.760><c> tables</c><00:19:04.320><c> to</c><00:19:04.480><c> work</c><00:19:04.960><c> as</c>

00:19:05.350 --> 00:19:05.360 align:start position:0%
join query joins two tables to work as
 

00:19:05.360 --> 00:19:06.789 align:start position:0%
join query joins two tables to work as
one

00:19:06.789 --> 00:19:06.799 align:start position:0%
one
 

00:19:06.799 --> 00:19:09.270 align:start position:0%
one
let's<00:19:07.120><c> assume</c><00:19:07.760><c> that</c><00:19:07.919><c> you</c><00:19:08.160><c> want</c><00:19:08.400><c> to</c><00:19:08.640><c> find</c><00:19:09.039><c> some</c>

00:19:09.270 --> 00:19:09.280 align:start position:0%
let's assume that you want to find some
 

00:19:09.280 --> 00:19:12.070 align:start position:0%
let's assume that you want to find some
comments<00:19:10.000><c> for</c><00:19:10.160><c> a</c><00:19:10.320><c> particular</c><00:19:10.960><c> movie</c>

00:19:12.070 --> 00:19:12.080 align:start position:0%
comments for a particular movie
 

00:19:12.080 --> 00:19:14.789 align:start position:0%
comments for a particular movie
the<00:19:12.320><c> first</c><00:19:12.640><c> table</c><00:19:13.200><c> titled</c><00:19:13.760><c> videos</c><00:19:14.400><c> store</c>

00:19:14.789 --> 00:19:14.799 align:start position:0%
the first table titled videos store
 

00:19:14.799 --> 00:19:17.669 align:start position:0%
the first table titled videos store
details<00:19:15.440><c> of</c><00:19:15.600><c> videos</c><00:19:16.400><c> and</c><00:19:16.559><c> the</c><00:19:16.799><c> second</c><00:19:17.200><c> table</c>

00:19:17.669 --> 00:19:17.679 align:start position:0%
details of videos and the second table
 

00:19:17.679 --> 00:19:21.669 align:start position:0%
details of videos and the second table
comment<00:19:18.400><c> stores</c><00:19:19.039><c> comments</c><00:19:19.679><c> made</c><00:19:20.000><c> by</c><00:19:20.720><c> users</c><00:19:21.440><c> on</c>

00:19:21.669 --> 00:19:21.679 align:start position:0%
comment stores comments made by users on
 

00:19:21.679 --> 00:19:23.669 align:start position:0%
comment stores comments made by users on
all<00:19:21.840><c> the</c><00:19:22.000><c> videos</c>

00:19:23.669 --> 00:19:23.679 align:start position:0%
all the videos
 

00:19:23.679 --> 00:19:26.549 align:start position:0%
all the videos
we<00:19:23.840><c> need</c><00:19:24.000><c> to</c><00:19:24.240><c> find</c><00:19:24.799><c> a</c><00:19:25.039><c> particular</c><00:19:25.760><c> entry</c><00:19:26.320><c> which</c>

00:19:26.549 --> 00:19:26.559 align:start position:0%
we need to find a particular entry which
 

00:19:26.559 --> 00:19:28.870 align:start position:0%
we need to find a particular entry which
has<00:19:26.720><c> all</c><00:19:26.960><c> the</c><00:19:27.120><c> data</c><00:19:27.520><c> collected</c><00:19:28.160><c> from</c><00:19:28.400><c> both</c><00:19:28.720><c> the</c>

00:19:28.870 --> 00:19:28.880 align:start position:0%
has all the data collected from both the
 

00:19:28.880 --> 00:19:30.390 align:start position:0%
has all the data collected from both the
tables

00:19:30.390 --> 00:19:30.400 align:start position:0%
tables
 

00:19:30.400 --> 00:19:32.710 align:start position:0%
tables
let's<00:19:30.720><c> say</c><00:19:30.960><c> we</c><00:19:31.120><c> are</c><00:19:31.280><c> searching</c><00:19:31.760><c> for</c><00:19:32.000><c> a</c><00:19:32.160><c> comment</c>

00:19:32.710 --> 00:19:32.720 align:start position:0%
let's say we are searching for a comment
 

00:19:32.720 --> 00:19:34.870 align:start position:0%
let's say we are searching for a comment
from<00:19:32.960><c> the</c><00:19:33.120><c> videos</c><00:19:33.679><c> table</c>

00:19:34.870 --> 00:19:34.880 align:start position:0%
from the videos table
 

00:19:34.880 --> 00:19:37.669 align:start position:0%
from the videos table
how<00:19:35.200><c> do</c><00:19:35.440><c> we</c><00:19:35.919><c> access</c><00:19:36.559><c> the</c><00:19:36.720><c> comment</c><00:19:37.280><c> from</c><00:19:37.440><c> the</c>

00:19:37.669 --> 00:19:37.679 align:start position:0%
how do we access the comment from the
 

00:19:37.679 --> 00:19:40.630 align:start position:0%
how do we access the comment from the
comment<00:19:38.160><c> table</c><00:19:38.799><c> if</c><00:19:39.039><c> you</c><00:19:39.200><c> just</c><00:19:39.679><c> have</c><00:19:40.000><c> the</c><00:19:40.160><c> video</c>

00:19:40.630 --> 00:19:40.640 align:start position:0%
comment table if you just have the video
 

00:19:40.640 --> 00:19:42.789 align:start position:0%
comment table if you just have the video
with<00:19:40.880><c> us</c>

00:19:42.789 --> 00:19:42.799 align:start position:0%
with us
 

00:19:42.799 --> 00:19:46.470 align:start position:0%
with us
this<00:19:43.039><c> is</c><00:19:43.280><c> possible</c><00:19:44.000><c> using</c><00:19:44.400><c> the</c><00:19:44.720><c> join</c><00:19:45.200><c> query</c>

00:19:46.470 --> 00:19:46.480 align:start position:0%
this is possible using the join query
 

00:19:46.480 --> 00:19:48.470 align:start position:0%
this is possible using the join query
they<00:19:46.559><c> are</c><00:19:46.720><c> often</c><00:19:47.200><c> used</c><00:19:47.600><c> by</c><00:19:47.840><c> relational</c>

00:19:48.470 --> 00:19:48.480 align:start position:0%
they are often used by relational
 

00:19:48.480 --> 00:19:51.750 align:start position:0%
they are often used by relational
databases<00:19:49.440><c> to</c><00:19:49.760><c> organize</c><00:19:50.480><c> data</c>

00:19:51.750 --> 00:19:51.760 align:start position:0%
databases to organize data
 

00:19:51.760 --> 00:19:54.230 align:start position:0%
databases to organize data
the<00:19:51.919><c> two</c><00:19:52.240><c> tables</c><00:19:52.799><c> shown</c><00:19:53.280><c> previously</c><00:19:54.000><c> are</c>

00:19:54.230 --> 00:19:54.240 align:start position:0%
the two tables shown previously are
 

00:19:54.240 --> 00:19:57.510 align:start position:0%
the two tables shown previously are
joined<00:19:55.120><c> and</c><00:19:55.280><c> this</c><00:19:55.520><c> is</c><00:19:55.679><c> how</c><00:19:55.919><c> the</c><00:19:56.320><c> output</c><00:19:57.120><c> looks</c>

00:19:57.510 --> 00:19:57.520 align:start position:0%
joined and this is how the output looks
 

00:19:57.520 --> 00:19:59.029 align:start position:0%
joined and this is how the output looks
like

00:19:59.029 --> 00:19:59.039 align:start position:0%
like
 

00:19:59.039 --> 00:20:01.350 align:start position:0%
like
the<00:19:59.280><c> tables</c><00:19:59.840><c> are</c><00:20:00.000><c> merged</c><00:20:00.480><c> with</c><00:20:00.640><c> the</c><00:20:00.799><c> help</c><00:20:01.200><c> of</c>

00:20:01.350 --> 00:20:01.360 align:start position:0%
the tables are merged with the help of
 

00:20:01.360 --> 00:20:04.150 align:start position:0%
the tables are merged with the help of
the<00:20:01.520><c> video</c><00:20:02.080><c> id</c><00:20:02.480><c> specified</c><00:20:03.440><c> in</c><00:20:03.600><c> both</c><00:20:03.919><c> the</c>

00:20:04.150 --> 00:20:04.160 align:start position:0%
the video id specified in both the
 

00:20:04.160 --> 00:20:05.590 align:start position:0%
the video id specified in both the
tables

00:20:05.590 --> 00:20:05.600 align:start position:0%
tables
 

00:20:05.600 --> 00:20:10.070 align:start position:0%
tables
that<00:20:05.919><c> is</c><00:20:06.160><c> how</c><00:20:06.799><c> relational</c><00:20:07.600><c> databases</c><00:20:08.640><c> work</c>

00:20:10.070 --> 00:20:10.080 align:start position:0%
that is how relational databases work
 

00:20:10.080 --> 00:20:14.950 align:start position:0%
that is how relational databases work
in<00:20:10.320><c> the</c><00:20:10.559><c> code</c><00:20:11.280><c> the</c><00:20:11.520><c> title</c><00:20:12.000><c> is</c><00:20:12.559><c> interstellar</c>

00:20:14.950 --> 00:20:14.960 align:start position:0%
in the code the title is interstellar
 

00:20:14.960 --> 00:20:17.430 align:start position:0%
in the code the title is interstellar
the<00:20:15.600><c> select</c><00:20:16.080><c> statement</c><00:20:16.799><c> in</c><00:20:16.960><c> the</c><00:20:17.039><c> given</c>

00:20:17.430 --> 00:20:17.440 align:start position:0%
the select statement in the given
 

00:20:17.440 --> 00:20:19.990 align:start position:0%
the select statement in the given
transaction<00:20:18.559><c> selects</c><00:20:19.120><c> the</c><00:20:19.520><c> columns</c>

00:20:19.990 --> 00:20:20.000 align:start position:0%
transaction selects the columns
 

00:20:20.000 --> 00:20:22.789 align:start position:0%
transaction selects the columns
specified<00:20:21.120><c> from</c><00:20:21.280><c> the</c><00:20:21.520><c> output</c><00:20:21.919><c> of</c><00:20:22.080><c> the</c><00:20:22.240><c> join</c>

00:20:22.789 --> 00:20:22.799 align:start position:0%
specified from the output of the join
 

00:20:22.799 --> 00:20:25.909 align:start position:0%
specified from the output of the join
command<00:20:23.520><c> and</c><00:20:23.760><c> the</c><00:20:24.000><c> bear</c><00:20:24.320><c> statement</c><00:20:24.799><c> specifies</c>

00:20:25.909 --> 00:20:25.919 align:start position:0%
command and the bear statement specifies
 

00:20:25.919 --> 00:20:28.870 align:start position:0%
command and the bear statement specifies
which<00:20:26.320><c> values</c><00:20:27.120><c> to</c><00:20:27.760><c> select</c><00:20:28.320><c> from</c><00:20:28.640><c> the</c>

00:20:28.870 --> 00:20:28.880 align:start position:0%
which values to select from the
 

00:20:28.880 --> 00:20:31.270 align:start position:0%
which values to select from the
specified<00:20:29.840><c> column</c>

00:20:31.270 --> 00:20:31.280 align:start position:0%
specified column
 

00:20:31.280 --> 00:20:34.470 align:start position:0%
specified column
now<00:20:31.520><c> this</c><00:20:31.760><c> can</c><00:20:31.919><c> be</c><00:20:32.159><c> used</c><00:20:32.640><c> to</c><00:20:32.799><c> do</c><00:20:33.039><c> a</c><00:20:33.440><c> join</c><00:20:34.000><c> on</c><00:20:34.159><c> two</c>

00:20:34.470 --> 00:20:34.480 align:start position:0%
now this can be used to do a join on two
 

00:20:34.480 --> 00:20:38.310 align:start position:0%
now this can be used to do a join on two
tables<00:20:35.440><c> and</c><00:20:35.600><c> get</c><00:20:35.919><c> comments</c><00:20:36.640><c> for</c><00:20:37.360><c> that</c><00:20:37.919><c> one</c>

00:20:38.310 --> 00:20:38.320 align:start position:0%
tables and get comments for that one
 

00:20:38.320 --> 00:20:39.510 align:start position:0%
tables and get comments for that one
title

00:20:39.510 --> 00:20:39.520 align:start position:0%
title
 

00:20:39.520 --> 00:20:40.909 align:start position:0%
title
this<00:20:39.840><c> is</c><00:20:40.000><c> how</c>

00:20:40.909 --> 00:20:40.919 align:start position:0%
this is how
 

00:20:40.919 --> 00:20:43.990 align:start position:0%
this is how
rdbms<00:20:42.000><c> or</c><00:20:42.159><c> relational</c><00:20:42.799><c> databases</c><00:20:43.840><c> are</c>

00:20:43.990 --> 00:20:44.000 align:start position:0%
rdbms or relational databases are
 

00:20:44.000 --> 00:20:45.830 align:start position:0%
rdbms or relational databases are
designed

00:20:45.830 --> 00:20:45.840 align:start position:0%
designed
 

00:20:45.840 --> 00:20:48.070 align:start position:0%
designed
in<00:20:45.919><c> the</c><00:20:46.159><c> output</c><00:20:46.559><c> of</c><00:20:46.640><c> this</c><00:20:46.960><c> transaction</c><00:20:47.919><c> we</c>

00:20:48.070 --> 00:20:48.080 align:start position:0%
in the output of this transaction we
 

00:20:48.080 --> 00:20:50.789 align:start position:0%
in the output of this transaction we
will<00:20:48.320><c> get</c><00:20:48.799><c> the</c><00:20:49.039><c> comments</c><00:20:50.000><c> of</c><00:20:50.159><c> the</c><00:20:50.320><c> video</c>

00:20:50.789 --> 00:20:50.799 align:start position:0%
will get the comments of the video
 

00:20:50.799 --> 00:20:53.270 align:start position:0%
will get the comments of the video
titled<00:20:51.520><c> interstellar</c>

00:20:53.270 --> 00:20:53.280 align:start position:0%
titled interstellar
 

00:20:53.280 --> 00:20:55.750 align:start position:0%
titled interstellar
that<00:20:53.520><c> is</c><00:20:53.679><c> how</c><00:20:54.000><c> the</c><00:20:54.159><c> relational</c><00:20:54.799><c> databases</c>

00:20:55.750 --> 00:20:55.760 align:start position:0%
that is how the relational databases
 

00:20:55.760 --> 00:20:59.510 align:start position:0%
that is how the relational databases
were<00:20:56.400><c> designed</c><00:20:57.200><c> to</c><00:20:57.360><c> be</c><00:20:57.600><c> used</c><00:20:58.480><c> having</c><00:20:58.880><c> multiple</c>

00:20:59.510 --> 00:20:59.520 align:start position:0%
were designed to be used having multiple
 

00:20:59.520 --> 00:21:02.630 align:start position:0%
were designed to be used having multiple
tables<00:21:00.240><c> and</c><00:21:00.400><c> then</c><00:21:00.720><c> using</c><00:21:01.120><c> queries</c><00:21:01.760><c> to</c><00:21:02.080><c> merge</c>

00:21:02.630 --> 00:21:02.640 align:start position:0%
tables and then using queries to merge
 

00:21:02.640 --> 00:21:05.669 align:start position:0%
tables and then using queries to merge
and<00:21:02.880><c> bring</c><00:21:03.360><c> outputs</c>

00:21:05.669 --> 00:21:05.679 align:start position:0%
and bring outputs
 

00:21:05.679 --> 00:21:07.990 align:start position:0%
and bring outputs
you've<00:21:05.919><c> just</c><00:21:06.320><c> learned</c><00:21:06.880><c> how</c><00:21:07.120><c> the</c><00:21:07.280><c> relational</c>

00:21:07.990 --> 00:21:08.000 align:start position:0%
you've just learned how the relational
 

00:21:08.000 --> 00:21:11.110 align:start position:0%
you've just learned how the relational
data<00:21:08.320><c> model</c><00:21:08.880><c> works</c><00:21:09.280><c> with</c><00:21:09.520><c> joins</c>

00:21:11.110 --> 00:21:11.120 align:start position:0%
data model works with joins
 

00:21:11.120 --> 00:21:13.830 align:start position:0%
data model works with joins
now<00:21:11.360><c> it's</c><00:21:11.600><c> time</c><00:21:11.919><c> to</c><00:21:12.159><c> see</c><00:21:12.480><c> how</c><00:21:12.720><c> cassandra</c><00:21:13.360><c> works</c>

00:21:13.830 --> 00:21:13.840 align:start position:0%
now it's time to see how cassandra works
 

00:21:13.840 --> 00:21:16.070 align:start position:0%
now it's time to see how cassandra works
without<00:21:14.320><c> joins</c>

00:21:16.070 --> 00:21:16.080 align:start position:0%
without joins
 

00:21:16.080 --> 00:21:19.350 align:start position:0%
without joins
let's<00:21:16.400><c> look</c><00:21:16.640><c> at</c><00:21:16.799><c> these</c><00:21:17.039><c> two</c><00:21:17.360><c> tables</c><00:21:18.000><c> closely</c>

00:21:19.350 --> 00:21:19.360 align:start position:0%
let's look at these two tables closely
 

00:21:19.360 --> 00:21:21.990 align:start position:0%
let's look at these two tables closely
they<00:21:19.600><c> look</c><00:21:19.840><c> similar</c><00:21:20.400><c> but</c><00:21:20.640><c> the</c><00:21:20.799><c> primary</c><00:21:21.440><c> key</c><00:21:21.760><c> is</c>

00:21:21.990 --> 00:21:22.000 align:start position:0%
they look similar but the primary key is
 

00:21:22.000 --> 00:21:24.230 align:start position:0%
they look similar but the primary key is
different<00:21:22.559><c> for</c><00:21:22.799><c> both</c>

00:21:24.230 --> 00:21:24.240 align:start position:0%
different for both
 

00:21:24.240 --> 00:21:27.270 align:start position:0%
different for both
in<00:21:24.400><c> the</c><00:21:24.559><c> first</c><00:21:24.960><c> table</c><00:21:25.520><c> comments</c><00:21:26.080><c> by</c><00:21:26.400><c> video</c><00:21:27.120><c> the</c>

00:21:27.270 --> 00:21:27.280 align:start position:0%
in the first table comments by video the
 

00:21:27.280 --> 00:21:29.909 align:start position:0%
in the first table comments by video the
video<00:21:27.760><c> title</c><00:21:28.320><c> is</c><00:21:28.400><c> the</c><00:21:28.559><c> partition</c><00:21:29.280><c> key</c><00:21:29.600><c> and</c><00:21:29.679><c> the</c>

00:21:29.909 --> 00:21:29.919 align:start position:0%
video title is the partition key and the
 

00:21:29.919 --> 00:21:33.270 align:start position:0%
video title is the partition key and the
comment<00:21:30.400><c> id</c><00:21:30.880><c> is</c><00:21:31.120><c> the</c><00:21:31.280><c> clustering</c><00:21:32.000><c> column</c>

00:21:33.270 --> 00:21:33.280 align:start position:0%
comment id is the clustering column
 

00:21:33.280 --> 00:21:36.710 align:start position:0%
comment id is the clustering column
and<00:21:33.520><c> in</c><00:21:33.679><c> the</c><00:21:33.840><c> second</c><00:21:34.320><c> table</c><00:21:34.960><c> comments</c><00:21:35.440><c> by</c><00:21:35.760><c> user</c>

00:21:36.710 --> 00:21:36.720 align:start position:0%
and in the second table comments by user
 

00:21:36.720 --> 00:21:39.510 align:start position:0%
and in the second table comments by user
the<00:21:36.960><c> user</c><00:21:37.360><c> id</c><00:21:37.760><c> is</c><00:21:37.919><c> the</c><00:21:38.080><c> partition</c><00:21:38.799><c> key</c><00:21:39.200><c> and</c><00:21:39.360><c> the</c>

00:21:39.510 --> 00:21:39.520 align:start position:0%
the user id is the partition key and the
 

00:21:39.520 --> 00:21:42.390 align:start position:0%
the user id is the partition key and the
comment<00:21:40.000><c> id</c><00:21:40.480><c> is</c><00:21:40.720><c> used</c><00:21:41.280><c> as</c><00:21:41.520><c> a</c><00:21:41.600><c> clustering</c>

00:21:42.390 --> 00:21:42.400 align:start position:0%
comment id is used as a clustering
 

00:21:42.400 --> 00:21:43.430 align:start position:0%
comment id is used as a clustering
column

00:21:43.430 --> 00:21:43.440 align:start position:0%
column
 

00:21:43.440 --> 00:21:46.950 align:start position:0%
column
these<00:21:43.760><c> are</c><00:21:44.000><c> the</c><00:21:44.440><c> denormalized</c><00:21:45.520><c> tables</c><00:21:46.480><c> used</c>

00:21:46.950 --> 00:21:46.960 align:start position:0%
these are the denormalized tables used
 

00:21:46.960 --> 00:21:49.990 align:start position:0%
these are the denormalized tables used
in<00:21:47.120><c> cassandra</c><00:21:48.080><c> of</c><00:21:48.240><c> the</c><00:21:48.480><c> same</c><00:21:48.880><c> joins</c><00:21:49.520><c> that</c><00:21:49.760><c> were</c>

00:21:49.990 --> 00:21:50.000 align:start position:0%
in cassandra of the same joins that were
 

00:21:50.000 --> 00:21:53.830 align:start position:0%
in cassandra of the same joins that were
used<00:21:50.480><c> in</c><00:21:50.559><c> the</c><00:21:50.720><c> relational</c><00:21:51.520><c> data</c><00:21:51.919><c> models</c>

00:21:53.830 --> 00:21:53.840 align:start position:0%
used in the relational data models
 

00:21:53.840 --> 00:21:56.230 align:start position:0%
used in the relational data models
upon<00:21:54.320><c> completing</c><00:21:54.960><c> this</c><00:21:55.200><c> topic</c>

00:21:56.230 --> 00:21:56.240 align:start position:0%
upon completing this topic
 

00:21:56.240 --> 00:21:58.950 align:start position:0%
upon completing this topic
you<00:21:56.400><c> will</c><00:21:56.559><c> be</c><00:21:56.799><c> able</c><00:21:57.120><c> to</c><00:21:57.440><c> learn</c><00:21:58.080><c> how</c><00:21:58.320><c> collection</c>

00:21:58.950 --> 00:21:58.960 align:start position:0%
you will be able to learn how collection
 

00:21:58.960 --> 00:22:01.350 align:start position:0%
you will be able to learn how collection
columns<00:21:59.600><c> and</c><00:21:59.760><c> collection</c><00:22:00.320><c> types</c>

00:22:01.350 --> 00:22:01.360 align:start position:0%
columns and collection types
 

00:22:01.360 --> 00:22:03.430 align:start position:0%
columns and collection types
are<00:22:01.919><c> considered</c>

00:22:03.430 --> 00:22:03.440 align:start position:0%
are considered
 

00:22:03.440 --> 00:22:07.830 align:start position:0%
are considered
understand<00:22:04.159><c> how</c><00:22:04.400><c> to</c><00:22:04.640><c> create</c><00:22:05.039><c> and</c><00:22:05.280><c> use</c><00:22:06.000><c> udts</c>

00:22:07.830 --> 00:22:07.840 align:start position:0%
understand how to create and use udts
 

00:22:07.840 --> 00:22:10.710 align:start position:0%
understand how to create and use udts
learn<00:22:08.159><c> about</c><00:22:08.720><c> counters</c>

00:22:10.710 --> 00:22:10.720 align:start position:0%
learn about counters
 

00:22:10.720 --> 00:22:13.430 align:start position:0%
learn about counters
you<00:22:10.960><c> will</c><00:22:11.200><c> now</c><00:22:11.520><c> learn</c><00:22:11.840><c> about</c><00:22:12.559><c> some</c><00:22:12.799><c> additional</c>

00:22:13.430 --> 00:22:13.440 align:start position:0%
you will now learn about some additional
 

00:22:13.440 --> 00:22:16.390 align:start position:0%
you will now learn about some additional
data<00:22:13.840><c> types</c><00:22:14.240><c> supported</c><00:22:14.799><c> by</c><00:22:15.039><c> apache</c><00:22:15.600><c> cassandra</c>

00:22:16.390 --> 00:22:16.400 align:start position:0%
data types supported by apache cassandra
 

00:22:16.400 --> 00:22:18.549 align:start position:0%
data types supported by apache cassandra
for<00:22:16.640><c> efficiency</c>

00:22:18.549 --> 00:22:18.559 align:start position:0%
for efficiency
 

00:22:18.559 --> 00:22:21.590 align:start position:0%
for efficiency
these<00:22:18.880><c> data</c><00:22:19.280><c> types</c><00:22:19.919><c> are</c><00:22:20.080><c> collections</c>

00:22:21.590 --> 00:22:21.600 align:start position:0%
these data types are collections
 

00:22:21.600 --> 00:22:25.909 align:start position:0%
these data types are collections
counters<00:22:22.799><c> and</c><00:22:23.159><c> user-defined</c><00:22:24.480><c> data</c><00:22:24.880><c> types</c><00:22:25.520><c> or</c>

00:22:25.909 --> 00:22:25.919 align:start position:0%
counters and user-defined data types or
 

00:22:25.919 --> 00:22:27.990 align:start position:0%
counters and user-defined data types or
udts

00:22:27.990 --> 00:22:28.000 align:start position:0%
udts
 

00:22:28.000 --> 00:22:32.149 align:start position:0%
udts
these<00:22:28.320><c> data</c><00:22:28.640><c> types</c><00:22:29.120><c> simplify</c><00:22:30.320><c> table</c><00:22:31.120><c> design</c>

00:22:32.149 --> 00:22:32.159 align:start position:0%
these data types simplify table design
 

00:22:32.159 --> 00:22:34.789 align:start position:0%
these data types simplify table design
optimize<00:22:32.880><c> table</c><00:22:33.360><c> functionality</c>

00:22:34.789 --> 00:22:34.799 align:start position:0%
optimize table functionality
 

00:22:34.799 --> 00:22:37.590 align:start position:0%
optimize table functionality
store<00:22:35.280><c> data</c><00:22:35.679><c> more</c><00:22:35.919><c> efficiently</c><00:22:37.120><c> and</c><00:22:37.360><c> might</c>

00:22:37.590 --> 00:22:37.600 align:start position:0%
store data more efficiently and might
 

00:22:37.600 --> 00:22:40.470 align:start position:0%
store data more efficiently and might
even<00:22:38.080><c> change</c><00:22:38.640><c> the</c><00:22:39.120><c> design</c><00:22:39.600><c> of</c><00:22:39.760><c> the</c><00:22:39.919><c> table</c>

00:22:40.470 --> 00:22:40.480 align:start position:0%
even change the design of the table
 

00:22:40.480 --> 00:22:43.590 align:start position:0%
even change the design of the table
completely

00:22:43.590 --> 00:22:43.600 align:start position:0%
 
 

00:22:43.600 --> 00:22:45.510 align:start position:0%
 
now<00:22:43.840><c> you're</c><00:22:44.000><c> going</c><00:22:44.240><c> to</c><00:22:44.480><c> learn</c><00:22:44.880><c> about</c>

00:22:45.510 --> 00:22:45.520 align:start position:0%
now you're going to learn about
 

00:22:45.520 --> 00:22:47.350 align:start position:0%
now you're going to learn about
collections

00:22:47.350 --> 00:22:47.360 align:start position:0%
collections
 

00:22:47.360 --> 00:22:50.630 align:start position:0%
collections
cassandra<00:22:48.159><c> provides</c><00:22:49.120><c> collection</c><00:22:49.760><c> types</c><00:22:50.400><c> to</c>

00:22:50.630 --> 00:22:50.640 align:start position:0%
cassandra provides collection types to
 

00:22:50.640 --> 00:22:53.430 align:start position:0%
cassandra provides collection types to
group<00:22:51.120><c> and</c><00:22:51.360><c> store</c><00:22:51.840><c> data</c><00:22:52.240><c> together</c><00:22:53.120><c> in</c><00:22:53.280><c> a</c>

00:22:53.430 --> 00:22:53.440 align:start position:0%
group and store data together in a
 

00:22:53.440 --> 00:22:55.270 align:start position:0%
group and store data together in a
single<00:22:54.000><c> column</c>

00:22:55.270 --> 00:22:55.280 align:start position:0%
single column
 

00:22:55.280 --> 00:22:58.390 align:start position:0%
single column
take<00:22:55.600><c> for</c><00:22:55.840><c> example</c><00:22:56.640><c> a</c><00:22:56.720><c> relational</c><00:22:57.360><c> database</c>

00:22:58.390 --> 00:22:58.400 align:start position:0%
take for example a relational database
 

00:22:58.400 --> 00:23:01.110 align:start position:0%
take for example a relational database
or<00:22:58.640><c> a</c><00:22:58.720><c> cassandra</c><00:22:59.280><c> database</c><00:23:00.240><c> to</c><00:23:00.400><c> understand</c>

00:23:01.110 --> 00:23:01.120 align:start position:0%
or a cassandra database to understand
 

00:23:01.120 --> 00:23:02.710 align:start position:0%
or a cassandra database to understand
this<00:23:01.440><c> concept</c>

00:23:02.710 --> 00:23:02.720 align:start position:0%
this concept
 

00:23:02.720 --> 00:23:05.510 align:start position:0%
this concept
consider<00:23:03.280><c> that</c><00:23:03.600><c> in</c><00:23:03.760><c> a</c><00:23:03.840><c> relational</c><00:23:04.480><c> database</c>

00:23:05.510 --> 00:23:05.520 align:start position:0%
consider that in a relational database
 

00:23:05.520 --> 00:23:07.750 align:start position:0%
consider that in a relational database
you<00:23:05.760><c> have</c><00:23:05.919><c> to</c><00:23:06.159><c> group</c><00:23:06.640><c> multiple</c><00:23:07.360><c> email</c>

00:23:07.750 --> 00:23:07.760 align:start position:0%
you have to group multiple email
 

00:23:07.760 --> 00:23:10.390 align:start position:0%
you have to group multiple email
addresses<00:23:08.400><c> of</c><00:23:08.559><c> a</c><00:23:08.640><c> user</c><00:23:09.520><c> meaning</c><00:23:10.000><c> there</c><00:23:10.240><c> will</c>

00:23:10.390 --> 00:23:10.400 align:start position:0%
addresses of a user meaning there will
 

00:23:10.400 --> 00:23:13.669 align:start position:0%
addresses of a user meaning there will
be<00:23:10.640><c> a</c><00:23:10.799><c> many</c><00:23:11.200><c> to</c><00:23:11.440><c> one</c><00:23:12.080><c> joint</c><00:23:12.720><c> relationship</c>

00:23:13.669 --> 00:23:13.679 align:start position:0%
be a many to one joint relationship
 

00:23:13.679 --> 00:23:17.590 align:start position:0%
be a many to one joint relationship
between<00:23:14.159><c> a</c><00:23:14.240><c> user</c><00:23:14.640><c> table</c><00:23:15.360><c> and</c><00:23:15.520><c> an</c><00:23:15.760><c> email</c><00:23:16.400><c> table</c>

00:23:17.590 --> 00:23:17.600 align:start position:0%
between a user table and an email table
 

00:23:17.600 --> 00:23:20.950 align:start position:0%
between a user table and an email table
but<00:23:18.159><c> cassandra</c><00:23:19.039><c> awards</c><00:23:19.679><c> joins</c><00:23:20.320><c> between</c><00:23:20.720><c> two</c>

00:23:20.950 --> 00:23:20.960 align:start position:0%
but cassandra awards joins between two
 

00:23:20.960 --> 00:23:23.669 align:start position:0%
but cassandra awards joins between two
tables<00:23:21.600><c> by</c><00:23:21.919><c> storing</c><00:23:22.400><c> the</c><00:23:22.640><c> user's</c><00:23:23.280><c> email</c>

00:23:23.669 --> 00:23:23.679 align:start position:0%
tables by storing the user's email
 

00:23:23.679 --> 00:23:26.149 align:start position:0%
tables by storing the user's email
addresses<00:23:24.320><c> in</c><00:23:24.480><c> a</c><00:23:24.559><c> collection</c><00:23:25.120><c> column</c><00:23:25.760><c> in</c><00:23:26.000><c> the</c>

00:23:26.149 --> 00:23:26.159 align:start position:0%
addresses in a collection column in the
 

00:23:26.159 --> 00:23:27.669 align:start position:0%
addresses in a collection column in the
user<00:23:26.559><c> table</c>

00:23:27.669 --> 00:23:27.679 align:start position:0%
user table
 

00:23:27.679 --> 00:23:30.789 align:start position:0%
user table
each<00:23:28.000><c> collection</c><00:23:28.760><c> specifies</c><00:23:29.840><c> the</c><00:23:30.000><c> data</c><00:23:30.320><c> type</c>

00:23:30.789 --> 00:23:30.799 align:start position:0%
each collection specifies the data type
 

00:23:30.799 --> 00:23:33.270 align:start position:0%
each collection specifies the data type
of<00:23:31.120><c> the</c><00:23:31.280><c> data</c><00:23:31.760><c> held</c>

00:23:33.270 --> 00:23:33.280 align:start position:0%
of the data held
 

00:23:33.280 --> 00:23:36.230 align:start position:0%
of the data held
the<00:23:33.440><c> collection</c><00:23:34.000><c> data</c><00:23:34.400><c> structure</c><00:23:35.280><c> allows</c><00:23:35.919><c> you</c>

00:23:36.230 --> 00:23:36.240 align:start position:0%
the collection data structure allows you
 

00:23:36.240 --> 00:23:39.669 align:start position:0%
the collection data structure allows you
to<00:23:36.559><c> store</c><00:23:37.200><c> multiple</c><00:23:37.840><c> values</c><00:23:38.400><c> in</c><00:23:38.559><c> each</c><00:23:38.880><c> cell</c>

00:23:39.669 --> 00:23:39.679 align:start position:0%
to store multiple values in each cell
 

00:23:39.679 --> 00:23:42.549 align:start position:0%
to store multiple values in each cell
while<00:23:40.159><c> retaining</c><00:23:40.799><c> the</c><00:23:41.039><c> value</c>

00:23:42.549 --> 00:23:42.559 align:start position:0%
while retaining the value
 

00:23:42.559 --> 00:23:46.710 align:start position:0%
while retaining the value
all<00:23:42.960><c> collections</c><00:23:43.760><c> are</c><00:23:44.200><c> multi-valued</c><00:23:45.280><c> columns</c>

00:23:46.710 --> 00:23:46.720 align:start position:0%
all collections are multi-valued columns
 

00:23:46.720 --> 00:23:48.870 align:start position:0%
all collections are multi-valued columns
the<00:23:46.960><c> maximum</c><00:23:47.600><c> number</c><00:23:47.919><c> of</c><00:23:48.080><c> elements</c><00:23:48.640><c> in</c><00:23:48.799><c> a</c>

00:23:48.870 --> 00:23:48.880 align:start position:0%
the maximum number of elements in a
 

00:23:48.880 --> 00:23:52.710 align:start position:0%
the maximum number of elements in a
collection<00:23:49.520><c> is</c><00:23:49.760><c> 64</c><00:23:50.720><c> 000</c><00:23:51.600><c> which</c><00:23:51.919><c> in</c><00:23:52.080><c> practice</c>

00:23:52.710 --> 00:23:52.720 align:start position:0%
collection is 64 000 which in practice
 

00:23:52.720 --> 00:23:55.750 align:start position:0%
collection is 64 000 which in practice
can<00:23:52.880><c> be</c><00:23:53.120><c> dozens</c><00:23:53.679><c> or</c><00:23:53.840><c> even</c><00:23:54.080><c> hundreds</c>

00:23:55.750 --> 00:23:55.760 align:start position:0%
can be dozens or even hundreds
 

00:23:55.760 --> 00:23:58.470 align:start position:0%
can be dozens or even hundreds
collections<00:23:56.559><c> are</c><00:23:56.880><c> designed</c><00:23:57.600><c> to</c><00:23:57.760><c> store</c><00:23:58.240><c> a</c>

00:23:58.470 --> 00:23:58.480 align:start position:0%
collections are designed to store a
 

00:23:58.480 --> 00:24:00.950 align:start position:0%
collections are designed to store a
small<00:23:59.039><c> amount</c><00:23:59.600><c> of</c><00:23:59.760><c> data</c>

00:24:00.950 --> 00:24:00.960 align:start position:0%
small amount of data
 

00:24:00.960 --> 00:24:05.270 align:start position:0%
small amount of data
the<00:24:01.120><c> maximum</c><00:24:02.080><c> size</c><00:24:02.480><c> of</c><00:24:02.559><c> an</c><00:24:02.720><c> element</c><00:24:03.679><c> is</c><00:24:03.919><c> 64</c><00:24:04.799><c> kb</c>

00:24:05.270 --> 00:24:05.280 align:start position:0%
the maximum size of an element is 64 kb
 

00:24:05.280 --> 00:24:07.909 align:start position:0%
the maximum size of an element is 64 kb
which<00:24:05.520><c> in</c><00:24:05.679><c> practice</c><00:24:06.320><c> is</c><00:24:06.559><c> much</c><00:24:06.880><c> smaller</c><00:24:07.679><c> than</c>

00:24:07.909 --> 00:24:07.919 align:start position:0%
which in practice is much smaller than
 

00:24:07.919 --> 00:24:10.950 align:start position:0%
which in practice is much smaller than
the<00:24:08.159><c> number</c><00:24:08.480><c> of</c><00:24:08.640><c> elements</c><00:24:09.360><c> in</c><00:24:09.520><c> collection</c>

00:24:10.950 --> 00:24:10.960 align:start position:0%
the number of elements in collection
 

00:24:10.960 --> 00:24:13.269 align:start position:0%
the number of elements in collection
they<00:24:11.120><c> are</c><00:24:11.360><c> also</c><00:24:12.000><c> retrieved</c><00:24:12.880><c> in</c><00:24:13.039><c> their</c>

00:24:13.269 --> 00:24:13.279 align:start position:0%
they are also retrieved in their
 

00:24:13.279 --> 00:24:14.870 align:start position:0%
they are also retrieved in their
entirety

00:24:14.870 --> 00:24:14.880 align:start position:0%
entirety
 

00:24:14.880 --> 00:24:17.350 align:start position:0%
entirety
a<00:24:15.039><c> collection</c><00:24:15.679><c> column</c><00:24:16.159><c> cannot</c><00:24:16.559><c> be</c><00:24:16.799><c> part</c><00:24:17.120><c> of</c><00:24:17.279><c> a</c>

00:24:17.350 --> 00:24:17.360 align:start position:0%
a collection column cannot be part of a
 

00:24:17.360 --> 00:24:20.549 align:start position:0%
a collection column cannot be part of a
primary<00:24:18.000><c> key</c><00:24:18.640><c> a</c><00:24:18.799><c> partition</c><00:24:19.520><c> key</c><00:24:20.159><c> or</c>

00:24:20.549 --> 00:24:20.559 align:start position:0%
primary key a partition key or
 

00:24:20.559 --> 00:24:23.110 align:start position:0%
primary key a partition key or
clustering<00:24:21.279><c> columns</c>

00:24:23.110 --> 00:24:23.120 align:start position:0%
clustering columns
 

00:24:23.120 --> 00:24:26.710 align:start position:0%
clustering columns
you<00:24:23.360><c> cannot</c><00:24:24.159><c> nest</c><00:24:24.799><c> a</c><00:24:24.880><c> collection</c><00:24:25.840><c> inside</c><00:24:26.559><c> of</c>

00:24:26.710 --> 00:24:26.720 align:start position:0%
you cannot nest a collection inside of
 

00:24:26.720 --> 00:24:28.630 align:start position:0%
you cannot nest a collection inside of
another<00:24:27.120><c> collection</c>

00:24:28.630 --> 00:24:28.640 align:start position:0%
another collection
 

00:24:28.640 --> 00:24:31.590 align:start position:0%
another collection
if<00:24:28.799><c> you</c><00:24:28.960><c> want</c><00:24:29.279><c> to</c><00:24:29.919><c> nest</c><00:24:30.400><c> a</c><00:24:30.480><c> collection</c><00:24:31.120><c> inside</c>

00:24:31.590 --> 00:24:31.600 align:start position:0%
if you want to nest a collection inside
 

00:24:31.600 --> 00:24:32.630 align:start position:0%
if you want to nest a collection inside
another

00:24:32.630 --> 00:24:32.640 align:start position:0%
another
 

00:24:32.640 --> 00:24:36.630 align:start position:0%
another
then<00:24:33.120><c> you</c><00:24:33.360><c> have</c><00:24:33.520><c> to</c><00:24:33.760><c> use</c><00:24:34.159><c> the</c><00:24:34.400><c> keyword</c><00:24:35.360><c> frozen</c>

00:24:36.630 --> 00:24:36.640 align:start position:0%
then you have to use the keyword frozen
 

00:24:36.640 --> 00:24:38.630 align:start position:0%
then you have to use the keyword frozen
more<00:24:37.039><c> on</c><00:24:37.200><c> this</c><00:24:37.520><c> later</c>

00:24:38.630 --> 00:24:38.640 align:start position:0%
more on this later
 

00:24:38.640 --> 00:24:41.110 align:start position:0%
more on this later
there<00:24:38.880><c> are</c><00:24:39.120><c> three</c><00:24:39.600><c> collection</c><00:24:40.240><c> types</c><00:24:40.960><c> in</c>

00:24:41.110 --> 00:24:41.120 align:start position:0%
there are three collection types in
 

00:24:41.120 --> 00:24:42.230 align:start position:0%
there are three collection types in
total

00:24:42.230 --> 00:24:42.240 align:start position:0%
total
 

00:24:42.240 --> 00:24:43.269 align:start position:0%
total
set

00:24:43.269 --> 00:24:43.279 align:start position:0%
set
 

00:24:43.279 --> 00:24:44.230 align:start position:0%
set
list

00:24:44.230 --> 00:24:44.240 align:start position:0%
list
 

00:24:44.240 --> 00:24:46.870 align:start position:0%
list
and<00:24:44.480><c> map</c><00:24:44.880><c> respectively</c>

00:24:46.870 --> 00:24:46.880 align:start position:0%
and map respectively
 

00:24:46.880 --> 00:24:49.110 align:start position:0%
and map respectively
let's<00:24:47.279><c> begin</c><00:24:47.679><c> with</c><00:24:47.840><c> the</c><00:24:48.000><c> first</c><00:24:48.400><c> collection</c>

00:24:49.110 --> 00:24:49.120 align:start position:0%
let's begin with the first collection
 

00:24:49.120 --> 00:24:51.029 align:start position:0%
let's begin with the first collection
type<00:24:49.919><c> set</c>

00:24:51.029 --> 00:24:51.039 align:start position:0%
type set
 

00:24:51.039 --> 00:24:53.350 align:start position:0%
type set
it<00:24:51.200><c> is</c><00:24:51.360><c> a</c><00:24:51.520><c> list</c><00:24:51.919><c> that</c><00:24:52.159><c> stores</c><00:24:52.720><c> the</c><00:24:52.960><c> typed</c>

00:24:53.350 --> 00:24:53.360 align:start position:0%
it is a list that stores the typed
 

00:24:53.360 --> 00:24:56.630 align:start position:0%
it is a list that stores the typed
collection<00:24:54.000><c> of</c><00:24:54.240><c> unique</c><00:24:54.799><c> values</c>

00:24:56.630 --> 00:24:56.640 align:start position:0%
collection of unique values
 

00:24:56.640 --> 00:24:59.909 align:start position:0%
collection of unique values
it<00:24:56.880><c> is</c><00:24:57.039><c> stored</c><00:24:57.679><c> on</c><00:24:57.919><c> order</c><00:24:58.559><c> but</c><00:24:58.799><c> it</c><00:24:59.039><c> gives</c><00:24:59.440><c> back</c>

00:24:59.909 --> 00:24:59.919 align:start position:0%
it is stored on order but it gives back
 

00:24:59.919 --> 00:25:03.029 align:start position:0%
it is stored on order but it gives back
the<00:25:00.080><c> data</c><00:25:00.799><c> in</c><00:25:00.960><c> a</c><00:25:01.120><c> sorted</c><00:25:01.600><c> order</c>

00:25:03.029 --> 00:25:03.039 align:start position:0%
the data in a sorted order
 

00:25:03.039 --> 00:25:06.549 align:start position:0%
the data in a sorted order
let's<00:25:03.760><c> look</c><00:25:04.000><c> at</c><00:25:04.080><c> an</c><00:25:04.320><c> example</c><00:25:04.960><c> of</c><00:25:05.120><c> set</c>

00:25:06.549 --> 00:25:06.559 align:start position:0%
let's look at an example of set
 

00:25:06.559 --> 00:25:09.350 align:start position:0%
let's look at an example of set
here<00:25:06.960><c> a</c><00:25:07.120><c> user's</c><00:25:07.679><c> table</c><00:25:08.240><c> is</c><00:25:08.480><c> created</c><00:25:08.960><c> with</c><00:25:09.200><c> an</c>

00:25:09.350 --> 00:25:09.360 align:start position:0%
here a user's table is created with an
 

00:25:09.360 --> 00:25:12.630 align:start position:0%
here a user's table is created with an
id<00:25:10.159><c> first</c><00:25:10.480><c> name</c><00:25:10.960><c> last</c><00:25:11.440><c> name</c><00:25:11.760><c> and</c><00:25:11.919><c> a</c><00:25:12.080><c> set</c><00:25:12.480><c> of</c>

00:25:12.630 --> 00:25:12.640 align:start position:0%
id first name last name and a set of
 

00:25:12.640 --> 00:25:14.870 align:start position:0%
id first name last name and a set of
email<00:25:13.039><c> addresses</c>

00:25:14.870 --> 00:25:14.880 align:start position:0%
email addresses
 

00:25:14.880 --> 00:25:17.590 align:start position:0%
email addresses
the<00:25:15.039><c> data</c><00:25:15.440><c> type</c><00:25:15.840><c> is</c><00:25:16.000><c> represented</c><00:25:16.799><c> in</c><00:25:17.039><c> angle</c>

00:25:17.590 --> 00:25:17.600 align:start position:0%
the data type is represented in angle
 

00:25:17.600 --> 00:25:21.110 align:start position:0%
the data type is represented in angle
brackets<00:25:18.480><c> so</c><00:25:18.799><c> in</c><00:25:18.960><c> this</c><00:25:19.200><c> example</c><00:25:20.240><c> text</c><00:25:20.720><c> data</c>

00:25:21.110 --> 00:25:21.120 align:start position:0%
brackets so in this example text data
 

00:25:21.120 --> 00:25:23.190 align:start position:0%
brackets so in this example text data
type<00:25:21.440><c> is</c><00:25:21.679><c> used</c>

00:25:23.190 --> 00:25:23.200 align:start position:0%
type is used
 

00:25:23.200 --> 00:25:25.990 align:start position:0%
type is used
after<00:25:23.600><c> that</c><00:25:23.840><c> the</c><00:25:24.080><c> values</c><00:25:24.640><c> are</c><00:25:24.799><c> inserted</c><00:25:25.679><c> into</c>

00:25:25.990 --> 00:25:26.000 align:start position:0%
after that the values are inserted into
 

00:25:26.000 --> 00:25:27.669 align:start position:0%
after that the values are inserted into
the<00:25:26.240><c> table</c>

00:25:27.669 --> 00:25:27.679 align:start position:0%
the table
 

00:25:27.679 --> 00:25:30.549 align:start position:0%
the table
here<00:25:28.159><c> there</c><00:25:28.400><c> are</c><00:25:28.559><c> two</c><00:25:28.960><c> email</c><00:25:29.440><c> addresses</c>

00:25:30.549 --> 00:25:30.559 align:start position:0%
here there are two email addresses
 

00:25:30.559 --> 00:25:33.430 align:start position:0%
here there are two email addresses
because<00:25:31.120><c> it</c><00:25:31.279><c> is</c><00:25:31.520><c> common</c><00:25:32.000><c> for</c><00:25:32.159><c> a</c><00:25:32.320><c> single</c><00:25:32.720><c> user</c>

00:25:33.430 --> 00:25:33.440 align:start position:0%
because it is common for a single user
 

00:25:33.440 --> 00:25:37.029 align:start position:0%
because it is common for a single user
to<00:25:33.600><c> have</c><00:25:34.240><c> two</c><00:25:34.640><c> email</c><00:25:35.120><c> addresses</c>

00:25:37.029 --> 00:25:37.039 align:start position:0%
to have two email addresses
 

00:25:37.039 --> 00:25:40.470 align:start position:0%
to have two email addresses
list<00:25:37.520><c> is</c><00:25:37.760><c> like</c><00:25:38.000><c> a</c><00:25:38.159><c> set</c><00:25:38.960><c> it</c><00:25:39.200><c> groups</c><00:25:39.760><c> and</c><00:25:39.919><c> stores</c>

00:25:40.470 --> 00:25:40.480 align:start position:0%
list is like a set it groups and stores
 

00:25:40.480 --> 00:25:43.350 align:start position:0%
list is like a set it groups and stores
values<00:25:41.120><c> in</c><00:25:41.279><c> a</c><00:25:41.440><c> single</c><00:25:42.000><c> cell</c>

00:25:43.350 --> 00:25:43.360 align:start position:0%
values in a single cell
 

00:25:43.360 --> 00:25:46.310 align:start position:0%
values in a single cell
the<00:25:43.600><c> difference</c><00:25:44.080><c> between</c><00:25:45.039><c> list</c><00:25:45.440><c> and</c><00:25:45.679><c> set</c><00:25:46.159><c> is</c>

00:25:46.310 --> 00:25:46.320 align:start position:0%
the difference between list and set is
 

00:25:46.320 --> 00:25:49.669 align:start position:0%
the difference between list and set is
that<00:25:46.880><c> in</c><00:25:47.120><c> a</c><00:25:47.279><c> list</c><00:25:47.919><c> the</c><00:25:48.159><c> values</c><00:25:48.799><c> does</c><00:25:49.120><c> not</c><00:25:49.440><c> have</c>

00:25:49.669 --> 00:25:49.679 align:start position:0%
that in a list the values does not have
 

00:25:49.679 --> 00:25:53.830 align:start position:0%
that in a list the values does not have
to<00:25:49.840><c> be</c><00:25:50.080><c> unique</c><00:25:50.880><c> and</c><00:25:51.039><c> there</c><00:25:51.360><c> can</c><00:25:51.679><c> be</c><00:25:51.919><c> duplicates</c>

00:25:53.830 --> 00:25:53.840 align:start position:0%
to be unique and there can be duplicates
 

00:25:53.840 --> 00:25:56.789 align:start position:0%
to be unique and there can be duplicates
lists<00:25:54.320><c> are</c><00:25:54.400><c> stored</c><00:25:54.880><c> in</c><00:25:55.039><c> a</c><00:25:55.120><c> particular</c><00:25:56.000><c> order</c>

00:25:56.789 --> 00:25:56.799 align:start position:0%
lists are stored in a particular order
 

00:25:56.799 --> 00:26:00.950 align:start position:0%
lists are stored in a particular order
and<00:25:57.279><c> are</c><00:25:57.520><c> accessed</c><00:25:58.640><c> by</c><00:25:58.880><c> an</c><00:25:59.120><c> index</c>

00:26:00.950 --> 00:26:00.960 align:start position:0%
and are accessed by an index
 

00:26:00.960 --> 00:26:03.830 align:start position:0%
and are accessed by an index
here's<00:26:01.279><c> an</c><00:26:01.440><c> example</c><00:26:02.080><c> of</c><00:26:02.159><c> how</c><00:26:02.400><c> the</c><00:26:02.640><c> users</c><00:26:03.200><c> table</c>

00:26:03.830 --> 00:26:03.840 align:start position:0%
here's an example of how the users table
 

00:26:03.840 --> 00:26:06.870 align:start position:0%
here's an example of how the users table
from<00:26:04.159><c> the</c><00:26:04.400><c> previous</c><00:26:04.880><c> slide</c><00:26:05.440><c> is</c><00:26:05.679><c> altered</c><00:26:06.559><c> to</c>

00:26:06.870 --> 00:26:06.880 align:start position:0%
from the previous slide is altered to
 

00:26:06.880 --> 00:26:11.350 align:start position:0%
from the previous slide is altered to
insert<00:26:07.520><c> a</c><00:26:07.679><c> list</c><00:26:08.240><c> of</c><00:26:08.480><c> frequent</c><00:26:09.039><c> destinations</c>

00:26:11.350 --> 00:26:11.360 align:start position:0%
insert a list of frequent destinations
 

00:26:11.360 --> 00:26:14.470 align:start position:0%
insert a list of frequent destinations
first<00:26:11.600><c> the</c><00:26:11.840><c> table</c><00:26:12.240><c> is</c><00:26:12.400><c> added</c><00:26:12.880><c> to</c><00:26:13.520><c> list</c><00:26:13.919><c> of</c><00:26:14.159><c> text</c>

00:26:14.470 --> 00:26:14.480 align:start position:0%
first the table is added to list of text
 

00:26:14.480 --> 00:26:16.310 align:start position:0%
first the table is added to list of text
data<00:26:14.880><c> types</c>

00:26:16.310 --> 00:26:16.320 align:start position:0%
data types
 

00:26:16.320 --> 00:26:19.750 align:start position:0%
data types
then<00:26:16.559><c> the</c><00:26:16.799><c> user</c><00:26:17.679><c> cas</c><00:26:18.240><c> one</c><00:26:18.559><c> two</c><00:26:18.960><c> three</c><00:26:19.520><c> is</c>

00:26:19.750 --> 00:26:19.760 align:start position:0%
then the user cas one two three is
 

00:26:19.760 --> 00:26:23.190 align:start position:0%
then the user cas one two three is
updated<00:26:20.720><c> and</c><00:26:21.200><c> berlin</c><00:26:21.760><c> london</c><00:26:22.240><c> and</c><00:26:22.400><c> paris</c><00:26:22.960><c> are</c>

00:26:23.190 --> 00:26:23.200 align:start position:0%
updated and berlin london and paris are
 

00:26:23.200 --> 00:26:25.190 align:start position:0%
updated and berlin london and paris are
added<00:26:23.520><c> to</c><00:26:23.679><c> the</c><00:26:23.840><c> list</c>

00:26:25.190 --> 00:26:25.200 align:start position:0%
added to the list
 

00:26:25.200 --> 00:26:28.149 align:start position:0%
added to the list
list<00:26:25.679><c> uses</c><00:26:26.159><c> the</c><00:26:26.320><c> set</c><00:26:26.640><c> command</c><00:26:27.360><c> to</c><00:26:27.600><c> enter</c><00:26:27.919><c> the</c>

00:26:28.149 --> 00:26:28.159 align:start position:0%
list uses the set command to enter the
 

00:26:28.159 --> 00:26:30.950 align:start position:0%
list uses the set command to enter the
values<00:26:28.880><c> for</c><00:26:29.120><c> the</c><00:26:29.520><c> respective</c><00:26:30.320><c> collection</c>

00:26:30.950 --> 00:26:30.960 align:start position:0%
values for the respective collection
 

00:26:30.960 --> 00:26:32.390 align:start position:0%
values for the respective collection
type

00:26:32.390 --> 00:26:32.400 align:start position:0%
type
 

00:26:32.400 --> 00:26:35.990 align:start position:0%
type
map<00:26:32.799><c> is</c><00:26:32.960><c> the</c><00:26:33.200><c> last</c><00:26:33.679><c> of</c><00:26:33.840><c> our</c><00:26:33.919><c> collection</c><00:26:34.480><c> types</c>

00:26:35.990 --> 00:26:36.000 align:start position:0%
map is the last of our collection types
 

00:26:36.000 --> 00:26:39.190 align:start position:0%
map is the last of our collection types
it<00:26:36.159><c> allows</c><00:26:36.559><c> us</c><00:26:36.880><c> to</c><00:26:37.120><c> enter</c><00:26:37.679><c> values</c><00:26:38.720><c> which</c><00:26:38.960><c> are</c>

00:26:39.190 --> 00:26:39.200 align:start position:0%
it allows us to enter values which are
 

00:26:39.200 --> 00:26:42.230 align:start position:0%
it allows us to enter values which are
in<00:26:39.360><c> relation</c><00:26:40.320><c> ship</c><00:26:40.640><c> with</c><00:26:40.880><c> one</c><00:26:41.120><c> another</c><00:26:41.919><c> in</c><00:26:42.159><c> a</c>

00:26:42.230 --> 00:26:42.240 align:start position:0%
in relation ship with one another in a
 

00:26:42.240 --> 00:26:45.029 align:start position:0%
in relation ship with one another in a
key<00:26:42.640><c> value</c><00:26:43.200><c> format</c>

00:26:45.029 --> 00:26:45.039 align:start position:0%
key value format
 

00:26:45.039 --> 00:26:48.149 align:start position:0%
key value format
map<00:26:45.360><c> is</c><00:26:45.600><c> ordered</c><00:26:46.000><c> by</c><00:26:46.400><c> unique</c><00:26:46.880><c> keys</c>

00:26:48.149 --> 00:26:48.159 align:start position:0%
map is ordered by unique keys
 

00:26:48.159 --> 00:26:50.310 align:start position:0%
map is ordered by unique keys
both<00:26:48.480><c> the</c><00:26:48.640><c> key</c><00:26:48.880><c> and</c><00:26:49.039><c> the</c><00:26:49.200><c> value</c><00:26:49.760><c> have</c><00:26:50.080><c> a</c>

00:26:50.310 --> 00:26:50.320 align:start position:0%
both the key and the value have a
 

00:26:50.320 --> 00:26:53.350 align:start position:0%
both the key and the value have a
designated<00:26:51.440><c> data</c><00:26:51.840><c> type</c>

00:26:53.350 --> 00:26:53.360 align:start position:0%
designated data type
 

00:26:53.360 --> 00:26:56.549 align:start position:0%
designated data type
map<00:26:53.760><c> uses</c><00:26:54.159><c> the</c><00:26:54.480><c> set</c><00:26:54.880><c> command</c><00:26:55.600><c> to</c><00:26:56.000><c> enter</c><00:26:56.400><c> the</c>

00:26:56.549 --> 00:26:56.559 align:start position:0%
map uses the set command to enter the
 

00:26:56.559 --> 00:27:00.390 align:start position:0%
map uses the set command to enter the
values<00:26:57.279><c> for</c><00:26:57.760><c> the</c><00:26:58.000><c> map</c><00:26:58.400><c> collection</c><00:26:59.039><c> type</c>

00:27:00.390 --> 00:27:00.400 align:start position:0%
values for the map collection type
 

00:27:00.400 --> 00:27:03.190 align:start position:0%
values for the map collection type
let's<00:27:00.720><c> look</c><00:27:00.960><c> at</c><00:27:01.120><c> an</c><00:27:01.279><c> example</c><00:27:02.000><c> here</c>

00:27:03.190 --> 00:27:03.200 align:start position:0%
let's look at an example here
 

00:27:03.200 --> 00:27:05.590 align:start position:0%
let's look at an example here
here<00:27:03.520><c> the</c><00:27:03.600><c> table</c><00:27:04.080><c> users</c><00:27:04.720><c> have</c><00:27:04.880><c> again</c><00:27:05.279><c> been</c>

00:27:05.590 --> 00:27:05.600 align:start position:0%
here the table users have again been
 

00:27:05.600 --> 00:27:08.950 align:start position:0%
here the table users have again been
altered<00:27:06.159><c> with</c><00:27:06.400><c> a</c><00:27:06.480><c> map</c><00:27:07.039><c> called</c><00:27:07.760><c> to</c><00:27:08.000><c> do</c><00:27:08.640><c> with</c><00:27:08.880><c> the</c>

00:27:08.950 --> 00:27:08.960 align:start position:0%
altered with a map called to do with the
 

00:27:08.960 --> 00:27:12.470 align:start position:0%
altered with a map called to do with the
data<00:27:09.360><c> types</c><00:27:09.760><c> of</c><00:27:10.000><c> timestamp</c><00:27:10.799><c> and</c><00:27:10.960><c> text</c>

00:27:12.470 --> 00:27:12.480 align:start position:0%
data types of timestamp and text
 

00:27:12.480 --> 00:27:16.630 align:start position:0%
data types of timestamp and text
then<00:27:12.799><c> the</c><00:27:13.039><c> user</c><00:27:13.600><c> cast</c><00:27:14.159><c> 123</c><00:27:15.200><c> is</c><00:27:15.440><c> updated</c><00:27:16.240><c> and</c><00:27:16.480><c> a</c>

00:27:16.630 --> 00:27:16.640 align:start position:0%
then the user cast 123 is updated and a
 

00:27:16.640 --> 00:27:19.430 align:start position:0%
then the user cast 123 is updated and a
map<00:27:17.120><c> to-do</c><00:27:17.520><c> list</c><00:27:17.919><c> was</c><00:27:18.320><c> added</c>

00:27:19.430 --> 00:27:19.440 align:start position:0%
map to-do list was added
 

00:27:19.440 --> 00:27:22.390 align:start position:0%
map to-do list was added
the<00:27:19.600><c> to-do</c><00:27:20.080><c> list</c><00:27:20.480><c> is</c><00:27:20.640><c> a</c><00:27:20.720><c> set</c><00:27:20.960><c> of</c><00:27:21.120><c> dates</c><00:27:21.760><c> and</c>

00:27:22.390 --> 00:27:22.400 align:start position:0%
the to-do list is a set of dates and
 

00:27:22.400 --> 00:27:24.549 align:start position:0%
the to-do list is a set of dates and
to-do<00:27:22.960><c> items</c>

00:27:24.549 --> 00:27:24.559 align:start position:0%
to-do items
 

00:27:24.559 --> 00:27:27.070 align:start position:0%
to-do items
in<00:27:24.720><c> this</c><00:27:25.120><c> case</c><00:27:25.679><c> the</c><00:27:26.000><c> user</c>

00:27:27.070 --> 00:27:27.080 align:start position:0%
in this case the user
 

00:27:27.080 --> 00:27:30.549 align:start position:0%
in this case the user
cas123<00:27:28.400><c> is</c><00:27:28.559><c> going</c><00:27:28.880><c> to</c><00:27:29.120><c> create</c><00:27:29.600><c> a</c><00:27:29.679><c> database</c><00:27:30.400><c> on</c>

00:27:30.549 --> 00:27:30.559 align:start position:0%
cas123 is going to create a database on
 

00:27:30.559 --> 00:27:32.230 align:start position:0%
cas123 is going to create a database on
january<00:27:31.200><c> 1st</c>

00:27:32.230 --> 00:27:32.240 align:start position:0%
january 1st
 

00:27:32.240 --> 00:27:34.870 align:start position:0%
january 1st
load<00:27:32.559><c> and</c><00:27:32.720><c> test</c><00:27:33.039><c> the</c><00:27:33.120><c> database</c><00:27:33.760><c> the</c><00:27:33.919><c> next</c><00:27:34.240><c> day</c>

00:27:34.870 --> 00:27:34.880 align:start position:0%
load and test the database the next day
 

00:27:34.880 --> 00:27:37.430 align:start position:0%
load and test the database the next day
and<00:27:35.039><c> then</c><00:27:35.279><c> a</c><00:27:35.360><c> month</c><00:27:35.760><c> after</c><00:27:36.320><c> move</c><00:27:36.640><c> the</c><00:27:36.720><c> database</c>

00:27:37.430 --> 00:27:37.440 align:start position:0%
and then a month after move the database
 

00:27:37.440 --> 00:27:39.590 align:start position:0%
and then a month after move the database
to<00:27:37.600><c> production</c>

00:27:39.590 --> 00:27:39.600 align:start position:0%
to production
 

00:27:39.600 --> 00:27:43.430 align:start position:0%
to production
here's<00:27:40.080><c> another</c><00:27:40.480><c> collection</c><00:27:41.200><c> type</c><00:27:41.919><c> frozen</c>

00:27:43.430 --> 00:27:43.440 align:start position:0%
here's another collection type frozen
 

00:27:43.440 --> 00:27:46.230 align:start position:0%
here's another collection type frozen
if<00:27:43.600><c> you</c><00:27:43.760><c> want</c><00:27:44.000><c> to</c><00:27:44.240><c> nest</c><00:27:44.720><c> collections</c><00:27:45.440><c> inside</c>

00:27:46.230 --> 00:27:46.240 align:start position:0%
if you want to nest collections inside
 

00:27:46.240 --> 00:27:48.710 align:start position:0%
if you want to nest collections inside
other<00:27:46.480><c> collections</c><00:27:47.520><c> you</c><00:27:47.760><c> will</c><00:27:47.919><c> have</c><00:27:48.080><c> to</c><00:27:48.320><c> use</c>

00:27:48.710 --> 00:27:48.720 align:start position:0%
other collections you will have to use
 

00:27:48.720 --> 00:27:51.190 align:start position:0%
other collections you will have to use
the<00:27:48.960><c> frozen</c><00:27:49.760><c> keyword</c>

00:27:51.190 --> 00:27:51.200 align:start position:0%
the frozen keyword
 

00:27:51.200 --> 00:27:54.389 align:start position:0%
the frozen keyword
without<00:27:51.679><c> using</c><00:27:52.159><c> frozen</c><00:27:52.960><c> you</c><00:27:53.279><c> cannot</c><00:27:53.919><c> nest</c><00:27:54.320><c> a</c>

00:27:54.389 --> 00:27:54.399 align:start position:0%
without using frozen you cannot nest a
 

00:27:54.399 --> 00:27:57.430 align:start position:0%
without using frozen you cannot nest a
collection<00:27:55.039><c> inside</c><00:27:55.600><c> another</c><00:27:55.919><c> collection</c>

00:27:57.430 --> 00:27:57.440 align:start position:0%
collection inside another collection
 

00:27:57.440 --> 00:28:00.549 align:start position:0%
collection inside another collection
frozen<00:27:57.919><c> allows</c><00:27:58.320><c> us</c><00:27:58.720><c> to</c><00:27:58.960><c> serialize</c><00:27:59.919><c> multiple</c>

00:28:00.549 --> 00:28:00.559 align:start position:0%
frozen allows us to serialize multiple
 

00:28:00.559 --> 00:28:03.990 align:start position:0%
frozen allows us to serialize multiple
components<00:28:01.440><c> into</c><00:28:01.679><c> a</c><00:28:01.919><c> single</c><00:28:02.480><c> value</c>

00:28:03.990 --> 00:28:04.000 align:start position:0%
components into a single value
 

00:28:04.000 --> 00:28:06.710 align:start position:0%
components into a single value
essentially<00:28:04.720><c> frozen</c><00:28:05.200><c> will</c><00:28:05.440><c> turn</c><00:28:05.760><c> that</c><00:28:06.000><c> value</c>

00:28:06.710 --> 00:28:06.720 align:start position:0%
essentially frozen will turn that value
 

00:28:06.720 --> 00:28:09.029 align:start position:0%
essentially frozen will turn that value
into<00:28:07.200><c> a</c><00:28:07.440><c> blob</c>

00:28:09.029 --> 00:28:09.039 align:start position:0%
into a blob
 

00:28:09.039 --> 00:28:11.430 align:start position:0%
into a blob
if<00:28:09.200><c> you</c><00:28:09.360><c> want</c><00:28:09.600><c> to</c><00:28:09.760><c> update</c><00:28:10.240><c> a</c><00:28:10.399><c> single</c><00:28:10.880><c> value</c><00:28:11.360><c> in</c>

00:28:11.430 --> 00:28:11.440 align:start position:0%
if you want to update a single value in
 

00:28:11.440 --> 00:28:14.470 align:start position:0%
if you want to update a single value in
the<00:28:11.520><c> collection</c><00:28:12.399><c> you</c><00:28:12.720><c> can't</c><00:28:13.360><c> use</c><00:28:13.600><c> the</c><00:28:13.760><c> frozen</c>

00:28:14.470 --> 00:28:14.480 align:start position:0%
the collection you can't use the frozen
 

00:28:14.480 --> 00:28:15.750 align:start position:0%
the collection you can't use the frozen
keyword

00:28:15.750 --> 00:28:15.760 align:start position:0%
keyword
 

00:28:15.760 --> 00:28:18.630 align:start position:0%
keyword
now<00:28:16.080><c> it's</c><00:28:16.320><c> time</c><00:28:16.640><c> to</c><00:28:16.880><c> explore</c><00:28:17.520><c> user</c><00:28:17.919><c> defined</c>

00:28:18.630 --> 00:28:18.640 align:start position:0%
now it's time to explore user defined
 

00:28:18.640 --> 00:28:23.029 align:start position:0%
now it's time to explore user defined
types<00:28:19.520><c> popularly</c><00:28:20.240><c> called</c><00:28:21.039><c> udt</c>

00:28:23.029 --> 00:28:23.039 align:start position:0%
types popularly called udt
 

00:28:23.039 --> 00:28:26.310 align:start position:0%
types popularly called udt
udt<00:28:23.679><c> allows</c><00:28:24.080><c> you</c><00:28:24.240><c> to</c><00:28:24.480><c> group</c><00:28:24.799><c> together</c><00:28:25.840><c> similar</c>

00:28:26.310 --> 00:28:26.320 align:start position:0%
udt allows you to group together similar
 

00:28:26.320 --> 00:28:30.310 align:start position:0%
udt allows you to group together similar
fields<00:28:26.960><c> of</c><00:28:27.200><c> data</c><00:28:27.919><c> that</c><00:28:28.159><c> are</c><00:28:28.320><c> both</c><00:28:28.880><c> named</c><00:28:29.600><c> and</c>

00:28:30.310 --> 00:28:30.320 align:start position:0%
fields of data that are both named and
 

00:28:30.320 --> 00:28:31.990 align:start position:0%
fields of data that are both named and
typed

00:28:31.990 --> 00:28:32.000 align:start position:0%
typed
 

00:28:32.000 --> 00:28:35.110 align:start position:0%
typed
udts<00:28:32.720><c> can</c><00:28:33.039><c> include</c><00:28:33.679><c> any</c><00:28:34.000><c> supported</c><00:28:34.720><c> data</c>

00:28:35.110 --> 00:28:35.120 align:start position:0%
udts can include any supported data
 

00:28:35.120 --> 00:28:36.389 align:start position:0%
udts can include any supported data
types

00:28:36.389 --> 00:28:36.399 align:start position:0%
types
 

00:28:36.399 --> 00:28:38.470 align:start position:0%
types
including<00:28:37.039><c> other</c><00:28:37.279><c> collections</c><00:28:38.080><c> and</c><00:28:38.240><c> other</c>

00:28:38.470 --> 00:28:38.480 align:start position:0%
including other collections and other
 

00:28:38.480 --> 00:28:40.470 align:start position:0%
including other collections and other
udts

00:28:40.470 --> 00:28:40.480 align:start position:0%
udts
 

00:28:40.480 --> 00:28:43.190 align:start position:0%
udts
multiple<00:28:41.120><c> data</c><00:28:41.520><c> fields</c><00:28:41.919><c> can</c><00:28:42.159><c> be</c><00:28:42.320><c> attached</c>

00:28:43.190 --> 00:28:43.200 align:start position:0%
multiple data fields can be attached
 

00:28:43.200 --> 00:28:46.950 align:start position:0%
multiple data fields can be attached
each<00:28:43.679><c> named</c><00:28:44.159><c> and</c><00:28:44.320><c> typed</c><00:28:44.720><c> to</c><00:28:44.960><c> a</c><00:28:45.039><c> single</c><00:28:45.600><c> column</c>

00:28:46.950 --> 00:28:46.960 align:start position:0%
each named and typed to a single column
 

00:28:46.960 --> 00:28:49.590 align:start position:0%
each named and typed to a single column
udts<00:28:47.600><c> allow</c><00:28:48.000><c> embedding</c><00:28:48.559><c> of</c><00:28:48.720><c> more</c><00:28:48.960><c> complex</c>

00:28:49.590 --> 00:28:49.600 align:start position:0%
udts allow embedding of more complex
 

00:28:49.600 --> 00:28:52.070 align:start position:0%
udts allow embedding of more complex
data<00:28:50.000><c> within</c><00:28:50.320><c> a</c><00:28:50.399><c> single</c><00:28:50.880><c> column</c><00:28:51.679><c> adding</c>

00:28:52.070 --> 00:28:52.080 align:start position:0%
data within a single column adding
 

00:28:52.080 --> 00:28:54.710 align:start position:0%
data within a single column adding
flexibility<00:28:52.960><c> to</c><00:28:53.120><c> your</c><00:28:53.360><c> table</c><00:28:54.080><c> and</c><00:28:54.399><c> to</c><00:28:54.559><c> your</c>

00:28:54.710 --> 00:28:54.720 align:start position:0%
flexibility to your table and to your
 

00:28:54.720 --> 00:28:56.950 align:start position:0%
flexibility to your table and to your
data<00:28:55.039><c> model</c>

00:28:56.950 --> 00:28:56.960 align:start position:0%
data model
 

00:28:56.960 --> 00:28:59.590 align:start position:0%
data model
let's<00:28:57.200><c> look</c><00:28:57.440><c> at</c><00:28:57.520><c> some</c><00:28:57.840><c> examples</c>

00:28:59.590 --> 00:28:59.600 align:start position:0%
let's look at some examples
 

00:28:59.600 --> 00:29:03.029 align:start position:0%
let's look at some examples
here<00:28:59.919><c> a</c><00:29:00.080><c> udt</c><00:29:00.799><c> is</c><00:29:01.039><c> created</c><00:29:01.679><c> which</c><00:29:01.919><c> has</c><00:29:02.159><c> street</c>

00:29:03.029 --> 00:29:03.039 align:start position:0%
here a udt is created which has street
 

00:29:03.039 --> 00:29:04.070 align:start position:0%
here a udt is created which has street
city

00:29:04.070 --> 00:29:04.080 align:start position:0%
city
 

00:29:04.080 --> 00:29:07.430 align:start position:0%
city
zip<00:29:04.399><c> code</c><00:29:04.960><c> and</c><00:29:05.200><c> a</c><00:29:05.279><c> set</c><00:29:05.520><c> of</c><00:29:05.679><c> phone</c><00:29:06.000><c> numbers</c>

00:29:07.430 --> 00:29:07.440 align:start position:0%
zip code and a set of phone numbers
 

00:29:07.440 --> 00:29:09.830 align:start position:0%
zip code and a set of phone numbers
now<00:29:07.679><c> all</c><00:29:08.080><c> these</c><00:29:08.559><c> fields</c><00:29:09.039><c> can</c><00:29:09.200><c> make</c><00:29:09.440><c> up</c><00:29:09.600><c> a</c>

00:29:09.830 --> 00:29:09.840 align:start position:0%
now all these fields can make up a
 

00:29:09.840 --> 00:29:11.990 align:start position:0%
now all these fields can make up a
single<00:29:10.320><c> address</c>

00:29:11.990 --> 00:29:12.000 align:start position:0%
single address
 

00:29:12.000 --> 00:29:14.549 align:start position:0%
single address
but<00:29:12.240><c> in</c><00:29:12.320><c> a</c><00:29:12.480><c> relational</c><00:29:13.120><c> world</c><00:29:13.520><c> it</c><00:29:13.679><c> is</c><00:29:13.840><c> possible</c>

00:29:14.549 --> 00:29:14.559 align:start position:0%
but in a relational world it is possible
 

00:29:14.559 --> 00:29:17.110 align:start position:0%
but in a relational world it is possible
for<00:29:14.880><c> several</c><00:29:15.279><c> users</c><00:29:16.080><c> to</c><00:29:16.240><c> have</c><00:29:16.559><c> the</c><00:29:16.799><c> same</c>

00:29:17.110 --> 00:29:17.120 align:start position:0%
for several users to have the same
 

00:29:17.120 --> 00:29:18.710 align:start position:0%
for several users to have the same
address

00:29:18.710 --> 00:29:18.720 align:start position:0%
address
 

00:29:18.720 --> 00:29:22.149 align:start position:0%
address
so<00:29:19.039><c> a</c><00:29:19.360><c> new</c><00:29:19.600><c> udt</c><00:29:20.399><c> or</c><00:29:20.559><c> full</c><00:29:20.880><c> name</c><00:29:21.200><c> is</c><00:29:21.440><c> created</c>

00:29:22.149 --> 00:29:22.159 align:start position:0%
so a new udt or full name is created
 

00:29:22.159 --> 00:29:24.789 align:start position:0%
so a new udt or full name is created
which<00:29:22.399><c> has</c><00:29:22.640><c> the</c><00:29:22.799><c> user's</c><00:29:23.520><c> first</c><00:29:23.840><c> name</c><00:29:24.159><c> and</c><00:29:24.399><c> last</c>

00:29:24.789 --> 00:29:24.799 align:start position:0%
which has the user's first name and last
 

00:29:24.799 --> 00:29:28.549 align:start position:0%
which has the user's first name and last
name<00:29:26.240><c> now</c><00:29:26.480><c> let's</c><00:29:26.880><c> look</c><00:29:27.120><c> at</c><00:29:27.279><c> how</c><00:29:27.520><c> the</c><00:29:27.679><c> udt</c><00:29:28.320><c> is</c>

00:29:28.549 --> 00:29:28.559 align:start position:0%
name now let's look at how the udt is
 

00:29:28.559 --> 00:29:30.870 align:start position:0%
name now let's look at how the udt is
used<00:29:29.039><c> in</c><00:29:29.200><c> a</c><00:29:29.360><c> table</c>

00:29:30.870 --> 00:29:30.880 align:start position:0%
used in a table
 

00:29:30.880 --> 00:29:33.430 align:start position:0%
used in a table
first<00:29:31.200><c> a</c><00:29:31.360><c> users</c><00:29:31.919><c> table</c><00:29:32.320><c> is</c><00:29:32.559><c> created</c><00:29:33.120><c> which</c>

00:29:33.430 --> 00:29:33.440 align:start position:0%
first a users table is created which
 

00:29:33.440 --> 00:29:35.029 align:start position:0%
first a users table is created which
includes<00:29:34.159><c> name</c>

00:29:35.029 --> 00:29:35.039 align:start position:0%
includes name
 

00:29:35.039 --> 00:29:38.830 align:start position:0%
includes name
set<00:29:35.360><c> of</c><00:29:35.520><c> direct</c><00:29:36.000><c> reports</c><00:29:37.039><c> and</c><00:29:37.520><c> a</c><00:29:37.679><c> map</c><00:29:38.000><c> of</c>

00:29:38.830 --> 00:29:38.840 align:start position:0%
set of direct reports and a map of
 

00:29:38.840 --> 00:29:42.070 align:start position:0%
set of direct reports and a map of
addresses<00:29:40.000><c> in</c><00:29:40.080><c> the</c><00:29:40.240><c> name</c><00:29:40.720><c> column</c><00:29:41.520><c> the</c><00:29:41.760><c> full</c>

00:29:42.070 --> 00:29:42.080 align:start position:0%
addresses in the name column the full
 

00:29:42.080 --> 00:29:45.190 align:start position:0%
addresses in the name column the full
name<00:29:42.559><c> udt</c><00:29:43.279><c> is</c><00:29:43.440><c> used</c>

00:29:45.190 --> 00:29:45.200 align:start position:0%
name udt is used
 

00:29:45.200 --> 00:29:47.830 align:start position:0%
name udt is used
after<00:29:45.520><c> that</c><00:29:46.000><c> a</c><00:29:46.240><c> set</c><00:29:46.480><c> collection</c><00:29:47.120><c> type</c><00:29:47.520><c> with</c>

00:29:47.830 --> 00:29:47.840 align:start position:0%
after that a set collection type with
 

00:29:47.840 --> 00:29:51.990 align:start position:0%
after that a set collection type with
full<00:29:48.159><c> name</c><00:29:48.480><c> udt</c><00:29:49.520><c> is</c><00:29:49.679><c> used</c><00:29:50.080><c> to</c><00:29:50.559><c> create</c><00:29:51.279><c> a</c><00:29:51.440><c> direct</c>

00:29:51.990 --> 00:29:52.000 align:start position:0%
full name udt is used to create a direct
 

00:29:52.000 --> 00:29:56.470 align:start position:0%
full name udt is used to create a direct
reports<00:29:52.720><c> column</c><00:29:54.080><c> and</c><00:29:54.320><c> finally</c><00:29:55.200><c> address</c><00:29:55.760><c> udt</c>

00:29:56.470 --> 00:29:56.480 align:start position:0%
reports column and finally address udt
 

00:29:56.480 --> 00:29:59.350 align:start position:0%
reports column and finally address udt
is<00:29:56.640><c> used</c><00:29:57.200><c> in</c><00:29:57.360><c> a</c><00:29:57.520><c> map</c><00:29:57.919><c> collection</c>

00:29:59.350 --> 00:29:59.360 align:start position:0%
is used in a map collection
 

00:29:59.360 --> 00:30:02.710 align:start position:0%
is used in a map collection
in<00:29:59.600><c> relational</c><00:30:00.320><c> databases</c><00:30:01.440><c> to</c><00:30:01.760><c> find</c><00:30:02.159><c> a</c><00:30:02.240><c> query</c>

00:30:02.710 --> 00:30:02.720 align:start position:0%
in relational databases to find a query
 

00:30:02.720 --> 00:30:04.870 align:start position:0%
in relational databases to find a query
you<00:30:02.960><c> will</c><00:30:03.039><c> have</c><00:30:03.279><c> to</c><00:30:03.520><c> first</c><00:30:03.919><c> join</c><00:30:04.320><c> these</c><00:30:04.640><c> two</c>

00:30:04.870 --> 00:30:04.880 align:start position:0%
you will have to first join these two
 

00:30:04.880 --> 00:30:07.590 align:start position:0%
you will have to first join these two
tables<00:30:05.360><c> together</c><00:30:06.320><c> but</c><00:30:06.480><c> in</c><00:30:06.640><c> cassandra's</c>

00:30:07.590 --> 00:30:07.600 align:start position:0%
tables together but in cassandra's
 

00:30:07.600 --> 00:30:09.110 align:start position:0%
tables together but in cassandra's
denormalization

00:30:09.110 --> 00:30:09.120 align:start position:0%
denormalization
 

00:30:09.120 --> 00:30:11.750 align:start position:0%
denormalization
technique<00:30:10.000><c> the</c><00:30:10.159><c> address</c><00:30:10.640><c> is</c><00:30:10.880><c> embedded</c><00:30:11.440><c> in</c><00:30:11.600><c> a</c>

00:30:11.750 --> 00:30:11.760 align:start position:0%
technique the address is embedded in a
 

00:30:11.760 --> 00:30:15.510 align:start position:0%
technique the address is embedded in a
single<00:30:12.159><c> cell</c><00:30:12.799><c> of</c><00:30:12.960><c> the</c><00:30:13.200><c> user's</c><00:30:13.840><c> table</c>

00:30:15.510 --> 00:30:15.520 align:start position:0%
single cell of the user's table
 

00:30:15.520 --> 00:30:17.909 align:start position:0%
single cell of the user's table
a<00:30:15.679><c> counter</c><00:30:16.240><c> is</c><00:30:16.399><c> a</c><00:30:16.480><c> data</c><00:30:16.880><c> type</c><00:30:17.360><c> where</c><00:30:17.600><c> you</c><00:30:17.760><c> can</c>

00:30:17.909 --> 00:30:17.919 align:start position:0%
a counter is a data type where you can
 

00:30:17.919 --> 00:30:20.870 align:start position:0%
a counter is a data type where you can
have<00:30:18.159><c> a</c><00:30:18.320><c> column</c><00:30:18.720><c> that</c><00:30:18.960><c> stores</c><00:30:19.520><c> a</c><00:30:19.679><c> 64-bit</c>

00:30:20.870 --> 00:30:20.880 align:start position:0%
have a column that stores a 64-bit
 

00:30:20.880 --> 00:30:23.110 align:start position:0%
have a column that stores a 64-bit
signed<00:30:21.679><c> integer</c>

00:30:23.110 --> 00:30:23.120 align:start position:0%
signed integer
 

00:30:23.120 --> 00:30:25.510 align:start position:0%
signed integer
they<00:30:23.360><c> could</c><00:30:23.520><c> be</c><00:30:23.679><c> incremented</c><00:30:24.480><c> or</c><00:30:24.640><c> decremented</c>

00:30:25.510 --> 00:30:25.520 align:start position:0%
they could be incremented or decremented
 

00:30:25.520 --> 00:30:27.750 align:start position:0%
they could be incremented or decremented
and<00:30:25.600><c> the</c><00:30:25.760><c> values</c><00:30:26.320><c> are</c><00:30:26.480><c> changed</c><00:30:27.200><c> using</c><00:30:27.600><c> the</c>

00:30:27.750 --> 00:30:27.760 align:start position:0%
and the values are changed using the
 

00:30:27.760 --> 00:30:29.830 align:start position:0%
and the values are changed using the
update<00:30:28.240><c> command</c>

00:30:29.830 --> 00:30:29.840 align:start position:0%
update command
 

00:30:29.840 --> 00:30:31.909 align:start position:0%
update command
counters<00:30:30.480><c> need</c><00:30:30.720><c> to</c><00:30:30.880><c> have</c><00:30:31.200><c> a</c><00:30:31.360><c> specially</c>

00:30:31.909 --> 00:30:31.919 align:start position:0%
counters need to have a specially
 

00:30:31.919 --> 00:30:34.789 align:start position:0%
counters need to have a specially
dedicated<00:30:32.720><c> table</c><00:30:33.440><c> that</c><00:30:33.679><c> can</c><00:30:34.000><c> only</c><00:30:34.399><c> have</c>

00:30:34.789 --> 00:30:34.799 align:start position:0%
dedicated table that can only have
 

00:30:34.799 --> 00:30:38.230 align:start position:0%
dedicated table that can only have
primary<00:30:35.360><c> key</c><00:30:35.679><c> and</c><00:30:35.919><c> counter</c><00:30:36.480><c> columns</c>

00:30:38.230 --> 00:30:38.240 align:start position:0%
primary key and counter columns
 

00:30:38.240 --> 00:30:41.110 align:start position:0%
primary key and counter columns
counters<00:30:38.799><c> can</c><00:30:39.039><c> lead</c><00:30:39.360><c> to</c><00:30:39.520><c> the</c><00:30:39.679><c> duplicate</c><00:30:40.399><c> data</c>

00:30:41.110 --> 00:30:41.120 align:start position:0%
counters can lead to the duplicate data
 

00:30:41.120 --> 00:30:43.350 align:start position:0%
counters can lead to the duplicate data
in<00:30:41.360><c> multiple</c><00:30:42.000><c> tables</c>

00:30:43.350 --> 00:30:43.360 align:start position:0%
in multiple tables
 

00:30:43.360 --> 00:30:45.110 align:start position:0%
in multiple tables
you<00:30:43.520><c> can</c><00:30:43.679><c> have</c><00:30:43.919><c> more</c><00:30:44.159><c> than</c><00:30:44.399><c> one</c><00:30:44.720><c> counter</c>

00:30:45.110 --> 00:30:45.120 align:start position:0%
you can have more than one counter
 

00:30:45.120 --> 00:30:47.430 align:start position:0%
you can have more than one counter
column<00:30:45.600><c> in</c><00:30:45.679><c> your</c><00:30:45.919><c> table</c>

00:30:47.430 --> 00:30:47.440 align:start position:0%
column in your table
 

00:30:47.440 --> 00:30:49.590 align:start position:0%
column in your table
let's<00:30:47.679><c> say</c><00:30:47.919><c> we</c><00:30:48.159><c> own</c><00:30:48.399><c> a</c><00:30:48.559><c> range</c><00:30:49.360><c> that</c>

00:30:49.590 --> 00:30:49.600 align:start position:0%
let's say we own a range that
 

00:30:49.600 --> 00:30:52.310 align:start position:0%
let's say we own a range that
specializes<00:30:50.480><c> in</c><00:30:50.720><c> cows</c><00:30:51.279><c> and</c><00:30:51.440><c> we</c><00:30:51.600><c> want</c><00:30:51.760><c> to</c><00:30:51.919><c> count</c>

00:30:52.310 --> 00:30:52.320 align:start position:0%
specializes in cows and we want to count
 

00:30:52.320 --> 00:30:55.510 align:start position:0%
specializes in cows and we want to count
the<00:30:52.480><c> moo</c><00:30:53.039><c> each</c><00:30:53.520><c> cow</c><00:30:53.919><c> makes</c>

00:30:55.510 --> 00:30:55.520 align:start position:0%
the moo each cow makes
 

00:30:55.520 --> 00:30:57.750 align:start position:0%
the moo each cow makes
we're<00:30:55.679><c> going</c><00:30:55.840><c> to</c><00:30:55.919><c> create</c><00:30:56.240><c> a</c><00:30:56.399><c> table</c><00:30:56.960><c> called</c><00:30:57.520><c> moo</c>

00:30:57.750 --> 00:30:57.760 align:start position:0%
we're going to create a table called moo
 

00:30:57.760 --> 00:30:58.950 align:start position:0%
we're going to create a table called moo
count

00:30:58.950 --> 00:30:58.960 align:start position:0%
count
 

00:30:58.960 --> 00:31:01.669 align:start position:0%
count
it<00:30:59.200><c> has</c><00:30:59.360><c> the</c><00:30:59.520><c> column</c><00:31:00.000><c> name</c><00:31:00.640><c> cow</c><00:31:00.960><c> name</c><00:31:01.279><c> which</c><00:31:01.520><c> is</c>

00:31:01.669 --> 00:31:01.679 align:start position:0%
it has the column name cow name which is
 

00:31:01.679 --> 00:31:04.230 align:start position:0%
it has the column name cow name which is
also<00:31:02.000><c> the</c><00:31:02.240><c> primary</c><00:31:02.799><c> key</c><00:31:03.120><c> of</c><00:31:03.200><c> the</c><00:31:03.440><c> table</c><00:31:04.080><c> and</c>

00:31:04.230 --> 00:31:04.240 align:start position:0%
also the primary key of the table and
 

00:31:04.240 --> 00:31:07.510 align:start position:0%
also the primary key of the table and
the<00:31:04.399><c> moo</c><00:31:04.720><c> count</c><00:31:05.279><c> is</c><00:31:05.440><c> the</c><00:31:05.760><c> counter</c><00:31:06.240><c> column</c>

00:31:07.510 --> 00:31:07.520 align:start position:0%
the moo count is the counter column
 

00:31:07.520 --> 00:31:10.230 align:start position:0%
the moo count is the counter column
now<00:31:07.760><c> to</c><00:31:08.000><c> add</c><00:31:08.240><c> to</c><00:31:08.480><c> a</c><00:31:08.640><c> moo</c><00:31:08.880><c> count</c><00:31:09.520><c> we</c><00:31:09.760><c> will</c><00:31:09.919><c> use</c>

00:31:10.230 --> 00:31:10.240 align:start position:0%
now to add to a moo count we will use
 

00:31:10.240 --> 00:31:12.630 align:start position:0%
now to add to a moo count we will use
the<00:31:10.480><c> update</c><00:31:11.039><c> command</c><00:31:11.600><c> to</c><00:31:11.760><c> update</c><00:31:12.240><c> the</c><00:31:12.399><c> mu</c>

00:31:12.630 --> 00:31:12.640 align:start position:0%
the update command to update the mu
 

00:31:12.640 --> 00:31:17.110 align:start position:0%
the update command to update the mu
counts<00:31:13.360><c> table</c><00:31:14.000><c> each</c><00:31:14.320><c> time</c><00:31:14.640><c> we</c><00:31:14.880><c> hear</c><00:31:15.600><c> a</c><00:31:15.760><c> move</c>

00:31:17.110 --> 00:31:17.120 align:start position:0%
counts table each time we hear a move
 

00:31:17.120 --> 00:31:19.669 align:start position:0%
counts table each time we hear a move
in<00:31:17.200><c> this</c><00:31:17.520><c> example</c><00:31:18.159><c> we</c><00:31:18.399><c> updated</c><00:31:18.880><c> the</c><00:31:19.039><c> mu</c><00:31:19.279><c> count</c>

00:31:19.669 --> 00:31:19.679 align:start position:0%
in this example we updated the mu count
 

00:31:19.679 --> 00:31:22.710 align:start position:0%
in this example we updated the mu count
to<00:31:20.000><c> increment</c><00:31:20.640><c> the</c><00:31:20.799><c> value</c><00:31:21.279><c> by</c><00:31:21.600><c> 8</c><00:31:22.320><c> where</c><00:31:22.559><c> the</c>

00:31:22.710 --> 00:31:22.720 align:start position:0%
to increment the value by 8 where the
 

00:31:22.720 --> 00:31:32.789 align:start position:0%
to increment the value by 8 where the
cow<00:31:23.039><c> name</c><00:31:23.520><c> is</c><00:31:24.000><c> betsy</c>

00:31:32.789 --> 00:31:32.799 align:start position:0%
 
 

00:31:32.799 --> 00:31:35.590 align:start position:0%
 
upon<00:31:33.200><c> completion</c><00:31:33.919><c> of</c><00:31:34.080><c> this</c><00:31:34.320><c> module</c><00:31:35.120><c> you</c><00:31:35.360><c> will</c>

00:31:35.590 --> 00:31:35.600 align:start position:0%
upon completion of this module you will
 

00:31:35.600 --> 00:31:38.149 align:start position:0%
upon completion of this module you will
be<00:31:35.840><c> able</c><00:31:36.080><c> to</c><00:31:36.320><c> learn</c><00:31:36.640><c> about</c><00:31:37.120><c> the</c><00:31:37.279><c> different</c>

00:31:38.149 --> 00:31:38.159 align:start position:0%
be able to learn about the different
 

00:31:38.159 --> 00:31:41.029 align:start position:0%
be able to learn about the different
models<00:31:38.960><c> in</c><00:31:39.039><c> the</c><00:31:39.200><c> data</c><00:31:39.519><c> stacks</c><00:31:40.320><c> modeling</c>

00:31:41.029 --> 00:31:41.039 align:start position:0%
models in the data stacks modeling
 

00:31:41.039 --> 00:31:44.310 align:start position:0%
models in the data stacks modeling
methodology

00:31:44.310 --> 00:31:44.320 align:start position:0%
 
 

00:31:44.320 --> 00:31:47.269 align:start position:0%
 
upon<00:31:44.880><c> completing</c><00:31:45.600><c> this</c><00:31:45.919><c> topic</c><00:31:46.640><c> you</c><00:31:46.799><c> will</c><00:31:47.039><c> be</c>

00:31:47.269 --> 00:31:47.279 align:start position:0%
upon completing this topic you will be
 

00:31:47.279 --> 00:31:49.430 align:start position:0%
upon completing this topic you will be
able<00:31:47.519><c> to</c><00:31:47.760><c> understand</c><00:31:48.480><c> the</c><00:31:48.720><c> purpose</c><00:31:49.279><c> of</c>

00:31:49.430 --> 00:31:49.440 align:start position:0%
able to understand the purpose of
 

00:31:49.440 --> 00:31:51.830 align:start position:0%
able to understand the purpose of
conceptual<00:31:50.320><c> data</c><00:31:50.640><c> model</c>

00:31:51.830 --> 00:31:51.840 align:start position:0%
conceptual data model
 

00:31:51.840 --> 00:31:54.310 align:start position:0%
conceptual data model
and<00:31:52.080><c> learn</c><00:31:52.399><c> about</c><00:31:53.039><c> the</c><00:31:53.200><c> cardinality</c>

00:31:54.310 --> 00:31:54.320 align:start position:0%
and learn about the cardinality
 

00:31:54.320 --> 00:31:57.669 align:start position:0%
and learn about the cardinality
attribute<00:31:55.039><c> keys</c><00:31:55.600><c> er</c><00:31:56.080><c> model</c><00:31:56.640><c> and</c><00:31:56.799><c> relationship</c>

00:31:57.669 --> 00:31:57.679 align:start position:0%
attribute keys er model and relationship
 

00:31:57.679 --> 00:31:59.750 align:start position:0%
attribute keys er model and relationship
keys

00:31:59.750 --> 00:31:59.760 align:start position:0%
keys
 

00:31:59.760 --> 00:32:02.149 align:start position:0%
keys
let's<00:32:00.159><c> begin</c><00:32:00.559><c> with</c><00:32:00.720><c> the</c><00:32:00.880><c> conceptual</c><00:32:01.760><c> data</c>

00:32:02.149 --> 00:32:02.159 align:start position:0%
let's begin with the conceptual data
 

00:32:02.159 --> 00:32:03.269 align:start position:0%
let's begin with the conceptual data
model

00:32:03.269 --> 00:32:03.279 align:start position:0%
model
 

00:32:03.279 --> 00:32:05.990 align:start position:0%
model
it<00:32:03.519><c> is</c><00:32:03.679><c> responsible</c><00:32:04.720><c> for</c><00:32:04.960><c> determining</c><00:32:05.760><c> the</c>

00:32:05.990 --> 00:32:06.000 align:start position:0%
it is responsible for determining the
 

00:32:06.000 --> 00:32:08.389 align:start position:0%
it is responsible for determining the
attributes<00:32:06.799><c> of</c><00:32:06.960><c> all</c><00:32:07.200><c> the</c><00:32:07.440><c> objects</c><00:32:08.159><c> in</c><00:32:08.240><c> your</c>

00:32:08.389 --> 00:32:08.399 align:start position:0%
attributes of all the objects in your
 

00:32:08.399 --> 00:32:12.830 align:start position:0%
attributes of all the objects in your
domain<00:32:09.279><c> and</c><00:32:09.840><c> analyzing</c><00:32:10.799><c> how</c><00:32:11.120><c> they</c><00:32:11.360><c> are</c>

00:32:12.830 --> 00:32:12.840 align:start position:0%
domain and analyzing how they are
 

00:32:12.840 --> 00:32:14.549 align:start position:0%
domain and analyzing how they are
related

00:32:14.549 --> 00:32:14.559 align:start position:0%
related
 

00:32:14.559 --> 00:32:18.310 align:start position:0%
related
a<00:32:14.799><c> conceptual</c><00:32:15.760><c> model</c><00:32:16.320><c> defines</c><00:32:17.360><c> what</c><00:32:17.600><c> a</c><00:32:17.760><c> model</c>

00:32:18.310 --> 00:32:18.320 align:start position:0%
a conceptual model defines what a model
 

00:32:18.320 --> 00:32:19.830 align:start position:0%
a conceptual model defines what a model
should<00:32:18.559><c> contain</c>

00:32:19.830 --> 00:32:19.840 align:start position:0%
should contain
 

00:32:19.840 --> 00:32:23.269 align:start position:0%
should contain
for<00:32:20.080><c> example</c><00:32:21.200><c> users</c><00:32:21.919><c> comments</c><00:32:22.480><c> videos</c>

00:32:23.269 --> 00:32:23.279 align:start position:0%
for example users comments videos
 

00:32:23.279 --> 00:32:25.430 align:start position:0%
for example users comments videos
ratings<00:32:24.000><c> etc</c>

00:32:25.430 --> 00:32:25.440 align:start position:0%
ratings etc
 

00:32:25.440 --> 00:32:28.789 align:start position:0%
ratings etc
the<00:32:25.600><c> purpose</c><00:32:26.080><c> of</c><00:32:26.240><c> a</c><00:32:26.399><c> conceptual</c><00:32:27.279><c> data</c><00:32:28.080><c> model</c>

00:32:28.789 --> 00:32:28.799 align:start position:0%
the purpose of a conceptual data model
 

00:32:28.799 --> 00:32:32.149 align:start position:0%
the purpose of a conceptual data model
is<00:32:28.960><c> to</c><00:32:29.200><c> identify</c><00:32:30.240><c> what</c><00:32:30.640><c> type</c><00:32:31.120><c> of</c><00:32:31.279><c> data</c><00:32:31.919><c> is</c>

00:32:32.149 --> 00:32:32.159 align:start position:0%
is to identify what type of data is
 

00:32:32.159 --> 00:32:35.190 align:start position:0%
is to identify what type of data is
contained<00:32:32.880><c> in</c><00:32:33.039><c> the</c><00:32:33.200><c> model</c><00:32:33.679><c> itself</c>

00:32:35.190 --> 00:32:35.200 align:start position:0%
contained in the model itself
 

00:32:35.200 --> 00:32:37.750 align:start position:0%
contained in the model itself
from<00:32:35.440><c> here</c><00:32:35.919><c> you</c><00:32:36.080><c> can</c><00:32:36.640><c> extrapolate</c><00:32:37.519><c> the</c>

00:32:37.750 --> 00:32:37.760 align:start position:0%
from here you can extrapolate the
 

00:32:37.760 --> 00:32:39.509 align:start position:0%
from here you can extrapolate the
essential<00:32:38.399><c> objects</c>

00:32:39.509 --> 00:32:39.519 align:start position:0%
essential objects
 

00:32:39.519 --> 00:32:42.870 align:start position:0%
essential objects
and<00:32:39.919><c> constraints</c><00:32:41.120><c> that</c><00:32:41.519><c> the</c><00:32:41.679><c> data</c><00:32:42.240><c> types</c>

00:32:42.870 --> 00:32:42.880 align:start position:0%
and constraints that the data types
 

00:32:42.880 --> 00:32:46.710 align:start position:0%
and constraints that the data types
would<00:32:43.120><c> additionally</c><00:32:43.840><c> require</c>

00:32:46.710 --> 00:32:46.720 align:start position:0%
 
 

00:32:46.720 --> 00:32:49.110 align:start position:0%
 
it<00:32:46.960><c> is</c><00:32:47.200><c> important</c><00:32:47.760><c> that</c><00:32:47.919><c> you</c><00:32:48.159><c> capture</c><00:32:48.799><c> all</c>

00:32:49.110 --> 00:32:49.120 align:start position:0%
it is important that you capture all
 

00:32:49.120 --> 00:32:51.310 align:start position:0%
it is important that you capture all
different<00:32:49.519><c> views</c><00:32:49.919><c> of</c><00:32:50.080><c> your</c><00:32:50.320><c> model</c><00:32:50.799><c> while</c>

00:32:51.310 --> 00:32:51.320 align:start position:0%
different views of your model while
 

00:32:51.320 --> 00:32:53.990 align:start position:0%
different views of your model while
conceptualizing<00:32:52.320><c> your</c><00:32:52.559><c> data</c><00:32:52.960><c> model</c>

00:32:53.990 --> 00:32:54.000 align:start position:0%
conceptualizing your data model
 

00:32:54.000 --> 00:32:56.389 align:start position:0%
conceptualizing your data model
collaboration<00:32:54.880><c> with</c><00:32:55.120><c> other</c><00:32:55.440><c> departments</c><00:32:56.240><c> and</c>

00:32:56.389 --> 00:32:56.399 align:start position:0%
collaboration with other departments and
 

00:32:56.399 --> 00:32:59.269 align:start position:0%
collaboration with other departments and
experts<00:32:57.279><c> is</c><00:32:57.600><c> the</c><00:32:57.840><c> key</c>

00:32:59.269 --> 00:32:59.279 align:start position:0%
experts is the key
 

00:32:59.279 --> 00:33:02.149 align:start position:0%
experts is the key
as<00:32:59.519><c> a</c><00:32:59.600><c> database</c><00:33:00.320><c> architect</c><00:33:01.200><c> it</c><00:33:01.440><c> is</c><00:33:01.600><c> critical</c>

00:33:02.149 --> 00:33:02.159 align:start position:0%
as a database architect it is critical
 

00:33:02.159 --> 00:33:05.509 align:start position:0%
as a database architect it is critical
that<00:33:02.480><c> your</c><00:33:03.039><c> solutions</c><00:33:04.320><c> serve</c><00:33:04.720><c> your</c><00:33:04.960><c> business</c>

00:33:05.509 --> 00:33:05.519 align:start position:0%
that your solutions serve your business
 

00:33:05.519 --> 00:33:07.029 align:start position:0%
that your solutions serve your business
needs

00:33:07.029 --> 00:33:07.039 align:start position:0%
needs
 

00:33:07.039 --> 00:33:09.750 align:start position:0%
needs
you<00:33:07.200><c> will</c><00:33:07.440><c> not</c><00:33:07.760><c> always</c><00:33:08.320><c> be</c><00:33:08.640><c> an</c><00:33:08.799><c> expert</c><00:33:09.440><c> on</c><00:33:09.600><c> the</c>

00:33:09.750 --> 00:33:09.760 align:start position:0%
you will not always be an expert on the
 

00:33:09.760 --> 00:33:12.389 align:start position:0%
you will not always be an expert on the
business<00:33:10.240><c> domain</c><00:33:11.200><c> and</c><00:33:11.440><c> therefore</c><00:33:12.080><c> it</c><00:33:12.240><c> is</c>

00:33:12.389 --> 00:33:12.399 align:start position:0%
business domain and therefore it is
 

00:33:12.399 --> 00:33:14.950 align:start position:0%
business domain and therefore it is
important<00:33:13.039><c> to</c><00:33:13.279><c> interact</c><00:33:13.760><c> with</c><00:33:14.000><c> non-technical</c>

00:33:14.950 --> 00:33:14.960 align:start position:0%
important to interact with non-technical
 

00:33:14.960 --> 00:33:18.389 align:start position:0%
important to interact with non-technical
people<00:33:15.600><c> to</c><00:33:15.840><c> get</c><00:33:16.080><c> hold</c><00:33:16.480><c> of</c><00:33:16.559><c> the</c><00:33:16.640><c> details</c>

00:33:18.389 --> 00:33:18.399 align:start position:0%
people to get hold of the details
 

00:33:18.399 --> 00:33:20.710 align:start position:0%
people to get hold of the details
both<00:33:18.720><c> the</c><00:33:18.880><c> technical</c><00:33:19.519><c> and</c><00:33:19.679><c> non-technical</c>

00:33:20.710 --> 00:33:20.720 align:start position:0%
both the technical and non-technical
 

00:33:20.720 --> 00:33:24.470 align:start position:0%
both the technical and non-technical
members<00:33:21.360><c> can</c><00:33:21.679><c> share</c><00:33:22.480><c> review</c><00:33:23.279><c> and</c><00:33:23.600><c> agree</c><00:33:24.000><c> upon</c>

00:33:24.470 --> 00:33:24.480 align:start position:0%
members can share review and agree upon
 

00:33:24.480 --> 00:33:27.269 align:start position:0%
members can share review and agree upon
the<00:33:24.640><c> conceptual</c><00:33:25.679><c> data</c><00:33:26.000><c> model</c>

00:33:27.269 --> 00:33:27.279 align:start position:0%
the conceptual data model
 

00:33:27.279 --> 00:33:29.990 align:start position:0%
the conceptual data model
business<00:33:27.760><c> experts</c><00:33:28.480><c> can</c><00:33:28.720><c> then</c><00:33:29.039><c> verify</c><00:33:29.760><c> and</c>

00:33:29.990 --> 00:33:30.000 align:start position:0%
business experts can then verify and
 

00:33:30.000 --> 00:33:32.950 align:start position:0%
business experts can then verify and
ensure<00:33:30.640><c> that</c><00:33:30.880><c> the</c><00:33:31.039><c> conceptual</c><00:33:32.000><c> data</c><00:33:32.320><c> model</c><00:33:32.799><c> is</c>

00:33:32.950 --> 00:33:32.960 align:start position:0%
ensure that the conceptual data model is
 

00:33:32.960 --> 00:33:36.870 align:start position:0%
ensure that the conceptual data model is
correct<00:33:33.679><c> and</c><00:33:33.919><c> everyone</c><00:33:34.480><c> is</c><00:33:34.640><c> on</c><00:33:34.799><c> the</c><00:33:34.960><c> same</c><00:33:35.360><c> page</c>

00:33:36.870 --> 00:33:36.880 align:start position:0%
correct and everyone is on the same page
 

00:33:36.880 --> 00:33:38.870 align:start position:0%
correct and everyone is on the same page
collaboration<00:33:37.919><c> between</c><00:33:38.399><c> different</c>

00:33:38.870 --> 00:33:38.880 align:start position:0%
collaboration between different
 

00:33:38.880 --> 00:33:41.669 align:start position:0%
collaboration between different
technical<00:33:39.440><c> roles</c><00:33:40.000><c> is</c><00:33:40.159><c> also</c><00:33:40.880><c> immensely</c>

00:33:41.669 --> 00:33:41.679 align:start position:0%
technical roles is also immensely
 

00:33:41.679 --> 00:33:42.870 align:start position:0%
technical roles is also immensely
critical

00:33:42.870 --> 00:33:42.880 align:start position:0%
critical
 

00:33:42.880 --> 00:33:45.509 align:start position:0%
critical
apache<00:33:43.440><c> cassandra</c><00:33:44.080><c> requires</c><00:33:44.799><c> database</c>

00:33:45.509 --> 00:33:45.519 align:start position:0%
apache cassandra requires database
 

00:33:45.519 --> 00:33:48.230 align:start position:0%
apache cassandra requires database
administrators<00:33:46.559><c> and</c><00:33:46.720><c> developers</c><00:33:47.600><c> to</c><00:33:47.840><c> work</c>

00:33:48.230 --> 00:33:48.240 align:start position:0%
administrators and developers to work
 

00:33:48.240 --> 00:33:50.310 align:start position:0%
administrators and developers to work
closely<00:33:48.880><c> with</c><00:33:49.120><c> each</c><00:33:49.360><c> other</c>

00:33:50.310 --> 00:33:50.320 align:start position:0%
closely with each other
 

00:33:50.320 --> 00:33:53.350 align:start position:0%
closely with each other
the<00:33:50.559><c> conceptual</c><00:33:51.440><c> model</c><00:33:52.000><c> is</c><00:33:52.159><c> a</c><00:33:52.320><c> way</c><00:33:52.720><c> of</c>

00:33:53.350 --> 00:33:53.360 align:start position:0%
the conceptual model is a way of
 

00:33:53.360 --> 00:33:56.070 align:start position:0%
the conceptual model is a way of
bringing<00:33:53.840><c> together</c><00:33:54.640><c> the</c><00:33:54.880><c> technical</c><00:33:55.600><c> and</c>

00:33:56.070 --> 00:33:56.080 align:start position:0%
bringing together the technical and
 

00:33:56.080 --> 00:34:01.110 align:start position:0%
bringing together the technical and
non-technical<00:33:57.200><c> people</c><00:33:57.840><c> to</c><00:33:58.080><c> the</c><00:33:58.240><c> same</c><00:33:58.720><c> table</c>

00:34:01.110 --> 00:34:01.120 align:start position:0%
non-technical people to the same table
 

00:34:01.120 --> 00:34:04.070 align:start position:0%
non-technical people to the same table
the<00:34:01.360><c> conceptual</c><00:34:02.320><c> data</c><00:34:02.720><c> model</c><00:34:03.440><c> offers</c><00:34:03.919><c> an</c>

00:34:04.070 --> 00:34:04.080 align:start position:0%
the conceptual data model offers an
 

00:34:04.080 --> 00:34:06.870 align:start position:0%
the conceptual data model offers an
abstract<00:34:04.799><c> view</c><00:34:05.120><c> of</c><00:34:05.200><c> your</c><00:34:05.440><c> domain</c>

00:34:06.870 --> 00:34:06.880 align:start position:0%
abstract view of your domain
 

00:34:06.880 --> 00:34:09.270 align:start position:0%
abstract view of your domain
it<00:34:07.039><c> is</c><00:34:07.279><c> generally</c><00:34:08.159><c> independent</c><00:34:08.960><c> of</c>

00:34:09.270 --> 00:34:09.280 align:start position:0%
it is generally independent of
 

00:34:09.280 --> 00:34:11.909 align:start position:0%
it is generally independent of
technology<00:34:10.560><c> meaning</c><00:34:10.960><c> that</c><00:34:11.200><c> it</c><00:34:11.359><c> does</c><00:34:11.599><c> not</c>

00:34:11.909 --> 00:34:11.919 align:start position:0%
technology meaning that it does not
 

00:34:11.919 --> 00:34:13.270 align:start position:0%
technology meaning that it does not
specify

00:34:13.270 --> 00:34:13.280 align:start position:0%
specify
 

00:34:13.280 --> 00:34:17.030 align:start position:0%
specify
what<00:34:13.839><c> technology</c><00:34:14.639><c> to</c><00:34:14.800><c> use</c><00:34:15.280><c> for</c><00:34:15.520><c> example</c><00:34:16.159><c> sql</c>

00:34:17.030 --> 00:34:17.040 align:start position:0%
what technology to use for example sql
 

00:34:17.040 --> 00:34:19.109 align:start position:0%
what technology to use for example sql
or<00:34:17.320><c> nosql</c>

00:34:19.109 --> 00:34:19.119 align:start position:0%
or nosql
 

00:34:19.119 --> 00:34:21.909 align:start position:0%
or nosql
at<00:34:19.280><c> this</c><00:34:19.599><c> point</c><00:34:19.919><c> it</c><00:34:20.159><c> is</c><00:34:20.320><c> not</c><00:34:20.639><c> specific</c><00:34:21.440><c> to</c><00:34:21.679><c> any</c>

00:34:21.909 --> 00:34:21.919 align:start position:0%
at this point it is not specific to any
 

00:34:21.919 --> 00:34:25.589 align:start position:0%
at this point it is not specific to any
database<00:34:22.720><c> either</c>

00:34:25.589 --> 00:34:25.599 align:start position:0%
 
 

00:34:25.599 --> 00:34:28.629 align:start position:0%
 
the<00:34:25.839><c> term</c><00:34:26.159><c> cardinality</c><00:34:27.280><c> often</c><00:34:27.760><c> refers</c><00:34:28.320><c> to</c><00:34:28.480><c> the</c>

00:34:28.629 --> 00:34:28.639 align:start position:0%
the term cardinality often refers to the
 

00:34:28.639 --> 00:34:31.270 align:start position:0%
the term cardinality often refers to the
relationship<00:34:29.440><c> between</c><00:34:30.079><c> two</c><00:34:30.320><c> entities</c><00:34:31.040><c> in</c><00:34:31.200><c> a</c>

00:34:31.270 --> 00:34:31.280 align:start position:0%
relationship between two entities in a
 

00:34:31.280 --> 00:34:33.030 align:start position:0%
relationship between two entities in a
given<00:34:31.679><c> data</c><00:34:32.000><c> model</c>

00:34:33.030 --> 00:34:33.040 align:start position:0%
given data model
 

00:34:33.040 --> 00:34:36.069 align:start position:0%
given data model
or<00:34:33.280><c> in</c><00:34:33.440><c> other</c><00:34:33.679><c> words</c><00:34:34.480><c> how</c><00:34:34.720><c> many</c><00:34:35.040><c> instances</c><00:34:35.919><c> of</c>

00:34:36.069 --> 00:34:36.079 align:start position:0%
or in other words how many instances of
 

00:34:36.079 --> 00:34:38.869 align:start position:0%
or in other words how many instances of
an<00:34:36.320><c> entity</c><00:34:36.879><c> are</c><00:34:36.960><c> related</c><00:34:37.679><c> to</c><00:34:37.839><c> an</c><00:34:38.079><c> instances</c><00:34:38.720><c> of</c>

00:34:38.869 --> 00:34:38.879 align:start position:0%
an entity are related to an instances of
 

00:34:38.879 --> 00:34:40.790 align:start position:0%
an entity are related to an instances of
another<00:34:39.359><c> entity</c>

00:34:40.790 --> 00:34:40.800 align:start position:0%
another entity
 

00:34:40.800 --> 00:34:43.349 align:start position:0%
another entity
cardinality<00:34:41.679><c> tells</c><00:34:42.159><c> how</c><00:34:42.320><c> many</c><00:34:42.720><c> times</c><00:34:43.200><c> an</c>

00:34:43.349 --> 00:34:43.359 align:start position:0%
cardinality tells how many times an
 

00:34:43.359 --> 00:34:46.149 align:start position:0%
cardinality tells how many times an
entity<00:34:44.000><c> can</c><00:34:44.399><c> or</c><00:34:44.639><c> must</c><00:34:45.040><c> participate</c><00:34:45.919><c> in</c><00:34:46.079><c> a</c>

00:34:46.149 --> 00:34:46.159 align:start position:0%
entity can or must participate in a
 

00:34:46.159 --> 00:34:47.750 align:start position:0%
entity can or must participate in a
relationship

00:34:47.750 --> 00:34:47.760 align:start position:0%
relationship
 

00:34:47.760 --> 00:34:50.710 align:start position:0%
relationship
other<00:34:48.079><c> possibilities</c><00:34:49.040><c> are</c><00:34:49.280><c> one</c><00:34:49.679><c> to</c><00:34:49.919><c> n</c>

00:34:50.710 --> 00:34:50.720 align:start position:0%
other possibilities are one to n
 

00:34:50.720 --> 00:34:53.190 align:start position:0%
other possibilities are one to n
and<00:34:51.040><c> one</c><00:34:51.359><c> is</c><00:34:51.520><c> to</c><00:34:51.839><c> one</c>

00:34:53.190 --> 00:34:53.200 align:start position:0%
and one is to one
 

00:34:53.200 --> 00:34:55.669 align:start position:0%
and one is to one
here<00:34:53.599><c> the</c><00:34:53.760><c> relationship</c><00:34:54.560><c> between</c><00:34:54.960><c> the</c><00:34:55.200><c> video</c>

00:34:55.669 --> 00:34:55.679 align:start position:0%
here the relationship between the video
 

00:34:55.679 --> 00:34:58.230 align:start position:0%
here the relationship between the video
entity<00:34:56.240><c> and</c><00:34:56.399><c> the</c><00:34:56.560><c> actor</c><00:34:57.040><c> entity</c><00:34:57.839><c> is</c><00:34:58.000><c> the</c>

00:34:58.230 --> 00:34:58.240 align:start position:0%
entity and the actor entity is the
 

00:34:58.240 --> 00:35:00.310 align:start position:0%
entity and the actor entity is the
character<00:34:58.720><c> name</c><00:34:59.040><c> in</c><00:34:59.119><c> the</c><00:34:59.280><c> video</c><00:34:59.920><c> and</c><00:35:00.079><c> the</c>

00:35:00.310 --> 00:35:00.320 align:start position:0%
character name in the video and the
 

00:35:00.320 --> 00:35:03.670 align:start position:0%
character name in the video and the
actors<00:35:00.880><c> who</c><00:35:01.119><c> played</c><00:35:01.440><c> those</c><00:35:01.839><c> characters</c>

00:35:03.670 --> 00:35:03.680 align:start position:0%
actors who played those characters
 

00:35:03.680 --> 00:35:06.710 align:start position:0%
actors who played those characters
here<00:35:04.000><c> m</c><00:35:04.240><c> and</c><00:35:04.400><c> n</c><00:35:04.800><c> are</c><00:35:05.119><c> the</c><00:35:05.280><c> videos</c><00:35:05.920><c> and</c><00:35:06.079><c> actors</c>

00:35:06.710 --> 00:35:06.720 align:start position:0%
here m and n are the videos and actors
 

00:35:06.720 --> 00:35:08.230 align:start position:0%
here m and n are the videos and actors
respectively

00:35:08.230 --> 00:35:08.240 align:start position:0%
respectively
 

00:35:08.240 --> 00:35:10.630 align:start position:0%
respectively
the<00:35:08.400><c> videos</c><00:35:09.119><c> feature</c><00:35:09.599><c> actors</c>

00:35:10.630 --> 00:35:10.640 align:start position:0%
the videos feature actors
 

00:35:10.640 --> 00:35:13.430 align:start position:0%
the videos feature actors
each<00:35:11.040><c> video</c><00:35:11.440><c> will</c><00:35:11.680><c> have</c><00:35:12.000><c> several</c><00:35:12.480><c> actors</c><00:35:13.200><c> and</c>

00:35:13.430 --> 00:35:13.440 align:start position:0%
each video will have several actors and
 

00:35:13.440 --> 00:35:16.550 align:start position:0%
each video will have several actors and
each<00:35:13.760><c> actor</c><00:35:14.320><c> can</c><00:35:14.560><c> participate</c><00:35:15.440><c> in</c><00:35:16.000><c> several</c>

00:35:16.550 --> 00:35:16.560 align:start position:0%
each actor can participate in several
 

00:35:16.560 --> 00:35:19.270 align:start position:0%
each actor can participate in several
videos

00:35:19.270 --> 00:35:19.280 align:start position:0%
 
 

00:35:19.280 --> 00:35:21.510 align:start position:0%
 
attribute<00:35:20.000><c> types</c><00:35:20.560><c> are</c><00:35:20.640><c> the</c><00:35:20.800><c> fields</c><00:35:21.280><c> that</c>

00:35:21.510 --> 00:35:21.520 align:start position:0%
attribute types are the fields that
 

00:35:21.520 --> 00:35:24.310 align:start position:0%
attribute types are the fields that
store<00:35:22.160><c> properties</c><00:35:22.960><c> about</c><00:35:23.359><c> an</c><00:35:23.520><c> entity</c><00:35:24.160><c> or</c>

00:35:24.310 --> 00:35:24.320 align:start position:0%
store properties about an entity or
 

00:35:24.320 --> 00:35:25.910 align:start position:0%
store properties about an entity or
relationship

00:35:25.910 --> 00:35:25.920 align:start position:0%
relationship
 

00:35:25.920 --> 00:35:28.310 align:start position:0%
relationship
attributes<00:35:26.640><c> or</c><00:35:26.800><c> fields</c><00:35:27.440><c> where</c><00:35:27.599><c> we</c><00:35:27.839><c> wish</c><00:35:28.079><c> to</c>

00:35:28.310 --> 00:35:28.320 align:start position:0%
attributes or fields where we wish to
 

00:35:28.320 --> 00:35:30.390 align:start position:0%
attributes or fields where we wish to
define<00:35:28.880><c> our</c><00:35:29.119><c> entity</c>

00:35:30.390 --> 00:35:30.400 align:start position:0%
define our entity
 

00:35:30.400 --> 00:35:33.190 align:start position:0%
define our entity
for<00:35:30.640><c> example</c><00:35:31.599><c> we</c><00:35:31.760><c> may</c><00:35:32.000><c> want</c><00:35:32.240><c> to</c><00:35:32.400><c> store</c><00:35:32.960><c> the</c>

00:35:33.190 --> 00:35:33.200 align:start position:0%
for example we may want to store the
 

00:35:33.200 --> 00:35:36.950 align:start position:0%
for example we may want to store the
title<00:35:33.760><c> and</c><00:35:34.000><c> description</c><00:35:34.880><c> of</c><00:35:35.040><c> each</c><00:35:35.359><c> video</c>

00:35:36.950 --> 00:35:36.960 align:start position:0%
title and description of each video
 

00:35:36.960 --> 00:35:39.750 align:start position:0%
title and description of each video
actors<00:35:37.520><c> of</c><00:35:37.760><c> names</c><00:35:38.640><c> which</c><00:35:38.880><c> we</c><00:35:39.040><c> can</c><00:35:39.359><c> further</c>

00:35:39.750 --> 00:35:39.760 align:start position:0%
actors of names which we can further
 

00:35:39.760 --> 00:35:42.630 align:start position:0%
actors of names which we can further
break<00:35:40.160><c> down</c><00:35:40.640><c> into</c><00:35:40.880><c> other</c><00:35:41.200><c> attributes</c><00:35:42.320><c> like</c>

00:35:42.630 --> 00:35:42.640 align:start position:0%
break down into other attributes like
 

00:35:42.640 --> 00:35:46.150 align:start position:0%
break down into other attributes like
first<00:35:43.040><c> name</c><00:35:43.359><c> and</c><00:35:43.599><c> last</c><00:35:44.000><c> name</c><00:35:44.400><c> respectively</c>

00:35:46.150 --> 00:35:46.160 align:start position:0%
first name and last name respectively
 

00:35:46.160 --> 00:35:48.950 align:start position:0%
first name and last name respectively
key<00:35:46.400><c> attributes</c><00:35:47.200><c> uniquely</c><00:35:48.000><c> identify</c><00:35:48.720><c> an</c>

00:35:48.950 --> 00:35:48.960 align:start position:0%
key attributes uniquely identify an
 

00:35:48.960 --> 00:35:50.150 align:start position:0%
key attributes uniquely identify an
entity

00:35:50.150 --> 00:35:50.160 align:start position:0%
entity
 

00:35:50.160 --> 00:35:52.790 align:start position:0%
entity
two<00:35:50.400><c> videos</c><00:35:51.119><c> can</c><00:35:51.280><c> have</c><00:35:51.599><c> the</c><00:35:51.839><c> same</c><00:35:52.240><c> name</c><00:35:52.640><c> or</c>

00:35:52.790 --> 00:35:52.800 align:start position:0%
two videos can have the same name or
 

00:35:52.800 --> 00:35:55.910 align:start position:0%
two videos can have the same name or
description<00:35:53.920><c> but</c><00:35:54.079><c> the</c><00:35:54.320><c> id</c><00:35:54.880><c> is</c><00:35:55.119><c> unique</c><00:35:55.520><c> to</c><00:35:55.760><c> a</c>

00:35:55.910 --> 00:35:55.920 align:start position:0%
description but the id is unique to a
 

00:35:55.920 --> 00:35:57.510 align:start position:0%
description but the id is unique to a
single<00:35:56.480><c> video</c>

00:35:57.510 --> 00:35:57.520 align:start position:0%
single video
 

00:35:57.520 --> 00:35:59.750 align:start position:0%
single video
and<00:35:57.680><c> the</c><00:35:57.839><c> names</c><00:35:58.400><c> are</c><00:35:58.480><c> the</c><00:35:58.640><c> unique</c><00:35:59.119><c> key</c><00:35:59.520><c> for</c>

00:35:59.750 --> 00:35:59.760 align:start position:0%
and the names are the unique key for
 

00:35:59.760 --> 00:36:04.950 align:start position:0%
and the names are the unique key for
actors

00:36:04.950 --> 00:36:04.960 align:start position:0%
 
 

00:36:04.960 --> 00:36:07.430 align:start position:0%
 
let's<00:36:05.359><c> look</c><00:36:05.680><c> at</c><00:36:05.760><c> the</c><00:36:06.000><c> entity</c><00:36:06.560><c> relationship</c>

00:36:07.430 --> 00:36:07.440 align:start position:0%
let's look at the entity relationship
 

00:36:07.440 --> 00:36:08.870 align:start position:0%
let's look at the entity relationship
model

00:36:08.870 --> 00:36:08.880 align:start position:0%
model
 

00:36:08.880 --> 00:36:11.030 align:start position:0%
model
here<00:36:09.200><c> we</c><00:36:09.359><c> have</c><00:36:09.680><c> an</c><00:36:09.839><c> entity</c><00:36:10.400><c> type</c><00:36:10.880><c> the</c>

00:36:11.030 --> 00:36:11.040 align:start position:0%
here we have an entity type the
 

00:36:11.040 --> 00:36:14.150 align:start position:0%
here we have an entity type the
relationship<00:36:11.839><c> types</c><00:36:12.320><c> and</c><00:36:12.480><c> attribute</c><00:36:13.119><c> types</c>

00:36:14.150 --> 00:36:14.160 align:start position:0%
relationship types and attribute types
 

00:36:14.160 --> 00:36:16.950 align:start position:0%
relationship types and attribute types
and<00:36:14.400><c> first</c><00:36:14.800><c> we</c><00:36:14.960><c> need</c><00:36:15.200><c> to</c><00:36:15.359><c> identify</c><00:36:16.240><c> the</c><00:36:16.480><c> entity</c>

00:36:16.950 --> 00:36:16.960 align:start position:0%
and first we need to identify the entity
 

00:36:16.960 --> 00:36:18.550 align:start position:0%
and first we need to identify the entity
types

00:36:18.550 --> 00:36:18.560 align:start position:0%
types
 

00:36:18.560 --> 00:36:20.550 align:start position:0%
types
there<00:36:18.800><c> are</c><00:36:18.960><c> different</c><00:36:19.520><c> entity</c><00:36:20.000><c> types</c><00:36:20.400><c> and</c>

00:36:20.550 --> 00:36:20.560 align:start position:0%
there are different entity types and
 

00:36:20.560 --> 00:36:22.150 align:start position:0%
there are different entity types and
videos

00:36:22.150 --> 00:36:22.160 align:start position:0%
videos
 

00:36:22.160 --> 00:36:24.550 align:start position:0%
videos
these<00:36:22.480><c> are</c><00:36:22.720><c> things</c><00:36:23.119><c> you're</c><00:36:23.359><c> looking</c><00:36:23.839><c> for</c><00:36:24.320><c> to</c>

00:36:24.550 --> 00:36:24.560 align:start position:0%
these are things you're looking for to
 

00:36:24.560 --> 00:36:26.630 align:start position:0%
these are things you're looking for to
find<00:36:24.960><c> information</c>

00:36:26.630 --> 00:36:26.640 align:start position:0%
find information
 

00:36:26.640 --> 00:36:29.190 align:start position:0%
find information
attribute<00:36:27.359><c> types</c><00:36:27.839><c> will</c><00:36:28.000><c> look</c><00:36:28.240><c> at</c><00:36:28.400><c> actors</c><00:36:29.040><c> and</c>

00:36:29.190 --> 00:36:29.200 align:start position:0%
attribute types will look at actors and
 

00:36:29.200 --> 00:36:31.710 align:start position:0%
attribute types will look at actors and
define<00:36:29.839><c> their</c><00:36:30.160><c> first</c><00:36:30.640><c> and</c><00:36:30.800><c> last</c><00:36:31.280><c> names</c>

00:36:31.710 --> 00:36:31.720 align:start position:0%
define their first and last names
 

00:36:31.720 --> 00:36:33.589 align:start position:0%
define their first and last names
respectively

00:36:33.589 --> 00:36:33.599 align:start position:0%
respectively
 

00:36:33.599 --> 00:36:35.589 align:start position:0%
respectively
the<00:36:33.760><c> relationship</c><00:36:34.560><c> type</c><00:36:34.960><c> looks</c><00:36:35.280><c> at</c><00:36:35.440><c> the</c>

00:36:35.589 --> 00:36:35.599 align:start position:0%
the relationship type looks at the
 

00:36:35.599 --> 00:36:37.990 align:start position:0%
the relationship type looks at the
relationship<00:36:36.400><c> between</c><00:36:36.880><c> the</c><00:36:37.040><c> video</c><00:36:37.599><c> and</c><00:36:37.760><c> the</c>

00:36:37.990 --> 00:36:38.000 align:start position:0%
relationship between the video and the
 

00:36:38.000 --> 00:36:41.829 align:start position:0%
relationship between the video and the
actor

00:36:41.829 --> 00:36:41.839 align:start position:0%
 
 

00:36:41.839 --> 00:36:44.470 align:start position:0%
 
attributes<00:36:42.480><c> can</c><00:36:42.720><c> have</c><00:36:43.040><c> multiple</c><00:36:43.680><c> values</c><00:36:44.400><c> and</c>

00:36:44.470 --> 00:36:44.480 align:start position:0%
attributes can have multiple values and
 

00:36:44.480 --> 00:36:46.910 align:start position:0%
attributes can have multiple values and
we<00:36:44.720><c> call</c><00:36:45.040><c> these</c><00:36:45.680><c> not</c><00:36:45.920><c> surprisingly</c>

00:36:46.910 --> 00:36:46.920 align:start position:0%
we call these not surprisingly
 

00:36:46.920 --> 00:36:49.750 align:start position:0%
we call these not surprisingly
multi-valued<00:36:47.920><c> attributes</c>

00:36:49.750 --> 00:36:49.760 align:start position:0%
multi-valued attributes
 

00:36:49.760 --> 00:36:52.310 align:start position:0%
multi-valued attributes
multi-valued<00:36:50.720><c> attributes</c><00:36:51.280><c> store</c><00:36:51.680><c> multiple</c>

00:36:52.310 --> 00:36:52.320 align:start position:0%
multi-valued attributes store multiple
 

00:36:52.320 --> 00:36:54.630 align:start position:0%
multi-valued attributes store multiple
values<00:36:52.880><c> per</c><00:36:53.119><c> attribute</c>

00:36:54.630 --> 00:36:54.640 align:start position:0%
values per attribute
 

00:36:54.640 --> 00:36:57.349 align:start position:0%
values per attribute
one<00:36:54.880><c> can</c><00:36:55.119><c> refer</c><00:36:55.599><c> to</c><00:36:55.760><c> these</c><00:36:56.320><c> attributes</c><00:36:57.040><c> with</c><00:36:57.200><c> a</c>

00:36:57.349 --> 00:36:57.359 align:start position:0%
one can refer to these attributes with a
 

00:36:57.359 --> 00:37:00.710 align:start position:0%
one can refer to these attributes with a
double<00:36:58.000><c> oval</c><00:36:58.480><c> diagram</c><00:36:59.280><c> around</c><00:36:59.839><c> the</c><00:37:00.079><c> attribute</c>

00:37:00.710 --> 00:37:00.720 align:start position:0%
double oval diagram around the attribute
 

00:37:00.720 --> 00:37:02.550 align:start position:0%
double oval diagram around the attribute
types

00:37:02.550 --> 00:37:02.560 align:start position:0%
types
 

00:37:02.560 --> 00:37:06.069 align:start position:0%
types
for<00:37:02.720><c> example</c><00:37:03.760><c> one</c><00:37:04.079><c> video</c><00:37:04.640><c> can</c><00:37:04.880><c> be</c><00:37:05.040><c> an</c><00:37:05.280><c> example</c>

00:37:06.069 --> 00:37:06.079 align:start position:0%
for example one video can be an example
 

00:37:06.079 --> 00:37:09.990 align:start position:0%
for example one video can be an example
for<00:37:06.320><c> more</c><00:37:06.480><c> than</c><00:37:06.880><c> one</c><00:37:07.359><c> genre</c>

00:37:09.990 --> 00:37:10.000 align:start position:0%
 
 

00:37:10.000 --> 00:37:11.829 align:start position:0%
 
now<00:37:10.240><c> you</c><00:37:10.400><c> will</c><00:37:10.560><c> learn</c><00:37:10.880><c> about</c><00:37:11.359><c> the</c><00:37:11.599><c> three</c>

00:37:11.829 --> 00:37:11.839 align:start position:0%
now you will learn about the three
 

00:37:11.839 --> 00:37:15.349 align:start position:0%
now you will learn about the three
relationship<00:37:12.800><c> keys</c><00:37:13.359><c> one</c><00:37:13.680><c> to</c><00:37:13.920><c> one</c><00:37:14.400><c> one</c><00:37:14.720><c> to</c><00:37:14.880><c> many</c>

00:37:15.349 --> 00:37:15.359 align:start position:0%
relationship keys one to one one to many
 

00:37:15.359 --> 00:37:18.550 align:start position:0%
relationship keys one to one one to many
and<00:37:15.520><c> many</c><00:37:15.920><c> to</c><00:37:16.079><c> many</c><00:37:16.560><c> respectively</c>

00:37:18.550 --> 00:37:18.560 align:start position:0%
and many to many respectively
 

00:37:18.560 --> 00:37:21.510 align:start position:0%
and many to many respectively
in<00:37:18.720><c> the</c><00:37:18.880><c> one-to-one</c><00:37:19.680><c> relationship</c><00:37:20.880><c> we</c><00:37:21.119><c> use</c>

00:37:21.510 --> 00:37:21.520 align:start position:0%
in the one-to-one relationship we use
 

00:37:21.520 --> 00:37:25.190 align:start position:0%
in the one-to-one relationship we use
either<00:37:21.920><c> of</c><00:37:22.000><c> the</c><00:37:22.240><c> participating</c><00:37:23.200><c> entity</c><00:37:23.680><c> keys</c>

00:37:25.190 --> 00:37:25.200 align:start position:0%
either of the participating entity keys
 

00:37:25.200 --> 00:37:28.069 align:start position:0%
either of the participating entity keys
in<00:37:25.359><c> this</c><00:37:25.599><c> example</c><00:37:26.320><c> a</c><00:37:26.480><c> movie</c><00:37:26.800><c> can</c><00:37:27.040><c> have</c><00:37:27.680><c> one</c>

00:37:28.069 --> 00:37:28.079 align:start position:0%
in this example a movie can have one
 

00:37:28.079 --> 00:37:31.430 align:start position:0%
in this example a movie can have one
defined<00:37:28.640><c> date</c><00:37:29.119><c> for</c><00:37:29.359><c> its</c><00:37:29.599><c> first</c><00:37:30.240><c> showing</c>

00:37:31.430 --> 00:37:31.440 align:start position:0%
defined date for its first showing
 

00:37:31.440 --> 00:37:34.230 align:start position:0%
defined date for its first showing
so<00:37:31.680><c> this</c><00:37:31.920><c> is</c><00:37:32.079><c> an</c><00:37:32.240><c> example</c><00:37:32.880><c> of</c><00:37:33.040><c> an</c><00:37:33.280><c> one-to-one</c>

00:37:34.230 --> 00:37:34.240 align:start position:0%
so this is an example of an one-to-one
 

00:37:34.240 --> 00:37:36.390 align:start position:0%
so this is an example of an one-to-one
key<00:37:34.839><c> relationship</c>

00:37:36.390 --> 00:37:36.400 align:start position:0%
key relationship
 

00:37:36.400 --> 00:37:39.510 align:start position:0%
key relationship
one<00:37:36.800><c> to</c><00:37:37.040><c> many</c><00:37:37.359><c> relationships</c><00:37:38.640><c> uses</c><00:37:39.280><c> the</c>

00:37:39.510 --> 00:37:39.520 align:start position:0%
one to many relationships uses the
 

00:37:39.520 --> 00:37:43.510 align:start position:0%
one to many relationships uses the
entity<00:37:40.000><c> key</c><00:37:40.480><c> on</c><00:37:40.640><c> the</c><00:37:40.880><c> many</c><00:37:41.200><c> relationship</c><00:37:42.240><c> side</c>

00:37:43.510 --> 00:37:43.520 align:start position:0%
entity key on the many relationship side
 

00:37:43.520 --> 00:37:46.550 align:start position:0%
entity key on the many relationship side
here<00:37:43.839><c> we</c><00:37:44.000><c> have</c><00:37:44.320><c> one</c><00:37:44.640><c> user</c><00:37:45.359><c> but</c><00:37:45.599><c> we</c><00:37:45.760><c> can</c><00:37:45.920><c> upload</c>

00:37:46.550 --> 00:37:46.560 align:start position:0%
here we have one user but we can upload
 

00:37:46.560 --> 00:37:49.430 align:start position:0%
here we have one user but we can upload
multiple<00:37:47.280><c> videos</c>

00:37:49.430 --> 00:37:49.440 align:start position:0%
multiple videos
 

00:37:49.440 --> 00:37:52.630 align:start position:0%
multiple videos
many-to-many<00:37:50.400><c> relationship</c><00:37:51.280><c> combines</c><00:37:52.400><c> both</c>

00:37:52.630 --> 00:37:52.640 align:start position:0%
many-to-many relationship combines both
 

00:37:52.640 --> 00:37:54.710 align:start position:0%
many-to-many relationship combines both
the<00:37:52.800><c> entity</c><00:37:53.359><c> keys</c>

00:37:54.710 --> 00:37:54.720 align:start position:0%
the entity keys
 

00:37:54.720 --> 00:37:57.750 align:start position:0%
the entity keys
here<00:37:55.040><c> many</c><00:37:55.359><c> actors</c><00:37:56.160><c> can</c><00:37:56.320><c> be</c><00:37:56.560><c> part</c><00:37:56.960><c> of</c><00:37:57.119><c> multiple</c>

00:37:57.750 --> 00:37:57.760 align:start position:0%
here many actors can be part of multiple
 

00:37:57.760 --> 00:38:00.390 align:start position:0%
here many actors can be part of multiple
videos

00:38:00.390 --> 00:38:00.400 align:start position:0%
videos
 

00:38:00.400 --> 00:38:02.710 align:start position:0%
videos
weak<00:38:00.720><c> entity</c><00:38:01.200><c> types</c><00:38:01.680><c> are</c><00:38:01.839><c> entities</c><00:38:02.480><c> that</c>

00:38:02.710 --> 00:38:02.720 align:start position:0%
weak entity types are entities that
 

00:38:02.720 --> 00:38:05.589 align:start position:0%
weak entity types are entities that
cannot<00:38:03.440><c> exist</c><00:38:04.000><c> without</c><00:38:04.480><c> a</c><00:38:04.640><c> corresponding</c>

00:38:05.589 --> 00:38:05.599 align:start position:0%
cannot exist without a corresponding
 

00:38:05.599 --> 00:38:08.470 align:start position:0%
cannot exist without a corresponding
strong<00:38:06.079><c> entity</c><00:38:06.720><c> on</c><00:38:06.880><c> the</c><00:38:06.960><c> other</c><00:38:07.280><c> side</c>

00:38:08.470 --> 00:38:08.480 align:start position:0%
strong entity on the other side
 

00:38:08.480 --> 00:38:12.390 align:start position:0%
strong entity on the other side
for<00:38:08.720><c> example</c><00:38:09.599><c> if</c><00:38:09.920><c> the</c><00:38:10.079><c> video</c><00:38:11.040><c> vanishes</c><00:38:12.160><c> or</c>

00:38:12.390 --> 00:38:12.400 align:start position:0%
for example if the video vanishes or
 

00:38:12.400 --> 00:38:15.030 align:start position:0%
for example if the video vanishes or
disappears<00:38:13.440><c> then</c><00:38:13.680><c> the</c><00:38:13.920><c> encoding</c><00:38:14.800><c> will</c>

00:38:15.030 --> 00:38:15.040 align:start position:0%
disappears then the encoding will
 

00:38:15.040 --> 00:38:22.470 align:start position:0%
disappears then the encoding will
disappear<00:38:15.760><c> too</c>

00:38:22.470 --> 00:38:22.480 align:start position:0%
 
 

00:38:22.480 --> 00:38:25.349 align:start position:0%
 
upon<00:38:22.960><c> completing</c><00:38:23.520><c> this</c><00:38:23.839><c> topic</c><00:38:24.640><c> you</c><00:38:24.880><c> will</c><00:38:25.119><c> be</c>

00:38:25.349 --> 00:38:25.359 align:start position:0%
upon completing this topic you will be
 

00:38:25.359 --> 00:38:26.870 align:start position:0%
upon completing this topic you will be
able<00:38:25.599><c> to</c>

00:38:26.870 --> 00:38:26.880 align:start position:0%
able to
 

00:38:26.880 --> 00:38:29.589 align:start position:0%
able to
learn<00:38:27.200><c> the</c><00:38:27.440><c> concept</c><00:38:28.000><c> of</c><00:38:28.240><c> workflow</c><00:38:28.880><c> and</c><00:38:29.119><c> access</c>

00:38:29.589 --> 00:38:29.599 align:start position:0%
learn the concept of workflow and access
 

00:38:29.599 --> 00:38:32.790 align:start position:0%
learn the concept of workflow and access
patterns

00:38:32.790 --> 00:38:32.800 align:start position:0%
 
 

00:38:32.800 --> 00:38:34.790 align:start position:0%
 
you<00:38:32.960><c> will</c><00:38:33.200><c> learn</c><00:38:33.440><c> about</c><00:38:34.000><c> application</c>

00:38:34.790 --> 00:38:34.800 align:start position:0%
you will learn about application
 

00:38:34.800 --> 00:38:38.950 align:start position:0%
you will learn about application
workflow<00:38:35.839><c> which</c><00:38:36.640><c> describes</c><00:38:37.760><c> how</c><00:38:38.160><c> users</c><00:38:38.720><c> will</c>

00:38:38.950 --> 00:38:38.960 align:start position:0%
workflow which describes how users will
 

00:38:38.960 --> 00:38:41.589 align:start position:0%
workflow which describes how users will
navigate<00:38:39.680><c> through</c><00:38:39.920><c> the</c><00:38:40.160><c> application</c>

00:38:41.589 --> 00:38:41.599 align:start position:0%
navigate through the application
 

00:38:41.599 --> 00:38:44.790 align:start position:0%
navigate through the application
it<00:38:41.920><c> also</c><00:38:42.400><c> helps</c><00:38:43.040><c> in</c><00:38:43.599><c> determining</c><00:38:44.480><c> which</c>

00:38:44.790 --> 00:38:44.800 align:start position:0%
it also helps in determining which
 

00:38:44.800 --> 00:38:47.430 align:start position:0%
it also helps in determining which
queries<00:38:45.440><c> will</c><00:38:45.599><c> perform</c><00:38:46.160><c> against</c><00:38:46.720><c> an</c><00:38:46.880><c> apache</c>

00:38:47.430 --> 00:38:47.440 align:start position:0%
queries will perform against an apache
 

00:38:47.440 --> 00:38:50.950 align:start position:0%
queries will perform against an apache
cassandra<00:38:48.079><c> database</c>

00:38:50.950 --> 00:38:50.960 align:start position:0%
 
 

00:38:50.960 --> 00:38:53.589 align:start position:0%
 
every<00:38:51.359><c> application</c><00:38:52.320><c> has</c><00:38:52.720><c> a</c><00:38:52.880><c> particular</c>

00:38:53.589 --> 00:38:53.599 align:start position:0%
every application has a particular
 

00:38:53.599 --> 00:38:55.349 align:start position:0%
every application has a particular
workflow

00:38:55.349 --> 00:38:55.359 align:start position:0%
workflow
 

00:38:55.359 --> 00:38:58.390 align:start position:0%
workflow
access<00:38:55.839><c> patterns</c><00:38:56.560><c> help</c><00:38:56.880><c> us</c><00:38:57.119><c> to</c><00:38:57.280><c> determine</c><00:38:58.079><c> how</c>

00:38:58.390 --> 00:38:58.400 align:start position:0%
access patterns help us to determine how
 

00:38:58.400 --> 00:39:00.950 align:start position:0%
access patterns help us to determine how
the<00:38:58.560><c> data</c><00:38:59.119><c> is</c><00:38:59.440><c> accessed</c>

00:39:00.950 --> 00:39:00.960 align:start position:0%
the data is accessed
 

00:39:00.960 --> 00:39:03.910 align:start position:0%
the data is accessed
we<00:39:01.200><c> also</c><00:39:01.599><c> get</c><00:39:01.839><c> to</c><00:39:02.000><c> know</c><00:39:02.320><c> what</c><00:39:02.640><c> queries</c><00:39:03.280><c> to</c><00:39:03.520><c> run</c>

00:39:03.910 --> 00:39:03.920 align:start position:0%
we also get to know what queries to run
 

00:39:03.920 --> 00:39:05.589 align:start position:0%
we also get to know what queries to run
first

00:39:05.589 --> 00:39:05.599 align:start position:0%
first
 

00:39:05.599 --> 00:39:08.870 align:start position:0%
first
for<00:39:05.839><c> example</c><00:39:06.800><c> when</c><00:39:07.040><c> a</c><00:39:07.200><c> user</c><00:39:07.680><c> logs</c><00:39:08.320><c> into</c><00:39:08.720><c> a</c>

00:39:08.870 --> 00:39:08.880 align:start position:0%
for example when a user logs into a
 

00:39:08.880 --> 00:39:12.150 align:start position:0%
for example when a user logs into a
website<00:39:10.000><c> what</c><00:39:10.320><c> are</c><00:39:10.560><c> they</c><00:39:10.720><c> going</c><00:39:11.040><c> to</c><00:39:11.200><c> click</c>

00:39:12.150 --> 00:39:12.160 align:start position:0%
website what are they going to click
 

00:39:12.160 --> 00:39:14.790 align:start position:0%
website what are they going to click
what<00:39:12.480><c> data</c><00:39:12.880><c> are</c><00:39:13.040><c> they</c><00:39:13.200><c> going</c><00:39:13.520><c> to</c><00:39:13.760><c> use</c>

00:39:14.790 --> 00:39:14.800 align:start position:0%
what data are they going to use
 

00:39:14.800 --> 00:39:17.510 align:start position:0%
what data are they going to use
what<00:39:15.119><c> data</c><00:39:15.440><c> are</c><00:39:15.599><c> they</c><00:39:15.839><c> going</c><00:39:16.079><c> to</c><00:39:16.320><c> read</c>

00:39:17.510 --> 00:39:17.520 align:start position:0%
what data are they going to read
 

00:39:17.520 --> 00:39:19.990 align:start position:0%
what data are they going to read
how<00:39:17.680><c> will</c><00:39:17.920><c> a</c><00:39:18.079><c> user</c><00:39:18.560><c> go</c><00:39:18.800><c> through</c><00:39:19.200><c> a</c><00:39:19.280><c> website</c>

00:39:19.990 --> 00:39:20.000 align:start position:0%
how will a user go through a website
 

00:39:20.000 --> 00:39:21.750 align:start position:0%
how will a user go through a website
application

00:39:21.750 --> 00:39:21.760 align:start position:0%
application
 

00:39:21.760 --> 00:39:24.870 align:start position:0%
application
the<00:39:21.920><c> workflow</c><00:39:22.480><c> and</c><00:39:22.720><c> access</c><00:39:23.119><c> patterns</c><00:39:24.000><c> must</c><00:39:24.400><c> be</c>

00:39:24.870 --> 00:39:24.880 align:start position:0%
the workflow and access patterns must be
 

00:39:24.880 --> 00:39:27.030 align:start position:0%
the workflow and access patterns must be
thought<00:39:25.280><c> through</c><00:39:25.839><c> before</c><00:39:26.400><c> building</c><00:39:26.880><c> the</c>

00:39:27.030 --> 00:39:27.040 align:start position:0%
thought through before building the
 

00:39:27.040 --> 00:39:28.470 align:start position:0%
thought through before building the
application

00:39:28.470 --> 00:39:28.480 align:start position:0%
application
 

00:39:28.480 --> 00:39:31.190 align:start position:0%
application
think<00:39:28.800><c> about</c><00:39:29.440><c> how</c><00:39:29.680><c> the</c><00:39:29.920><c> application</c><00:39:30.880><c> should</c>

00:39:31.190 --> 00:39:31.200 align:start position:0%
think about how the application should
 

00:39:31.200 --> 00:39:35.430 align:start position:0%
think about how the application should
work<00:39:31.839><c> and</c><00:39:32.079><c> how</c><00:39:32.480><c> users</c><00:39:33.359><c> should</c><00:39:33.920><c> use</c><00:39:34.320><c> it</c>

00:39:35.430 --> 00:39:35.440 align:start position:0%
work and how users should use it
 

00:39:35.440 --> 00:39:38.310 align:start position:0%
work and how users should use it
for<00:39:35.680><c> example</c><00:39:36.720><c> you</c><00:39:36.880><c> may</c><00:39:37.040><c> want</c><00:39:37.359><c> one</c><00:39:37.680><c> query</c><00:39:38.079><c> to</c>

00:39:38.310 --> 00:39:38.320 align:start position:0%
for example you may want one query to
 

00:39:38.320 --> 00:39:41.510 align:start position:0%
for example you may want one query to
run<00:39:38.640><c> when</c><00:39:38.800><c> a</c><00:39:38.960><c> user</c><00:39:39.440><c> logs</c><00:39:39.920><c> into</c><00:39:40.240><c> the</c><00:39:40.480><c> site</c>

00:39:41.510 --> 00:39:41.520 align:start position:0%
run when a user logs into the site
 

00:39:41.520 --> 00:39:44.310 align:start position:0%
run when a user logs into the site
this<00:39:41.839><c> query</c><00:39:42.240><c> will</c><00:39:42.560><c> perhaps</c><00:39:43.200><c> find</c><00:39:43.520><c> the</c><00:39:43.680><c> user</c>

00:39:44.310 --> 00:39:44.320 align:start position:0%
this query will perhaps find the user
 

00:39:44.320 --> 00:39:47.510 align:start position:0%
this query will perhaps find the user
with<00:39:44.560><c> a</c><00:39:44.720><c> specified</c><00:39:45.599><c> email</c><00:39:46.000><c> address</c>

00:39:47.510 --> 00:39:47.520 align:start position:0%
with a specified email address
 

00:39:47.520 --> 00:39:50.550 align:start position:0%
with a specified email address
once<00:39:47.839><c> the</c><00:39:48.000><c> user</c><00:39:48.560><c> is</c><00:39:49.040><c> in</c><00:39:49.280><c> the</c><00:39:49.520><c> site</c><00:39:50.240><c> you</c><00:39:50.400><c> may</c>

00:39:50.550 --> 00:39:50.560 align:start position:0%
once the user is in the site you may
 

00:39:50.560 --> 00:39:53.349 align:start position:0%
once the user is in the site you may
want<00:39:50.800><c> to</c><00:39:51.040><c> run</c><00:39:51.440><c> the</c><00:39:51.599><c> second</c><00:39:52.000><c> query</c><00:39:52.640><c> to</c><00:39:52.960><c> show</c><00:39:53.200><c> the</c>

00:39:53.349 --> 00:39:53.359 align:start position:0%
want to run the second query to show the
 

00:39:53.359 --> 00:39:57.589 align:start position:0%
want to run the second query to show the
latest<00:39:54.000><c> videos</c><00:39:54.880><c> uploaded</c><00:39:55.520><c> to</c><00:39:55.680><c> the</c><00:39:56.000><c> site</c>

00:39:57.589 --> 00:39:57.599 align:start position:0%
latest videos uploaded to the site
 

00:39:57.599 --> 00:39:58.950 align:start position:0%
latest videos uploaded to the site
you<00:39:57.760><c> may</c><00:39:57.920><c> want</c><00:39:58.160><c> to</c>

00:39:58.950 --> 00:39:58.960 align:start position:0%
you may want to
 

00:39:58.960 --> 00:40:02.230 align:start position:0%
you may want to
run<00:39:59.280><c> a</c><00:39:59.440><c> third</c><00:39:59.839><c> query</c><00:40:00.480><c> to</c><00:40:00.720><c> verify</c><00:40:01.359><c> the</c><00:40:01.599><c> user's</c>

00:40:02.230 --> 00:40:02.240 align:start position:0%
run a third query to verify the user's
 

00:40:02.240 --> 00:40:04.870 align:start position:0%
run a third query to verify the user's
login<00:40:03.040><c> for</c><00:40:03.200><c> them</c><00:40:03.520><c> to</c><00:40:03.760><c> access</c><00:40:04.160><c> their</c><00:40:04.400><c> account</c>

00:40:04.870 --> 00:40:04.880 align:start position:0%
login for them to access their account
 

00:40:04.880 --> 00:40:08.230 align:start position:0%
login for them to access their account
details<00:40:05.760><c> is</c><00:40:06.000><c> indeed</c><00:40:06.400><c> working</c><00:40:06.880><c> or</c><00:40:07.040><c> not</c>

00:40:08.230 --> 00:40:08.240 align:start position:0%
details is indeed working or not
 

00:40:08.240 --> 00:40:10.630 align:start position:0%
details is indeed working or not
a<00:40:08.480><c> fourth</c><00:40:08.800><c> query</c><00:40:09.359><c> can</c><00:40:09.520><c> be</c><00:40:09.760><c> used</c><00:40:10.079><c> to</c><00:40:10.320><c> find</c>

00:40:10.630 --> 00:40:10.640 align:start position:0%
a fourth query can be used to find
 

00:40:10.640 --> 00:40:15.750 align:start position:0%
a fourth query can be used to find
videos<00:40:11.440><c> uploaded</c><00:40:12.079><c> by</c><00:40:12.400><c> users</c><00:40:13.359><c> with</c><00:40:13.760><c> a</c><00:40:13.920><c> known</c><00:40:14.320><c> id</c>

00:40:15.750 --> 00:40:15.760 align:start position:0%
videos uploaded by users with a known id
 

00:40:15.760 --> 00:40:19.510 align:start position:0%
videos uploaded by users with a known id
a<00:40:16.000><c> fifth</c><00:40:16.320><c> query</c><00:40:16.960><c> can</c><00:40:17.200><c> help</c><00:40:17.520><c> you</c><00:40:17.920><c> find</c><00:40:18.480><c> a</c><00:40:18.720><c> video</c>

00:40:19.510 --> 00:40:19.520 align:start position:0%
a fifth query can help you find a video
 

00:40:19.520 --> 00:40:22.470 align:start position:0%
a fifth query can help you find a video
with<00:40:19.760><c> a</c><00:40:19.839><c> specified</c><00:40:20.880><c> video</c><00:40:21.359><c> id</c>

00:40:22.470 --> 00:40:22.480 align:start position:0%
with a specified video id
 

00:40:22.480 --> 00:40:24.790 align:start position:0%
with a specified video id
these<00:40:22.800><c> are</c><00:40:22.880><c> just</c><00:40:23.200><c> examples</c><00:40:24.079><c> of</c><00:40:24.320><c> popular</c>

00:40:24.790 --> 00:40:24.800 align:start position:0%
these are just examples of popular
 

00:40:24.800 --> 00:40:27.190 align:start position:0%
these are just examples of popular
queries<00:40:25.680><c> one</c><00:40:25.920><c> can</c><00:40:26.160><c> build</c><00:40:26.720><c> into</c><00:40:27.040><c> an</c>

00:40:27.190 --> 00:40:27.200 align:start position:0%
queries one can build into an
 

00:40:27.200 --> 00:40:31.910 align:start position:0%
queries one can build into an
application

00:40:31.910 --> 00:40:31.920 align:start position:0%
 
 

00:40:31.920 --> 00:40:35.030 align:start position:0%
 
upon<00:40:32.400><c> completing</c><00:40:33.119><c> this</c><00:40:33.440><c> topic</c><00:40:34.320><c> you</c><00:40:34.560><c> will</c><00:40:34.800><c> be</c>

00:40:35.030 --> 00:40:35.040 align:start position:0%
upon completing this topic you will be
 

00:40:35.040 --> 00:40:36.470 align:start position:0%
upon completing this topic you will be
able<00:40:35.280><c> to</c>

00:40:36.470 --> 00:40:36.480 align:start position:0%
able to
 

00:40:36.480 --> 00:40:39.430 align:start position:0%
able to
understand<00:40:37.200><c> the</c><00:40:37.359><c> mapping</c><00:40:37.839><c> rules</c>

00:40:39.430 --> 00:40:39.440 align:start position:0%
understand the mapping rules
 

00:40:39.440 --> 00:40:42.230 align:start position:0%
understand the mapping rules
explore<00:40:40.320><c> a</c><00:40:40.480><c> modeling</c><00:40:40.960><c> approach</c><00:40:41.599><c> to</c><00:40:41.760><c> see</c><00:40:42.000><c> how</c>

00:40:42.230 --> 00:40:42.240 align:start position:0%
explore a modeling approach to see how
 

00:40:42.240 --> 00:40:44.870 align:start position:0%
explore a modeling approach to see how
mapping<00:40:42.640><c> rules</c><00:40:43.040><c> are</c><00:40:43.200><c> applied</c>

00:40:44.870 --> 00:40:44.880 align:start position:0%
mapping rules are applied
 

00:40:44.880 --> 00:40:48.790 align:start position:0%
mapping rules are applied
learn<00:40:45.200><c> the</c><00:40:45.440><c> concept</c><00:40:46.160><c> of</c><00:40:46.320><c> chaboko</c><00:40:47.119><c> diagrams</c>

00:40:48.790 --> 00:40:48.800 align:start position:0%
learn the concept of chaboko diagrams
 

00:40:48.800 --> 00:40:52.150 align:start position:0%
learn the concept of chaboko diagrams
understand<00:40:49.680><c> the</c><00:40:49.839><c> logical</c><00:40:50.560><c> and</c><00:40:50.800><c> physical</c><00:40:51.520><c> udt</c>

00:40:52.150 --> 00:40:52.160 align:start position:0%
understand the logical and physical udt
 

00:40:52.160 --> 00:40:53.670 align:start position:0%
understand the logical and physical udt
diagrams

00:40:53.670 --> 00:40:53.680 align:start position:0%
diagrams
 

00:40:53.680 --> 00:40:56.630 align:start position:0%
diagrams
and<00:40:53.920><c> learn</c><00:40:54.160><c> about</c><00:40:54.560><c> the</c><00:40:54.880><c> four</c><00:40:55.520><c> data</c><00:40:56.000><c> modeling</c>

00:40:56.630 --> 00:40:56.640 align:start position:0%
and learn about the four data modeling
 

00:40:56.640 --> 00:40:59.430 align:start position:0%
and learn about the four data modeling
principles

00:40:59.430 --> 00:40:59.440 align:start position:0%
 
 

00:40:59.440 --> 00:41:02.230 align:start position:0%
 
at<00:40:59.599><c> this</c><00:40:59.920><c> point</c><00:41:00.480><c> we</c><00:41:00.640><c> have</c><00:41:00.800><c> covered</c><00:41:01.359><c> conceptual</c>

00:41:02.230 --> 00:41:02.240 align:start position:0%
at this point we have covered conceptual
 

00:41:02.240 --> 00:41:04.829 align:start position:0%
at this point we have covered conceptual
data<00:41:02.640><c> model</c><00:41:03.200><c> and</c><00:41:03.359><c> the</c><00:41:03.520><c> application</c>

00:41:04.829 --> 00:41:04.839 align:start position:0%
data model and the application
 

00:41:04.839 --> 00:41:07.589 align:start position:0%
data model and the application
workflow<00:41:05.920><c> next</c><00:41:06.319><c> we</c><00:41:06.480><c> will</c><00:41:06.640><c> look</c><00:41:06.880><c> at</c><00:41:07.200><c> how</c><00:41:07.359><c> to</c>

00:41:07.589 --> 00:41:07.599 align:start position:0%
workflow next we will look at how to
 

00:41:07.599 --> 00:41:10.150 align:start position:0%
workflow next we will look at how to
make<00:41:07.839><c> a</c><00:41:08.000><c> logical</c><00:41:08.640><c> data</c><00:41:09.040><c> model</c>

00:41:10.150 --> 00:41:10.160 align:start position:0%
make a logical data model
 

00:41:10.160 --> 00:41:13.270 align:start position:0%
make a logical data model
to<00:41:10.319><c> do</c><00:41:10.560><c> this</c><00:41:10.960><c> we</c><00:41:11.200><c> have</c><00:41:11.359><c> to</c><00:41:11.680><c> map</c><00:41:12.160><c> our</c><00:41:12.400><c> conceptual</c>

00:41:13.270 --> 00:41:13.280 align:start position:0%
to do this we have to map our conceptual
 

00:41:13.280 --> 00:41:16.390 align:start position:0%
to do this we have to map our conceptual
model<00:41:13.760><c> to</c><00:41:14.000><c> a</c><00:41:14.160><c> logical</c><00:41:14.800><c> model</c>

00:41:16.390 --> 00:41:16.400 align:start position:0%
model to a logical model
 

00:41:16.400 --> 00:41:18.790 align:start position:0%
model to a logical model
now<00:41:16.640><c> you</c><00:41:16.800><c> will</c><00:41:17.040><c> go</c><00:41:17.280><c> through</c><00:41:17.599><c> some</c><00:41:17.839><c> basic</c><00:41:18.319><c> rules</c>

00:41:18.790 --> 00:41:18.800 align:start position:0%
now you will go through some basic rules
 

00:41:18.800 --> 00:41:21.670 align:start position:0%
now you will go through some basic rules
for<00:41:19.040><c> query</c><00:41:19.440><c> driven</c><00:41:19.920><c> methodology</c>

00:41:21.670 --> 00:41:21.680 align:start position:0%
for query driven methodology
 

00:41:21.680 --> 00:41:24.390 align:start position:0%
for query driven methodology
the<00:41:21.839><c> mapping</c><00:41:22.319><c> rules</c><00:41:22.800><c> ensure</c><00:41:23.440><c> that</c><00:41:23.680><c> a</c><00:41:23.760><c> logical</c>

00:41:24.390 --> 00:41:24.400 align:start position:0%
the mapping rules ensure that a logical
 

00:41:24.400 --> 00:41:26.870 align:start position:0%
the mapping rules ensure that a logical
data<00:41:24.800><c> model</c><00:41:25.200><c> is</c><00:41:25.359><c> correct</c>

00:41:26.870 --> 00:41:26.880 align:start position:0%
data model is correct
 

00:41:26.880 --> 00:41:30.309 align:start position:0%
data model is correct
each<00:41:27.200><c> query</c><00:41:27.680><c> has</c><00:41:27.839><c> a</c><00:41:27.920><c> corresponding</c><00:41:28.960><c> table</c>

00:41:30.309 --> 00:41:30.319 align:start position:0%
each query has a corresponding table
 

00:41:30.319 --> 00:41:34.069 align:start position:0%
each query has a corresponding table
the<00:41:30.560><c> tables</c><00:41:31.200><c> are</c><00:41:31.760><c> designed</c><00:41:32.560><c> to</c><00:41:32.960><c> allow</c><00:41:33.440><c> queries</c>

00:41:34.069 --> 00:41:34.079 align:start position:0%
the tables are designed to allow queries
 

00:41:34.079 --> 00:41:36.390 align:start position:0%
the tables are designed to allow queries
to<00:41:34.319><c> execute</c><00:41:34.960><c> properly</c>

00:41:36.390 --> 00:41:36.400 align:start position:0%
to execute properly
 

00:41:36.400 --> 00:41:39.510 align:start position:0%
to execute properly
the<00:41:36.640><c> tables</c><00:41:37.280><c> will</c><00:41:37.760><c> return</c><00:41:38.240><c> the</c><00:41:38.480><c> data</c><00:41:39.119><c> in</c><00:41:39.359><c> the</c>

00:41:39.510 --> 00:41:39.520 align:start position:0%
the tables will return the data in the
 

00:41:39.520 --> 00:41:42.470 align:start position:0%
the tables will return the data in the
correct<00:41:40.079><c> order</c>

00:41:42.470 --> 00:41:42.480 align:start position:0%
correct order
 

00:41:42.480 --> 00:41:45.030 align:start position:0%
correct order
here<00:41:42.800><c> are</c><00:41:42.960><c> the</c><00:41:43.200><c> five</c><00:41:43.680><c> mapping</c><00:41:44.160><c> rules</c><00:41:44.560><c> to</c><00:41:44.720><c> guide</c>

00:41:45.030 --> 00:41:45.040 align:start position:0%
here are the five mapping rules to guide
 

00:41:45.040 --> 00:41:46.829 align:start position:0%
here are the five mapping rules to guide
a<00:41:45.200><c> query</c><00:41:45.839><c> driven</c>

00:41:46.829 --> 00:41:46.839 align:start position:0%
a query driven
 

00:41:46.839 --> 00:41:49.990 align:start position:0%
a query driven
transition<00:41:48.079><c> mapping</c><00:41:48.560><c> rule</c><00:41:49.040><c> 1</c>

00:41:49.990 --> 00:41:50.000 align:start position:0%
transition mapping rule 1
 

00:41:50.000 --> 00:41:52.230 align:start position:0%
transition mapping rule 1
identify<00:41:50.960><c> the</c><00:41:51.200><c> entities</c><00:41:51.839><c> and</c><00:41:52.000><c> their</c>

00:41:52.230 --> 00:41:52.240 align:start position:0%
identify the entities and their
 

00:41:52.240 --> 00:41:54.790 align:start position:0%
identify the entities and their
relationships

00:41:54.790 --> 00:41:54.800 align:start position:0%
relationships
 

00:41:54.800 --> 00:41:56.790 align:start position:0%
relationships
mapping<00:41:55.280><c> rule</c><00:41:55.760><c> 2</c>

00:41:56.790 --> 00:41:56.800 align:start position:0%
mapping rule 2
 

00:41:56.800 --> 00:42:01.670 align:start position:0%
mapping rule 2
identify<00:41:57.680><c> the</c><00:41:57.920><c> equality</c><00:41:58.880><c> search</c><00:41:59.520><c> attributes</c>

00:42:01.670 --> 00:42:01.680 align:start position:0%
identify the equality search attributes
 

00:42:01.680 --> 00:42:05.349 align:start position:0%
identify the equality search attributes
mapping<00:42:02.160><c> rule</c><00:42:02.560><c> 3</c><00:42:03.200><c> identify</c><00:42:04.079><c> the</c><00:42:04.319><c> inequality</c>

00:42:05.349 --> 00:42:05.359 align:start position:0%
mapping rule 3 identify the inequality
 

00:42:05.359 --> 00:42:07.910 align:start position:0%
mapping rule 3 identify the inequality
search<00:42:05.839><c> attributes</c>

00:42:07.910 --> 00:42:07.920 align:start position:0%
search attributes
 

00:42:07.920 --> 00:42:11.510 align:start position:0%
search attributes
mapping<00:42:08.400><c> rule</c><00:42:08.880><c> 4</c><00:42:09.599><c> identify</c><00:42:10.560><c> the</c><00:42:10.880><c> ordering</c>

00:42:11.510 --> 00:42:11.520 align:start position:0%
mapping rule 4 identify the ordering
 

00:42:11.520 --> 00:42:13.990 align:start position:0%
mapping rule 4 identify the ordering
attributes<00:42:12.560><c> and</c>

00:42:13.990 --> 00:42:14.000 align:start position:0%
attributes and
 

00:42:14.000 --> 00:42:17.190 align:start position:0%
attributes and
mapping<00:42:14.480><c> rule</c><00:42:14.880><c> 5</c><00:42:15.520><c> identify</c><00:42:16.480><c> the</c><00:42:16.720><c> key</c>

00:42:17.190 --> 00:42:17.200 align:start position:0%
mapping rule 5 identify the key
 

00:42:17.200 --> 00:42:19.510 align:start position:0%
mapping rule 5 identify the key
attributes

00:42:19.510 --> 00:42:19.520 align:start position:0%
attributes
 

00:42:19.520 --> 00:42:21.750 align:start position:0%
attributes
create<00:42:20.000><c> a</c><00:42:20.160><c> table</c><00:42:20.560><c> schema</c><00:42:21.359><c> from</c><00:42:21.520><c> the</c>

00:42:21.750 --> 00:42:21.760 align:start position:0%
create a table schema from the
 

00:42:21.760 --> 00:42:25.829 align:start position:0%
create a table schema from the
conceptual<00:42:22.720><c> data</c><00:42:23.119><c> model</c><00:42:23.760><c> for</c><00:42:24.000><c> each</c><00:42:24.400><c> query</c>

00:42:25.829 --> 00:42:25.839 align:start position:0%
conceptual data model for each query
 

00:42:25.839 --> 00:42:29.109 align:start position:0%
conceptual data model for each query
apply<00:42:26.319><c> the</c><00:42:26.480><c> mapping</c><00:42:26.960><c> rules</c><00:42:27.599><c> in</c><00:42:27.839><c> order</c>

00:42:29.109 --> 00:42:29.119 align:start position:0%
apply the mapping rules in order
 

00:42:29.119 --> 00:42:31.510 align:start position:0%
apply the mapping rules in order
for<00:42:29.280><c> this</c><00:42:29.520><c> schema</c><00:42:30.079><c> we're</c><00:42:30.319><c> looking</c><00:42:30.560><c> at</c><00:42:30.800><c> videos</c>

00:42:31.510 --> 00:42:31.520 align:start position:0%
for this schema we're looking at videos
 

00:42:31.520 --> 00:42:34.069 align:start position:0%
for this schema we're looking at videos
by<00:42:31.839><c> user</c><00:42:32.319><c> upload</c>

00:42:34.069 --> 00:42:34.079 align:start position:0%
by user upload
 

00:42:34.079 --> 00:42:35.190 align:start position:0%
by user upload
therefore

00:42:35.190 --> 00:42:35.200 align:start position:0%
therefore
 

00:42:35.200 --> 00:42:38.470 align:start position:0%
therefore
mapping<00:42:35.599><c> rule</c><00:42:35.920><c> 1</c><00:42:36.720><c> identify</c><00:42:37.599><c> your</c><00:42:37.839><c> entities</c>

00:42:38.470 --> 00:42:38.480 align:start position:0%
mapping rule 1 identify your entities
 

00:42:38.480 --> 00:42:40.550 align:start position:0%
mapping rule 1 identify your entities
and<00:42:38.640><c> relationships</c>

00:42:40.550 --> 00:42:40.560 align:start position:0%
and relationships
 

00:42:40.560 --> 00:42:43.109 align:start position:0%
and relationships
in<00:42:40.720><c> this</c><00:42:41.119><c> case</c><00:42:41.680><c> we</c><00:42:41.920><c> have</c><00:42:42.079><c> a</c><00:42:42.240><c> table</c><00:42:42.720><c> named</c>

00:42:43.109 --> 00:42:43.119 align:start position:0%
in this case we have a table named
 

00:42:43.119 --> 00:42:46.390 align:start position:0%
in this case we have a table named
videos<00:42:44.000><c> uploaded</c><00:42:44.560><c> by</c><00:42:44.800><c> users</c>

00:42:46.390 --> 00:42:46.400 align:start position:0%
videos uploaded by users
 

00:42:46.400 --> 00:42:48.390 align:start position:0%
videos uploaded by users
there<00:42:46.640><c> is</c><00:42:46.800><c> a</c><00:42:46.880><c> relationship</c><00:42:47.680><c> between</c><00:42:48.160><c> two</c>

00:42:48.390 --> 00:42:48.400 align:start position:0%
there is a relationship between two
 

00:42:48.400 --> 00:42:51.910 align:start position:0%
there is a relationship between two
uploads<00:42:49.040><c> with</c><00:42:49.359><c> users</c><00:42:50.000><c> being</c><00:42:50.400><c> one</c><00:42:50.720><c> entity</c><00:42:51.680><c> and</c>

00:42:51.910 --> 00:42:51.920 align:start position:0%
uploads with users being one entity and
 

00:42:51.920 --> 00:42:54.870 align:start position:0%
uploads with users being one entity and
the<00:42:52.079><c> videos</c><00:42:52.720><c> being</c><00:42:53.119><c> the</c><00:42:53.359><c> other</c>

00:42:54.870 --> 00:42:54.880 align:start position:0%
the videos being the other
 

00:42:54.880 --> 00:42:56.550 align:start position:0%
the videos being the other
mapping<00:42:55.359><c> rule</c><00:42:55.760><c> 2</c>

00:42:56.550 --> 00:42:56.560 align:start position:0%
mapping rule 2
 

00:42:56.560 --> 00:43:00.550 align:start position:0%
mapping rule 2
identify<00:42:57.440><c> your</c><00:42:57.760><c> equality</c><00:42:58.560><c> search</c><00:42:59.040><c> attributes</c>

00:43:00.550 --> 00:43:00.560 align:start position:0%
identify your equality search attributes
 

00:43:00.560 --> 00:43:03.670 align:start position:0%
identify your equality search attributes
in<00:43:00.720><c> this</c><00:43:01.040><c> case</c><00:43:01.520><c> clearly</c><00:43:02.319><c> equality</c><00:43:03.200><c> is</c><00:43:03.440><c> the</c>

00:43:03.670 --> 00:43:03.680 align:start position:0%
in this case clearly equality is the
 

00:43:03.680 --> 00:43:05.589 align:start position:0%
in this case clearly equality is the
user<00:43:04.079><c> id</c>

00:43:05.589 --> 00:43:05.599 align:start position:0%
user id
 

00:43:05.599 --> 00:43:09.349 align:start position:0%
user id
mapping<00:43:06.079><c> rule</c><00:43:06.480><c> 3</c><00:43:07.359><c> identify</c><00:43:08.240><c> the</c><00:43:08.400><c> inequality</c>

00:43:09.349 --> 00:43:09.359 align:start position:0%
mapping rule 3 identify the inequality
 

00:43:09.359 --> 00:43:11.349 align:start position:0%
mapping rule 3 identify the inequality
search<00:43:09.760><c> attributes</c>

00:43:11.349 --> 00:43:11.359 align:start position:0%
search attributes
 

00:43:11.359 --> 00:43:13.589 align:start position:0%
search attributes
in<00:43:11.440><c> this</c><00:43:11.760><c> case</c><00:43:12.319><c> it</c><00:43:12.560><c> is</c><00:43:12.720><c> the</c><00:43:12.880><c> uploaded</c>

00:43:13.589 --> 00:43:13.599 align:start position:0%
in this case it is the uploaded
 

00:43:13.599 --> 00:43:15.510 align:start position:0%
in this case it is the uploaded
timestamp

00:43:15.510 --> 00:43:15.520 align:start position:0%
timestamp
 

00:43:15.520 --> 00:43:19.109 align:start position:0%
timestamp
mapping<00:43:16.000><c> rule</c><00:43:16.400><c> 4</c><00:43:17.280><c> identify</c><00:43:18.240><c> the</c><00:43:18.480><c> ordering</c>

00:43:19.109 --> 00:43:19.119 align:start position:0%
mapping rule 4 identify the ordering
 

00:43:19.119 --> 00:43:20.870 align:start position:0%
mapping rule 4 identify the ordering
attribute

00:43:20.870 --> 00:43:20.880 align:start position:0%
attribute
 

00:43:20.880 --> 00:43:22.710 align:start position:0%
attribute
mapping<00:43:21.359><c> rule</c><00:43:21.839><c> 5</c>

00:43:22.710 --> 00:43:22.720 align:start position:0%
mapping rule 5
 

00:43:22.720 --> 00:43:26.069 align:start position:0%
mapping rule 5
identify<00:43:23.599><c> the</c><00:43:23.839><c> key</c><00:43:24.240><c> attributes</c><00:43:25.359><c> needed</c><00:43:25.760><c> to</c>

00:43:26.069 --> 00:43:26.079 align:start position:0%
identify the key attributes needed to
 

00:43:26.079 --> 00:43:30.069 align:start position:0%
identify the key attributes needed to
guarantee<00:43:26.880><c> uniqueness</c><00:43:27.839><c> and</c><00:43:28.400><c> minimality</c>

00:43:30.069 --> 00:43:30.079 align:start position:0%
guarantee uniqueness and minimality
 

00:43:30.079 --> 00:43:35.190 align:start position:0%
guarantee uniqueness and minimality
here<00:43:30.640><c> video</c><00:43:31.040><c> id</c><00:43:31.760><c> guarantees</c><00:43:32.800><c> uniqueness</c>

00:43:35.190 --> 00:43:35.200 align:start position:0%
here video id guarantees uniqueness
 

00:43:35.200 --> 00:43:37.910 align:start position:0%
here video id guarantees uniqueness
we<00:43:35.359><c> have</c><00:43:35.599><c> the</c><00:43:35.839><c> conceptual</c><00:43:36.720><c> data</c><00:43:37.119><c> model</c><00:43:37.599><c> on</c><00:43:37.760><c> the</c>

00:43:37.910 --> 00:43:37.920 align:start position:0%
we have the conceptual data model on the
 

00:43:37.920 --> 00:43:40.630 align:start position:0%
we have the conceptual data model on the
left<00:43:38.640><c> and</c><00:43:38.800><c> the</c><00:43:39.040><c> access</c><00:43:39.599><c> patterns</c><00:43:40.319><c> on</c><00:43:40.400><c> the</c>

00:43:40.630 --> 00:43:40.640 align:start position:0%
left and the access patterns on the
 

00:43:40.640 --> 00:43:41.829 align:start position:0%
left and the access patterns on the
right

00:43:41.829 --> 00:43:41.839 align:start position:0%
right
 

00:43:41.839 --> 00:43:44.230 align:start position:0%
right
it<00:43:42.079><c> is</c><00:43:42.240><c> important</c><00:43:42.800><c> to</c><00:43:43.040><c> remember</c><00:43:43.760><c> that</c><00:43:44.000><c> our</c>

00:43:44.230 --> 00:43:44.240 align:start position:0%
it is important to remember that our
 

00:43:44.240 --> 00:43:47.510 align:start position:0%
it is important to remember that our
application<00:43:45.040><c> workflow</c><00:43:45.839><c> had</c><00:43:46.160><c> access</c><00:43:46.720><c> patterns</c>

00:43:47.510 --> 00:43:47.520 align:start position:0%
application workflow had access patterns
 

00:43:47.520 --> 00:43:49.430 align:start position:0%
application workflow had access patterns
based<00:43:47.920><c> on</c><00:43:48.079><c> the</c><00:43:48.240><c> queries</c>

00:43:49.430 --> 00:43:49.440 align:start position:0%
based on the queries
 

00:43:49.440 --> 00:43:53.190 align:start position:0%
based on the queries
which<00:43:49.760><c> we</c><00:43:50.400><c> wish</c><00:43:50.720><c> to</c><00:43:51.359><c> execute</c><00:43:52.160><c> on</c><00:43:52.400><c> our</c><00:43:52.640><c> apache</c>

00:43:53.190 --> 00:43:53.200 align:start position:0%
which we wish to execute on our apache
 

00:43:53.200 --> 00:43:55.510 align:start position:0%
which we wish to execute on our apache
cassandra<00:43:53.920><c> database</c>

00:43:55.510 --> 00:43:55.520 align:start position:0%
cassandra database
 

00:43:55.520 --> 00:43:57.349 align:start position:0%
cassandra database
this<00:43:55.760><c> is</c><00:43:55.920><c> an</c><00:43:56.079><c> important</c><00:43:56.720><c> part</c><00:43:57.040><c> of</c><00:43:57.119><c> the</c>

00:43:57.349 --> 00:43:57.359 align:start position:0%
this is an important part of the
 

00:43:57.359 --> 00:43:59.670 align:start position:0%
this is an important part of the
application<00:43:58.240><c> workflow</c>

00:43:59.670 --> 00:43:59.680 align:start position:0%
application workflow
 

00:43:59.680 --> 00:44:02.950 align:start position:0%
application workflow
to<00:43:59.839><c> get</c><00:44:00.079><c> a</c><00:44:00.240><c> logical</c><00:44:00.800><c> data</c><00:44:01.200><c> model</c><00:44:02.000><c> we</c><00:44:02.240><c> combine</c>

00:44:02.950 --> 00:44:02.960 align:start position:0%
to get a logical data model we combine
 

00:44:02.960 --> 00:44:05.829 align:start position:0%
to get a logical data model we combine
the<00:44:03.200><c> results</c><00:44:03.760><c> of</c><00:44:03.839><c> the</c><00:44:04.000><c> conceptual</c><00:44:04.880><c> data</c><00:44:05.280><c> model</c>

00:44:05.829 --> 00:44:05.839 align:start position:0%
the results of the conceptual data model
 

00:44:05.839 --> 00:44:09.430 align:start position:0%
the results of the conceptual data model
and<00:44:06.079><c> the</c><00:44:06.319><c> access</c><00:44:06.839><c> patterns</c><00:44:08.319><c> after</c><00:44:08.720><c> combining</c>

00:44:09.430 --> 00:44:09.440 align:start position:0%
and the access patterns after combining
 

00:44:09.440 --> 00:44:13.190 align:start position:0%
and the access patterns after combining
them<00:44:10.079><c> some</c><00:44:10.319><c> mapping</c><00:44:10.880><c> rules</c><00:44:11.359><c> and</c><00:44:11.520><c> patterns</c><00:44:12.480><c> are</c>

00:44:13.190 --> 00:44:13.200 align:start position:0%
them some mapping rules and patterns are
 

00:44:13.200 --> 00:44:14.710 align:start position:0%
them some mapping rules and patterns are
applied

00:44:14.710 --> 00:44:14.720 align:start position:0%
applied
 

00:44:14.720 --> 00:44:18.630 align:start position:0%
applied
this<00:44:15.040><c> logical</c><00:44:15.680><c> model</c><00:44:16.480><c> is</c><00:44:16.720><c> described</c><00:44:17.920><c> using</c><00:44:18.480><c> a</c>

00:44:18.630 --> 00:44:18.640 align:start position:0%
this logical model is described using a
 

00:44:18.640 --> 00:44:22.630 align:start position:0%
this logical model is described using a
chiboko<00:44:19.520><c> diagram</c><00:44:20.400><c> a</c><00:44:20.640><c> diagram</c><00:44:21.200><c> named</c><00:44:21.839><c> after</c>

00:44:22.630 --> 00:44:22.640 align:start position:0%
chiboko diagram a diagram named after
 

00:44:22.640 --> 00:44:26.309 align:start position:0%
chiboko diagram a diagram named after
artem<00:44:23.359><c> chaboco</c><00:44:24.400><c> who</c><00:44:24.640><c> devised</c><00:44:25.280><c> his</c><00:44:25.520><c> method</c><00:44:26.079><c> of</c>

00:44:26.309 --> 00:44:26.319 align:start position:0%
artem chaboco who devised his method of
 

00:44:26.319 --> 00:44:30.550 align:start position:0%
artem chaboco who devised his method of
mapping<00:44:26.880><c> to</c><00:44:27.040><c> a</c><00:44:27.200><c> logical</c><00:44:27.839><c> data</c><00:44:28.240><c> model</c>

00:44:30.550 --> 00:44:30.560 align:start position:0%
mapping to a logical data model
 

00:44:30.560 --> 00:44:32.990 align:start position:0%
mapping to a logical data model
chaboco<00:44:31.119><c> diagrams</c><00:44:32.160><c> graphical</c>

00:44:32.990 --> 00:44:33.000 align:start position:0%
chaboco diagrams graphical
 

00:44:33.000 --> 00:44:35.910 align:start position:0%
chaboco diagrams graphical
representations<00:44:34.079><c> of</c><00:44:34.240><c> cassandra</c><00:44:35.119><c> database</c>

00:44:35.910 --> 00:44:35.920 align:start position:0%
representations of cassandra database
 

00:44:35.920 --> 00:44:38.150 align:start position:0%
representations of cassandra database
schema<00:44:36.640><c> design</c>

00:44:38.150 --> 00:44:38.160 align:start position:0%
schema design
 

00:44:38.160 --> 00:44:40.790 align:start position:0%
schema design
they<00:44:38.400><c> document</c><00:44:39.119><c> the</c><00:44:39.280><c> logical</c><00:44:40.000><c> and</c><00:44:40.160><c> physical</c>

00:44:40.790 --> 00:44:40.800 align:start position:0%
they document the logical and physical
 

00:44:40.800 --> 00:44:43.589 align:start position:0%
they document the logical and physical
data<00:44:41.200><c> models</c><00:44:41.760><c> respectively</c>

00:44:43.589 --> 00:44:43.599 align:start position:0%
data models respectively
 

00:44:43.599 --> 00:44:45.829 align:start position:0%
data models respectively
you<00:44:43.839><c> already</c><00:44:44.319><c> know</c><00:44:44.560><c> your</c><00:44:44.800><c> entities</c><00:44:45.440><c> that</c><00:44:45.680><c> is</c>

00:44:45.829 --> 00:44:45.839 align:start position:0%
you already know your entities that is
 

00:44:45.839 --> 00:44:48.710 align:start position:0%
you already know your entities that is
the<00:44:46.000><c> video</c><00:44:46.560><c> and</c><00:44:46.640><c> the</c><00:44:46.800><c> key</c><00:44:47.119><c> attributes</c>

00:44:48.710 --> 00:44:48.720 align:start position:0%
the video and the key attributes
 

00:44:48.720 --> 00:44:51.670 align:start position:0%
the video and the key attributes
at<00:44:48.960><c> the</c><00:44:49.119><c> bottom</c><00:44:49.920><c> query</c><00:44:50.400><c> one</c><00:44:50.800><c> is</c><00:44:50.960><c> to</c><00:44:51.200><c> find</c><00:44:51.520><c> a</c>

00:44:51.670 --> 00:44:51.680 align:start position:0%
at the bottom query one is to find a
 

00:44:51.680 --> 00:44:55.349 align:start position:0%
at the bottom query one is to find a
video<00:44:52.240><c> with</c><00:44:52.480><c> a</c><00:44:52.560><c> specified</c><00:44:53.520><c> video</c><00:44:54.000><c> id</c>

00:44:55.349 --> 00:44:55.359 align:start position:0%
video with a specified video id
 

00:44:55.359 --> 00:44:58.069 align:start position:0%
video with a specified video id
now<00:44:55.599><c> if</c><00:44:55.760><c> you</c><00:44:55.920><c> look</c><00:44:56.079><c> at</c><00:44:56.240><c> the</c><00:44:56.400><c> chiboko</c><00:44:57.040><c> diagram</c>

00:44:58.069 --> 00:44:58.079 align:start position:0%
now if you look at the chiboko diagram
 

00:44:58.079 --> 00:45:01.349 align:start position:0%
now if you look at the chiboko diagram
we<00:44:58.319><c> can</c><00:44:58.640><c> see</c><00:44:59.040><c> that</c><00:44:59.359><c> q1</c><00:45:00.000><c> leads</c><00:45:00.400><c> into</c><00:45:00.720><c> a</c><00:45:00.880><c> table</c>

00:45:01.349 --> 00:45:01.359 align:start position:0%
we can see that q1 leads into a table
 

00:45:01.359 --> 00:45:04.950 align:start position:0%
we can see that q1 leads into a table
which<00:45:01.599><c> can</c><00:45:01.920><c> satisfy</c><00:45:02.720><c> this</c><00:45:03.040><c> query</c><00:45:04.240><c> we</c><00:45:04.400><c> will</c><00:45:04.640><c> get</c>

00:45:04.950 --> 00:45:04.960 align:start position:0%
which can satisfy this query we will get
 

00:45:04.960 --> 00:45:07.910 align:start position:0%
which can satisfy this query we will get
into<00:45:05.280><c> that</c><00:45:05.599><c> in</c><00:45:05.760><c> more</c><00:45:06.000><c> detail</c><00:45:06.640><c> but</c><00:45:06.960><c> first</c><00:45:07.680><c> we</c>

00:45:07.910 --> 00:45:07.920 align:start position:0%
into that in more detail but first we
 

00:45:07.920 --> 00:45:09.990 align:start position:0%
into that in more detail but first we
have<00:45:08.160><c> to</c><00:45:08.640><c> understand</c><00:45:09.520><c> some</c><00:45:09.760><c> of</c><00:45:09.839><c> the</c>

00:45:09.990 --> 00:45:10.000 align:start position:0%
have to understand some of the
 

00:45:10.000 --> 00:45:13.109 align:start position:0%
have to understand some of the
terminologies<00:45:11.280><c> used</c><00:45:11.760><c> here</c>

00:45:13.109 --> 00:45:13.119 align:start position:0%
terminologies used here
 

00:45:13.119 --> 00:45:15.750 align:start position:0%
terminologies used here
first<00:45:13.440><c> and</c><00:45:13.680><c> foremost</c><00:45:14.480><c> this</c><00:45:14.800><c> diagram</c><00:45:15.359><c> looks</c>

00:45:15.750 --> 00:45:15.760 align:start position:0%
first and foremost this diagram looks
 

00:45:15.760 --> 00:45:19.349 align:start position:0%
first and foremost this diagram looks
very<00:45:16.079><c> similar</c><00:45:16.800><c> to</c><00:45:16.960><c> an</c><00:45:17.200><c> application</c><00:45:18.000><c> workflow</c>

00:45:19.349 --> 00:45:19.359 align:start position:0%
very similar to an application workflow
 

00:45:19.359 --> 00:45:22.069 align:start position:0%
very similar to an application workflow
we<00:45:19.520><c> have</c><00:45:19.760><c> a</c><00:45:19.839><c> queries</c><00:45:20.480><c> which</c><00:45:20.800><c> lead</c><00:45:21.040><c> us</c><00:45:21.599><c> into</c><00:45:21.920><c> the</c>

00:45:22.069 --> 00:45:22.079 align:start position:0%
we have a queries which lead us into the
 

00:45:22.079 --> 00:45:23.750 align:start position:0%
we have a queries which lead us into the
tables

00:45:23.750 --> 00:45:23.760 align:start position:0%
tables
 

00:45:23.760 --> 00:45:26.230 align:start position:0%
tables
we<00:45:23.920><c> have</c><00:45:24.160><c> the</c><00:45:24.319><c> table</c><00:45:24.800><c> diagrams</c><00:45:25.680><c> which</c><00:45:26.000><c> are</c>

00:45:26.230 --> 00:45:26.240 align:start position:0%
we have the table diagrams which are
 

00:45:26.240 --> 00:45:28.390 align:start position:0%
we have the table diagrams which are
similar<00:45:26.720><c> to</c><00:45:26.880><c> the</c><00:45:27.040><c> tables</c><00:45:27.599><c> we</c><00:45:27.839><c> have</c><00:45:28.079><c> in</c><00:45:28.240><c> our</c>

00:45:28.390 --> 00:45:28.400 align:start position:0%
similar to the tables we have in our
 

00:45:28.400 --> 00:45:31.349 align:start position:0%
similar to the tables we have in our
cassandra<00:45:29.200><c> database</c>

00:45:31.349 --> 00:45:31.359 align:start position:0%
cassandra database
 

00:45:31.359 --> 00:45:33.990 align:start position:0%
cassandra database
we<00:45:31.520><c> have</c><00:45:31.680><c> the</c><00:45:32.079><c> query</c><00:45:32.480><c> list</c><00:45:33.200><c> at</c><00:45:33.280><c> the</c><00:45:33.520><c> bottom</c>

00:45:33.990 --> 00:45:34.000 align:start position:0%
we have the query list at the bottom
 

00:45:34.000 --> 00:45:35.270 align:start position:0%
we have the query list at the bottom
right

00:45:35.270 --> 00:45:35.280 align:start position:0%
right
 

00:45:35.280 --> 00:45:37.510 align:start position:0%
right
as<00:45:35.440><c> you</c><00:45:35.599><c> know</c><00:45:35.920><c> queries</c><00:45:36.480><c> are</c><00:45:36.560><c> the</c><00:45:36.720><c> king</c><00:45:37.200><c> and</c><00:45:37.280><c> the</c>

00:45:37.510 --> 00:45:37.520 align:start position:0%
as you know queries are the king and the
 

00:45:37.520 --> 00:45:40.230 align:start position:0%
as you know queries are the king and the
queen<00:45:38.079><c> while</c><00:45:38.319><c> designing</c><00:45:39.040><c> the</c><00:45:39.200><c> cassandra</c><00:45:39.839><c> data</c>

00:45:40.230 --> 00:45:40.240 align:start position:0%
queen while designing the cassandra data
 

00:45:40.240 --> 00:45:41.589 align:start position:0%
queen while designing the cassandra data
model

00:45:41.589 --> 00:45:41.599 align:start position:0%
model
 

00:45:41.599 --> 00:45:45.190 align:start position:0%
model
and<00:45:41.839><c> lastly</c><00:45:42.400><c> we</c><00:45:42.640><c> have</c><00:45:42.880><c> our</c><00:45:43.079><c> udt's</c><00:45:44.560><c> which</c><00:45:44.800><c> stand</c>

00:45:45.190 --> 00:45:45.200 align:start position:0%
and lastly we have our udt's which stand
 

00:45:45.200 --> 00:45:48.630 align:start position:0%
and lastly we have our udt's which stand
for<00:45:45.640><c> user-defined</c><00:45:46.720><c> data</c><00:45:47.119><c> types</c>

00:45:48.630 --> 00:45:48.640 align:start position:0%
for user-defined data types
 

00:45:48.640 --> 00:45:51.030 align:start position:0%
for user-defined data types
these<00:45:48.880><c> are</c><00:45:49.119><c> a</c><00:45:49.200><c> lot</c><00:45:49.599><c> like</c><00:45:49.760><c> cassandra</c><00:45:50.400><c> tables</c>

00:45:51.030 --> 00:45:51.040 align:start position:0%
these are a lot like cassandra tables
 

00:45:51.040 --> 00:45:53.829 align:start position:0%
these are a lot like cassandra tables
but<00:45:51.200><c> without</c><00:45:51.760><c> a</c><00:45:51.920><c> primary</c><00:45:52.640><c> key</c>

00:45:53.829 --> 00:45:53.839 align:start position:0%
but without a primary key
 

00:45:53.839 --> 00:45:56.470 align:start position:0%
but without a primary key
and<00:45:54.079><c> these</c><00:45:54.480><c> can</c><00:45:54.720><c> be</c><00:45:55.280><c> nested</c><00:45:55.920><c> into</c><00:45:56.240><c> other</c>

00:45:56.470 --> 00:45:56.480 align:start position:0%
and these can be nested into other
 

00:45:56.480 --> 00:45:58.829 align:start position:0%
and these can be nested into other
cassandra

00:45:58.829 --> 00:45:58.839 align:start position:0%
cassandra
 

00:45:58.839 --> 00:46:02.150 align:start position:0%
cassandra
tables<00:45:59.920><c> on</c><00:46:00.240><c> a</c><00:46:00.319><c> logical</c><00:46:00.960><c> level</c><00:46:01.359><c> the</c><00:46:01.520><c> cheboko</c>

00:46:02.150 --> 00:46:02.160 align:start position:0%
tables on a logical level the cheboko
 

00:46:02.160 --> 00:46:04.550 align:start position:0%
tables on a logical level the cheboko
diagram<00:46:02.880><c> shows</c><00:46:03.280><c> the</c><00:46:03.440><c> column</c><00:46:03.920><c> names</c><00:46:04.319><c> and</c>

00:46:04.550 --> 00:46:04.560 align:start position:0%
diagram shows the column names and
 

00:46:04.560 --> 00:46:06.470 align:start position:0%
diagram shows the column names and
properties

00:46:06.470 --> 00:46:06.480 align:start position:0%
properties
 

00:46:06.480 --> 00:46:09.109 align:start position:0%
properties
on<00:46:06.800><c> a</c><00:46:06.880><c> physical</c><00:46:07.440><c> level</c><00:46:07.839><c> cheboko</c><00:46:08.560><c> shows</c><00:46:08.880><c> the</c>

00:46:09.109 --> 00:46:09.119 align:start position:0%
on a physical level cheboko shows the
 

00:46:09.119 --> 00:46:11.430 align:start position:0%
on a physical level cheboko shows the
column<00:46:09.599><c> data</c><00:46:10.000><c> type</c>

00:46:11.430 --> 00:46:11.440 align:start position:0%
column data type
 

00:46:11.440 --> 00:46:14.230 align:start position:0%
column data type
in<00:46:11.680><c> order</c><00:46:12.000><c> to</c><00:46:12.160><c> move</c><00:46:12.560><c> from</c><00:46:12.720><c> the</c><00:46:12.880><c> logical</c><00:46:13.680><c> tables</c>

00:46:14.230 --> 00:46:14.240 align:start position:0%
in order to move from the logical tables
 

00:46:14.240 --> 00:46:16.870 align:start position:0%
in order to move from the logical tables
to<00:46:14.400><c> the</c><00:46:14.560><c> physical</c><00:46:15.119><c> tables</c><00:46:15.920><c> we</c><00:46:16.079><c> just</c><00:46:16.400><c> need</c><00:46:16.640><c> to</c>

00:46:16.870 --> 00:46:16.880 align:start position:0%
to the physical tables we just need to
 

00:46:16.880 --> 00:46:20.550 align:start position:0%
to the physical tables we just need to
add<00:46:17.520><c> column</c><00:46:17.920><c> data</c><00:46:18.319><c> type</c><00:46:19.119><c> followed</c><00:46:19.599><c> by</c><00:46:20.000><c> a</c><00:46:20.240><c> bit</c>

00:46:20.550 --> 00:46:20.560 align:start position:0%
add column data type followed by a bit
 

00:46:20.560 --> 00:46:23.910 align:start position:0%
add column data type followed by a bit
of<00:46:20.800><c> optimization</c><00:46:22.240><c> if</c><00:46:22.560><c> needed</c>

00:46:23.910 --> 00:46:23.920 align:start position:0%
of optimization if needed
 

00:46:23.920 --> 00:46:26.230 align:start position:0%
of optimization if needed
here<00:46:24.160><c> is</c><00:46:24.319><c> an</c><00:46:24.560><c> example</c><00:46:25.200><c> of</c><00:46:25.280><c> how</c><00:46:25.520><c> a</c><00:46:25.599><c> table</c><00:46:26.079><c> is</c>

00:46:26.230 --> 00:46:26.240 align:start position:0%
here is an example of how a table is
 

00:46:26.240 --> 00:46:29.349 align:start position:0%
here is an example of how a table is
broken<00:46:26.720><c> down</c><00:46:27.119><c> by</c><00:46:27.359><c> column</c><00:46:27.839><c> name</c><00:46:28.319><c> data</c><00:46:28.720><c> type</c><00:46:29.119><c> and</c>

00:46:29.349 --> 00:46:29.359 align:start position:0%
broken down by column name data type and
 

00:46:29.359 --> 00:46:31.270 align:start position:0%
broken down by column name data type and
type<00:46:29.680><c> of</c><00:46:29.920><c> column</c>

00:46:31.270 --> 00:46:31.280 align:start position:0%
type of column
 

00:46:31.280 --> 00:46:33.990 align:start position:0%
type of column
as<00:46:31.520><c> you</c><00:46:31.599><c> can</c><00:46:31.839><c> see</c><00:46:32.560><c> in</c><00:46:32.720><c> our</c><00:46:32.880><c> table</c><00:46:33.440><c> we</c><00:46:33.599><c> have</c><00:46:33.760><c> some</c>

00:46:33.990 --> 00:46:34.000 align:start position:0%
as you can see in our table we have some
 

00:46:34.000 --> 00:46:36.870 align:start position:0%
as you can see in our table we have some
abstract<00:46:34.720><c> column</c><00:46:35.119><c> names</c><00:46:35.599><c> on</c><00:46:35.680><c> the</c><00:46:35.920><c> left</c><00:46:36.720><c> and</c>

00:46:36.870 --> 00:46:36.880 align:start position:0%
abstract column names on the left and
 

00:46:36.880 --> 00:46:39.750 align:start position:0%
abstract column names on the left and
the<00:46:37.040><c> corresponding</c><00:46:38.240><c> descriptions</c><00:46:39.359><c> on</c><00:46:39.599><c> the</c>

00:46:39.750 --> 00:46:39.760 align:start position:0%
the corresponding descriptions on the
 

00:46:39.760 --> 00:46:40.710 align:start position:0%
the corresponding descriptions on the
right

00:46:40.710 --> 00:46:40.720 align:start position:0%
right
 

00:46:40.720 --> 00:46:44.150 align:start position:0%
right
note<00:46:41.040><c> that</c><00:46:41.520><c> the</c><00:46:42.160><c> notation</c><00:46:43.040><c> on</c><00:46:43.200><c> the</c><00:46:43.359><c> left</c>

00:46:44.150 --> 00:46:44.160 align:start position:0%
note that the notation on the left
 

00:46:44.160 --> 00:46:46.550 align:start position:0%
note that the notation on the left
corresponds<00:46:45.119><c> to</c><00:46:45.280><c> the</c><00:46:45.440><c> description</c><00:46:46.319><c> on</c><00:46:46.400><c> the</c>

00:46:46.550 --> 00:46:46.560 align:start position:0%
corresponds to the description on the
 

00:46:46.560 --> 00:46:49.990 align:start position:0%
corresponds to the description on the
right<00:46:47.200><c> that</c><00:46:47.440><c> is</c><00:46:47.760><c> column</c><00:46:48.319><c> 7</c><00:46:48.720><c> which</c><00:46:48.960><c> is</c><00:46:49.119><c> a</c><00:46:49.280><c> list</c>

00:46:49.990 --> 00:46:50.000 align:start position:0%
right that is column 7 which is a list
 

00:46:50.000 --> 00:46:52.870 align:start position:0%
right that is column 7 which is a list
is<00:46:50.160><c> in</c><00:46:50.400><c> square</c><00:46:51.119><c> brackets</c>

00:46:52.870 --> 00:46:52.880 align:start position:0%
is in square brackets
 

00:46:52.880 --> 00:46:56.390 align:start position:0%
is in square brackets
similarly<00:46:53.680><c> column</c><00:46:54.079><c> 8</c><00:46:54.400><c> a</c><00:46:54.560><c> set</c><00:46:55.119><c> is</c><00:46:55.440><c> enclosed</c><00:46:56.240><c> in</c>

00:46:56.390 --> 00:46:56.400 align:start position:0%
similarly column 8 a set is enclosed in
 

00:46:56.400 --> 00:46:58.550 align:start position:0%
similarly column 8 a set is enclosed in
curly<00:46:56.880><c> brackets</c>

00:46:58.550 --> 00:46:58.560 align:start position:0%
curly brackets
 

00:46:58.560 --> 00:47:02.550 align:start position:0%
curly brackets
also<00:46:59.200><c> a</c><00:46:59.359><c> map</c><00:46:59.760><c> like</c><00:47:00.079><c> column</c><00:47:00.480><c> 9</c><00:47:01.200><c> is</c><00:47:01.839><c> in</c><00:47:02.079><c> angular</c>

00:47:02.550 --> 00:47:02.560 align:start position:0%
also a map like column 9 is in angular
 

00:47:02.560 --> 00:47:05.190 align:start position:0%
also a map like column 9 is in angular
brackets<00:47:03.200><c> and</c><00:47:03.440><c> so</c><00:47:03.760><c> on</c>

00:47:05.190 --> 00:47:05.200 align:start position:0%
brackets and so on
 

00:47:05.200 --> 00:47:07.990 align:start position:0%
brackets and so on
however<00:47:05.920><c> the</c><00:47:06.160><c> key</c><00:47:06.480><c> thing</c><00:47:06.720><c> to</c><00:47:06.960><c> notice</c><00:47:07.440><c> here</c><00:47:07.839><c> is</c>

00:47:07.990 --> 00:47:08.000 align:start position:0%
however the key thing to notice here is
 

00:47:08.000 --> 00:47:10.630 align:start position:0%
however the key thing to notice here is
that<00:47:08.480><c> all</c><00:47:08.720><c> these</c><00:47:09.119><c> columns</c><00:47:09.680><c> are</c><00:47:09.920><c> followed</c><00:47:10.400><c> by</c>

00:47:10.630 --> 00:47:10.640 align:start position:0%
that all these columns are followed by
 

00:47:10.640 --> 00:47:14.230 align:start position:0%
that all these columns are followed by
their<00:47:11.200><c> cql</c><00:47:12.000><c> types</c><00:47:12.800><c> which</c><00:47:13.040><c> we</c><00:47:13.280><c> have</c><00:47:13.520><c> previously</c>

00:47:14.230 --> 00:47:14.240 align:start position:0%
their cql types which we have previously
 

00:47:14.240 --> 00:47:15.670 align:start position:0%
their cql types which we have previously
studied

00:47:15.670 --> 00:47:15.680 align:start position:0%
studied
 

00:47:15.680 --> 00:47:19.030 align:start position:0%
studied
it<00:47:15.920><c> is</c><00:47:16.079><c> the</c><00:47:16.240><c> physical</c><00:47:16.880><c> types</c><00:47:17.920><c> that</c><00:47:18.480><c> makes</c><00:47:18.880><c> the</c>

00:47:19.030 --> 00:47:19.040 align:start position:0%
it is the physical types that makes the
 

00:47:19.040 --> 00:47:21.270 align:start position:0%
it is the physical types that makes the
table<00:47:19.839><c> physical</c>

00:47:21.270 --> 00:47:21.280 align:start position:0%
table physical
 

00:47:21.280 --> 00:47:23.910 align:start position:0%
table physical
we<00:47:21.440><c> can</c><00:47:21.760><c> now</c><00:47:22.160><c> write</c><00:47:22.720><c> our</c><00:47:23.040><c> create</c><00:47:23.440><c> table</c>

00:47:23.910 --> 00:47:23.920 align:start position:0%
we can now write our create table
 

00:47:23.920 --> 00:47:27.030 align:start position:0%
we can now write our create table
commands<00:47:24.960><c> using</c><00:47:25.359><c> these</c><00:47:25.680><c> column</c><00:47:26.160><c> names</c><00:47:26.800><c> and</c>

00:47:27.030 --> 00:47:27.040 align:start position:0%
commands using these column names and
 

00:47:27.040 --> 00:47:31.109 align:start position:0%
commands using these column names and
their<00:47:27.200><c> respective</c><00:47:27.920><c> types</c><00:47:28.720><c> into</c><00:47:29.119><c> our</c><00:47:29.200><c> database</c>

00:47:31.109 --> 00:47:31.119 align:start position:0%
their respective types into our database
 

00:47:31.119 --> 00:47:34.230 align:start position:0%
their respective types into our database
also<00:47:31.520><c> note</c><00:47:32.240><c> that</c><00:47:32.480><c> column</c><00:47:32.960><c> one</c><00:47:33.280><c> is</c><00:47:33.440><c> a</c><00:47:33.599><c> partition</c>

00:47:34.230 --> 00:47:34.240 align:start position:0%
also note that column one is a partition
 

00:47:34.240 --> 00:47:37.990 align:start position:0%
also note that column one is a partition
key<00:47:34.960><c> which</c><00:47:35.280><c> is</c><00:47:35.839><c> represented</c><00:47:36.640><c> in</c><00:47:36.720><c> the</c><00:47:36.880><c> table</c><00:47:37.520><c> as</c>

00:47:37.990 --> 00:47:38.000 align:start position:0%
key which is represented in the table as
 

00:47:38.000 --> 00:47:39.510 align:start position:0%
key which is represented in the table as
k

00:47:39.510 --> 00:47:39.520 align:start position:0%
k
 

00:47:39.520 --> 00:47:42.790 align:start position:0%
k
similarly<00:47:40.240><c> column</c><00:47:40.800><c> 2</c><00:47:41.119><c> and</c><00:47:41.359><c> 3</c><00:47:41.760><c> are</c><00:47:42.079><c> clustering</c>

00:47:42.790 --> 00:47:42.800 align:start position:0%
similarly column 2 and 3 are clustering
 

00:47:42.800 --> 00:47:46.150 align:start position:0%
similarly column 2 and 3 are clustering
columns<00:47:43.599><c> which</c><00:47:43.920><c> are</c><00:47:44.560><c> represented</c><00:47:45.359><c> by</c><00:47:45.680><c> c</c>

00:47:46.150 --> 00:47:46.160 align:start position:0%
columns which are represented by c
 

00:47:46.160 --> 00:47:49.270 align:start position:0%
columns which are represented by c
followed<00:47:46.560><c> by</c><00:47:47.119><c> an</c><00:47:47.359><c> upward</c><00:47:47.920><c> arrow</c><00:47:48.400><c> or</c><00:47:48.560><c> downward</c>

00:47:49.270 --> 00:47:49.280 align:start position:0%
followed by an upward arrow or downward
 

00:47:49.280 --> 00:47:51.990 align:start position:0%
followed by an upward arrow or downward
arrow<00:47:49.599><c> representing</c><00:47:50.560><c> the</c><00:47:50.720><c> ascending</c><00:47:51.520><c> order</c>

00:47:51.990 --> 00:47:52.000 align:start position:0%
arrow representing the ascending order
 

00:47:52.000 --> 00:47:55.109 align:start position:0%
arrow representing the ascending order
or<00:47:52.160><c> descending</c><00:47:52.800><c> order</c><00:47:53.200><c> respectively</c>

00:47:55.109 --> 00:47:55.119 align:start position:0%
or descending order respectively
 

00:47:55.119 --> 00:47:58.309 align:start position:0%
or descending order respectively
a<00:47:55.280><c> static</c><00:47:55.760><c> column</c><00:47:56.319><c> is</c><00:47:56.480><c> specified</c><00:47:57.200><c> by</c><00:47:57.520><c> s</c>

00:47:58.309 --> 00:47:58.319 align:start position:0%
a static column is specified by s
 

00:47:58.319 --> 00:48:01.750 align:start position:0%
a static column is specified by s
secondary<00:47:58.960><c> index</c><00:47:59.440><c> column</c><00:47:59.839><c> as</c><00:48:00.079><c> idx</c><00:48:01.280><c> and</c><00:48:01.599><c> the</c>

00:48:01.750 --> 00:48:01.760 align:start position:0%
secondary index column as idx and the
 

00:48:01.760 --> 00:48:06.150 align:start position:0%
secondary index column as idx and the
counter<00:48:02.240><c> column</c><00:48:02.800><c> as</c><00:48:02.960><c> a</c><00:48:03.359><c> plus</c><00:48:04.000><c> plus</c>

00:48:06.150 --> 00:48:06.160 align:start position:0%
counter column as a plus plus
 

00:48:06.160 --> 00:48:09.109 align:start position:0%
counter column as a plus plus
here<00:48:06.560><c> you</c><00:48:06.720><c> will</c><00:48:06.960><c> learn</c><00:48:07.280><c> about</c><00:48:07.920><c> logical</c><00:48:08.480><c> udt</c>

00:48:09.109 --> 00:48:09.119 align:start position:0%
here you will learn about logical udt
 

00:48:09.119 --> 00:48:11.510 align:start position:0%
here you will learn about logical udt
diagrams<00:48:09.839><c> in</c><00:48:10.000><c> detail</c>

00:48:11.510 --> 00:48:11.520 align:start position:0%
diagrams in detail
 

00:48:11.520 --> 00:48:15.670 align:start position:0%
diagrams in detail
udt<00:48:12.240><c> is</c><00:48:12.400><c> a</c><00:48:12.560><c> data</c><00:48:12.960><c> type</c><00:48:13.599><c> and</c><00:48:13.839><c> udts</c><00:48:14.800><c> can</c><00:48:15.200><c> be</c>

00:48:15.670 --> 00:48:15.680 align:start position:0%
udt is a data type and udts can be
 

00:48:15.680 --> 00:48:18.390 align:start position:0%
udt is a data type and udts can be
nested<00:48:16.240><c> within</c><00:48:16.640><c> one</c><00:48:16.880><c> another</c>

00:48:18.390 --> 00:48:18.400 align:start position:0%
nested within one another
 

00:48:18.400 --> 00:48:21.430 align:start position:0%
nested within one another
for<00:48:18.640><c> example</c><00:48:19.680><c> there</c><00:48:19.920><c> is</c><00:48:20.000><c> an</c><00:48:20.160><c> encoding</c><00:48:20.960><c> column</c>

00:48:21.430 --> 00:48:21.440 align:start position:0%
for example there is an encoding column
 

00:48:21.440 --> 00:48:23.430 align:start position:0%
for example there is an encoding column
in<00:48:21.520><c> the</c><00:48:21.599><c> videos</c><00:48:22.240><c> table</c>

00:48:23.430 --> 00:48:23.440 align:start position:0%
in the videos table
 

00:48:23.440 --> 00:48:25.829 align:start position:0%
in the videos table
this<00:48:23.760><c> column</c><00:48:24.160><c> represents</c><00:48:24.880><c> our</c><00:48:25.200><c> data</c><00:48:25.680><c> is</c>

00:48:25.829 --> 00:48:25.839 align:start position:0%
this column represents our data is
 

00:48:25.839 --> 00:48:28.309 align:start position:0%
this column represents our data is
stored<00:48:26.319><c> in</c><00:48:26.400><c> the</c><00:48:26.559><c> database</c>

00:48:28.309 --> 00:48:28.319 align:start position:0%
stored in the database
 

00:48:28.319 --> 00:48:31.910 align:start position:0%
stored in the database
there<00:48:28.480><c> is</c><00:48:28.720><c> more</c><00:48:29.040><c> information</c><00:48:30.079><c> about</c><00:48:30.880><c> the</c><00:48:31.119><c> data</c>

00:48:31.910 --> 00:48:31.920 align:start position:0%
there is more information about the data
 

00:48:31.920 --> 00:48:34.470 align:start position:0%
there is more information about the data
than<00:48:32.160><c> just</c><00:48:32.480><c> simple</c><00:48:32.960><c> text</c>

00:48:34.470 --> 00:48:34.480 align:start position:0%
than just simple text
 

00:48:34.480 --> 00:48:36.950 align:start position:0%
than just simple text
hence<00:48:34.800><c> it</c><00:48:34.960><c> is</c><00:48:35.119><c> encapsulated</c><00:48:36.160><c> and</c><00:48:36.319><c> it's</c><00:48:36.559><c> stored</c>

00:48:36.950 --> 00:48:36.960 align:start position:0%
hence it is encapsulated and it's stored
 

00:48:36.960 --> 00:48:39.270 align:start position:0%
hence it is encapsulated and it's stored
in<00:48:37.040><c> the</c><00:48:37.280><c> encoding</c><00:48:37.920><c> udt</c>

00:48:39.270 --> 00:48:39.280 align:start position:0%
in the encoding udt
 

00:48:39.280 --> 00:48:41.829 align:start position:0%
in the encoding udt
it<00:48:39.520><c> has</c><00:48:39.680><c> attributes</c><00:48:40.319><c> of</c><00:48:40.480><c> encoding</c><00:48:41.280><c> height</c>

00:48:41.829 --> 00:48:41.839 align:start position:0%
it has attributes of encoding height
 

00:48:41.839 --> 00:48:44.710 align:start position:0%
it has attributes of encoding height
width<00:48:42.400><c> and</c><00:48:42.800><c> bit</c><00:48:43.119><c> rates</c>

00:48:44.710 --> 00:48:44.720 align:start position:0%
width and bit rates
 

00:48:44.720 --> 00:48:47.349 align:start position:0%
width and bit rates
the<00:48:44.960><c> same</c><00:48:45.280><c> is</c><00:48:45.440><c> true</c><00:48:45.760><c> for</c><00:48:46.000><c> actor</c><00:48:46.400><c> name</c><00:48:47.040><c> which</c>

00:48:47.349 --> 00:48:47.359 align:start position:0%
the same is true for actor name which
 

00:48:47.359 --> 00:48:49.990 align:start position:0%
the same is true for actor name which
encapsulates<00:48:48.319><c> the</c><00:48:48.480><c> first</c><00:48:48.880><c> name</c><00:48:49.280><c> and</c><00:48:49.520><c> last</c>

00:48:49.990 --> 00:48:50.000 align:start position:0%
encapsulates the first name and last
 

00:48:50.000 --> 00:48:52.549 align:start position:0%
encapsulates the first name and last
name<00:48:50.240><c> of</c><00:48:50.400><c> the</c><00:48:50.640><c> actor</c><00:48:51.280><c> and</c><00:48:51.520><c> stores</c><00:48:52.000><c> it</c><00:48:52.240><c> into</c><00:48:52.480><c> the</c>

00:48:52.549 --> 00:48:52.559 align:start position:0%
name of the actor and stores it into the
 

00:48:52.559 --> 00:48:54.549 align:start position:0%
name of the actor and stores it into the
udt<00:48:53.280><c> column</c>

00:48:54.549 --> 00:48:54.559 align:start position:0%
udt column
 

00:48:54.559 --> 00:48:56.950 align:start position:0%
udt column
if<00:48:54.800><c> we</c><00:48:54.960><c> want</c><00:48:55.200><c> to</c><00:48:55.280><c> have</c><00:48:55.520><c> a</c><00:48:55.680><c> single</c><00:48:56.240><c> column</c><00:48:56.800><c> to</c>

00:48:56.950 --> 00:48:56.960 align:start position:0%
if we want to have a single column to
 

00:48:56.960 --> 00:48:59.750 align:start position:0%
if we want to have a single column to
store<00:48:57.440><c> both</c><00:48:57.839><c> first</c><00:48:58.240><c> and</c><00:48:58.480><c> last</c><00:48:58.880><c> name</c><00:48:59.359><c> or</c><00:48:59.520><c> have</c>

00:48:59.750 --> 00:48:59.760 align:start position:0%
store both first and last name or have
 

00:48:59.760 --> 00:49:02.950 align:start position:0%
store both first and last name or have
them<00:49:00.079><c> stored</c><00:49:00.720><c> differently</c><00:49:01.680><c> it</c><00:49:01.920><c> is</c><00:49:02.400><c> important</c>

00:49:02.950 --> 00:49:02.960 align:start position:0%
them stored differently it is important
 

00:49:02.960 --> 00:49:06.390 align:start position:0%
them stored differently it is important
to<00:49:03.119><c> remember</c><00:49:03.760><c> that</c><00:49:04.160><c> udt</c><00:49:04.800><c> can</c><00:49:05.040><c> be</c><00:49:05.280><c> very</c><00:49:05.599><c> helpful</c>

00:49:06.390 --> 00:49:06.400 align:start position:0%
to remember that udt can be very helpful
 

00:49:06.400 --> 00:49:08.710 align:start position:0%
to remember that udt can be very helpful
in<00:49:06.640><c> such</c><00:49:07.040><c> cases</c>

00:49:08.710 --> 00:49:08.720 align:start position:0%
in such cases
 

00:49:08.720 --> 00:49:11.270 align:start position:0%
in such cases
here<00:49:09.280><c> is</c><00:49:09.520><c> the</c><00:49:09.680><c> same</c><00:49:10.079><c> diagram</c><00:49:10.720><c> but</c><00:49:10.960><c> with</c><00:49:11.119><c> the</c>

00:49:11.270 --> 00:49:11.280 align:start position:0%
here is the same diagram but with the
 

00:49:11.280 --> 00:49:16.069 align:start position:0%
here is the same diagram but with the
cql<00:49:12.079><c> types</c><00:49:12.960><c> explicitly</c><00:49:13.920><c> specified</c>

00:49:16.069 --> 00:49:16.079 align:start position:0%
cql types explicitly specified
 

00:49:16.079 --> 00:49:18.309 align:start position:0%
cql types explicitly specified
is<00:49:16.240><c> a</c><00:49:16.440><c> representation</c><00:49:17.520><c> of</c><00:49:17.599><c> the</c><00:49:17.760><c> physical</c>

00:49:18.309 --> 00:49:18.319 align:start position:0%
is a representation of the physical
 

00:49:18.319 --> 00:49:21.190 align:start position:0%
is a representation of the physical
layer<00:49:18.880><c> udt</c><00:49:19.520><c> diagrams</c>

00:49:21.190 --> 00:49:21.200 align:start position:0%
layer udt diagrams
 

00:49:21.200 --> 00:49:24.870 align:start position:0%
layer udt diagrams
please<00:49:21.680><c> notice</c><00:49:22.480><c> how</c><00:49:23.040><c> real</c><00:49:23.520><c> cql</c><00:49:24.160><c> types</c><00:49:24.720><c> have</c>

00:49:24.870 --> 00:49:24.880 align:start position:0%
please notice how real cql types have
 

00:49:24.880 --> 00:49:29.190 align:start position:0%
please notice how real cql types have
been<00:49:25.200><c> specified</c><00:49:26.240><c> for</c><00:49:26.559><c> each</c><00:49:27.119><c> column</c>

00:49:29.190 --> 00:49:29.200 align:start position:0%
been specified for each column
 

00:49:29.200 --> 00:49:31.990 align:start position:0%
been specified for each column
this<00:49:29.440><c> is</c><00:49:29.599><c> a</c><00:49:29.760><c> classic</c><00:49:30.319><c> example</c><00:49:31.040><c> of</c><00:49:31.200><c> a</c><00:49:31.359><c> logical</c>

00:49:31.990 --> 00:49:32.000 align:start position:0%
this is a classic example of a logical
 

00:49:32.000 --> 00:49:34.390 align:start position:0%
this is a classic example of a logical
data<00:49:32.400><c> model</c><00:49:32.880><c> in</c><00:49:32.960><c> the</c><00:49:33.119><c> form</c><00:49:33.440><c> of</c><00:49:33.599><c> a</c><00:49:33.760><c> detailed</c>

00:49:34.390 --> 00:49:34.400 align:start position:0%
data model in the form of a detailed
 

00:49:34.400 --> 00:49:36.870 align:start position:0%
data model in the form of a detailed
chiboko<00:49:35.040><c> diagram</c><00:49:35.760><c> for</c><00:49:35.920><c> the</c><00:49:36.160><c> killer</c><00:49:36.480><c> video</c>

00:49:36.870 --> 00:49:36.880 align:start position:0%
chiboko diagram for the killer video
 

00:49:36.880 --> 00:49:38.230 align:start position:0%
chiboko diagram for the killer video
domain

00:49:38.230 --> 00:49:38.240 align:start position:0%
domain
 

00:49:38.240 --> 00:49:40.630 align:start position:0%
domain
take<00:49:38.480><c> a</c><00:49:38.559><c> moment</c><00:49:39.119><c> and</c><00:49:39.280><c> carefully</c><00:49:39.920><c> observe</c><00:49:40.319><c> this</c>

00:49:40.630 --> 00:49:40.640 align:start position:0%
take a moment and carefully observe this
 

00:49:40.640 --> 00:49:43.030 align:start position:0%
take a moment and carefully observe this
diagram<00:49:41.359><c> for</c><00:49:41.599><c> all</c><00:49:41.839><c> the</c><00:49:42.000><c> concepts</c><00:49:42.720><c> that</c><00:49:42.880><c> we</c>

00:49:43.030 --> 00:49:43.040 align:start position:0%
diagram for all the concepts that we
 

00:49:43.040 --> 00:49:45.589 align:start position:0%
diagram for all the concepts that we
have<00:49:43.200><c> covered</c><00:49:43.680><c> so</c><00:49:44.079><c> far</c>

00:49:45.589 --> 00:49:45.599 align:start position:0%
have covered so far
 

00:49:45.599 --> 00:49:48.390 align:start position:0%
have covered so far
we<00:49:45.760><c> have</c><00:49:46.000><c> queries</c><00:49:46.960><c> which</c><00:49:47.200><c> access</c><00:49:47.680><c> our</c><00:49:47.920><c> access</c>

00:49:48.390 --> 00:49:48.400 align:start position:0%
we have queries which access our access
 

00:49:48.400 --> 00:49:51.030 align:start position:0%
we have queries which access our access
patterns<00:49:49.440><c> are</c><00:49:49.599><c> tables</c><00:49:50.079><c> with</c><00:49:50.240><c> different</c><00:49:50.640><c> kinds</c>

00:49:51.030 --> 00:49:51.040 align:start position:0%
patterns are tables with different kinds
 

00:49:51.040 --> 00:49:54.150 align:start position:0%
patterns are tables with different kinds
of<00:49:51.280><c> data</c><00:49:52.160><c> an</c><00:49:52.400><c> application</c><00:49:53.119><c> workflow</c><00:49:53.839><c> that</c>

00:49:54.150 --> 00:49:54.160 align:start position:0%
of data an application workflow that
 

00:49:54.160 --> 00:49:56.870 align:start position:0%
of data an application workflow that
links<00:49:54.640><c> these</c><00:49:54.960><c> queries</c><00:49:55.520><c> to</c><00:49:55.680><c> the</c><00:49:55.839><c> tables</c><00:49:56.559><c> and</c>

00:49:56.870 --> 00:49:56.880 align:start position:0%
links these queries to the tables and
 

00:49:56.880 --> 00:50:01.750 align:start position:0%
links these queries to the tables and
are<00:49:57.119><c> encoding</c><00:49:57.760><c> udt</c><00:49:58.800><c> defined</c>

00:50:01.750 --> 00:50:01.760 align:start position:0%
 
 

00:50:01.760 --> 00:50:04.069 align:start position:0%
 
here<00:50:02.079><c> are</c><00:50:02.240><c> the</c><00:50:02.480><c> four</c><00:50:02.800><c> main</c><00:50:03.119><c> principles</c><00:50:03.920><c> of</c>

00:50:04.069 --> 00:50:04.079 align:start position:0%
here are the four main principles of
 

00:50:04.079 --> 00:50:06.790 align:start position:0%
here are the four main principles of
cassandra<00:50:05.200><c> data</c><00:50:05.599><c> modeling</c>

00:50:06.790 --> 00:50:06.800 align:start position:0%
cassandra data modeling
 

00:50:06.800 --> 00:50:08.630 align:start position:0%
cassandra data modeling
know<00:50:07.119><c> your</c><00:50:07.359><c> data</c>

00:50:08.630 --> 00:50:08.640 align:start position:0%
know your data
 

00:50:08.640 --> 00:50:10.390 align:start position:0%
know your data
know<00:50:08.960><c> your</c><00:50:09.200><c> queries</c>

00:50:10.390 --> 00:50:10.400 align:start position:0%
know your queries
 

00:50:10.400 --> 00:50:14.630 align:start position:0%
know your queries
nest<00:50:10.960><c> data</c><00:50:12.079><c> and</c><00:50:12.480><c> duplicate</c><00:50:13.280><c> data</c>

00:50:14.630 --> 00:50:14.640 align:start position:0%
nest data and duplicate data
 

00:50:14.640 --> 00:50:16.950 align:start position:0%
nest data and duplicate data
we<00:50:14.800><c> will</c><00:50:14.960><c> look</c><00:50:15.200><c> at</c><00:50:15.359><c> each</c><00:50:15.599><c> of</c><00:50:15.760><c> these</c><00:50:16.079><c> principles</c>

00:50:16.950 --> 00:50:16.960 align:start position:0%
we will look at each of these principles
 

00:50:16.960 --> 00:50:20.069 align:start position:0%
we will look at each of these principles
in<00:50:17.119><c> more</c><00:50:17.440><c> detail</c>

00:50:20.069 --> 00:50:20.079 align:start position:0%
in more detail
 

00:50:20.079 --> 00:50:22.710 align:start position:0%
in more detail
understanding<00:50:20.880><c> the</c><00:50:21.040><c> data</c><00:50:21.680><c> is</c><00:50:21.920><c> key</c><00:50:22.319><c> to</c><00:50:22.559><c> a</c>

00:50:22.710 --> 00:50:22.720 align:start position:0%
understanding the data is key to a
 

00:50:22.720 --> 00:50:26.710 align:start position:0%
understanding the data is key to a
successful<00:50:23.599><c> implementation</c><00:50:24.559><c> of</c><00:50:24.720><c> a</c><00:50:24.800><c> database</c>

00:50:26.710 --> 00:50:26.720 align:start position:0%
successful implementation of a database
 

00:50:26.720 --> 00:50:29.430 align:start position:0%
successful implementation of a database
a<00:50:26.960><c> proper</c><00:50:27.359><c> understanding</c><00:50:28.160><c> of</c><00:50:28.319><c> data</c><00:50:28.880><c> provides</c>

00:50:29.430 --> 00:50:29.440 align:start position:0%
a proper understanding of data provides
 

00:50:29.440 --> 00:50:31.990 align:start position:0%
a proper understanding of data provides
the<00:50:29.680><c> understanding</c><00:50:30.559><c> to</c><00:50:30.800><c> organize</c><00:50:31.440><c> the</c><00:50:31.599><c> data</c>

00:50:31.990 --> 00:50:32.000 align:start position:0%
the understanding to organize the data
 

00:50:32.000 --> 00:50:33.430 align:start position:0%
the understanding to organize the data
as<00:50:32.160><c> well</c>

00:50:33.430 --> 00:50:33.440 align:start position:0%
as well
 

00:50:33.440 --> 00:50:36.870 align:start position:0%
as well
as<00:50:33.680><c> we</c><00:50:33.839><c> have</c><00:50:34.079><c> seen</c><00:50:34.800><c> space</c><00:50:35.359><c> and</c><00:50:35.599><c> time</c><00:50:36.240><c> are</c><00:50:36.400><c> often</c>

00:50:36.870 --> 00:50:36.880 align:start position:0%
as we have seen space and time are often
 

00:50:36.880 --> 00:50:40.790 align:start position:0%
as we have seen space and time are often
are<00:50:37.040><c> primary</c><00:50:37.599><c> concerns</c><00:50:38.480><c> while</c><00:50:38.800><c> data</c><00:50:39.200><c> modeling</c>

00:50:40.790 --> 00:50:40.800 align:start position:0%
are primary concerns while data modeling
 

00:50:40.800 --> 00:50:44.150 align:start position:0%
are primary concerns while data modeling
in<00:50:40.960><c> cassandra</c><00:50:42.000><c> we</c><00:50:42.240><c> sacrifice</c><00:50:43.040><c> space</c><00:50:43.680><c> in</c><00:50:43.839><c> order</c>

00:50:44.150 --> 00:50:44.160 align:start position:0%
in cassandra we sacrifice space in order
 

00:50:44.160 --> 00:50:46.230 align:start position:0%
in cassandra we sacrifice space in order
to<00:50:44.319><c> reduce</c><00:50:45.040><c> time</c>

00:50:46.230 --> 00:50:46.240 align:start position:0%
to reduce time
 

00:50:46.240 --> 00:50:49.270 align:start position:0%
to reduce time
hence<00:50:46.559><c> organization</c><00:50:47.599><c> of</c><00:50:47.760><c> data</c><00:50:48.240><c> is</c><00:50:48.400><c> of</c><00:50:48.559><c> utmost</c>

00:50:49.270 --> 00:50:49.280 align:start position:0%
hence organization of data is of utmost
 

00:50:49.280 --> 00:50:50.870 align:start position:0%
hence organization of data is of utmost
importance

00:50:50.870 --> 00:50:50.880 align:start position:0%
importance
 

00:50:50.880 --> 00:50:53.829 align:start position:0%
importance
the<00:50:51.119><c> conceptual</c><00:50:52.079><c> data</c><00:50:52.400><c> model</c><00:50:52.960><c> provides</c><00:50:53.599><c> us</c>

00:50:53.829 --> 00:50:53.839 align:start position:0%
the conceptual data model provides us
 

00:50:53.839 --> 00:50:56.950 align:start position:0%
the conceptual data model provides us
with<00:50:54.000><c> the</c><00:50:54.160><c> data</c><00:50:54.640><c> capturing</c><00:50:55.440><c> information</c>

00:50:56.950 --> 00:50:56.960 align:start position:0%
with the data capturing information
 

00:50:56.960 --> 00:51:00.150 align:start position:0%
with the data capturing information
once<00:50:57.359><c> we</c><00:50:57.520><c> define</c><00:50:58.240><c> what</c><00:50:58.400><c> is</c><00:50:58.559><c> to</c><00:50:58.720><c> be</c><00:50:58.960><c> stored</c><00:50:59.920><c> we</c>

00:51:00.150 --> 00:51:00.160 align:start position:0%
once we define what is to be stored we
 

00:51:00.160 --> 00:51:03.109 align:start position:0%
once we define what is to be stored we
move<00:51:00.400><c> on</c><00:51:00.640><c> to</c><00:51:00.880><c> create</c><00:51:01.280><c> a</c><00:51:01.440><c> database</c>

00:51:03.109 --> 00:51:03.119 align:start position:0%
move on to create a database
 

00:51:03.119 --> 00:51:05.270 align:start position:0%
move on to create a database
this<00:51:03.359><c> not</c><00:51:03.599><c> only</c><00:51:03.839><c> helps</c><00:51:04.319><c> in</c><00:51:04.480><c> successful</c>

00:51:05.270 --> 00:51:05.280 align:start position:0%
this not only helps in successful
 

00:51:05.280 --> 00:51:07.829 align:start position:0%
this not only helps in successful
organization<00:51:06.559><c> but</c><00:51:06.800><c> also</c><00:51:07.200><c> helps</c><00:51:07.599><c> in</c>

00:51:07.829 --> 00:51:07.839 align:start position:0%
organization but also helps in
 

00:51:07.839 --> 00:51:10.470 align:start position:0%
organization but also helps in
preserving<00:51:08.640><c> the</c><00:51:08.880><c> properties</c><00:51:09.520><c> of</c><00:51:09.680><c> the</c><00:51:09.839><c> data</c>

00:51:10.470 --> 00:51:10.480 align:start position:0%
preserving the properties of the data
 

00:51:10.480 --> 00:51:12.870 align:start position:0%
preserving the properties of the data
that<00:51:10.720><c> is</c><00:51:10.880><c> required</c>

00:51:12.870 --> 00:51:12.880 align:start position:0%
that is required
 

00:51:12.880 --> 00:51:15.829 align:start position:0%
that is required
part<00:51:13.200><c> of</c><00:51:13.359><c> understanding</c><00:51:14.160><c> the</c><00:51:14.319><c> data</c><00:51:14.800><c> requires</c>

00:51:15.829 --> 00:51:15.839 align:start position:0%
part of understanding the data requires
 

00:51:15.839 --> 00:51:19.349 align:start position:0%
part of understanding the data requires
understanding<00:51:16.800><c> a</c><00:51:17.040><c> primary</c><00:51:17.680><c> key</c><00:51:18.079><c> as</c><00:51:18.319><c> well</c>

00:51:19.349 --> 00:51:19.359 align:start position:0%
understanding a primary key as well
 

00:51:19.359 --> 00:51:22.309 align:start position:0%
understanding a primary key as well
to<00:51:19.520><c> recall</c><00:51:20.319><c> primary</c><00:51:20.880><c> keys</c><00:51:21.280><c> take</c><00:51:21.520><c> care</c><00:51:21.760><c> of</c><00:51:22.000><c> two</c>

00:51:22.309 --> 00:51:22.319 align:start position:0%
to recall primary keys take care of two
 

00:51:22.319 --> 00:51:25.190 align:start position:0%
to recall primary keys take care of two
essential<00:51:23.040><c> things</c><00:51:24.000><c> uniqueness</c><00:51:24.960><c> and</c>

00:51:25.190 --> 00:51:25.200 align:start position:0%
essential things uniqueness and
 

00:51:25.200 --> 00:51:27.910 align:start position:0%
essential things uniqueness and
satisfying<00:51:26.079><c> queries</c>

00:51:27.910 --> 00:51:27.920 align:start position:0%
satisfying queries
 

00:51:27.920 --> 00:51:30.710 align:start position:0%
satisfying queries
entity<00:51:28.400><c> and</c><00:51:28.559><c> relationship</c><00:51:29.520><c> keys</c><00:51:30.079><c> affect</c><00:51:30.480><c> the</c>

00:51:30.710 --> 00:51:30.720 align:start position:0%
entity and relationship keys affect the
 

00:51:30.720 --> 00:51:33.270 align:start position:0%
entity and relationship keys affect the
table<00:51:31.200><c> primary</c><00:51:31.839><c> keys</c>

00:51:33.270 --> 00:51:33.280 align:start position:0%
table primary keys
 

00:51:33.280 --> 00:51:36.470 align:start position:0%
table primary keys
primary<00:51:33.839><c> key</c><00:51:34.160><c> uniquely</c><00:51:34.880><c> identifies</c><00:51:35.680><c> a</c><00:51:35.920><c> row</c>

00:51:36.470 --> 00:51:36.480 align:start position:0%
primary key uniquely identifies a row
 

00:51:36.480 --> 00:51:39.829 align:start position:0%
primary key uniquely identifies a row
entity<00:51:37.280><c> and</c><00:51:37.760><c> a</c><00:51:37.920><c> relationship</c>

00:51:39.829 --> 00:51:39.839 align:start position:0%
entity and a relationship
 

00:51:39.839 --> 00:51:42.150 align:start position:0%
entity and a relationship
let's<00:51:40.160><c> look</c><00:51:40.319><c> at</c><00:51:40.480><c> the</c><00:51:40.720><c> following</c><00:51:41.280><c> tables</c><00:51:41.920><c> for</c>

00:51:42.150 --> 00:51:42.160 align:start position:0%
let's look at the following tables for
 

00:51:42.160 --> 00:51:43.750 align:start position:0%
let's look at the following tables for
example

00:51:43.750 --> 00:51:43.760 align:start position:0%
example
 

00:51:43.760 --> 00:51:46.470 align:start position:0%
example
the<00:51:43.920><c> video</c><00:51:44.319><c> tables</c><00:51:44.880><c> as</c><00:51:45.040><c> video</c><00:51:45.520><c> id</c><00:51:46.000><c> as</c><00:51:46.160><c> its</c>

00:51:46.470 --> 00:51:46.480 align:start position:0%
the video tables as video id as its
 

00:51:46.480 --> 00:51:48.150 align:start position:0%
the video tables as video id as its
primary<00:51:47.119><c> key</c>

00:51:48.150 --> 00:51:48.160 align:start position:0%
primary key
 

00:51:48.160 --> 00:51:50.630 align:start position:0%
primary key
here<00:51:48.400><c> the</c><00:51:48.559><c> primary</c><00:51:49.040><c> key</c><00:51:49.280><c> makes</c><00:51:49.599><c> no</c><00:51:49.839><c> attempt</c><00:51:50.480><c> at</c>

00:51:50.630 --> 00:51:50.640 align:start position:0%
here the primary key makes no attempt at
 

00:51:50.640 --> 00:51:53.670 align:start position:0%
here the primary key makes no attempt at
organizing<00:51:51.280><c> the</c><00:51:51.520><c> data</c><00:51:52.160><c> so</c><00:51:52.400><c> as</c><00:51:52.559><c> to</c><00:51:52.800><c> satisfy</c>

00:51:53.670 --> 00:51:53.680 align:start position:0%
organizing the data so as to satisfy
 

00:51:53.680 --> 00:51:56.309 align:start position:0%
organizing the data so as to satisfy
queries<00:51:54.240><c> at</c><00:51:54.400><c> later</c><00:51:54.720><c> stages</c>

00:51:56.309 --> 00:51:56.319 align:start position:0%
queries at later stages
 

00:51:56.319 --> 00:51:59.270 align:start position:0%
queries at later stages
on<00:51:56.480><c> the</c><00:51:56.640><c> other</c><00:51:56.960><c> hand</c><00:51:57.760><c> the</c><00:51:57.920><c> table</c><00:51:58.400><c> videos</c><00:51:58.960><c> by</c>

00:51:59.270 --> 00:51:59.280 align:start position:0%
on the other hand the table videos by
 

00:51:59.280 --> 00:52:02.069 align:start position:0%
on the other hand the table videos by
user<00:52:00.000><c> as</c><00:52:00.240><c> a</c><00:52:00.319><c> primary</c><00:52:00.960><c> key</c><00:52:01.280><c> along</c><00:52:01.839><c> with</c>

00:52:02.069 --> 00:52:02.079 align:start position:0%
user as a primary key along with
 

00:52:02.079 --> 00:52:04.630 align:start position:0%
user as a primary key along with
clustering<00:52:02.720><c> columns</c><00:52:03.440><c> which</c><00:52:03.680><c> specify</c>

00:52:04.630 --> 00:52:04.640 align:start position:0%
clustering columns which specify
 

00:52:04.640 --> 00:52:07.270 align:start position:0%
clustering columns which specify
ordering<00:52:05.440><c> in</c><00:52:05.599><c> order</c><00:52:05.920><c> to</c><00:52:06.079><c> help</c><00:52:06.400><c> with</c><00:52:06.640><c> queries</c>

00:52:07.270 --> 00:52:07.280 align:start position:0%
ordering in order to help with queries
 

00:52:07.280 --> 00:52:10.230 align:start position:0%
ordering in order to help with queries
that<00:52:07.520><c> result</c><00:52:08.240><c> in</c><00:52:08.400><c> returning</c><00:52:09.359><c> the</c><00:52:09.520><c> results</c><00:52:10.079><c> in</c>

00:52:10.230 --> 00:52:10.240 align:start position:0%
that result in returning the results in
 

00:52:10.240 --> 00:52:13.670 align:start position:0%
that result in returning the results in
a<00:52:10.319><c> specified</c><00:52:11.280><c> order</c>

00:52:13.670 --> 00:52:13.680 align:start position:0%
a specified order
 

00:52:13.680 --> 00:52:16.549 align:start position:0%
a specified order
the<00:52:13.839><c> relationship</c><00:52:14.920><c> cardinalities</c><00:52:16.160><c> as</c><00:52:16.400><c> well</c>

00:52:16.549 --> 00:52:16.559 align:start position:0%
the relationship cardinalities as well
 

00:52:16.559 --> 00:52:18.950 align:start position:0%
the relationship cardinalities as well
as<00:52:16.800><c> the</c><00:52:16.960><c> data</c><00:52:17.440><c> cardinality</c><00:52:18.400><c> are</c><00:52:18.559><c> very</c>

00:52:18.950 --> 00:52:18.960 align:start position:0%
as the data cardinality are very
 

00:52:18.960 --> 00:52:22.309 align:start position:0%
as the data cardinality are very
important<00:52:19.520><c> when</c><00:52:19.760><c> it</c><00:52:19.920><c> comes</c><00:52:20.319><c> to</c><00:52:20.559><c> data</c><00:52:20.960><c> modeling</c>

00:52:22.309 --> 00:52:22.319 align:start position:0%
important when it comes to data modeling
 

00:52:22.319 --> 00:52:25.430 align:start position:0%
important when it comes to data modeling
data<00:52:22.720><c> cardinality</c><00:52:23.920><c> helps</c><00:52:24.319><c> in</c><00:52:24.559><c> selecting</c><00:52:25.280><c> an</c>

00:52:25.430 --> 00:52:25.440 align:start position:0%
data cardinality helps in selecting an
 

00:52:25.440 --> 00:52:27.990 align:start position:0%
data cardinality helps in selecting an
efficient<00:52:26.160><c> partition</c><00:52:26.960><c> key</c><00:52:27.359><c> whereas</c><00:52:27.839><c> the</c>

00:52:27.990 --> 00:52:28.000 align:start position:0%
efficient partition key whereas the
 

00:52:28.000 --> 00:52:30.549 align:start position:0%
efficient partition key whereas the
relationship<00:52:28.800><c> cardinality</c><00:52:29.839><c> helps</c><00:52:30.319><c> in</c>

00:52:30.549 --> 00:52:30.559 align:start position:0%
relationship cardinality helps in
 

00:52:30.559 --> 00:52:34.150 align:start position:0%
relationship cardinality helps in
satisfying<00:52:31.520><c> the</c><00:52:31.680><c> queries</c>

00:52:34.150 --> 00:52:34.160 align:start position:0%
satisfying the queries
 

00:52:34.160 --> 00:52:36.710 align:start position:0%
satisfying the queries
queries<00:52:34.880><c> are</c><00:52:34.960><c> the</c><00:52:35.200><c> center</c><00:52:35.680><c> of</c><00:52:35.839><c> data</c><00:52:36.240><c> modeling</c>

00:52:36.710 --> 00:52:36.720 align:start position:0%
queries are the center of data modeling
 

00:52:36.720 --> 00:52:39.589 align:start position:0%
queries are the center of data modeling
in<00:52:36.880><c> cassandra</c><00:52:37.920><c> and</c><00:52:38.559><c> captured</c><00:52:39.200><c> by</c><00:52:39.359><c> the</c>

00:52:39.589 --> 00:52:39.599 align:start position:0%
in cassandra and captured by the
 

00:52:39.599 --> 00:52:42.950 align:start position:0%
in cassandra and captured by the
application<00:52:40.480><c> workflow</c><00:52:41.200><c> models</c>

00:52:42.950 --> 00:52:42.960 align:start position:0%
application workflow models
 

00:52:42.960 --> 00:52:46.150 align:start position:0%
application workflow models
each<00:52:43.440><c> entity</c><00:52:44.160><c> is</c><00:52:44.400><c> created</c><00:52:45.119><c> with</c><00:52:45.359><c> queries</c><00:52:46.000><c> in</c>

00:52:46.150 --> 00:52:46.160 align:start position:0%
each entity is created with queries in
 

00:52:46.160 --> 00:52:47.589 align:start position:0%
each entity is created with queries in
mind

00:52:47.589 --> 00:52:47.599 align:start position:0%
mind
 

00:52:47.599 --> 00:52:50.230 align:start position:0%
mind
in<00:52:47.839><c> cassandra</c><00:52:48.800><c> it's</c><00:52:49.119><c> always</c><00:52:49.680><c> better</c><00:52:50.079><c> to</c>

00:52:50.230 --> 00:52:50.240 align:start position:0%
in cassandra it's always better to
 

00:52:50.240 --> 00:52:52.710 align:start position:0%
in cassandra it's always better to
reduce<00:52:50.880><c> the</c><00:52:51.040><c> number</c><00:52:51.359><c> of</c><00:52:51.599><c> partitions</c><00:52:52.400><c> that</c><00:52:52.640><c> are</c>

00:52:52.710 --> 00:52:52.720 align:start position:0%
reduce the number of partitions that are
 

00:52:52.720 --> 00:52:55.750 align:start position:0%
reduce the number of partitions that are
to<00:52:52.880><c> be</c><00:52:53.119><c> read</c><00:52:53.520><c> for</c><00:52:53.680><c> a</c><00:52:53.839><c> query</c><00:52:54.319><c> result</c>

00:52:55.750 --> 00:52:55.760 align:start position:0%
to be read for a query result
 

00:52:55.760 --> 00:52:59.670 align:start position:0%
to be read for a query result
table<00:52:56.240><c> schema</c><00:52:57.359><c> also</c><00:52:57.760><c> changes</c><00:52:58.559><c> if</c><00:52:58.800><c> the</c><00:52:58.960><c> queries</c>

00:52:59.670 --> 00:52:59.680 align:start position:0%
table schema also changes if the queries
 

00:52:59.680 --> 00:53:01.829 align:start position:0%
table schema also changes if the queries
are<00:53:00.160><c> changed</c>

00:53:01.829 --> 00:53:01.839 align:start position:0%
are changed
 

00:53:01.839 --> 00:53:03.829 align:start position:0%
are changed
to<00:53:02.079><c> achieve</c><00:53:02.480><c> this</c><00:53:02.800><c> it</c><00:53:02.960><c> is</c><00:53:03.119><c> extremely</c>

00:53:03.829 --> 00:53:03.839 align:start position:0%
to achieve this it is extremely
 

00:53:03.839 --> 00:53:06.710 align:start position:0%
to achieve this it is extremely
important<00:53:04.480><c> to</c><00:53:04.720><c> clearly</c><00:53:05.280><c> understand</c><00:53:06.240><c> the</c><00:53:06.400><c> kind</c>

00:53:06.710 --> 00:53:06.720 align:start position:0%
important to clearly understand the kind
 

00:53:06.720 --> 00:53:09.030 align:start position:0%
important to clearly understand the kind
of<00:53:06.880><c> data</c><00:53:07.359><c> required</c><00:53:08.000><c> out</c><00:53:08.240><c> of</c><00:53:08.480><c> the</c><00:53:08.640><c> read</c>

00:53:09.030 --> 00:53:09.040 align:start position:0%
of data required out of the read
 

00:53:09.040 --> 00:53:11.510 align:start position:0%
of data required out of the read
operations

00:53:11.510 --> 00:53:11.520 align:start position:0%
operations
 

00:53:11.520 --> 00:53:14.470 align:start position:0%
operations
single<00:53:12.079><c> partition</c><00:53:12.720><c> per</c><00:53:12.960><c> query</c><00:53:13.599><c> is</c><00:53:13.760><c> the</c><00:53:14.000><c> most</c>

00:53:14.470 --> 00:53:14.480 align:start position:0%
single partition per query is the most
 

00:53:14.480 --> 00:53:17.270 align:start position:0%
single partition per query is the most
efficient<00:53:15.280><c> access</c><00:53:15.839><c> pattern</c>

00:53:17.270 --> 00:53:17.280 align:start position:0%
efficient access pattern
 

00:53:17.280 --> 00:53:19.670 align:start position:0%
efficient access pattern
entities<00:53:17.839><c> in</c><00:53:18.000><c> cassandra</c><00:53:18.720><c> are</c><00:53:18.880><c> designed</c><00:53:19.520><c> in</c>

00:53:19.670 --> 00:53:19.680 align:start position:0%
entities in cassandra are designed in
 

00:53:19.680 --> 00:53:22.470 align:start position:0%
entities in cassandra are designed in
such<00:53:19.920><c> a</c><00:53:20.079><c> way</c><00:53:20.559><c> that</c><00:53:20.880><c> queries</c><00:53:21.520><c> can</c><00:53:21.760><c> generate</c><00:53:22.319><c> the</c>

00:53:22.470 --> 00:53:22.480 align:start position:0%
such a way that queries can generate the
 

00:53:22.480 --> 00:53:26.230 align:start position:0%
such a way that queries can generate the
results<00:53:23.119><c> with</c><00:53:23.280><c> the</c><00:53:23.440><c> minimum</c><00:53:24.079><c> number</c><00:53:24.400><c> of</c><00:53:24.640><c> reads</c>

00:53:26.230 --> 00:53:26.240 align:start position:0%
results with the minimum number of reads
 

00:53:26.240 --> 00:53:29.030 align:start position:0%
results with the minimum number of reads
ideally<00:53:26.880><c> the</c><00:53:27.040><c> data</c><00:53:27.440><c> should</c><00:53:27.680><c> be</c><00:53:27.920><c> organized</c><00:53:28.880><c> in</c>

00:53:29.030 --> 00:53:29.040 align:start position:0%
ideally the data should be organized in
 

00:53:29.040 --> 00:53:31.670 align:start position:0%
ideally the data should be organized in
such<00:53:29.280><c> a</c><00:53:29.440><c> way</c><00:53:29.680><c> that</c><00:53:29.920><c> each</c><00:53:30.319><c> query</c><00:53:30.800><c> can</c><00:53:31.040><c> retrieve</c>

00:53:31.670 --> 00:53:31.680 align:start position:0%
such a way that each query can retrieve
 

00:53:31.680 --> 00:53:34.309 align:start position:0%
such a way that each query can retrieve
the<00:53:31.839><c> results</c><00:53:32.559><c> from</c><00:53:32.800><c> a</c><00:53:32.960><c> single</c><00:53:33.520><c> partitioned</c>

00:53:34.309 --> 00:53:34.319 align:start position:0%
the results from a single partitioned
 

00:53:34.319 --> 00:53:36.069 align:start position:0%
the results from a single partitioned
search

00:53:36.069 --> 00:53:36.079 align:start position:0%
search
 

00:53:36.079 --> 00:53:39.270 align:start position:0%
search
partition<00:53:36.800><c> can</c><00:53:37.040><c> be</c><00:53:37.280><c> single</c><00:53:37.680><c> row</c><00:53:38.160><c> or</c><00:53:38.480><c> multi-row</c>

00:53:39.270 --> 00:53:39.280 align:start position:0%
partition can be single row or multi-row
 

00:53:39.280 --> 00:53:40.950 align:start position:0%
partition can be single row or multi-row
respectively

00:53:40.950 --> 00:53:40.960 align:start position:0%
respectively
 

00:53:40.960 --> 00:53:43.670 align:start position:0%
respectively
in<00:53:41.040><c> this</c><00:53:41.359><c> example</c><00:53:42.160><c> if</c><00:53:42.400><c> we</c><00:53:42.640><c> want</c><00:53:42.880><c> to</c><00:53:43.040><c> query</c><00:53:43.440><c> for</c>

00:53:43.670 --> 00:53:43.680 align:start position:0%
in this example if we want to query for
 

00:53:43.680 --> 00:53:46.230 align:start position:0%
in this example if we want to query for
a<00:53:43.760><c> particular</c><00:53:44.400><c> partition</c><00:53:45.440><c> we</c><00:53:45.599><c> can</c><00:53:45.839><c> give</c><00:53:46.079><c> the</c>

00:53:46.230 --> 00:53:46.240 align:start position:0%
a particular partition we can give the
 

00:53:46.240 --> 00:53:47.910 align:start position:0%
a particular partition we can give the
partition<00:53:46.960><c> key</c>

00:53:47.910 --> 00:53:47.920 align:start position:0%
partition key
 

00:53:47.920 --> 00:53:50.230 align:start position:0%
partition key
then<00:53:48.160><c> the</c><00:53:48.400><c> node</c><00:53:48.800><c> having</c><00:53:49.119><c> the</c><00:53:49.359><c> partition</c><00:53:50.079><c> is</c>

00:53:50.230 --> 00:53:50.240 align:start position:0%
then the node having the partition is
 

00:53:50.240 --> 00:53:53.030 align:start position:0%
then the node having the partition is
determined<00:53:51.119><c> and</c><00:53:51.280><c> the</c><00:53:51.440><c> data</c><00:53:51.839><c> is</c><00:53:52.079><c> retrieved</c><00:53:52.800><c> by</c>

00:53:53.030 --> 00:53:53.040 align:start position:0%
determined and the data is retrieved by
 

00:53:53.040 --> 00:53:55.670 align:start position:0%
determined and the data is retrieved by
the<00:53:53.200><c> node</c><00:53:53.599><c> and</c><00:53:53.760><c> returned</c><00:53:54.240><c> to</c><00:53:54.480><c> us</c>

00:53:55.670 --> 00:53:55.680 align:start position:0%
the node and returned to us
 

00:53:55.680 --> 00:53:58.309 align:start position:0%
the node and returned to us
no<00:53:56.000><c> additional</c><00:53:56.640><c> filtering</c><00:53:57.359><c> or</c><00:53:57.520><c> searching</c><00:53:58.079><c> the</c>

00:53:58.309 --> 00:53:58.319 align:start position:0%
no additional filtering or searching the
 

00:53:58.319 --> 00:54:01.589 align:start position:0%
no additional filtering or searching the
entire<00:53:58.800><c> cluster</c><00:53:59.359><c> is</c><00:53:59.520><c> required</c>

00:54:01.589 --> 00:54:01.599 align:start position:0%
entire cluster is required
 

00:54:01.599 --> 00:54:04.390 align:start position:0%
entire cluster is required
however<00:54:02.400><c> there</c><00:54:02.640><c> are</c><00:54:02.960><c> cases</c><00:54:03.599><c> when</c><00:54:03.839><c> multiple</c>

00:54:04.390 --> 00:54:04.400 align:start position:0%
however there are cases when multiple
 

00:54:04.400 --> 00:54:06.390 align:start position:0%
however there are cases when multiple
partitions<00:54:05.119><c> have</c><00:54:05.280><c> to</c><00:54:05.440><c> be</c><00:54:05.680><c> accessed</c><00:54:06.240><c> to</c>

00:54:06.390 --> 00:54:06.400 align:start position:0%
partitions have to be accessed to
 

00:54:06.400 --> 00:54:09.030 align:start position:0%
partitions have to be accessed to
retrieve<00:54:06.960><c> the</c><00:54:07.119><c> results</c><00:54:08.079><c> and</c><00:54:08.240><c> although</c><00:54:08.800><c> this</c>

00:54:09.030 --> 00:54:09.040 align:start position:0%
retrieve the results and although this
 

00:54:09.040 --> 00:54:11.349 align:start position:0%
retrieve the results and although this
is<00:54:09.200><c> a</c><00:54:09.359><c> less</c><00:54:09.599><c> efficient</c><00:54:10.240><c> way</c><00:54:10.480><c> of</c><00:54:10.640><c> doing</c><00:54:11.040><c> things</c>

00:54:11.349 --> 00:54:11.359 align:start position:0%
is a less efficient way of doing things
 

00:54:11.359 --> 00:54:14.710 align:start position:0%
is a less efficient way of doing things
in<00:54:11.520><c> cassandra</c><00:54:12.640><c> it</c><00:54:12.880><c> is</c><00:54:13.359><c> acceptable</c><00:54:14.160><c> to</c><00:54:14.400><c> some</c>

00:54:14.710 --> 00:54:14.720 align:start position:0%
in cassandra it is acceptable to some
 

00:54:14.720 --> 00:54:17.750 align:start position:0%
in cassandra it is acceptable to some
extent<00:54:15.440><c> as</c><00:54:15.680><c> long</c><00:54:15.920><c> as</c><00:54:16.160><c> these</c><00:54:16.480><c> kind</c><00:54:16.800><c> of</c><00:54:16.960><c> queries</c>

00:54:17.750 --> 00:54:17.760 align:start position:0%
extent as long as these kind of queries
 

00:54:17.760 --> 00:54:20.870 align:start position:0%
extent as long as these kind of queries
are<00:54:18.160><c> limited</c><00:54:18.800><c> in</c><00:54:19.040><c> number</c>

00:54:20.870 --> 00:54:20.880 align:start position:0%
are limited in number
 

00:54:20.880 --> 00:54:23.670 align:start position:0%
are limited in number
however<00:54:21.520><c> the</c><00:54:21.760><c> strict</c><00:54:22.280><c> anti-pattern</c><00:54:23.280><c> that</c><00:54:23.520><c> has</c>

00:54:23.670 --> 00:54:23.680 align:start position:0%
however the strict anti-pattern that has
 

00:54:23.680 --> 00:54:27.190 align:start position:0%
however the strict anti-pattern that has
to<00:54:23.920><c> be</c><00:54:24.079><c> avoided</c><00:54:24.640><c> at</c><00:54:24.960><c> all</c><00:54:25.359><c> costs</c><00:54:26.319><c> is</c><00:54:26.640><c> asking</c><00:54:27.040><c> the</c>

00:54:27.190 --> 00:54:27.200 align:start position:0%
to be avoided at all costs is asking the
 

00:54:27.200 --> 00:54:29.990 align:start position:0%
to be avoided at all costs is asking the
database<00:54:27.839><c> to</c><00:54:28.000><c> perform</c><00:54:28.640><c> a</c><00:54:28.720><c> linear</c><00:54:29.359><c> search</c>

00:54:29.990 --> 00:54:30.000 align:start position:0%
database to perform a linear search
 

00:54:30.000 --> 00:54:31.990 align:start position:0%
database to perform a linear search
through<00:54:30.319><c> all</c><00:54:30.559><c> the</c><00:54:30.720><c> partitions</c><00:54:31.440><c> of</c><00:54:31.599><c> all</c><00:54:31.839><c> the</c>

00:54:31.990 --> 00:54:32.000 align:start position:0%
through all the partitions of all the
 

00:54:32.000 --> 00:54:34.150 align:start position:0%
through all the partitions of all the
tables<00:54:32.640><c> to</c><00:54:32.880><c> fetch</c><00:54:33.200><c> the</c><00:54:33.359><c> result</c><00:54:33.839><c> for</c><00:54:34.079><c> a</c>

00:54:34.150 --> 00:54:34.160 align:start position:0%
tables to fetch the result for a
 

00:54:34.160 --> 00:54:36.230 align:start position:0%
tables to fetch the result for a
particular<00:54:34.960><c> query</c>

00:54:36.230 --> 00:54:36.240 align:start position:0%
particular query
 

00:54:36.240 --> 00:54:38.470 align:start position:0%
particular query
since<00:54:36.559><c> most</c><00:54:36.880><c> of</c><00:54:37.040><c> the</c><00:54:37.119><c> data</c><00:54:37.520><c> is</c><00:54:37.839><c> stored</c><00:54:38.319><c> in</c>

00:54:38.470 --> 00:54:38.480 align:start position:0%
since most of the data is stored in
 

00:54:38.480 --> 00:54:41.030 align:start position:0%
since most of the data is stored in
distributed<00:54:39.359><c> nodes</c><00:54:40.160><c> it</c><00:54:40.319><c> is</c><00:54:40.640><c> highly</c>

00:54:41.030 --> 00:54:41.040 align:start position:0%
distributed nodes it is highly
 

00:54:41.040 --> 00:54:43.349 align:start position:0%
distributed nodes it is highly
inefficient<00:54:41.839><c> to</c><00:54:42.000><c> go</c><00:54:42.319><c> through</c><00:54:42.559><c> all</c><00:54:42.800><c> the</c><00:54:42.960><c> data</c>

00:54:43.349 --> 00:54:43.359 align:start position:0%
inefficient to go through all the data
 

00:54:43.359 --> 00:54:46.390 align:start position:0%
inefficient to go through all the data
stored<00:54:43.760><c> at</c><00:54:44.000><c> multiple</c><00:54:44.559><c> locations</c><00:54:45.520><c> and</c><00:54:46.240><c> it</c>

00:54:46.390 --> 00:54:46.400 align:start position:0%
stored at multiple locations and it
 

00:54:46.400 --> 00:54:48.710 align:start position:0%
stored at multiple locations and it
defeats<00:54:46.880><c> the</c><00:54:47.040><c> whole</c><00:54:47.440><c> purpose</c><00:54:48.079><c> of</c><00:54:48.240><c> having</c><00:54:48.640><c> a</c>

00:54:48.710 --> 00:54:48.720 align:start position:0%
defeats the whole purpose of having a
 

00:54:48.720 --> 00:54:54.710 align:start position:0%
defeats the whole purpose of having a
horizontally<00:54:49.760><c> scaled</c><00:54:50.480><c> database</c>

00:54:54.710 --> 00:54:54.720 align:start position:0%
 
 

00:54:54.720 --> 00:54:58.309 align:start position:0%
 
after<00:54:55.119><c> completing</c><00:54:56.160><c> this</c><00:54:56.640><c> topic</c><00:54:57.599><c> you</c><00:54:57.839><c> will</c><00:54:58.079><c> be</c>

00:54:58.309 --> 00:54:58.319 align:start position:0%
after completing this topic you will be
 

00:54:58.319 --> 00:55:01.349 align:start position:0%
after completing this topic you will be
able<00:54:58.640><c> to</c><00:54:58.880><c> learn</c><00:54:59.200><c> the</c><00:54:59.520><c> concept</c><00:55:00.400><c> of</c><00:55:00.559><c> data</c>

00:55:01.349 --> 00:55:01.359 align:start position:0%
able to learn the concept of data
 

00:55:01.359 --> 00:55:05.109 align:start position:0%
able to learn the concept of data
nesting<00:55:02.400><c> and</c><00:55:02.640><c> explore</c><00:55:03.440><c> the</c><00:55:03.680><c> three</c><00:55:04.079><c> ways</c><00:55:04.640><c> of</c>

00:55:05.109 --> 00:55:05.119 align:start position:0%
nesting and explore the three ways of
 

00:55:05.119 --> 00:55:08.230 align:start position:0%
nesting and explore the three ways of
nesting<00:55:05.760><c> data</c>

00:55:08.230 --> 00:55:08.240 align:start position:0%
nesting data
 

00:55:08.240 --> 00:55:10.790 align:start position:0%
nesting data
until<00:55:08.640><c> now</c><00:55:08.960><c> we've</c><00:55:09.200><c> talked</c><00:55:09.520><c> about</c><00:55:10.079><c> creating</c><00:55:10.720><c> a</c>

00:55:10.790 --> 00:55:10.800 align:start position:0%
until now we've talked about creating a
 

00:55:10.800 --> 00:55:13.430 align:start position:0%
until now we've talked about creating a
logical<00:55:11.359><c> data</c><00:55:11.760><c> model</c><00:55:12.319><c> by</c><00:55:12.559><c> combining</c><00:55:13.280><c> the</c>

00:55:13.430 --> 00:55:13.440 align:start position:0%
logical data model by combining the
 

00:55:13.440 --> 00:55:17.270 align:start position:0%
logical data model by combining the
results<00:55:14.240><c> of</c><00:55:14.480><c> a</c><00:55:14.640><c> conceptual</c><00:55:15.520><c> data</c><00:55:15.839><c> model</c><00:55:16.720><c> and</c>

00:55:17.270 --> 00:55:17.280 align:start position:0%
results of a conceptual data model and
 

00:55:17.280 --> 00:55:19.829 align:start position:0%
results of a conceptual data model and
accessing<00:55:17.920><c> the</c><00:55:18.079><c> pattern</c><00:55:18.720><c> of</c><00:55:18.960><c> application</c>

00:55:19.829 --> 00:55:19.839 align:start position:0%
accessing the pattern of application
 

00:55:19.839 --> 00:55:22.710 align:start position:0%
accessing the pattern of application
workflow<00:55:20.640><c> by</c><00:55:20.960><c> applying</c><00:55:21.599><c> mapping</c><00:55:22.079><c> rules</c><00:55:22.559><c> and</c>

00:55:22.710 --> 00:55:22.720 align:start position:0%
workflow by applying mapping rules and
 

00:55:22.720 --> 00:55:24.630 align:start position:0%
workflow by applying mapping rules and
patterns

00:55:24.630 --> 00:55:24.640 align:start position:0%
patterns
 

00:55:24.640 --> 00:55:27.910 align:start position:0%
patterns
let's<00:55:25.040><c> now</c><00:55:25.440><c> create</c><00:55:26.160><c> a</c><00:55:26.400><c> logical</c><00:55:26.960><c> data</c><00:55:27.440><c> model</c>

00:55:27.910 --> 00:55:27.920 align:start position:0%
let's now create a logical data model
 

00:55:27.920 --> 00:55:30.790 align:start position:0%
let's now create a logical data model
containing<00:55:28.640><c> tables</c><00:55:29.359><c> for</c><00:55:29.599><c> each</c><00:55:29.839><c> query</c>

00:55:30.790 --> 00:55:30.800 align:start position:0%
containing tables for each query
 

00:55:30.800 --> 00:55:33.270 align:start position:0%
containing tables for each query
capturing<00:55:31.440><c> entities</c><00:55:32.000><c> and</c><00:55:32.160><c> relationships</c>

00:55:33.270 --> 00:55:33.280 align:start position:0%
capturing entities and relationships
 

00:55:33.280 --> 00:55:36.870 align:start position:0%
capturing entities and relationships
from<00:55:33.599><c> the</c><00:55:33.920><c> conceptual</c><00:55:34.800><c> model</c>

00:55:36.870 --> 00:55:36.880 align:start position:0%
from the conceptual model
 

00:55:36.880 --> 00:55:39.589 align:start position:0%
from the conceptual model
the<00:55:37.040><c> working</c><00:55:37.520><c> rule</c><00:55:37.760><c> with</c><00:55:38.000><c> apache</c><00:55:38.559><c> cassandra</c>

00:55:39.589 --> 00:55:39.599 align:start position:0%
the working rule with apache cassandra
 

00:55:39.599 --> 00:55:42.549 align:start position:0%
the working rule with apache cassandra
is<00:55:39.839><c> to</c><00:55:40.079><c> group</c><00:55:40.480><c> as</c><00:55:40.640><c> much</c><00:55:41.040><c> data</c><00:55:41.440><c> as</c><00:55:41.680><c> possible</c><00:55:42.400><c> on</c>

00:55:42.549 --> 00:55:42.559 align:start position:0%
is to group as much data as possible on
 

00:55:42.559 --> 00:55:43.829 align:start position:0%
is to group as much data as possible on
disk

00:55:43.829 --> 00:55:43.839 align:start position:0%
disk
 

00:55:43.839 --> 00:55:47.750 align:start position:0%
disk
this<00:55:44.240><c> grouping</c><00:55:44.880><c> of</c><00:55:45.119><c> data</c><00:55:46.000><c> is</c><00:55:46.240><c> referred</c><00:55:46.720><c> to</c><00:55:47.119><c> as</c>

00:55:47.750 --> 00:55:47.760 align:start position:0%
this grouping of data is referred to as
 

00:55:47.760 --> 00:55:50.789 align:start position:0%
this grouping of data is referred to as
nesting<00:55:48.319><c> of</c><00:55:48.480><c> data</c><00:55:49.359><c> and</c><00:55:49.680><c> is</c><00:55:49.920><c> the</c><00:55:50.079><c> main</c><00:55:50.400><c> data</c>

00:55:50.789 --> 00:55:50.799 align:start position:0%
nesting of data and is the main data
 

00:55:50.799 --> 00:55:53.430 align:start position:0%
nesting of data and is the main data
modeling<00:55:51.359><c> technique</c><00:55:52.160><c> for</c><00:55:52.319><c> a</c><00:55:52.400><c> cassandra</c><00:55:53.040><c> data</c>

00:55:53.430 --> 00:55:53.440 align:start position:0%
modeling technique for a cassandra data
 

00:55:53.440 --> 00:55:54.789 align:start position:0%
modeling technique for a cassandra data
model

00:55:54.789 --> 00:55:54.799 align:start position:0%
model
 

00:55:54.799 --> 00:55:57.510 align:start position:0%
model
nesting<00:55:55.359><c> helps</c><00:55:55.839><c> in</c><00:55:56.079><c> organizing</c><00:55:56.880><c> multiple</c>

00:55:57.510 --> 00:55:57.520 align:start position:0%
nesting helps in organizing multiple
 

00:55:57.520 --> 00:56:01.190 align:start position:0%
nesting helps in organizing multiple
data<00:55:57.920><c> entities</c><00:55:58.880><c> into</c><00:55:59.280><c> a</c><00:55:59.440><c> single</c><00:55:59.920><c> partition</c>

00:56:01.190 --> 00:56:01.200 align:start position:0%
data entities into a single partition
 

00:56:01.200 --> 00:56:04.309 align:start position:0%
data entities into a single partition
and<00:56:01.359><c> it</c><00:56:01.599><c> also</c><00:56:02.000><c> helps</c><00:56:02.799><c> support</c><00:56:03.359><c> partition</c><00:56:04.079><c> per</c>

00:56:04.309 --> 00:56:04.319 align:start position:0%
and it also helps support partition per
 

00:56:04.319 --> 00:56:07.589 align:start position:0%
and it also helps support partition per
query<00:56:05.040><c> during</c><00:56:05.520><c> data</c><00:56:05.920><c> access</c>

00:56:07.589 --> 00:56:07.599 align:start position:0%
query during data access
 

00:56:07.599 --> 00:56:10.230 align:start position:0%
query during data access
in<00:56:07.760><c> cassandra</c><00:56:08.960><c> queries</c><00:56:09.440><c> are</c><00:56:09.599><c> the</c><00:56:09.760><c> king</c><00:56:10.079><c> and</c>

00:56:10.230 --> 00:56:10.240 align:start position:0%
in cassandra queries are the king and
 

00:56:10.240 --> 00:56:11.910 align:start position:0%
in cassandra queries are the king and
the<00:56:10.480><c> queen</c>

00:56:11.910 --> 00:56:11.920 align:start position:0%
the queen
 

00:56:11.920 --> 00:56:14.470 align:start position:0%
the queen
schemas<00:56:12.720><c> are</c><00:56:12.960><c> often</c><00:56:13.359><c> driven</c><00:56:13.839><c> through</c><00:56:14.160><c> these</c>

00:56:14.470 --> 00:56:14.480 align:start position:0%
schemas are often driven through these
 

00:56:14.480 --> 00:56:17.190 align:start position:0%
schemas are often driven through these
application<00:56:15.359><c> queries</c>

00:56:17.190 --> 00:56:17.200 align:start position:0%
application queries
 

00:56:17.200 --> 00:56:19.910 align:start position:0%
application queries
there<00:56:17.440><c> are</c><00:56:17.680><c> three</c><00:56:18.160><c> main</c><00:56:18.640><c> ways</c><00:56:19.119><c> of</c><00:56:19.359><c> nesting</c>

00:56:19.910 --> 00:56:19.920 align:start position:0%
there are three main ways of nesting
 

00:56:19.920 --> 00:56:22.069 align:start position:0%
there are three main ways of nesting
data<00:56:20.480><c> in</c><00:56:20.640><c> cassandra</c>

00:56:22.069 --> 00:56:22.079 align:start position:0%
data in cassandra
 

00:56:22.079 --> 00:56:25.030 align:start position:0%
data in cassandra
these<00:56:22.400><c> are</c><00:56:23.040><c> clustering</c><00:56:23.680><c> columns</c><00:56:24.400><c> collection</c>

00:56:25.030 --> 00:56:25.040 align:start position:0%
these are clustering columns collection
 

00:56:25.040 --> 00:56:28.829 align:start position:0%
these are clustering columns collection
columns<00:56:25.839><c> and</c><00:56:26.400><c> user</c><00:56:26.799><c> defined</c><00:56:27.760><c> type</c>

00:56:28.829 --> 00:56:28.839 align:start position:0%
columns and user defined type
 

00:56:28.839 --> 00:56:30.710 align:start position:0%
columns and user defined type
columns

00:56:30.710 --> 00:56:30.720 align:start position:0%
columns
 

00:56:30.720 --> 00:56:33.349 align:start position:0%
columns
clustering<00:56:31.280><c> columns</c><00:56:31.760><c> are</c><00:56:31.839><c> the</c><00:56:32.000><c> primary</c><00:56:32.720><c> data</c>

00:56:33.349 --> 00:56:33.359 align:start position:0%
clustering columns are the primary data
 

00:56:33.359 --> 00:56:35.829 align:start position:0%
clustering columns are the primary data
nesting<00:56:33.920><c> mechanisms</c>

00:56:35.829 --> 00:56:35.839 align:start position:0%
nesting mechanisms
 

00:56:35.839 --> 00:56:38.390 align:start position:0%
nesting mechanisms
look<00:56:36.079><c> at</c><00:56:36.240><c> the</c><00:56:36.400><c> actors</c><00:56:36.960><c> by</c><00:56:37.200><c> video</c><00:56:37.680><c> table</c><00:56:38.079><c> on</c><00:56:38.240><c> the</c>

00:56:38.390 --> 00:56:38.400 align:start position:0%
look at the actors by video table on the
 

00:56:38.400 --> 00:56:39.589 align:start position:0%
look at the actors by video table on the
right

00:56:39.589 --> 00:56:39.599 align:start position:0%
right
 

00:56:39.599 --> 00:56:43.349 align:start position:0%
right
we<00:56:39.839><c> apply</c><00:56:40.319><c> a</c><00:56:40.480><c> query</c><00:56:41.040><c> to</c><00:56:41.280><c> filter</c><00:56:41.760><c> by</c><00:56:42.000><c> video</c><00:56:42.480><c> id</c>

00:56:43.349 --> 00:56:43.359 align:start position:0%
we apply a query to filter by video id
 

00:56:43.359 --> 00:56:46.309 align:start position:0%
we apply a query to filter by video id
but<00:56:43.599><c> we</c><00:56:44.079><c> nest</c><00:56:44.559><c> the</c><00:56:44.799><c> actors</c><00:56:45.440><c> by</c><00:56:45.680><c> their</c><00:56:45.920><c> actor</c>

00:56:46.309 --> 00:56:46.319 align:start position:0%
but we nest the actors by their actor
 

00:56:46.319 --> 00:56:48.870 align:start position:0%
but we nest the actors by their actor
name<00:56:46.880><c> and</c><00:56:47.119><c> the</c><00:56:47.280><c> character</c><00:56:47.839><c> name</c><00:56:48.240><c> using</c>

00:56:48.870 --> 00:56:48.880 align:start position:0%
name and the character name using
 

00:56:48.880 --> 00:56:51.430 align:start position:0%
name and the character name using
clustering<00:56:49.680><c> columns</c>

00:56:51.430 --> 00:56:51.440 align:start position:0%
clustering columns
 

00:56:51.440 --> 00:56:54.549 align:start position:0%
clustering columns
the<00:56:51.680><c> partition</c><00:56:52.400><c> key</c><00:56:52.720><c> identifies</c><00:56:53.680><c> the</c><00:56:53.839><c> entity</c>

00:56:54.549 --> 00:56:54.559 align:start position:0%
the partition key identifies the entity
 

00:56:54.559 --> 00:56:57.670 align:start position:0%
the partition key identifies the entity
that<00:56:54.880><c> other</c><00:56:55.200><c> entities</c><00:56:56.000><c> nest</c><00:56:56.480><c> into</c><00:56:57.280><c> while</c><00:56:57.520><c> the</c>

00:56:57.670 --> 00:56:57.680 align:start position:0%
that other entities nest into while the
 

00:56:57.680 --> 00:57:00.549 align:start position:0%
that other entities nest into while the
clustering<00:56:58.240><c> columns</c><00:56:58.880><c> identify</c><00:56:59.839><c> the</c><00:57:00.079><c> nested</c>

00:57:00.549 --> 00:57:00.559 align:start position:0%
clustering columns identify the nested
 

00:57:00.559 --> 00:57:02.230 align:start position:0%
clustering columns identify the nested
entities

00:57:02.230 --> 00:57:02.240 align:start position:0%
entities
 

00:57:02.240 --> 00:57:04.630 align:start position:0%
entities
when<00:57:02.480><c> a</c><00:57:02.559><c> table</c><00:57:02.960><c> has</c><00:57:03.280><c> multiple</c><00:57:03.920><c> clustering</c>

00:57:04.630 --> 00:57:04.640 align:start position:0%
when a table has multiple clustering
 

00:57:04.640 --> 00:57:08.150 align:start position:0%
when a table has multiple clustering
column<00:57:05.520><c> the</c><00:57:05.680><c> data</c><00:57:06.160><c> is</c><00:57:06.319><c> stored</c><00:57:06.880><c> in</c><00:57:07.040><c> a</c><00:57:07.440><c> nested</c>

00:57:08.150 --> 00:57:08.160 align:start position:0%
column the data is stored in a nested
 

00:57:08.160 --> 00:57:09.910 align:start position:0%
column the data is stored in a nested
sorted<00:57:08.640><c> order</c>

00:57:09.910 --> 00:57:09.920 align:start position:0%
sorted order
 

00:57:09.920 --> 00:57:13.190 align:start position:0%
sorted order
multiple<00:57:10.640><c> clustering</c><00:57:11.359><c> columns</c><00:57:12.240><c> implement</c>

00:57:13.190 --> 00:57:13.200 align:start position:0%
multiple clustering columns implement
 

00:57:13.200 --> 00:57:15.829 align:start position:0%
multiple clustering columns implement
multi-level<00:57:14.480><c> nesting</c>

00:57:15.829 --> 00:57:15.839 align:start position:0%
multi-level nesting
 

00:57:15.839 --> 00:57:18.390 align:start position:0%
multi-level nesting
in<00:57:16.000><c> the</c><00:57:16.160><c> given</c><00:57:16.559><c> example</c><00:57:17.680><c> actors</c><00:57:18.240><c> are</c>

00:57:18.390 --> 00:57:18.400 align:start position:0%
in the given example actors are
 

00:57:18.400 --> 00:57:21.750 align:start position:0%
in the given example actors are
identified<00:57:19.359><c> by</c><00:57:19.599><c> videos</c><00:57:20.319><c> using</c><00:57:20.960><c> clustering</c>

00:57:21.750 --> 00:57:21.760 align:start position:0%
identified by videos using clustering
 

00:57:21.760 --> 00:57:24.789 align:start position:0%
identified by videos using clustering
columns

00:57:24.789 --> 00:57:24.799 align:start position:0%
 
 

00:57:24.799 --> 00:57:27.829 align:start position:0%
 
udts<00:57:25.599><c> are</c><00:57:25.760><c> a</c><00:57:25.839><c> secondary</c><00:57:26.880><c> mechanism</c><00:57:27.599><c> for</c>

00:57:27.829 --> 00:57:27.839 align:start position:0%
udts are a secondary mechanism for
 

00:57:27.839 --> 00:57:29.750 align:start position:0%
udts are a secondary mechanism for
nesting<00:57:28.400><c> data</c>

00:57:29.750 --> 00:57:29.760 align:start position:0%
nesting data
 

00:57:29.760 --> 00:57:32.309 align:start position:0%
nesting data
usually<00:57:30.559><c> this</c><00:57:30.799><c> occurs</c><00:57:31.520><c> when</c><00:57:31.760><c> there</c><00:57:32.000><c> is</c><00:57:32.160><c> a</c>

00:57:32.309 --> 00:57:32.319 align:start position:0%
usually this occurs when there is a
 

00:57:32.319 --> 00:57:35.190 align:start position:0%
usually this occurs when there is a
one-to-one<00:57:33.480><c> relationship</c>

00:57:35.190 --> 00:57:35.200 align:start position:0%
one-to-one relationship
 

00:57:35.200 --> 00:57:37.829 align:start position:0%
one-to-one relationship
you<00:57:35.440><c> also</c><00:57:35.760><c> have</c><00:57:36.079><c> lists</c><00:57:36.559><c> of</c><00:57:36.799><c> maps</c>

00:57:37.829 --> 00:57:37.839 align:start position:0%
you also have lists of maps
 

00:57:37.839 --> 00:57:40.549 align:start position:0%
you also have lists of maps
or<00:57:38.160><c> your</c><00:57:38.480><c> choice</c><00:57:38.960><c> of</c><00:57:39.119><c> user-defined</c><00:57:40.079><c> types</c>

00:57:40.549 --> 00:57:40.559 align:start position:0%
or your choice of user-defined types
 

00:57:40.559 --> 00:57:42.870 align:start position:0%
or your choice of user-defined types
within<00:57:40.960><c> a</c><00:57:41.040><c> single</c><00:57:41.520><c> column</c>

00:57:42.870 --> 00:57:42.880 align:start position:0%
within a single column
 

00:57:42.880 --> 00:57:45.670 align:start position:0%
within a single column
working<00:57:43.200><c> with</c><00:57:43.440><c> udts</c><00:57:44.240><c> is</c><00:57:44.480><c> much</c><00:57:44.880><c> easier</c><00:57:45.440><c> than</c>

00:57:45.670 --> 00:57:45.680 align:start position:0%
working with udts is much easier than
 

00:57:45.680 --> 00:57:49.670 align:start position:0%
working with udts is much easier than
working<00:57:46.160><c> with</c><00:57:46.559><c> multiple</c><00:57:47.280><c> collection</c><00:57:47.920><c> columns</c>

00:57:49.670 --> 00:57:49.680 align:start position:0%
working with multiple collection columns
 

00:57:49.680 --> 00:57:52.870 align:start position:0%
working with multiple collection columns
for<00:57:49.920><c> example</c><00:57:50.880><c> we</c><00:57:51.040><c> turn</c><00:57:51.440><c> videos</c><00:57:52.000><c> into</c><00:57:52.319><c> a</c><00:57:52.400><c> video</c>

00:57:52.870 --> 00:57:52.880 align:start position:0%
for example we turn videos into a video
 

00:57:52.880 --> 00:57:56.789 align:start position:0%
for example we turn videos into a video
type<00:57:53.200><c> udt</c><00:57:54.079><c> with</c><00:57:54.400><c> id</c><00:57:55.040><c> title</c><00:57:55.839><c> description</c><00:57:56.640><c> and</c>

00:57:56.789 --> 00:57:56.799 align:start position:0%
type udt with id title description and
 

00:57:56.799 --> 00:57:58.710 align:start position:0%
type udt with id title description and
other<00:57:57.040><c> parameters</c>

00:57:58.710 --> 00:57:58.720 align:start position:0%
other parameters
 

00:57:58.720 --> 00:58:01.030 align:start position:0%
other parameters
then<00:57:58.960><c> we</c><00:57:59.119><c> put</c><00:57:59.359><c> all</c><00:57:59.599><c> those</c><00:57:59.920><c> videos</c><00:58:00.720><c> in</c><00:58:00.880><c> a</c>

00:58:01.030 --> 00:58:01.040 align:start position:0%
then we put all those videos in a
 

00:58:01.040 --> 00:58:04.069 align:start position:0%
then we put all those videos in a
collection<00:58:01.599><c> column</c><00:58:02.240><c> in</c><00:58:02.400><c> the</c><00:58:02.559><c> videos</c><00:58:03.200><c> by</c><00:58:03.599><c> user</c>

00:58:04.069 --> 00:58:04.079 align:start position:0%
collection column in the videos by user
 

00:58:04.079 --> 00:58:05.349 align:start position:0%
collection column in the videos by user
table

00:58:05.349 --> 00:58:05.359 align:start position:0%
table
 

00:58:05.359 --> 00:58:09.750 align:start position:0%
table
table<00:58:06.079><c> videos</c><00:58:06.640><c> by</c><00:58:06.960><c> user</c><00:58:07.839><c> tests</c><00:58:08.480><c> all</c><00:58:08.799><c> videos</c><00:58:09.599><c> as</c>

00:58:09.750 --> 00:58:09.760 align:start position:0%
table videos by user tests all videos as
 

00:58:09.760 --> 00:58:12.710 align:start position:0%
table videos by user tests all videos as
a<00:58:09.920><c> collection</c><00:58:10.880><c> in</c><00:58:11.040><c> the</c><00:58:11.200><c> videos</c><00:58:11.760><c> column</c><00:58:12.480><c> with</c>

00:58:12.710 --> 00:58:12.720 align:start position:0%
a collection in the videos column with
 

00:58:12.720 --> 00:58:17.109 align:start position:0%
a collection in the videos column with
the<00:58:12.880><c> video</c><00:58:13.599><c> underscore</c><00:58:14.400><c> type</c><00:58:15.040><c> type</c>

00:58:17.109 --> 00:58:17.119 align:start position:0%
the video underscore type type
 

00:58:17.119 --> 00:58:21.190 align:start position:0%
the video underscore type type
partition<00:58:17.760><c> per</c><00:58:18.000><c> query</c><00:58:18.799><c> and</c><00:58:19.440><c> data</c><00:58:20.240><c> nesting</c><00:58:20.960><c> may</c>

00:58:21.190 --> 00:58:21.200 align:start position:0%
partition per query and data nesting may
 

00:58:21.200 --> 00:58:24.309 align:start position:0%
partition per query and data nesting may
result<00:58:21.760><c> in</c><00:58:22.160><c> data</c><00:58:22.559><c> duplication</c>

00:58:24.309 --> 00:58:24.319 align:start position:0%
result in data duplication
 

00:58:24.319 --> 00:58:27.270 align:start position:0%
result in data duplication
in<00:58:24.480><c> relational</c><00:58:25.359><c> data</c><00:58:25.760><c> models</c><00:58:26.400><c> the</c><00:58:26.559><c> tables</c><00:58:27.040><c> are</c>

00:58:27.270 --> 00:58:27.280 align:start position:0%
in relational data models the tables are
 

00:58:27.280 --> 00:58:29.829 align:start position:0%
in relational data models the tables are
joined<00:58:27.839><c> as</c><00:58:28.079><c> we</c><00:58:28.240><c> read</c><00:58:28.480><c> the</c><00:58:28.720><c> data</c>

00:58:29.829 --> 00:58:29.839 align:start position:0%
joined as we read the data
 

00:58:29.839 --> 00:58:32.789 align:start position:0%
joined as we read the data
in<00:58:30.000><c> cassandra</c><00:58:30.720><c> however</c><00:58:31.599><c> instead</c><00:58:32.000><c> of</c><00:58:32.160><c> wasting</c>

00:58:32.789 --> 00:58:32.799 align:start position:0%
in cassandra however instead of wasting
 

00:58:32.799 --> 00:58:35.829 align:start position:0%
in cassandra however instead of wasting
time<00:58:33.200><c> on</c><00:58:33.440><c> reads</c><00:58:34.400><c> the</c><00:58:34.559><c> data</c><00:58:35.040><c> is</c><00:58:35.200><c> taken</c><00:58:35.680><c> and</c>

00:58:35.829 --> 00:58:35.839 align:start position:0%
time on reads the data is taken and
 

00:58:35.839 --> 00:58:38.870 align:start position:0%
time on reads the data is taken and
returned<00:58:36.400><c> to</c><00:58:36.559><c> the</c><00:58:36.799><c> client</c><00:58:37.359><c> application</c>

00:58:38.870 --> 00:58:38.880 align:start position:0%
returned to the client application
 

00:58:38.880 --> 00:58:41.190 align:start position:0%
returned to the client application
for<00:58:39.040><c> example</c><00:58:39.680><c> we</c><00:58:39.839><c> have</c><00:58:40.079><c> three</c><00:58:40.400><c> tables</c><00:58:40.960><c> that</c>

00:58:41.190 --> 00:58:41.200 align:start position:0%
for example we have three tables that
 

00:58:41.200 --> 00:58:44.309 align:start position:0%
for example we have three tables that
represent<00:58:41.839><c> the</c><00:58:41.920><c> video's</c><00:58:42.480><c> object</c><00:58:43.520><c> videos</c><00:58:44.079><c> by</c>

00:58:44.309 --> 00:58:44.319 align:start position:0%
represent the video's object videos by
 

00:58:44.319 --> 00:58:49.030 align:start position:0%
represent the video's object videos by
actor<00:58:44.880><c> videos</c><00:58:45.359><c> by</c><00:58:45.680><c> genre</c><00:58:46.400><c> and</c><00:58:46.559><c> videos</c><00:58:47.119><c> by</c><00:58:47.520><c> tag</c>

00:58:49.030 --> 00:58:49.040 align:start position:0%
actor videos by genre and videos by tag
 

00:58:49.040 --> 00:58:52.069 align:start position:0%
actor videos by genre and videos by tag
this<00:58:49.359><c> duplicates</c><00:58:50.160><c> data</c><00:58:50.720><c> across</c><00:58:51.359><c> tables</c>

00:58:52.069 --> 00:58:52.079 align:start position:0%
this duplicates data across tables
 

00:58:52.079 --> 00:58:54.870 align:start position:0%
this duplicates data across tables
partitions<00:58:53.119><c> and</c><00:58:53.440><c> rows</c>

00:58:54.870 --> 00:58:54.880 align:start position:0%
partitions and rows
 

00:58:54.880 --> 00:58:57.510 align:start position:0%
partitions and rows
that<00:58:55.119><c> means</c><00:58:55.680><c> every</c><00:58:56.079><c> time</c><00:58:56.400><c> we</c><00:58:56.559><c> want</c><00:58:56.799><c> to</c><00:58:56.960><c> store</c><00:58:57.440><c> a</c>

00:58:57.510 --> 00:58:57.520 align:start position:0%
that means every time we want to store a
 

00:58:57.520 --> 00:59:00.390 align:start position:0%
that means every time we want to store a
new<00:58:57.839><c> video</c><00:58:58.640><c> we</c><00:58:58.880><c> have</c><00:58:59.040><c> to</c><00:58:59.359><c> write</c><00:58:59.599><c> the</c><00:58:59.760><c> record</c>

00:59:00.390 --> 00:59:00.400 align:start position:0%
new video we have to write the record
 

00:59:00.400 --> 00:59:03.349 align:start position:0%
new video we have to write the record
into<00:59:00.799><c> each</c><00:59:01.440><c> one</c><00:59:01.680><c> of</c><00:59:01.839><c> these</c><00:59:02.240><c> tables</c><00:59:02.880><c> to</c><00:59:03.119><c> keep</c>

00:59:03.349 --> 00:59:03.359 align:start position:0%
into each one of these tables to keep
 

00:59:03.359 --> 00:59:07.589 align:start position:0%
into each one of these tables to keep
them<00:59:03.760><c> in</c><00:59:04.079><c> sync</c>

00:59:07.589 --> 00:59:07.599 align:start position:0%
 
 

00:59:07.599 --> 00:59:10.630 align:start position:0%
 
upon<00:59:08.160><c> completing</c><00:59:08.880><c> this</c><00:59:09.200><c> topic</c><00:59:10.000><c> you</c><00:59:10.160><c> will</c><00:59:10.400><c> be</c>

00:59:10.630 --> 00:59:10.640 align:start position:0%
upon completing this topic you will be
 

00:59:10.640 --> 00:59:12.230 align:start position:0%
upon completing this topic you will be
able<00:59:10.960><c> to</c>

00:59:12.230 --> 00:59:12.240 align:start position:0%
able to
 

00:59:12.240 --> 00:59:15.990 align:start position:0%
able to
learn<00:59:12.640><c> how</c><00:59:12.880><c> to</c><00:59:13.040><c> use</c><00:59:13.440><c> data</c><00:59:13.839><c> types</c><00:59:14.240><c> in</c><00:59:14.400><c> a</c><00:59:14.559><c> table</c>

00:59:15.990 --> 00:59:16.000 align:start position:0%
learn how to use data types in a table
 

00:59:16.000 --> 00:59:18.789 align:start position:0%
learn how to use data types in a table
understand<00:59:16.720><c> the</c><00:59:16.960><c> ways</c><00:59:17.280><c> to</c><00:59:17.599><c> load</c><00:59:17.920><c> data</c><00:59:18.480><c> into</c>

00:59:18.789 --> 00:59:18.799 align:start position:0%
understand the ways to load data into
 

00:59:18.799 --> 00:59:20.390 align:start position:0%
understand the ways to load data into
the<00:59:18.960><c> table</c>

00:59:20.390 --> 00:59:20.400 align:start position:0%
the table
 

00:59:20.400 --> 00:59:24.069 align:start position:0%
the table
and<00:59:20.640><c> explore</c><00:59:21.520><c> some</c><00:59:21.760><c> of</c><00:59:21.839><c> the</c><00:59:22.000><c> features</c><00:59:22.720><c> of</c><00:59:22.960><c> cql</c>

00:59:24.069 --> 00:59:24.079 align:start position:0%
and explore some of the features of cql
 

00:59:24.079 --> 00:59:25.910 align:start position:0%
and explore some of the features of cql
copy

00:59:25.910 --> 00:59:25.920 align:start position:0%
copy
 

00:59:25.920 --> 00:59:28.309 align:start position:0%
copy
here's<00:59:26.400><c> our</c><00:59:26.559><c> data</c><00:59:26.960><c> modeling</c><00:59:27.440><c> methodology</c>

00:59:28.309 --> 00:59:28.319 align:start position:0%
here's our data modeling methodology
 

00:59:28.319 --> 00:59:29.510 align:start position:0%
here's our data modeling methodology
again

00:59:29.510 --> 00:59:29.520 align:start position:0%
again
 

00:59:29.520 --> 00:59:32.069 align:start position:0%
again
we've<00:59:29.839><c> created</c><00:59:30.319><c> our</c><00:59:30.559><c> conceptual</c><00:59:31.440><c> model</c><00:59:31.920><c> and</c>

00:59:32.069 --> 00:59:32.079 align:start position:0%
we've created our conceptual model and
 

00:59:32.079 --> 00:59:34.470 align:start position:0%
we've created our conceptual model and
our<00:59:32.240><c> application</c><00:59:33.040><c> workflow</c>

00:59:34.470 --> 00:59:34.480 align:start position:0%
our application workflow
 

00:59:34.480 --> 00:59:37.670 align:start position:0%
our application workflow
we've<00:59:34.799><c> also</c><00:59:35.119><c> applied</c><00:59:35.680><c> the</c><00:59:35.839><c> mapping</c><00:59:36.319><c> rules</c>

00:59:37.670 --> 00:59:37.680 align:start position:0%
we've also applied the mapping rules
 

00:59:37.680 --> 00:59:40.230 align:start position:0%
we've also applied the mapping rules
created<00:59:38.240><c> a</c><00:59:38.319><c> logical</c><00:59:38.880><c> data</c><00:59:39.280><c> model</c>

00:59:40.230 --> 00:59:40.240 align:start position:0%
created a logical data model
 

00:59:40.240 --> 00:59:42.630 align:start position:0%
created a logical data model
and<00:59:40.400><c> now</c><00:59:40.640><c> it's</c><00:59:40.880><c> time</c><00:59:41.280><c> for</c><00:59:41.520><c> us</c><00:59:41.680><c> to</c><00:59:41.920><c> create</c><00:59:42.400><c> our</c>

00:59:42.630 --> 00:59:42.640 align:start position:0%
and now it's time for us to create our
 

00:59:42.640 --> 00:59:45.430 align:start position:0%
and now it's time for us to create our
physical<00:59:43.280><c> data</c><00:59:43.680><c> model</c>

00:59:45.430 --> 00:59:45.440 align:start position:0%
physical data model
 

00:59:45.440 --> 00:59:48.870 align:start position:0%
physical data model
to<00:59:45.599><c> make</c><00:59:46.000><c> a</c><00:59:46.240><c> physical</c><00:59:46.799><c> model</c><00:59:47.680><c> add</c><00:59:48.079><c> data</c><00:59:48.400><c> types</c>

00:59:48.870 --> 00:59:48.880 align:start position:0%
to make a physical model add data types
 

00:59:48.880 --> 00:59:52.150 align:start position:0%
to make a physical model add data types
to<00:59:49.119><c> each</c><00:59:49.440><c> column</c><00:59:49.920><c> of</c><00:59:50.079><c> a</c><00:59:50.240><c> logical</c><00:59:50.799><c> model</c>

00:59:52.150 --> 00:59:52.160 align:start position:0%
to each column of a logical model
 

00:59:52.160 --> 00:59:54.950 align:start position:0%
to each column of a logical model
physical<00:59:52.720><c> models</c><00:59:53.599><c> also</c>

00:59:54.950 --> 00:59:54.960 align:start position:0%
physical models also
 

00:59:54.960 --> 00:59:58.470 align:start position:0%
physical models also
optimize<00:59:55.760><c> efficiency</c><00:59:56.640><c> and</c><00:59:56.799><c> performance</c>

00:59:58.470 --> 00:59:58.480 align:start position:0%
optimize efficiency and performance
 

00:59:58.480 --> 01:00:01.270 align:start position:0%
optimize efficiency and performance
ensuring<00:59:59.119><c> that</c><00:59:59.280><c> the</c><00:59:59.440><c> partition</c><01:00:00.240><c> sizes</c><01:00:00.960><c> won't</c>

01:00:01.270 --> 01:00:01.280 align:start position:0%
ensuring that the partition sizes won't
 

01:00:01.280 --> 01:00:03.190 align:start position:0%
ensuring that the partition sizes won't
grow<01:00:01.680><c> too</c><01:00:01.920><c> large</c>

01:00:03.190 --> 01:00:03.200 align:start position:0%
grow too large
 

01:00:03.200 --> 01:00:06.630 align:start position:0%
grow too large
and<01:00:03.359><c> will</c><01:00:03.599><c> return</c><01:00:04.079><c> the</c><01:00:04.240><c> queries</c><01:00:04.960><c> quickly</c>

01:00:06.630 --> 01:00:06.640 align:start position:0%
and will return the queries quickly
 

01:00:06.640 --> 01:00:09.270 align:start position:0%
and will return the queries quickly
here<01:00:07.440><c> we</c><01:00:07.599><c> have</c><01:00:07.839><c> a</c><01:00:07.920><c> logical</c><01:00:08.559><c> version</c><01:00:09.040><c> of</c>

01:00:09.270 --> 01:00:09.280 align:start position:0%
here we have a logical version of
 

01:00:09.280 --> 01:00:12.470 align:start position:0%
here we have a logical version of
commons<01:00:09.760><c> by</c><01:00:10.079><c> user</c><01:00:10.799><c> and</c><01:00:10.960><c> a</c><01:00:11.119><c> physical</c><01:00:11.760><c> version</c>

01:00:12.470 --> 01:00:12.480 align:start position:0%
commons by user and a physical version
 

01:00:12.480 --> 01:00:14.870 align:start position:0%
commons by user and a physical version
of<01:00:12.799><c> comments</c><01:00:13.359><c> by</c><01:00:13.599><c> user</c>

01:00:14.870 --> 01:00:14.880 align:start position:0%
of comments by user
 

01:00:14.880 --> 01:00:17.670 align:start position:0%
of comments by user
as<01:00:15.119><c> you</c><01:00:15.280><c> can</c><01:00:15.520><c> see</c><01:00:16.160><c> the</c><01:00:16.319><c> physical</c><01:00:16.960><c> version</c><01:00:17.520><c> of</c>

01:00:17.670 --> 01:00:17.680 align:start position:0%
as you can see the physical version of
 

01:00:17.680 --> 01:00:21.109 align:start position:0%
as you can see the physical version of
cql<01:00:18.480><c> data</c><01:00:18.880><c> types</c><01:00:20.000><c> like</c>

01:00:21.109 --> 01:00:21.119 align:start position:0%
cql data types like
 

01:00:21.119 --> 01:00:24.230 align:start position:0%
cql data types like
user<01:00:21.599><c> id</c><01:00:22.079><c> is</c><01:00:22.480><c> uuid</c>

01:00:24.230 --> 01:00:24.240 align:start position:0%
user id is uuid
 

01:00:24.240 --> 01:00:27.670 align:start position:0%
user id is uuid
posted<01:00:24.880><c> timestamp</c><01:00:25.839><c> is</c><01:00:26.160><c> of</c><01:00:26.319><c> time</c><01:00:26.640><c> stamp</c><01:00:27.280><c> data</c>

01:00:27.670 --> 01:00:27.680 align:start position:0%
posted timestamp is of time stamp data
 

01:00:27.680 --> 01:00:28.789 align:start position:0%
posted timestamp is of time stamp data
type

01:00:28.789 --> 01:00:28.799 align:start position:0%
type
 

01:00:28.799 --> 01:00:33.270 align:start position:0%
type
video<01:00:29.280><c> id</c><01:00:29.839><c> is</c><01:00:30.079><c> of</c><01:00:30.319><c> time</c><01:00:30.799><c> uuid</c><01:00:31.839><c> data</c><01:00:32.160><c> type</c>

01:00:33.270 --> 01:00:33.280 align:start position:0%
video id is of time uuid data type
 

01:00:33.280 --> 01:00:36.549 align:start position:0%
video id is of time uuid data type
comment<01:00:34.000><c> title</c><01:00:34.720><c> and</c><01:00:35.040><c> type</c><01:00:35.599><c> is</c><01:00:35.760><c> of</c><01:00:36.000><c> text</c>

01:00:36.549 --> 01:00:36.559 align:start position:0%
comment title and type is of text
 

01:00:36.559 --> 01:00:38.150 align:start position:0%
comment title and type is of text
respectively

01:00:38.150 --> 01:00:38.160 align:start position:0%
respectively
 

01:00:38.160 --> 01:00:40.950 align:start position:0%
respectively
tags<01:00:39.040><c> is</c><01:00:39.200><c> a</c><01:00:39.359><c> set</c><01:00:39.599><c> of</c><01:00:39.839><c> text</c>

01:00:40.950 --> 01:00:40.960 align:start position:0%
tags is a set of text
 

01:00:40.960 --> 01:00:42.470 align:start position:0%
tags is a set of text
and<01:00:41.200><c> lastly</c>

01:00:42.470 --> 01:00:42.480 align:start position:0%
and lastly
 

01:00:42.480 --> 01:00:47.190 align:start position:0%
and lastly
preview<01:00:43.119><c> thumbnails</c><01:00:44.160><c> is</c><01:00:44.400><c> defined</c><01:00:45.119><c> as</c><01:00:45.280><c> a</c><01:00:45.440><c> map</c>

01:00:47.190 --> 01:00:47.200 align:start position:0%
preview thumbnails is defined as a map
 

01:00:47.200 --> 01:00:49.750 align:start position:0%
preview thumbnails is defined as a map
now<01:00:47.440><c> we</c><01:00:47.680><c> will</c><01:00:47.920><c> use</c><01:00:48.319><c> these</c><01:00:48.559><c> data</c><01:00:48.960><c> types</c><01:00:49.520><c> in</c>

01:00:49.750 --> 01:00:49.760 align:start position:0%
now we will use these data types in
 

01:00:49.760 --> 01:00:53.829 align:start position:0%
now we will use these data types in
creating<01:00:50.400><c> a</c><01:00:50.559><c> table</c>

01:00:53.829 --> 01:00:53.839 align:start position:0%
 
 

01:00:53.839 --> 01:00:56.870 align:start position:0%
 
we<01:00:54.079><c> already</c><01:00:54.559><c> saw</c><01:00:54.960><c> how</c><01:00:55.119><c> to</c><01:00:55.359><c> use</c><01:00:55.680><c> the</c><01:00:55.839><c> data</c><01:00:56.240><c> types</c>

01:00:56.870 --> 01:00:56.880 align:start position:0%
we already saw how to use the data types
 

01:00:56.880 --> 01:00:59.510 align:start position:0%
we already saw how to use the data types
in<01:00:57.040><c> the</c><01:00:57.280><c> table</c><01:00:58.000><c> in</c><01:00:58.319><c> theory</c>

01:00:59.510 --> 01:00:59.520 align:start position:0%
in the table in theory
 

01:00:59.520 --> 01:01:02.069 align:start position:0%
in the table in theory
to<01:00:59.680><c> better</c><01:01:00.160><c> understand</c><01:01:00.880><c> the</c><01:01:01.040><c> physical</c><01:01:01.680><c> data</c>

01:01:02.069 --> 01:01:02.079 align:start position:0%
to better understand the physical data
 

01:01:02.079 --> 01:01:04.870 align:start position:0%
to better understand the physical data
model<01:01:02.960><c> it's</c><01:01:03.280><c> time</c><01:01:03.599><c> to</c><01:01:03.760><c> demonstrate</c><01:01:04.559><c> it</c><01:01:04.640><c> with</c>

01:01:04.870 --> 01:01:04.880 align:start position:0%
model it's time to demonstrate it with
 

01:01:04.880 --> 01:01:06.630 align:start position:0%
model it's time to demonstrate it with
an<01:01:05.040><c> example</c>

01:01:06.630 --> 01:01:06.640 align:start position:0%
an example
 

01:01:06.640 --> 01:01:09.190 align:start position:0%
an example
creating<01:01:07.119><c> a</c><01:01:07.280><c> table</c><01:01:07.920><c> could</c><01:01:08.240><c> cause</c><01:01:08.640><c> a</c><01:01:08.720><c> lot</c><01:01:08.960><c> of</c>

01:01:09.190 --> 01:01:09.200 align:start position:0%
creating a table could cause a lot of
 

01:01:09.200 --> 01:01:12.630 align:start position:0%
creating a table could cause a lot of
problems<01:01:10.000><c> if</c><01:01:10.160><c> the</c><01:01:10.319><c> tables</c><01:01:11.040><c> aren't</c><01:01:11.839><c> configured</c>

01:01:12.630 --> 01:01:12.640 align:start position:0%
problems if the tables aren't configured
 

01:01:12.640 --> 01:01:14.150 align:start position:0%
problems if the tables aren't configured
correctly

01:01:14.150 --> 01:01:14.160 align:start position:0%
correctly
 

01:01:14.160 --> 01:01:16.309 align:start position:0%
correctly
the<01:01:14.400><c> first</c><01:01:14.799><c> challenge</c><01:01:15.359><c> is</c><01:01:15.599><c> creating</c><01:01:16.160><c> a</c>

01:01:16.309 --> 01:01:16.319 align:start position:0%
the first challenge is creating a
 

01:01:16.319 --> 01:01:19.589 align:start position:0%
the first challenge is creating a
partition<01:01:17.119><c> that</c><01:01:17.359><c> is</c><01:01:17.599><c> way</c><01:01:17.920><c> too</c><01:01:18.240><c> large</c>

01:01:19.589 --> 01:01:19.599 align:start position:0%
partition that is way too large
 

01:01:19.599 --> 01:01:22.789 align:start position:0%
partition that is way too large
there<01:01:19.839><c> are</c><01:01:19.920><c> many</c><01:01:20.240><c> other</c><01:01:20.559><c> challenges</c><01:01:21.760><c> that</c><01:01:22.079><c> are</c>

01:01:22.789 --> 01:01:22.799 align:start position:0%
there are many other challenges that are
 

01:01:22.799 --> 01:01:25.510 align:start position:0%
there are many other challenges that are
related<01:01:23.359><c> to</c><01:01:23.720><c> optimization</c>

01:01:25.510 --> 01:01:25.520 align:start position:0%
related to optimization
 

01:01:25.520 --> 01:01:27.510 align:start position:0%
related to optimization
now<01:01:25.760><c> we</c><01:01:25.920><c> have</c><01:01:26.160><c> data</c><01:01:26.559><c> types</c><01:01:26.960><c> which</c><01:01:27.200><c> we</c><01:01:27.359><c> have</c>

01:01:27.510 --> 01:01:27.520 align:start position:0%
now we have data types which we have
 

01:01:27.520 --> 01:01:29.750 align:start position:0%
now we have data types which we have
added<01:01:27.920><c> in</c><01:01:28.000><c> the</c><01:01:28.160><c> previous</c><01:01:28.720><c> topic</c>

01:01:29.750 --> 01:01:29.760 align:start position:0%
added in the previous topic
 

01:01:29.760 --> 01:01:32.870 align:start position:0%
added in the previous topic
now<01:01:30.000><c> let's</c><01:01:30.319><c> create</c><01:01:30.720><c> a</c><01:01:30.880><c> table</c><01:01:31.440><c> using</c><01:01:31.760><c> the</c><01:01:32.000><c> cql</c>

01:01:32.870 --> 01:01:32.880 align:start position:0%
now let's create a table using the cql
 

01:01:32.880 --> 01:01:35.910 align:start position:0%
now let's create a table using the cql
create<01:01:33.359><c> table</c><01:01:34.160><c> statement</c>

01:01:35.910 --> 01:01:35.920 align:start position:0%
create table statement
 

01:01:35.920 --> 01:01:38.549 align:start position:0%
create table statement
in<01:01:36.079><c> this</c><01:01:36.319><c> example</c><01:01:37.040><c> we've</c><01:01:37.359><c> created</c><01:01:37.839><c> a</c><01:01:38.000><c> table</c><01:01:38.400><c> of</c>

01:01:38.549 --> 01:01:38.559 align:start position:0%
in this example we've created a table of
 

01:01:38.559 --> 01:01:41.030 align:start position:0%
in this example we've created a table of
comments<01:01:39.119><c> by</c><01:01:39.440><c> user</c>

01:01:41.030 --> 01:01:41.040 align:start position:0%
comments by user
 

01:01:41.040 --> 01:01:43.109 align:start position:0%
comments by user
the<01:01:41.280><c> field</c><01:01:41.680><c> in</c><01:01:41.760><c> the</c><01:01:41.920><c> table</c><01:01:42.400><c> are</c><01:01:42.640><c> everything</c>

01:01:43.109 --> 01:01:43.119 align:start position:0%
the field in the table are everything
 

01:01:43.119 --> 01:01:45.510 align:start position:0%
the field in the table are everything
that<01:01:43.359><c> we</c><01:01:43.599><c> saw</c><01:01:43.920><c> on</c><01:01:44.079><c> the</c><01:01:44.240><c> previous</c><01:01:44.720><c> slide</c><01:01:45.280><c> in</c><01:01:45.359><c> the</c>

01:01:45.510 --> 01:01:45.520 align:start position:0%
that we saw on the previous slide in the
 

01:01:45.520 --> 01:01:48.470 align:start position:0%
that we saw on the previous slide in the
physical<01:01:46.160><c> version</c><01:01:46.640><c> of</c><01:01:46.720><c> the</c><01:01:46.880><c> table</c><01:01:47.760><c> the</c><01:01:48.000><c> user</c>

01:01:48.470 --> 01:01:48.480 align:start position:0%
physical version of the table the user
 

01:01:48.480 --> 01:01:50.549 align:start position:0%
physical version of the table the user
id<01:01:48.960><c> is</c><01:01:49.119><c> uuid</c>

01:01:50.549 --> 01:01:50.559 align:start position:0%
id is uuid
 

01:01:50.559 --> 01:01:53.670 align:start position:0%
id is uuid
and<01:01:50.880><c> the</c><01:01:51.040><c> posted</c><01:01:51.599><c> timestamp</c><01:01:52.480><c> is</c><01:01:52.720><c> a</c><01:01:52.880><c> timestamp</c>

01:01:53.670 --> 01:01:53.680 align:start position:0%
and the posted timestamp is a timestamp
 

01:01:53.680 --> 01:01:56.549 align:start position:0%
and the posted timestamp is a timestamp
and<01:01:54.000><c> all</c><01:01:54.160><c> the</c><01:01:54.400><c> other</c><01:01:54.640><c> data</c><01:01:55.040><c> types</c><01:01:55.680><c> that</c><01:01:55.920><c> we</c><01:01:56.160><c> saw</c>

01:01:56.549 --> 01:01:56.559 align:start position:0%
and all the other data types that we saw
 

01:01:56.559 --> 01:01:59.030 align:start position:0%
and all the other data types that we saw
earlier

01:01:59.030 --> 01:01:59.040 align:start position:0%
earlier
 

01:01:59.040 --> 01:02:01.990 align:start position:0%
earlier
once<01:01:59.359><c> the</c><01:01:59.520><c> table</c><01:02:00.000><c> is</c><01:02:00.160><c> created</c><01:02:01.119><c> the</c><01:02:01.280><c> user</c><01:02:01.760><c> may</c>

01:02:01.990 --> 01:02:02.000 align:start position:0%
once the table is created the user may
 

01:02:02.000 --> 01:02:05.270 align:start position:0%
once the table is created the user may
want<01:02:02.240><c> to</c><01:02:02.480><c> insert</c><01:02:03.280><c> data</c><01:02:03.760><c> into</c><01:02:04.160><c> it</c>

01:02:05.270 --> 01:02:05.280 align:start position:0%
want to insert data into it
 

01:02:05.280 --> 01:02:08.069 align:start position:0%
want to insert data into it
there<01:02:05.440><c> can</c><01:02:05.599><c> be</c><01:02:05.760><c> two</c><01:02:06.160><c> types</c><01:02:06.640><c> of</c><01:02:06.799><c> users</c>

01:02:08.069 --> 01:02:08.079 align:start position:0%
there can be two types of users
 

01:02:08.079 --> 01:02:11.589 align:start position:0%
there can be two types of users
a<01:02:08.240><c> new</c><01:02:08.559><c> user</c><01:02:09.119><c> and</c><01:02:09.280><c> an</c><01:02:09.440><c> existing</c><01:02:10.160><c> user</c>

01:02:11.589 --> 01:02:11.599 align:start position:0%
a new user and an existing user
 

01:02:11.599 --> 01:02:14.230 align:start position:0%
a new user and an existing user
if<01:02:11.760><c> it's</c><01:02:12.000><c> a</c><01:02:12.160><c> new</c><01:02:12.480><c> application</c><01:02:13.520><c> then</c><01:02:13.760><c> users</c>

01:02:14.230 --> 01:02:14.240 align:start position:0%
if it's a new application then users
 

01:02:14.240 --> 01:02:16.789 align:start position:0%
if it's a new application then users
will<01:02:14.480><c> use</c><01:02:14.799><c> your</c><01:02:15.040><c> site</c><01:02:15.440><c> and</c><01:02:15.680><c> insert</c><01:02:16.079><c> the</c><01:02:16.240><c> data</c>

01:02:16.789 --> 01:02:16.799 align:start position:0%
will use your site and insert the data
 

01:02:16.799 --> 01:02:18.309 align:start position:0%
will use your site and insert the data
for<01:02:17.119><c> you</c>

01:02:18.309 --> 01:02:18.319 align:start position:0%
for you
 

01:02:18.319 --> 01:02:20.710 align:start position:0%
for you
but<01:02:18.559><c> if</c><01:02:18.640><c> you're</c><01:02:18.880><c> migrating</c><01:02:19.680><c> from</c><01:02:19.839><c> an</c><01:02:20.079><c> existing</c>

01:02:20.710 --> 01:02:20.720 align:start position:0%
but if you're migrating from an existing
 

01:02:20.720 --> 01:02:23.670 align:start position:0%
but if you're migrating from an existing
database<01:02:21.599><c> then</c><01:02:21.839><c> it</c><01:02:21.920><c> may</c><01:02:22.240><c> take</c><01:02:22.640><c> a</c><01:02:22.799><c> few</c><01:02:23.119><c> ways</c><01:02:23.520><c> to</c>

01:02:23.670 --> 01:02:23.680 align:start position:0%
database then it may take a few ways to
 

01:02:23.680 --> 01:02:26.390 align:start position:0%
database then it may take a few ways to
get<01:02:23.920><c> the</c><01:02:24.079><c> data</c><01:02:24.720><c> into</c><01:02:24.960><c> the</c><01:02:25.119><c> table</c>

01:02:26.390 --> 01:02:26.400 align:start position:0%
get the data into the table
 

01:02:26.400 --> 01:02:29.109 align:start position:0%
get the data into the table
first<01:02:27.200><c> is</c><01:02:27.359><c> the</c><01:02:27.520><c> copy</c><01:02:27.920><c> command</c><01:02:28.559><c> which</c><01:02:28.880><c> can</c>

01:02:29.109 --> 01:02:29.119 align:start position:0%
first is the copy command which can
 

01:02:29.119 --> 01:02:33.910 align:start position:0%
first is the copy command which can
leverage<01:02:29.920><c> cql</c><01:02:30.640><c> copy</c><01:02:31.280><c> in</c><01:02:31.520><c> cql</c><01:02:32.559><c> and</c><01:02:32.720><c> has</c><01:02:32.960><c> a</c><01:02:33.200><c> value</c>

01:02:33.910 --> 01:02:33.920 align:start position:0%
leverage cql copy in cql and has a value
 

01:02:33.920 --> 01:02:37.829 align:start position:0%
leverage cql copy in cql and has a value
of<01:02:34.240><c> inserting</c><01:02:35.400><c> approximately</c><01:02:36.640><c> 2</c><01:02:37.280><c> million</c>

01:02:37.829 --> 01:02:37.839 align:start position:0%
of inserting approximately 2 million
 

01:02:37.839 --> 01:02:41.670 align:start position:0%
of inserting approximately 2 million
values<01:02:38.960><c> into</c><01:02:39.280><c> the</c><01:02:39.440><c> database</c>

01:02:41.670 --> 01:02:41.680 align:start position:0%
values into the database
 

01:02:41.680 --> 01:02:44.470 align:start position:0%
values into the database
second<01:02:42.160><c> is</c><01:02:42.240><c> the</c><01:02:42.400><c> ss</c><01:02:42.880><c> table</c><01:02:43.359><c> loader</c><01:02:44.079><c> which</c><01:02:44.319><c> is</c>

01:02:44.470 --> 01:02:44.480 align:start position:0%
second is the ss table loader which is
 

01:02:44.480 --> 01:02:47.589 align:start position:0%
second is the ss table loader which is
used<01:02:44.880><c> when</c><01:02:45.119><c> migrating</c><01:02:46.000><c> from</c><01:02:46.240><c> one</c><01:02:46.640><c> cluster</c><01:02:47.440><c> to</c>

01:02:47.589 --> 01:02:47.599 align:start position:0%
used when migrating from one cluster to
 

01:02:47.599 --> 01:02:49.109 align:start position:0%
used when migrating from one cluster to
another

01:02:49.109 --> 01:02:49.119 align:start position:0%
another
 

01:02:49.119 --> 01:02:51.670 align:start position:0%
another
and<01:02:49.359><c> lastly</c><01:02:50.000><c> there</c><01:02:50.240><c> is</c><01:02:50.480><c> spark</c><01:02:51.040><c> for</c><01:02:51.280><c> data</c>

01:02:51.670 --> 01:02:51.680 align:start position:0%
and lastly there is spark for data
 

01:02:51.680 --> 01:02:54.549 align:start position:0%
and lastly there is spark for data
loading<01:02:52.319><c> which</c><01:02:52.559><c> has</c><01:02:52.960><c> a</c><01:02:53.119><c> lot</c><01:02:53.440><c> of</c><01:02:53.680><c> options</c><01:02:54.319><c> but</c>

01:02:54.549 --> 01:02:54.559 align:start position:0%
loading which has a lot of options but
 

01:02:54.559 --> 01:02:57.750 align:start position:0%
loading which has a lot of options but
does<01:02:54.880><c> not</c><01:02:55.359><c> require</c><01:02:56.319><c> a</c><01:02:56.559><c> working</c><01:02:57.119><c> knowledge</c><01:02:57.599><c> of</c>

01:02:57.750 --> 01:02:57.760 align:start position:0%
does not require a working knowledge of
 

01:02:57.760 --> 01:03:00.470 align:start position:0%
does not require a working knowledge of
spark

01:03:00.470 --> 01:03:00.480 align:start position:0%
 
 

01:03:00.480 --> 01:03:04.789 align:start position:0%
 
here<01:03:00.799><c> are</c><01:03:00.960><c> some</c><01:03:01.280><c> basic</c><01:03:01.839><c> sql</c><01:03:02.480><c> copy</c><01:03:02.960><c> features</c>

01:03:04.789 --> 01:03:04.799 align:start position:0%
here are some basic sql copy features
 

01:03:04.799 --> 01:03:08.069 align:start position:0%
here are some basic sql copy features
copy<01:03:05.280><c> 2</c><01:03:05.760><c> exports</c><01:03:06.400><c> data</c><01:03:06.880><c> from</c><01:03:07.119><c> a</c><01:03:07.200><c> table</c><01:03:07.760><c> to</c><01:03:07.920><c> a</c>

01:03:08.069 --> 01:03:08.079 align:start position:0%
copy 2 exports data from a table to a
 

01:03:08.079 --> 01:03:10.470 align:start position:0%
copy 2 exports data from a table to a
csv<01:03:09.040><c> file</c>

01:03:10.470 --> 01:03:10.480 align:start position:0%
csv file
 

01:03:10.480 --> 01:03:13.990 align:start position:0%
csv file
copy<01:03:10.960><c> from</c><01:03:11.520><c> imports</c><01:03:12.000><c> data</c><01:03:12.400><c> to</c><01:03:12.640><c> a</c><01:03:12.799><c> table</c><01:03:13.520><c> from</c><01:03:13.839><c> a</c>

01:03:13.990 --> 01:03:14.000 align:start position:0%
copy from imports data to a table from a
 

01:03:14.000 --> 01:03:18.150 align:start position:0%
copy from imports data to a table from a
csv<01:03:14.839><c> file</c><01:03:16.079><c> in</c><01:03:16.319><c> sql</c><01:03:16.880><c> copy</c><01:03:17.440><c> the</c><01:03:17.680><c> process</c>

01:03:18.150 --> 01:03:18.160 align:start position:0%
csv file in sql copy the process
 

01:03:18.160 --> 01:03:21.190 align:start position:0%
csv file in sql copy the process
verifies<01:03:19.039><c> the</c><01:03:19.200><c> primary</c><01:03:19.839><c> key</c><01:03:20.240><c> and</c><01:03:20.480><c> updates</c><01:03:21.039><c> the</c>

01:03:21.190 --> 01:03:21.200 align:start position:0%
verifies the primary key and updates the
 

01:03:21.200 --> 01:03:24.309 align:start position:0%
verifies the primary key and updates the
existing<01:03:21.920><c> records</c><01:03:22.559><c> accordingly</c>

01:03:24.309 --> 01:03:24.319 align:start position:0%
existing records accordingly
 

01:03:24.319 --> 01:03:27.190 align:start position:0%
existing records accordingly
if<01:03:24.480><c> the</c><01:03:24.559><c> header</c><01:03:25.039><c> is</c><01:03:25.200><c> false</c><01:03:26.000><c> it</c><01:03:26.240><c> specifies</c><01:03:27.039><c> that</c>

01:03:27.190 --> 01:03:27.200 align:start position:0%
if the header is false it specifies that
 

01:03:27.200 --> 01:03:29.190 align:start position:0%
if the header is false it specifies that
the<01:03:27.440><c> fields</c><01:03:27.839><c> are</c><01:03:28.000><c> imported</c><01:03:28.880><c> in</c><01:03:29.039><c> a</c>

01:03:29.190 --> 01:03:29.200 align:start position:0%
the fields are imported in a
 

01:03:29.200 --> 01:03:30.470 align:start position:0%
the fields are imported in a
deterministic

01:03:30.470 --> 01:03:30.480 align:start position:0%
deterministic
 

01:03:30.480 --> 01:03:31.910 align:start position:0%
deterministic
order

01:03:31.910 --> 01:03:31.920 align:start position:0%
order
 

01:03:31.920 --> 01:03:34.230 align:start position:0%
order
when<01:03:32.160><c> column</c><01:03:32.559><c> names</c><01:03:33.039><c> are</c><01:03:33.200><c> specified</c><01:03:33.920><c> in</c><01:03:34.000><c> the</c>

01:03:34.230 --> 01:03:34.240 align:start position:0%
when column names are specified in the
 

01:03:34.240 --> 01:03:36.950 align:start position:0%
when column names are specified in the
table<01:03:34.960><c> then</c><01:03:35.200><c> the</c><01:03:35.359><c> fields</c><01:03:35.760><c> are</c><01:03:35.920><c> imported</c><01:03:36.720><c> in</c>

01:03:36.950 --> 01:03:36.960 align:start position:0%
table then the fields are imported in
 

01:03:36.960 --> 01:03:38.390 align:start position:0%
table then the fields are imported in
that<01:03:37.440><c> order</c>

01:03:38.390 --> 01:03:38.400 align:start position:0%
that order
 

01:03:38.400 --> 01:03:41.349 align:start position:0%
that order
if<01:03:38.640><c> any</c><01:03:38.960><c> field</c><01:03:39.359><c> is</c><01:03:39.520><c> missing</c><01:03:39.920><c> or</c><01:03:40.160><c> empty</c><01:03:40.880><c> it</c><01:03:41.119><c> is</c>

01:03:41.349 --> 01:03:41.359 align:start position:0%
if any field is missing or empty it is
 

01:03:41.359 --> 01:03:43.430 align:start position:0%
if any field is missing or empty it is
set<01:03:41.760><c> to</c><01:03:42.000><c> null</c>

01:03:43.430 --> 01:03:43.440 align:start position:0%
set to null
 

01:03:43.440 --> 01:03:45.670 align:start position:0%
set to null
source<01:03:43.920><c> cannot</c><01:03:44.240><c> have</c><01:03:44.480><c> more</c><01:03:44.880><c> fields</c><01:03:45.359><c> than</c><01:03:45.520><c> the</c>

01:03:45.670 --> 01:03:45.680 align:start position:0%
source cannot have more fields than the
 

01:03:45.680 --> 01:03:48.710 align:start position:0%
source cannot have more fields than the
target<01:03:46.240><c> table</c><01:03:47.039><c> but</c><01:03:47.280><c> surely</c><01:03:47.760><c> can</c><01:03:48.000><c> have</c><01:03:48.319><c> less</c>

01:03:48.710 --> 01:03:48.720 align:start position:0%
target table but surely can have less
 

01:03:48.720 --> 01:03:52.150 align:start position:0%
target table but surely can have less
number<01:03:48.960><c> of</c><01:03:49.200><c> fields</c><01:03:49.680><c> than</c><01:03:49.920><c> the</c><01:03:50.079><c> target</c><01:03:50.640><c> table</c>

01:03:52.150 --> 01:03:52.160 align:start position:0%
number of fields than the target table
 

01:03:52.160 --> 01:03:54.470 align:start position:0%
number of fields than the target table
so<01:03:52.400><c> let's</c><01:03:52.640><c> look</c><01:03:52.880><c> at</c><01:03:53.039><c> an</c><01:03:53.200><c> example</c><01:03:53.839><c> of</c><01:03:54.079><c> basic</c>

01:03:54.470 --> 01:03:54.480 align:start position:0%
so let's look at an example of basic
 

01:03:54.480 --> 01:03:57.589 align:start position:0%
so let's look at an example of basic
data<01:03:54.960><c> loading</c><01:03:55.359><c> with</c><01:03:55.680><c> cql</c><01:03:56.400><c> copy</c>

01:03:57.589 --> 01:03:57.599 align:start position:0%
data loading with cql copy
 

01:03:57.599 --> 01:04:00.789 align:start position:0%
data loading with cql copy
this<01:03:57.920><c> is</c><01:03:58.079><c> a</c><01:03:58.160><c> good</c><01:03:58.480><c> method</c><01:03:58.960><c> to</c><01:03:59.119><c> use</c><01:03:59.760><c> and</c><01:04:00.319><c> to</c><01:04:00.559><c> get</c>

01:04:00.789 --> 01:04:00.799 align:start position:0%
this is a good method to use and to get
 

01:04:00.799 --> 01:04:02.390 align:start position:0%
this is a good method to use and to get
started

01:04:02.390 --> 01:04:02.400 align:start position:0%
started
 

01:04:02.400 --> 01:04:05.109 align:start position:0%
started
we<01:04:02.559><c> will</c><01:04:02.799><c> import</c><01:04:03.200><c> the</c><01:04:03.359><c> data</c><01:04:03.920><c> in</c><01:04:04.079><c> column</c><01:04:04.640><c> 1</c>

01:04:05.109 --> 01:04:05.119 align:start position:0%
we will import the data in column 1
 

01:04:05.119 --> 01:04:09.670 align:start position:0%
we will import the data in column 1
column<01:04:05.599><c> 2</c><01:04:06.000><c> and</c><01:04:06.160><c> column</c><01:04:06.640><c> 3</c><01:04:07.440><c> from</c><01:04:07.839><c> the</c><01:04:08.000><c> csv</c><01:04:08.960><c> file</c>

01:04:09.670 --> 01:04:09.680 align:start position:0%
column 2 and column 3 from the csv file
 

01:04:09.680 --> 01:04:12.309 align:start position:0%
column 2 and column 3 from the csv file
table<01:04:10.160><c> 1</c><01:04:10.480><c> data.csv</c>

01:04:12.309 --> 01:04:12.319 align:start position:0%
table 1 data.csv
 

01:04:12.319 --> 01:04:26.549 align:start position:0%
table 1 data.csv
when<01:04:12.720><c> header</c><01:04:13.440><c> is</c><01:04:13.680><c> equal</c><01:04:14.079><c> to</c><01:04:14.400><c> true</c>

01:04:26.549 --> 01:04:26.559 align:start position:0%
 
 

01:04:26.559 --> 01:04:30.230 align:start position:0%
 
welcome<01:04:27.039><c> to</c><01:04:27.200><c> module</c><01:04:27.760><c> 4</c><01:04:28.559><c> cassandra</c><01:04:29.440><c> practical</c>

01:04:30.230 --> 01:04:30.240 align:start position:0%
welcome to module 4 cassandra practical
 

01:04:30.240 --> 01:04:31.589 align:start position:0%
welcome to module 4 cassandra practical
application

01:04:31.589 --> 01:04:31.599 align:start position:0%
application
 

01:04:31.599 --> 01:04:34.230 align:start position:0%
application
we're<01:04:31.760><c> going</c><01:04:32.000><c> to</c><01:04:32.160><c> help</c><01:04:32.400><c> you</c><01:04:33.039><c> start</c><01:04:33.520><c> your</c><01:04:33.839><c> own</c>

01:04:34.230 --> 01:04:34.240 align:start position:0%
we're going to help you start your own
 

01:04:34.240 --> 01:04:37.430 align:start position:0%
we're going to help you start your own
cassandra<01:04:35.039><c> as</c><01:04:35.200><c> a</c><01:04:35.359><c> service</c><01:04:35.920><c> db</c><01:04:36.640><c> on</c><01:04:36.799><c> a</c><01:04:36.960><c> cloud</c>

01:04:37.430 --> 01:04:37.440 align:start position:0%
cassandra as a service db on a cloud
 

01:04:37.440 --> 01:04:39.990 align:start position:0%
cassandra as a service db on a cloud
provider<01:04:38.079><c> of</c><01:04:38.240><c> your</c><01:04:38.480><c> choice</c>

01:04:39.990 --> 01:04:40.000 align:start position:0%
provider of your choice
 

01:04:40.000 --> 01:04:43.750 align:start position:0%
provider of your choice
cassandra<01:04:40.640><c> as</c><01:04:40.799><c> a</c><01:04:40.960><c> service</c><01:04:41.680><c> is</c><01:04:41.920><c> named</c><01:04:42.559><c> astrodb</c>

01:04:43.750 --> 01:04:43.760 align:start position:0%
cassandra as a service is named astrodb
 

01:04:43.760 --> 01:04:47.589 align:start position:0%
cassandra as a service is named astrodb
and<01:04:44.000><c> is</c><01:04:44.400><c> provided</c><01:04:45.119><c> by</c><01:04:45.440><c> datastax</c>

01:04:47.589 --> 01:04:47.599 align:start position:0%
and is provided by datastax
 

01:04:47.599 --> 01:04:50.630 align:start position:0%
and is provided by datastax
upon<01:04:48.079><c> completion</c><01:04:48.799><c> of</c><01:04:48.880><c> this</c><01:04:49.200><c> module</c><01:04:50.079><c> you</c><01:04:50.319><c> will</c>

01:04:50.630 --> 01:04:50.640 align:start position:0%
upon completion of this module you will
 

01:04:50.640 --> 01:04:52.309 align:start position:0%
upon completion of this module you will
be<01:04:50.799><c> able</c><01:04:51.119><c> to</c>

01:04:52.309 --> 01:04:52.319 align:start position:0%
be able to
 

01:04:52.319 --> 01:04:55.510 align:start position:0%
be able to
create<01:04:52.720><c> your</c><01:04:52.960><c> own</c><01:04:53.280><c> astrodb</c><01:04:54.079><c> instance</c>

01:04:55.510 --> 01:04:55.520 align:start position:0%
create your own astrodb instance
 

01:04:55.520 --> 01:05:01.990 align:start position:0%
create your own astrodb instance
and<01:04:56.240><c> perform</c><01:04:56.960><c> the</c><01:04:57.119><c> workshops</c>

01:05:01.990 --> 01:05:02.000 align:start position:0%
 
 

01:05:02.000 --> 01:05:05.029 align:start position:0%
 
upon<01:05:02.480><c> completing</c><01:05:03.200><c> this</c><01:05:03.520><c> lesson</c><01:05:04.400><c> you</c><01:05:04.640><c> will</c><01:05:04.799><c> be</c>

01:05:05.029 --> 01:05:05.039 align:start position:0%
upon completing this lesson you will be
 

01:05:05.039 --> 01:05:07.910 align:start position:0%
upon completing this lesson you will be
able<01:05:05.280><c> to</c><01:05:05.520><c> perform</c><01:05:06.079><c> the</c><01:05:06.240><c> workshop</c><01:05:07.119><c> related</c><01:05:07.680><c> to</c>

01:05:07.910 --> 01:05:07.920 align:start position:0%
able to perform the workshop related to
 

01:05:07.920 --> 01:05:12.470 align:start position:0%
able to perform the workshop related to
this<01:05:08.240><c> course</c>

01:05:12.470 --> 01:05:12.480 align:start position:0%
 
 

01:05:12.480 --> 01:05:15.190 align:start position:0%
 
earlier<01:05:12.960><c> we</c><01:05:13.200><c> learnt</c><01:05:13.520><c> about</c><01:05:14.000><c> different</c><01:05:14.400><c> apis</c>

01:05:15.190 --> 01:05:15.200 align:start position:0%
earlier we learnt about different apis
 

01:05:15.200 --> 01:05:17.829 align:start position:0%
earlier we learnt about different apis
to<01:05:15.359><c> connect</c><01:05:15.839><c> to</c><01:05:16.000><c> our</c><01:05:16.240><c> astrodb</c><01:05:17.440><c> like</c><01:05:17.680><c> the</c>

01:05:17.829 --> 01:05:17.839 align:start position:0%
to connect to our astrodb like the
 

01:05:17.839 --> 01:05:21.670 align:start position:0%
to connect to our astrodb like the
document<01:05:18.480><c> api</c><01:05:19.200><c> graphql</c><01:05:20.000><c> api</c><01:05:20.880><c> and</c><01:05:21.119><c> the</c><01:05:21.280><c> rest</c>

01:05:21.670 --> 01:05:21.680 align:start position:0%
document api graphql api and the rest
 

01:05:21.680 --> 01:05:23.270 align:start position:0%
document api graphql api and the rest
api

01:05:23.270 --> 01:05:23.280 align:start position:0%
api
 

01:05:23.280 --> 01:05:26.309 align:start position:0%
api
all<01:05:23.599><c> of</c><01:05:23.680><c> these</c><01:05:23.920><c> apis</c><01:05:24.720><c> are</c><01:05:24.880><c> part</c><01:05:25.440><c> of</c><01:05:25.599><c> a</c><01:05:25.839><c> project</c>

01:05:26.309 --> 01:05:26.319 align:start position:0%
all of these apis are part of a project
 

01:05:26.319 --> 01:05:28.470 align:start position:0%
all of these apis are part of a project
called<01:05:26.720><c> stargate</c>

01:05:28.470 --> 01:05:28.480 align:start position:0%
called stargate
 

01:05:28.480 --> 01:05:31.990 align:start position:0%
called stargate
stargate<01:05:29.280><c> is</c><01:05:29.520><c> built</c><01:05:30.079><c> into</c><01:05:30.480><c> astrodb</c><01:05:31.599><c> for</c><01:05:31.760><c> your</c>

01:05:31.990 --> 01:05:32.000 align:start position:0%
stargate is built into astrodb for your
 

01:05:32.000 --> 01:05:34.069 align:start position:0%
stargate is built into astrodb for your
convenience

01:05:34.069 --> 01:05:34.079 align:start position:0%
convenience
 

01:05:34.079 --> 01:05:36.710 align:start position:0%
convenience
if<01:05:34.240><c> you</c><01:05:34.400><c> would</c><01:05:34.640><c> like</c><01:05:34.880><c> to</c><01:05:35.520><c> learn</c><01:05:35.920><c> more</c><01:05:36.160><c> about</c>

01:05:36.710 --> 01:05:36.720 align:start position:0%
if you would like to learn more about
 

01:05:36.720 --> 01:05:39.670 align:start position:0%
if you would like to learn more about
what<01:05:36.960><c> stargate</c><01:05:37.680><c> is</c><01:05:38.400><c> how</c><01:05:38.640><c> it</c><01:05:38.880><c> works</c><01:05:39.359><c> how</c><01:05:39.520><c> you</c>

01:05:39.670 --> 01:05:39.680 align:start position:0%
what stargate is how it works how you
 

01:05:39.680 --> 01:05:41.990 align:start position:0%
what stargate is how it works how you
can<01:05:39.920><c> get</c><01:05:40.240><c> involved</c><01:05:40.799><c> in</c><01:05:40.880><c> the</c><01:05:41.039><c> open</c><01:05:41.440><c> source</c>

01:05:41.990 --> 01:05:42.000 align:start position:0%
can get involved in the open source
 

01:05:42.000 --> 01:05:45.190 align:start position:0%
can get involved in the open source
project<01:05:42.960><c> please</c><01:05:43.280><c> go</c><01:05:43.520><c> to</c><01:05:43.680><c> stargate.io</c>

01:05:45.190 --> 01:05:45.200 align:start position:0%
project please go to stargate.io
 

01:05:45.200 --> 01:05:47.589 align:start position:0%
project please go to stargate.io
for<01:05:45.440><c> more</c><01:05:45.920><c> information</c>

01:05:47.589 --> 01:05:47.599 align:start position:0%
for more information
 

01:05:47.599 --> 01:05:49.990 align:start position:0%
for more information
for<01:05:47.839><c> an</c><01:05:48.000><c> in-depth</c><01:05:48.480><c> understanding</c><01:05:49.359><c> of</c><01:05:49.520><c> how</c><01:05:49.760><c> it</c>

01:05:49.990 --> 01:05:50.000 align:start position:0%
for an in-depth understanding of how it
 

01:05:50.000 --> 01:05:53.270 align:start position:0%
for an in-depth understanding of how it
all<01:05:50.319><c> works</c><01:05:51.119><c> and</c><01:05:51.280><c> how</c><01:05:51.520><c> you</c><01:05:51.680><c> can</c><01:05:51.920><c> utilize</c><01:05:52.640><c> target</c>

01:05:53.270 --> 01:05:53.280 align:start position:0%
all works and how you can utilize target
 

01:05:53.280 --> 01:05:54.789 align:start position:0%
all works and how you can utilize target
your<01:05:53.520><c> advantage</c>

01:05:54.789 --> 01:05:54.799 align:start position:0%
your advantage
 

01:05:54.799 --> 01:05:57.510 align:start position:0%
your advantage
view<01:05:55.039><c> the</c><01:05:55.200><c> workshop</c><01:05:55.839><c> video</c><01:05:56.400><c> on</c><01:05:56.640><c> youtube</c>

01:05:57.510 --> 01:05:57.520 align:start position:0%
view the workshop video on youtube
 

01:05:57.520 --> 01:06:00.630 align:start position:0%
view the workshop video on youtube
created<01:05:58.240><c> by</c><01:05:58.480><c> the</c><01:05:58.640><c> data</c><01:05:58.960><c> stacks</c><01:05:59.599><c> developer</c>

01:06:00.630 --> 01:06:00.640 align:start position:0%
created by the data stacks developer
 

01:06:00.640 --> 01:06:02.789 align:start position:0%
created by the data stacks developer
advocates

01:06:02.789 --> 01:06:02.799 align:start position:0%
advocates
 

01:06:02.799 --> 01:06:06.069 align:start position:0%
advocates
scan<01:06:03.280><c> the</c><01:06:03.520><c> qr</c><01:06:04.000><c> code</c><01:06:04.480><c> to</c><01:06:04.640><c> go</c><01:06:04.880><c> to</c><01:06:05.039><c> the</c><01:06:05.200><c> video</c><01:06:05.839><c> or</c>

01:06:06.069 --> 01:06:06.079 align:start position:0%
scan the qr code to go to the video or
 

01:06:06.079 --> 01:06:08.309 align:start position:0%
scan the qr code to go to the video or
copy<01:06:06.480><c> the</c><01:06:06.640><c> link</c><01:06:07.039><c> and</c><01:06:07.200><c> paste</c><01:06:07.599><c> it</c><01:06:07.760><c> in</c><01:06:07.920><c> your</c>

01:06:08.309 --> 01:06:08.319 align:start position:0%
copy the link and paste it in your
 

01:06:08.319 --> 01:06:11.430 align:start position:0%
copy the link and paste it in your
preferred<01:06:09.039><c> browser</c>

01:06:11.430 --> 01:06:11.440 align:start position:0%
preferred browser
 

01:06:11.440 --> 01:06:14.150 align:start position:0%
preferred browser
another<01:06:11.920><c> option</c><01:06:12.480><c> for</c><01:06:12.640><c> your</c><01:06:12.880><c> astra</c><01:06:13.280><c> db</c><01:06:13.839><c> is</c><01:06:14.000><c> to</c>

01:06:14.150 --> 01:06:14.160 align:start position:0%
another option for your astra db is to
 

01:06:14.160 --> 01:06:17.589 align:start position:0%
another option for your astra db is to
build<01:06:14.640><c> a</c><01:06:14.799><c> to</c><01:06:15.039><c> do</c><01:06:15.359><c> app</c><01:06:16.079><c> using</c><01:06:16.480><c> the</c><01:06:16.640><c> rest</c><01:06:16.960><c> api</c>

01:06:17.589 --> 01:06:17.599 align:start position:0%
build a to do app using the rest api
 

01:06:17.599 --> 01:06:21.349 align:start position:0%
build a to do app using the rest api
python<01:06:18.240><c> and</c><01:06:18.480><c> node.js</c><01:06:19.359><c> respectively</c>

01:06:21.349 --> 01:06:21.359 align:start position:0%
python and node.js respectively
 

01:06:21.359 --> 01:06:24.230 align:start position:0%
python and node.js respectively
this<01:06:21.760><c> is</c><01:06:21.920><c> an</c><01:06:22.160><c> example</c><01:06:22.960><c> react</c><01:06:23.760><c> to</c><01:06:23.920><c> do</c>

01:06:24.230 --> 01:06:24.240 align:start position:0%
this is an example react to do
 

01:06:24.240 --> 01:06:27.910 align:start position:0%
this is an example react to do
application<01:06:25.119><c> built</c><01:06:25.520><c> using</c><01:06:26.240><c> a</c><01:06:26.319><c> datastax</c><01:06:27.359><c> astra</c>

01:06:27.910 --> 01:06:27.920 align:start position:0%
application built using a datastax astra
 

01:06:27.920 --> 01:06:31.270 align:start position:0%
application built using a datastax astra
fee<01:06:28.480><c> free</c><01:06:28.880><c> tier</c><01:06:29.280><c> database</c>

01:06:31.270 --> 01:06:31.280 align:start position:0%
fee free tier database
 

01:06:31.280 --> 01:06:33.349 align:start position:0%
fee free tier database
for<01:06:31.440><c> an</c><01:06:31.680><c> in-depth</c><01:06:32.079><c> understanding</c><01:06:32.880><c> of</c><01:06:32.960><c> how</c><01:06:33.200><c> it</c>

01:06:33.349 --> 01:06:33.359 align:start position:0%
for an in-depth understanding of how it
 

01:06:33.359 --> 01:06:34.789 align:start position:0%
for an in-depth understanding of how it
all<01:06:33.680><c> works</c>

01:06:34.789 --> 01:06:34.799 align:start position:0%
all works
 

01:06:34.799 --> 01:06:37.349 align:start position:0%
all works
view<01:06:35.119><c> the</c><01:06:35.280><c> workshop</c><01:06:35.920><c> video</c><01:06:36.400><c> on</c><01:06:36.640><c> youtube</c>

01:06:37.349 --> 01:06:37.359 align:start position:0%
view the workshop video on youtube
 

01:06:37.359 --> 01:06:40.150 align:start position:0%
view the workshop video on youtube
created<01:06:38.000><c> by</c><01:06:38.240><c> the</c><01:06:38.400><c> datastax</c><01:06:39.280><c> developer</c>

01:06:40.150 --> 01:06:40.160 align:start position:0%
created by the datastax developer
 

01:06:40.160 --> 01:06:41.990 align:start position:0%
created by the datastax developer
advocates

01:06:41.990 --> 01:06:42.000 align:start position:0%
advocates
 

01:06:42.000 --> 01:06:45.430 align:start position:0%
advocates
scan<01:06:42.480><c> the</c><01:06:42.720><c> qr</c><01:06:43.280><c> code</c><01:06:43.680><c> to</c><01:06:43.839><c> go</c><01:06:44.079><c> to</c><01:06:44.240><c> the</c><01:06:44.400><c> video</c><01:06:45.280><c> or</c>

01:06:45.430 --> 01:06:45.440 align:start position:0%
scan the qr code to go to the video or
 

01:06:45.440 --> 01:06:47.510 align:start position:0%
scan the qr code to go to the video or
copy<01:06:45.839><c> the</c><01:06:46.079><c> link</c><01:06:46.400><c> and</c><01:06:46.640><c> paste</c><01:06:46.960><c> it</c><01:06:47.119><c> in</c><01:06:47.280><c> your</c>

01:06:47.510 --> 01:06:47.520 align:start position:0%
copy the link and paste it in your
 

01:06:47.520 --> 01:06:49.990 align:start position:0%
copy the link and paste it in your
preferred<01:06:48.079><c> browser</c>

01:06:49.990 --> 01:06:50.000 align:start position:0%
preferred browser
 

01:06:50.000 --> 01:06:52.710 align:start position:0%
preferred browser
in<01:06:50.160><c> this</c><01:06:50.400><c> example</c><01:06:51.119><c> we</c><01:06:51.359><c> discover</c><01:06:52.079><c> a</c><01:06:52.319><c> fully</c>

01:06:52.710 --> 01:06:52.720 align:start position:0%
in this example we discover a fully
 

01:06:52.720 --> 01:06:55.510 align:start position:0%
in this example we discover a fully
reactive<01:06:53.440><c> version</c><01:06:54.079><c> of</c><01:06:54.240><c> the</c><01:06:54.480><c> spring</c><01:06:55.119><c> pet</c>

01:06:55.510 --> 01:06:55.520 align:start position:0%
reactive version of the spring pet
 

01:06:55.520 --> 01:07:00.390 align:start position:0%
reactive version of the spring pet
clinic<01:06:56.079><c> application</c><01:06:57.119><c> using</c><01:06:57.599><c> spring</c><01:06:58.319><c> web</c><01:06:58.839><c> flux</c>

01:07:00.390 --> 01:07:00.400 align:start position:0%
clinic application using spring web flux
 

01:07:00.400 --> 01:07:02.470 align:start position:0%
clinic application using spring web flux
this<01:07:00.720><c> example</c><01:07:01.440><c> is</c><01:07:01.599><c> considered</c><01:07:02.240><c> an</c>

01:07:02.470 --> 01:07:02.480 align:start position:0%
this example is considered an
 

01:07:02.480 --> 01:07:05.109 align:start position:0%
this example is considered an
intermediate<01:07:03.520><c> level</c><01:07:03.920><c> application</c><01:07:04.880><c> for</c>

01:07:05.109 --> 01:07:05.119 align:start position:0%
intermediate level application for
 

01:07:05.119 --> 01:07:08.309 align:start position:0%
intermediate level application for
developers<01:07:05.920><c> to</c><01:07:06.079><c> build</c><01:07:06.480><c> on</c><01:07:06.640><c> astra</c><01:07:07.039><c> db</c>

01:07:08.309 --> 01:07:08.319 align:start position:0%
developers to build on astra db
 

01:07:08.319 --> 01:07:10.549 align:start position:0%
developers to build on astra db
for<01:07:08.559><c> an</c><01:07:08.720><c> in-depth</c><01:07:09.200><c> understanding</c><01:07:10.000><c> of</c><01:07:10.160><c> how</c><01:07:10.400><c> it</c>

01:07:10.549 --> 01:07:10.559 align:start position:0%
for an in-depth understanding of how it
 

01:07:10.559 --> 01:07:13.349 align:start position:0%
for an in-depth understanding of how it
all<01:07:10.799><c> works</c><01:07:11.599><c> view</c><01:07:11.920><c> the</c><01:07:12.079><c> workshop</c><01:07:12.640><c> video</c><01:07:13.119><c> on</c>

01:07:13.349 --> 01:07:13.359 align:start position:0%
all works view the workshop video on
 

01:07:13.359 --> 01:07:15.829 align:start position:0%
all works view the workshop video on
youtube<01:07:14.079><c> created</c><01:07:14.640><c> by</c><01:07:14.880><c> the</c><01:07:15.039><c> data</c><01:07:15.359><c> stacks</c>

01:07:15.829 --> 01:07:15.839 align:start position:0%
youtube created by the data stacks
 

01:07:15.839 --> 01:07:18.309 align:start position:0%
youtube created by the data stacks
developer<01:07:16.480><c> advocates</c>

01:07:18.309 --> 01:07:18.319 align:start position:0%
developer advocates
 

01:07:18.319 --> 01:07:22.230 align:start position:0%
developer advocates
scan<01:07:18.799><c> the</c><01:07:18.960><c> qr</c><01:07:19.440><c> code</c><01:07:20.000><c> to</c><01:07:20.240><c> go</c><01:07:20.400><c> to</c><01:07:20.559><c> the</c><01:07:20.720><c> video</c><01:07:21.599><c> or</c>

01:07:22.230 --> 01:07:22.240 align:start position:0%
scan the qr code to go to the video or
 

01:07:22.240 --> 01:07:24.470 align:start position:0%
scan the qr code to go to the video or
copy<01:07:22.559><c> the</c><01:07:22.720><c> link</c><01:07:23.119><c> and</c><01:07:23.280><c> paste</c><01:07:23.680><c> it</c><01:07:24.000><c> in</c><01:07:24.240><c> your</c>

01:07:24.470 --> 01:07:24.480 align:start position:0%
copy the link and paste it in your
 

01:07:24.480 --> 01:07:27.109 align:start position:0%
copy the link and paste it in your
preferred<01:07:25.039><c> browser</c>

01:07:27.109 --> 01:07:27.119 align:start position:0%
preferred browser
 

01:07:27.119 --> 01:07:29.349 align:start position:0%
preferred browser
earlier<01:07:27.599><c> in</c><01:07:27.680><c> this</c><01:07:28.000><c> course</c><01:07:28.400><c> we</c><01:07:28.640><c> carried</c><01:07:29.119><c> out</c>

01:07:29.349 --> 01:07:29.359 align:start position:0%
earlier in this course we carried out
 

01:07:29.359 --> 01:07:32.390 align:start position:0%
earlier in this course we carried out
some<01:07:29.680><c> basic</c><01:07:30.160><c> data</c><01:07:30.640><c> modeling</c><01:07:31.200><c> to</c><01:07:31.440><c> understand</c>

01:07:32.390 --> 01:07:32.400 align:start position:0%
some basic data modeling to understand
 

01:07:32.400 --> 01:07:36.230 align:start position:0%
some basic data modeling to understand
how<01:07:32.960><c> cassandra</c><01:07:33.920><c> can</c><01:07:34.319><c> best</c><01:07:34.720><c> be</c><01:07:35.119><c> built</c><01:07:35.839><c> and</c>

01:07:36.230 --> 01:07:36.240 align:start position:0%
how cassandra can best be built and
 

01:07:36.240 --> 01:07:37.829 align:start position:0%
how cassandra can best be built and
deployed

01:07:37.829 --> 01:07:37.839 align:start position:0%
deployed
 

01:07:37.839 --> 01:07:40.710 align:start position:0%
deployed
if<01:07:38.000><c> you</c><01:07:38.319><c> wanted</c><01:07:38.720><c> to</c><01:07:38.960><c> do</c><01:07:39.200><c> a</c><01:07:39.359><c> deeper</c><01:07:39.760><c> dive</c><01:07:40.240><c> into</c><01:07:40.559><c> a</c>

01:07:40.710 --> 01:07:40.720 align:start position:0%
if you wanted to do a deeper dive into a
 

01:07:40.720 --> 01:07:43.750 align:start position:0%
if you wanted to do a deeper dive into a
more<01:07:41.039><c> advanced</c><01:07:41.760><c> data</c><01:07:42.160><c> modeling</c><01:07:42.720><c> for</c><01:07:42.960><c> your</c><01:07:43.200><c> app</c>

01:07:43.750 --> 01:07:43.760 align:start position:0%
more advanced data modeling for your app
 

01:07:43.760 --> 01:07:46.230 align:start position:0%
more advanced data modeling for your app
we<01:07:44.000><c> also</c><01:07:44.319><c> have</c><01:07:44.559><c> a</c><01:07:44.640><c> workshop</c><01:07:45.280><c> available</c><01:07:46.000><c> for</c>

01:07:46.230 --> 01:07:46.240 align:start position:0%
we also have a workshop available for
 

01:07:46.240 --> 01:07:49.029 align:start position:0%
we also have a workshop available for
you<01:07:46.720><c> to</c><01:07:46.960><c> view</c><01:07:47.280><c> on</c><01:07:47.520><c> youtube</c><01:07:48.240><c> from</c><01:07:48.559><c> the</c><01:07:48.720><c> data</c>

01:07:49.029 --> 01:07:49.039 align:start position:0%
you to view on youtube from the data
 

01:07:49.039 --> 01:07:52.309 align:start position:0%
you to view on youtube from the data
stacks<01:07:49.680><c> developer</c><01:07:50.480><c> advocates</c>

01:07:52.309 --> 01:07:52.319 align:start position:0%
stacks developer advocates
 

01:07:52.319 --> 01:07:55.109 align:start position:0%
stacks developer advocates
once<01:07:52.640><c> again</c><01:07:53.039><c> scan</c><01:07:53.440><c> the</c><01:07:53.599><c> qr</c><01:07:54.160><c> code</c><01:07:54.480><c> to</c><01:07:54.640><c> go</c><01:07:54.880><c> to</c><01:07:54.960><c> the</c>

01:07:55.109 --> 01:07:55.119 align:start position:0%
once again scan the qr code to go to the
 

01:07:55.119 --> 01:07:58.630 align:start position:0%
once again scan the qr code to go to the
video<01:07:56.000><c> or</c><01:07:56.240><c> copy</c><01:07:56.640><c> the</c><01:07:56.799><c> link</c><01:07:57.440><c> and</c><01:07:57.680><c> paste</c><01:07:58.079><c> it</c><01:07:58.400><c> in</c>

01:07:58.630 --> 01:07:58.640 align:start position:0%
video or copy the link and paste it in
 

01:07:58.640 --> 01:08:01.270 align:start position:0%
video or copy the link and paste it in
your<01:07:58.880><c> preferred</c><01:07:59.440><c> browser</c>

01:08:01.270 --> 01:08:01.280 align:start position:0%
your preferred browser
 

01:08:01.280 --> 01:08:03.430 align:start position:0%
your preferred browser
throughout<01:08:01.760><c> this</c><01:08:02.000><c> course</c><01:08:02.400><c> we</c><01:08:02.559><c> had</c><01:08:02.720><c> mentioned</c>

01:08:03.430 --> 01:08:03.440 align:start position:0%
throughout this course we had mentioned
 

01:08:03.440 --> 01:08:05.990 align:start position:0%
throughout this course we had mentioned
using<01:08:03.839><c> spark</c><01:08:04.400><c> for</c><01:08:04.640><c> specific</c><01:08:05.280><c> functions</c><01:08:05.839><c> on</c>

01:08:05.990 --> 01:08:06.000 align:start position:0%
using spark for specific functions on
 

01:08:06.000 --> 01:08:08.950 align:start position:0%
using spark for specific functions on
astra<01:08:06.400><c> db</c><01:08:07.039><c> including</c><01:08:07.760><c> data</c><01:08:08.160><c> loading</c><01:08:08.720><c> and</c>

01:08:08.950 --> 01:08:08.960 align:start position:0%
astra db including data loading and
 

01:08:08.960 --> 01:08:10.549 align:start position:0%
astra db including data loading and
connecting

01:08:10.549 --> 01:08:10.559 align:start position:0%
connecting
 

01:08:10.559 --> 01:08:13.430 align:start position:0%
connecting
we<01:08:10.799><c> also</c><01:08:11.359><c> wanted</c><01:08:11.839><c> to</c><01:08:12.319><c> provide</c><01:08:12.799><c> you</c><01:08:13.119><c> with</c><01:08:13.280><c> a</c>

01:08:13.430 --> 01:08:13.440 align:start position:0%
we also wanted to provide you with a
 

01:08:13.440 --> 01:08:15.990 align:start position:0%
we also wanted to provide you with a
workshop<01:08:14.079><c> for</c><01:08:14.319><c> you</c><01:08:14.640><c> to</c><01:08:14.799><c> view</c><01:08:15.440><c> if</c><01:08:15.599><c> you</c><01:08:15.760><c> would</c>

01:08:15.990 --> 01:08:16.000 align:start position:0%
workshop for you to view if you would
 

01:08:16.000 --> 01:08:17.749 align:start position:0%
workshop for you to view if you would
like<01:08:16.239><c> to</c><01:08:16.400><c> get</c><01:08:16.640><c> a</c><01:08:16.880><c> more</c><01:08:17.279><c> in-depth</c>

01:08:17.749 --> 01:08:17.759 align:start position:0%
like to get a more in-depth
 

01:08:17.759 --> 01:08:20.229 align:start position:0%
like to get a more in-depth
understanding<01:08:18.560><c> of</c><01:08:18.719><c> how</c><01:08:18.960><c> it</c><01:08:19.120><c> all</c><01:08:19.440><c> works</c><01:08:20.080><c> and</c>

01:08:20.229 --> 01:08:20.239 align:start position:0%
understanding of how it all works and
 

01:08:20.239 --> 01:08:22.550 align:start position:0%
understanding of how it all works and
how<01:08:20.400><c> you</c><01:08:20.560><c> can</c><01:08:20.799><c> utilize</c><01:08:21.759><c> spark</c><01:08:22.239><c> to</c><01:08:22.400><c> your</c>

01:08:22.550 --> 01:08:22.560 align:start position:0%
how you can utilize spark to your
 

01:08:22.560 --> 01:08:25.510 align:start position:0%
how you can utilize spark to your
advantage<01:08:23.359><c> on</c><01:08:23.520><c> youtube</c><01:08:24.319><c> again</c><01:08:24.719><c> created</c><01:08:25.279><c> by</c>

01:08:25.510 --> 01:08:25.520 align:start position:0%
advantage on youtube again created by
 

01:08:25.520 --> 01:08:29.510 align:start position:0%
advantage on youtube again created by
the<01:08:25.679><c> developer</c><01:08:26.640><c> advocates</c><01:08:27.359><c> of</c><01:08:27.520><c> data</c><01:08:27.839><c> stacks</c>

01:08:29.510 --> 01:08:29.520 align:start position:0%
the developer advocates of data stacks
 

01:08:29.520 --> 01:08:32.550 align:start position:0%
the developer advocates of data stacks
scan<01:08:29.920><c> the</c><01:08:30.080><c> qr</c><01:08:30.560><c> code</c><01:08:31.040><c> to</c><01:08:31.199><c> go</c><01:08:31.359><c> to</c><01:08:31.520><c> the</c><01:08:31.679><c> video</c><01:08:32.319><c> or</c>

01:08:32.550 --> 01:08:32.560 align:start position:0%
scan the qr code to go to the video or
 

01:08:32.560 --> 01:08:35.269 align:start position:0%
scan the qr code to go to the video or
feel<01:08:32.880><c> free</c><01:08:33.279><c> to</c><01:08:33.520><c> copy</c><01:08:33.839><c> the</c><01:08:34.080><c> link</c><01:08:34.480><c> and</c><01:08:34.640><c> paste</c><01:08:34.960><c> it</c>

01:08:35.269 --> 01:08:35.279 align:start position:0%
feel free to copy the link and paste it
 

01:08:35.279 --> 01:08:39.239 align:start position:0%
feel free to copy the link and paste it
in<01:08:35.440><c> your</c><01:08:35.759><c> preferred</c><01:08:36.239><c> browser</c>

