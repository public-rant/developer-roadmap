WEBVTT



00:00:00.000 --> 00:00:02.929 align:start position:0%
 
DevOps<00:00:00.780><c> a</c><00:00:01.110><c> set</c><00:00:01.439><c> of</c><00:00:01.530><c> practices</c><00:00:02.040><c> to</c><00:00:02.310><c> build</c><00:00:02.610><c> test</c>

00:00:02.929 --> 00:00:02.939 align:start position:0%
DevOps a set of practices to build test
 

00:00:02.939 --> 00:00:04.789 align:start position:0%
DevOps a set of practices to build test
and<00:00:03.060><c> release</c><00:00:03.360><c> your</c><00:00:03.510><c> code</c><00:00:03.720><c> in</c><00:00:03.929><c> small</c><00:00:04.350><c> frequent</c>

00:00:04.789 --> 00:00:04.799 align:start position:0%
and release your code in small frequent
 

00:00:04.799 --> 00:00:06.740 align:start position:0%
and release your code in small frequent
steps<00:00:05.040><c> one</c><00:00:05.520><c> of</c><00:00:05.609><c> the</c><00:00:05.730><c> core</c><00:00:05.970><c> practices</c><00:00:06.509><c> of</c>

00:00:06.740 --> 00:00:06.750 align:start position:0%
steps one of the core practices of
 

00:00:06.750 --> 00:00:08.870 align:start position:0%
steps one of the core practices of
DevOps<00:00:07.140><c> is</c><00:00:07.350><c> continuous</c><00:00:07.980><c> integration</c><00:00:08.220><c> which</c>

00:00:08.870 --> 00:00:08.880 align:start position:0%
DevOps is continuous integration which
 

00:00:08.880 --> 00:00:10.610 align:start position:0%
DevOps is continuous integration which
has<00:00:09.090><c> developers</c><00:00:09.599><c> commit</c><00:00:09.990><c> their</c><00:00:10.139><c> code</c><00:00:10.320><c> to</c><00:00:10.590><c> a</c>

00:00:10.610 --> 00:00:10.620 align:start position:0%
has developers commit their code to a
 

00:00:10.620 --> 00:00:13.039 align:start position:0%
has developers commit their code to a
shared<00:00:11.010><c> repository</c><00:00:11.280><c> often</c><00:00:12.179><c> on</c><00:00:12.269><c> a</c><00:00:12.300><c> daily</c><00:00:12.660><c> basis</c>

00:00:13.039 --> 00:00:13.049 align:start position:0%
shared repository often on a daily basis
 

00:00:13.049 --> 00:00:14.509 align:start position:0%
shared repository often on a daily basis
each<00:00:13.290><c> commit</c><00:00:13.710><c> triggers</c><00:00:14.040><c> an</c><00:00:14.160><c> automated</c>

00:00:14.509 --> 00:00:14.519 align:start position:0%
each commit triggers an automated
 

00:00:14.519 --> 00:00:16.700 align:start position:0%
each commit triggers an automated
workflow<00:00:15.030><c> on</c><00:00:15.269><c> a</c><00:00:15.299><c> CI</c><00:00:15.630><c> server</c><00:00:16.049><c> that</c><00:00:16.289><c> can</c><00:00:16.440><c> notify</c>

00:00:16.700 --> 00:00:16.710 align:start position:0%
workflow on a CI server that can notify
 

00:00:16.710 --> 00:00:18.590 align:start position:0%
workflow on a CI server that can notify
developers<00:00:17.279><c> of</c><00:00:17.460><c> any</c><00:00:17.609><c> issues</c><00:00:18.000><c> integrating</c>

00:00:18.590 --> 00:00:18.600 align:start position:0%
developers of any issues integrating
 

00:00:18.600 --> 00:00:20.450 align:start position:0%
developers of any issues integrating
their<00:00:18.720><c> changes</c><00:00:19.140><c> when</c><00:00:19.500><c> a</c><00:00:19.529><c> repo</c><00:00:19.920><c> evolves</c><00:00:20.340><c> in</c>

00:00:20.450 --> 00:00:20.460 align:start position:0%
their changes when a repo evolves in
 

00:00:20.460 --> 00:00:22.070 align:start position:0%
their changes when a repo evolves in
small<00:00:20.670><c> steps</c><00:00:20.880><c> like</c><00:00:21.029><c> this</c><00:00:21.359><c> it</c><00:00:21.570><c> prevents</c><00:00:21.930><c> what's</c>

00:00:22.070 --> 00:00:22.080 align:start position:0%
small steps like this it prevents what's
 

00:00:22.080 --> 00:00:24.410 align:start position:0%
small steps like this it prevents what's
known<00:00:22.260><c> as</c><00:00:22.470><c> merge</c><00:00:22.890><c> Towel</c><00:00:23.160><c> imagine</c><00:00:23.880><c> Mary</c><00:00:24.119><c> you're</c>

00:00:24.410 --> 00:00:24.420 align:start position:0%
known as merge Towel imagine Mary you're
 

00:00:24.420 --> 00:00:26.570 align:start position:0%
known as merge Towel imagine Mary you're
back<00:00:24.630><c> and</c><00:00:24.810><c> developer</c><00:00:25.170><c> builds</c><00:00:25.529><c> a</c><00:00:25.619><c> new</c><00:00:25.769><c> API</c><00:00:26.160><c> for</c>

00:00:26.570 --> 00:00:26.580 align:start position:0%
back and developer builds a new API for
 

00:00:26.580 --> 00:00:27.200 align:start position:0%
back and developer builds a new API for
your<00:00:26.730><c> product</c>

00:00:27.200 --> 00:00:27.210 align:start position:0%
your product
 

00:00:27.210 --> 00:00:29.269 align:start position:0%
your product
shortly<00:00:27.720><c> after</c><00:00:28.109><c> Jane</c><00:00:28.619><c> your</c><00:00:29.010><c> front-end</c>

00:00:29.269 --> 00:00:29.279 align:start position:0%
shortly after Jane your front-end
 

00:00:29.279 --> 00:00:31.820 align:start position:0%
shortly after Jane your front-end
developer<00:00:29.730><c> starts</c><00:00:30.090><c> work</c><00:00:30.300><c> on</c><00:00:30.420><c> a</c><00:00:30.480><c> new</c><00:00:30.689><c> UI</c><00:00:30.929><c> a</c><00:00:31.289><c> few</c>

00:00:31.820 --> 00:00:31.830 align:start position:0%
developer starts work on a new UI a few
 

00:00:31.830 --> 00:00:33.440 align:start position:0%
developer starts work on a new UI a few
months<00:00:32.040><c> later</c><00:00:32.160><c> when</c><00:00:32.520><c> it</c><00:00:32.640><c> comes</c><00:00:32.820><c> time</c><00:00:33.000><c> to</c><00:00:33.059><c> merge</c>

00:00:33.440 --> 00:00:33.450 align:start position:0%
months later when it comes time to merge
 

00:00:33.450 --> 00:00:34.880 align:start position:0%
months later when it comes time to merge
their<00:00:33.660><c> features</c><00:00:33.989><c> we</c><00:00:34.350><c> find</c><00:00:34.559><c> that</c><00:00:34.710><c> they're</c>

00:00:34.880 --> 00:00:34.890 align:start position:0%
their features we find that they're
 

00:00:34.890 --> 00:00:36.620 align:start position:0%
their features we find that they're
completely<00:00:35.190><c> incompatible</c><00:00:35.700><c> the</c><00:00:36.149><c> build</c><00:00:36.360><c> fails</c>

00:00:36.620 --> 00:00:36.630 align:start position:0%
completely incompatible the build fails
 

00:00:36.630 --> 00:00:38.299 align:start position:0%
completely incompatible the build fails
and<00:00:36.989><c> we</c><00:00:37.200><c> now</c><00:00:37.320><c> have</c><00:00:37.350><c> to</c><00:00:37.710><c> spend</c><00:00:37.950><c> a</c><00:00:38.040><c> bunch</c><00:00:38.160><c> of</c><00:00:38.250><c> time</c>

00:00:38.299 --> 00:00:38.309 align:start position:0%
and we now have to spend a bunch of time
 

00:00:38.309 --> 00:00:40.040 align:start position:0%
and we now have to spend a bunch of time
and<00:00:38.700><c> money</c><00:00:38.790><c> resolving</c><00:00:39.390><c> these</c><00:00:39.540><c> conflicts</c>

00:00:40.040 --> 00:00:40.050 align:start position:0%
and money resolving these conflicts
 

00:00:40.050 --> 00:00:41.930 align:start position:0%
and money resolving these conflicts
let's<00:00:40.649><c> go</c><00:00:40.800><c> ahead</c><00:00:40.860><c> and</c><00:00:41.129><c> build</c><00:00:41.250><c> a</c><00:00:41.460><c> continuous</c>

00:00:41.930 --> 00:00:41.940 align:start position:0%
let's go ahead and build a continuous
 

00:00:41.940 --> 00:00:43.729 align:start position:0%
let's go ahead and build a continuous
integration<00:00:42.120><c> pipeline</c><00:00:42.750><c> now</c><00:00:42.930><c> to</c><00:00:43.290><c> see</c><00:00:43.500><c> how</c><00:00:43.620><c> it</c>

00:00:43.729 --> 00:00:43.739 align:start position:0%
integration pipeline now to see how it
 

00:00:43.739 --> 00:00:45.590 align:start position:0%
integration pipeline now to see how it
prevents<00:00:44.129><c> issues</c><00:00:44.460><c> like</c><00:00:44.610><c> this</c><00:00:44.820><c> here</c><00:00:45.149><c> on</c><00:00:45.270><c> github</c>

00:00:45.590 --> 00:00:45.600 align:start position:0%
prevents issues like this here on github
 

00:00:45.600 --> 00:00:47.869 align:start position:0%
prevents issues like this here on github
I<00:00:45.780><c> have</c><00:00:45.930><c> a</c><00:00:45.960><c> node.js</c><00:00:46.320><c> web</c><00:00:46.829><c> app</c><00:00:46.980><c> in</c><00:00:47.250><c> order</c><00:00:47.610><c> to</c>

00:00:47.869 --> 00:00:47.879 align:start position:0%
I have a node.js web app in order to
 

00:00:47.879 --> 00:00:49.549 align:start position:0%
I have a node.js web app in order to
deliver<00:00:48.180><c> this</c><00:00:48.300><c> out</c><00:00:48.480><c> to</c><00:00:48.600><c> my</c><00:00:48.690><c> customers</c><00:00:49.170><c> I</c><00:00:49.320><c> need</c>

00:00:49.549 --> 00:00:49.559 align:start position:0%
deliver this out to my customers I need
 

00:00:49.559 --> 00:00:51.830 align:start position:0%
deliver this out to my customers I need
to<00:00:49.620><c> run</c><00:00:49.770><c> three</c><00:00:50.010><c> commands</c><00:00:50.460><c> test</c><00:00:50.969><c> build</c><00:00:51.480><c> and</c>

00:00:51.830 --> 00:00:51.840 align:start position:0%
to run three commands test build and
 

00:00:51.840 --> 00:00:53.869 align:start position:0%
to run three commands test build and
deploy<00:00:52.140><c> I</c><00:00:52.440><c> can</c><00:00:53.070><c> automate</c><00:00:53.399><c> this</c><00:00:53.579><c> entire</c>

00:00:53.869 --> 00:00:53.879 align:start position:0%
deploy I can automate this entire
 

00:00:53.879 --> 00:00:55.670 align:start position:0%
deploy I can automate this entire
process<00:00:54.360><c> in</c><00:00:54.510><c> the</c><00:00:54.600><c> cloud</c><00:00:54.809><c> by</c><00:00:55.079><c> using</c><00:00:55.260><c> a</c><00:00:55.440><c> CI</c>

00:00:55.670 --> 00:00:55.680 align:start position:0%
process in the cloud by using a CI
 

00:00:55.680 --> 00:00:58.010 align:start position:0%
process in the cloud by using a CI
service<00:00:56.190><c> like</c><00:00:56.430><c> github</c><00:00:56.670><c> actions</c><00:00:57.270><c> first</c><00:00:57.840><c> I</c>

00:00:58.010 --> 00:00:58.020 align:start position:0%
service like github actions first I
 

00:00:58.020 --> 00:00:59.540 align:start position:0%
service like github actions first I
create<00:00:58.289><c> a</c><00:00:58.320><c> workflow</c><00:00:58.649><c> and</c><00:00:58.920><c> then</c><00:00:59.160><c> I</c><00:00:59.219><c> tell</c><00:00:59.430><c> it</c><00:00:59.520><c> to</c>

00:00:59.540 --> 00:00:59.550 align:start position:0%
create a workflow and then I tell it to
 

00:00:59.550 --> 00:01:01.760 align:start position:0%
create a workflow and then I tell it to
run<00:00:59.820><c> on</c><00:01:00.090><c> every</c><00:01:00.420><c> push</c><00:01:00.809><c> to</c><00:01:01.050><c> the</c><00:01:01.079><c> master</c><00:01:01.530><c> branch</c>

00:01:01.760 --> 00:01:01.770 align:start position:0%
run on every push to the master branch
 

00:01:01.770 --> 00:01:04.009 align:start position:0%
run on every push to the master branch
the<00:01:02.340><c> event</c><00:01:02.579><c> triggers</c><00:01:02.879><c> a</c><00:01:02.910><c> job</c><00:01:03.210><c> that</c><00:01:03.570><c> runs</c><00:01:03.809><c> on</c><00:01:03.989><c> a</c>

00:01:04.009 --> 00:01:04.019 align:start position:0%
the event triggers a job that runs on a
 

00:01:04.019 --> 00:01:06.140 align:start position:0%
the event triggers a job that runs on a
Linux<00:01:04.439><c> container</c><00:01:04.799><c> in</c><00:01:05.040><c> the</c><00:01:05.070><c> cloud</c><00:01:05.369><c> and</c><00:01:05.670><c> we</c><00:01:05.970><c> tell</c>

00:01:06.140 --> 00:01:06.150 align:start position:0%
Linux container in the cloud and we tell
 

00:01:06.150 --> 00:01:07.850 align:start position:0%
Linux container in the cloud and we tell
the<00:01:06.240><c> container</c><00:01:06.540><c> what</c><00:01:06.750><c> to</c><00:01:06.869><c> do</c><00:01:07.020><c> as</c><00:01:07.260><c> a</c><00:01:07.320><c> series</c><00:01:07.830><c> of</c>

00:01:07.850 --> 00:01:07.860 align:start position:0%
the container what to do as a series of
 

00:01:07.860 --> 00:01:10.070 align:start position:0%
the container what to do as a series of
steps<00:01:08.189><c> first</c><00:01:08.939><c> it</c><00:01:09.240><c> checks</c><00:01:09.510><c> out</c><00:01:09.630><c> the</c><00:01:09.780><c> code</c><00:01:09.930><c> in</c>

00:01:10.070 --> 00:01:10.080 align:start position:0%
steps first it checks out the code in
 

00:01:10.080 --> 00:01:11.960 align:start position:0%
steps first it checks out the code in
this<00:01:10.170><c> github</c><00:01:10.530><c> repo</c><00:01:10.830><c> then</c><00:01:11.220><c> sets</c><00:01:11.460><c> up</c><00:01:11.549><c> nodejs</c>

00:01:11.960 --> 00:01:11.970 align:start position:0%
this github repo then sets up nodejs
 

00:01:11.970 --> 00:01:14.270 align:start position:0%
this github repo then sets up nodejs
installs<00:01:12.720><c> my</c><00:01:12.869><c> dependencies</c><00:01:13.409><c> and</c><00:01:13.650><c> runs</c><00:01:14.070><c> my</c>

00:01:14.270 --> 00:01:14.280 align:start position:0%
installs my dependencies and runs my
 

00:01:14.280 --> 00:01:14.750 align:start position:0%
installs my dependencies and runs my
tests

00:01:14.750 --> 00:01:14.760 align:start position:0%
tests
 

00:01:14.760 --> 00:01:17.179 align:start position:0%
tests
build<00:01:15.060><c> and</c><00:01:15.330><c> deploy</c><00:01:15.540><c> commands</c><00:01:15.930><c> now</c><00:01:16.470><c> anytime</c><00:01:16.950><c> we</c>

00:01:17.179 --> 00:01:17.189 align:start position:0%
build and deploy commands now anytime we
 

00:01:17.189 --> 00:01:18.590 align:start position:0%
build and deploy commands now anytime we
commit<00:01:17.430><c> code</c><00:01:17.610><c> to</c><00:01:17.759><c> the</c><00:01:17.850><c> master</c><00:01:18.180><c> branch</c><00:01:18.299><c> in</c><00:01:18.509><c> this</c>

00:01:18.590 --> 00:01:18.600 align:start position:0%
commit code to the master branch in this
 

00:01:18.600 --> 00:01:20.960 align:start position:0%
commit code to the master branch in this
repo<00:01:18.960><c> it</c><00:01:19.140><c> will</c><00:01:19.350><c> run</c><00:01:19.560><c> this</c><00:01:19.710><c> workflow</c><00:01:20.070><c> if</c><00:01:20.520><c> any</c><00:01:20.850><c> of</c>

00:01:20.960 --> 00:01:20.970 align:start position:0%
repo it will run this workflow if any of
 

00:01:20.970 --> 00:01:22.820 align:start position:0%
repo it will run this workflow if any of
the<00:01:21.060><c> steps</c><00:01:21.240><c> fail</c><00:01:21.509><c> the</c><00:01:21.810><c> bad</c><00:01:21.960><c> software</c><00:01:22.259><c> won't</c><00:01:22.650><c> be</c>

00:01:22.820 --> 00:01:22.830 align:start position:0%
the steps fail the bad software won't be
 

00:01:22.830 --> 00:01:24.140 align:start position:0%
the steps fail the bad software won't be
delivered<00:01:23.159><c> to</c><00:01:23.250><c> our</c><00:01:23.280><c> customers</c><00:01:23.790><c> and</c><00:01:23.939><c> will</c>

00:01:24.140 --> 00:01:24.150 align:start position:0%
delivered to our customers and will
 

00:01:24.150 --> 00:01:25.520 align:start position:0%
delivered to our customers and will
automatically<00:01:24.689><c> know</c><00:01:24.810><c> there's</c><00:01:24.990><c> an</c><00:01:25.080><c> issue</c><00:01:25.259><c> that</c>

00:01:25.520 --> 00:01:25.530 align:start position:0%
automatically know there's an issue that
 

00:01:25.530 --> 00:01:27.050 align:start position:0%
automatically know there's an issue that
needs<00:01:25.710><c> to</c><00:01:25.799><c> be</c><00:01:25.920><c> addressed</c><00:01:26.250><c> at</c><00:01:26.640><c> the</c><00:01:26.790><c> end</c><00:01:26.909><c> of</c><00:01:27.000><c> the</c>

00:01:27.050 --> 00:01:27.060 align:start position:0%
needs to be addressed at the end of the
 

00:01:27.060 --> 00:01:29.749 align:start position:0%
needs to be addressed at the end of the
day<00:01:27.180><c> CI</c><00:01:27.659><c> CD</c><00:01:28.080><c> offers</c><00:01:28.560><c> two</c><00:01:28.799><c> main</c><00:01:28.950><c> benefits</c><00:01:29.340><c> it</c>

00:01:29.749 --> 00:01:29.759 align:start position:0%
day CI CD offers two main benefits it
 

00:01:29.759 --> 00:01:31.039 align:start position:0%
day CI CD offers two main benefits it
helps<00:01:29.970><c> you</c><00:01:30.060><c> automate</c><00:01:30.420><c> things</c><00:01:30.630><c> that</c><00:01:30.930><c> would</c>

00:01:31.039 --> 00:01:31.049 align:start position:0%
helps you automate things that would
 

00:01:31.049 --> 00:01:32.510 align:start position:0%
helps you automate things that would
otherwise<00:01:31.200><c> have</c><00:01:31.439><c> to</c><00:01:31.680><c> be</c><00:01:31.770><c> done</c><00:01:31.920><c> manually</c><00:01:32.250><c> by</c>

00:01:32.510 --> 00:01:32.520 align:start position:0%
otherwise have to be done manually by
 

00:01:32.520 --> 00:01:34.010 align:start position:0%
otherwise have to be done manually by
developers<00:01:33.000><c> that</c><00:01:33.450><c> will</c><00:01:33.659><c> increase</c><00:01:33.960><c> your</c>

00:01:34.010 --> 00:01:34.020 align:start position:0%
developers that will increase your
 

00:01:34.020 --> 00:01:35.899 align:start position:0%
developers that will increase your
velocity<00:01:34.350><c> but</c><00:01:34.920><c> it</c><00:01:34.979><c> also</c><00:01:35.220><c> detects</c><00:01:35.670><c> small</c>

00:01:35.899 --> 00:01:35.909 align:start position:0%
velocity but it also detects small
 

00:01:35.909 --> 00:01:37.730 align:start position:0%
velocity but it also detects small
problems<00:01:36.299><c> early</c><00:01:36.630><c> before</c><00:01:36.659><c> they</c><00:01:37.110><c> can</c><00:01:37.290><c> grow</c><00:01:37.500><c> into</c>

00:01:37.730 --> 00:01:37.740 align:start position:0%
problems early before they can grow into
 

00:01:37.740 --> 00:01:39.920 align:start position:0%
problems early before they can grow into
major<00:01:38.100><c> disasters</c><00:01:38.729><c> and</c><00:01:38.970><c> that</c><00:01:39.360><c> results</c><00:01:39.840><c> in</c>

00:01:39.920 --> 00:01:39.930 align:start position:0%
major disasters and that results in
 

00:01:39.930 --> 00:01:42.200 align:start position:0%
major disasters and that results in
higher<00:01:40.140><c> code</c><00:01:40.470><c> quality</c><00:01:40.860><c> this</c><00:01:41.220><c> has</c><00:01:41.400><c> been</c><00:01:41.549><c> C</c><00:01:41.729><c> ICD</c>

00:01:42.200 --> 00:01:42.210 align:start position:0%
higher code quality this has been C ICD
 

00:01:42.210 --> 00:01:44.660 align:start position:0%
higher code quality this has been C ICD
or<00:01:42.540><c> DevOps</c><00:01:43.020><c> in</c><00:01:43.290><c> 100</c><00:01:43.740><c> seconds</c><00:01:44.130><c> make</c><00:01:44.460><c> sure</c><00:01:44.579><c> to</c>

00:01:44.660 --> 00:01:44.670 align:start position:0%
or DevOps in 100 seconds make sure to
 

00:01:44.670 --> 00:01:45.770 align:start position:0%
or DevOps in 100 seconds make sure to
hit<00:01:44.759><c> the</c><00:01:44.880><c> like</c><00:01:45.000><c> button</c><00:01:45.299><c> if</c><00:01:45.360><c> you</c><00:01:45.420><c> want</c><00:01:45.630><c> to</c><00:01:45.689><c> see</c>

00:01:45.770 --> 00:01:45.780 align:start position:0%
hit the like button if you want to see
 

00:01:45.780 --> 00:01:47.510 align:start position:0%
hit the like button if you want to see
more<00:01:45.960><c> short</c><00:01:46.200><c> videos</c><00:01:46.229><c> like</c><00:01:46.619><c> this</c><00:01:46.860><c> and</c><00:01:47.070><c> stay</c>

00:01:47.510 --> 00:01:47.520 align:start position:0%
more short videos like this and stay
 

00:01:47.520 --> 00:01:49.100 align:start position:0%
more short videos like this and stay
tuned<00:01:47.729><c> tomorrow</c><00:01:47.880><c> for</c><00:01:48.420><c> a</c><00:01:48.450><c> full</c><00:01:48.720><c> dead</c><00:01:48.960><c> loss</c>

00:01:49.100 --> 00:01:49.110 align:start position:0%
tuned tomorrow for a full dead loss
 

00:01:49.110 --> 00:01:51.410 align:start position:0%
tuned tomorrow for a full dead loss
project<00:01:49.649><c> using</c><00:01:49.950><c> github</c><00:01:50.130><c> actions</c><00:01:50.700><c> thanks</c><00:01:51.270><c> for</c>

00:01:51.410 --> 00:01:51.420 align:start position:0%
project using github actions thanks for
 

00:01:51.420 --> 00:01:53.060 align:start position:0%
project using github actions thanks for
watching<00:01:51.780><c> and</c><00:01:52.020><c> I</c><00:01:52.110><c> will</c><00:01:52.259><c> see</c><00:01:52.409><c> you</c><00:01:52.560><c> in</c><00:01:52.740><c> the</c><00:01:52.890><c> next</c>

00:01:53.060 --> 00:01:53.070 align:start position:0%
watching and I will see you in the next
 

00:01:53.070 --> 00:01:55.250 align:start position:0%
watching and I will see you in the next
one

