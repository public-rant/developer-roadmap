WEBVTT



00:00:00.480 --> 00:00:03.030 align:start position:0%
 
cross-origin<00:00:01.280><c> resource</c><00:00:01.760><c> sharing</c><00:00:02.240><c> or</c><00:00:02.560><c> cores</c>

00:00:03.030 --> 00:00:03.040 align:start position:0%
cross-origin resource sharing or cores
 

00:00:03.040 --> 00:00:05.110 align:start position:0%
cross-origin resource sharing or cores
is<00:00:03.199><c> a</c><00:00:03.360><c> mechanism</c><00:00:03.919><c> that</c><00:00:04.080><c> allows</c><00:00:04.400><c> a</c><00:00:04.480><c> website</c><00:00:04.960><c> on</c>

00:00:05.110 --> 00:00:05.120 align:start position:0%
is a mechanism that allows a website on
 

00:00:05.120 --> 00:00:07.349 align:start position:0%
is a mechanism that allows a website on
one<00:00:05.279><c> url</c><00:00:05.839><c> to</c><00:00:06.000><c> request</c><00:00:06.399><c> data</c><00:00:06.720><c> from</c><00:00:06.960><c> a</c><00:00:07.040><c> different</c>

00:00:07.349 --> 00:00:07.359 align:start position:0%
one url to request data from a different
 

00:00:07.359 --> 00:00:07.909 align:start position:0%
one url to request data from a different
url

00:00:07.909 --> 00:00:07.919 align:start position:0%
url
 

00:00:07.919 --> 00:00:09.750 align:start position:0%
url
and<00:00:08.080><c> it's</c><00:00:08.240><c> frustrated</c><00:00:08.800><c> both</c><00:00:09.040><c> front-end</c><00:00:09.519><c> and</c>

00:00:09.750 --> 00:00:09.760 align:start position:0%
and it's frustrated both front-end and
 

00:00:09.760 --> 00:00:11.509 align:start position:0%
and it's frustrated both front-end and
back-end<00:00:10.160><c> developers</c><00:00:10.719><c> since</c><00:00:10.960><c> the</c><00:00:11.120><c> dawn</c><00:00:11.360><c> of</c>

00:00:11.509 --> 00:00:11.519 align:start position:0%
back-end developers since the dawn of
 

00:00:11.519 --> 00:00:13.030 align:start position:0%
back-end developers since the dawn of
time<00:00:11.840><c> you</c><00:00:12.000><c> may</c><00:00:12.160><c> have</c><00:00:12.240><c> tried</c><00:00:12.400><c> to</c><00:00:12.480><c> use</c><00:00:12.639><c> an</c><00:00:12.719><c> image</c>

00:00:13.030 --> 00:00:13.040 align:start position:0%
time you may have tried to use an image
 

00:00:13.040 --> 00:00:14.310 align:start position:0%
time you may have tried to use an image
on<00:00:13.120><c> your</c><00:00:13.280><c> website</c><00:00:13.759><c> that</c><00:00:13.920><c> lives</c><00:00:14.160><c> on</c><00:00:14.240><c> a</c>

00:00:14.310 --> 00:00:14.320 align:start position:0%
on your website that lives on a
 

00:00:14.320 --> 00:00:15.190 align:start position:0%
on your website that lives on a
different<00:00:14.639><c> url</c>

00:00:15.190 --> 00:00:15.200 align:start position:0%
different url
 

00:00:15.200 --> 00:00:17.430 align:start position:0%
different url
only<00:00:15.440><c> to</c><00:00:15.679><c> end</c><00:00:15.839><c> up</c><00:00:16.000><c> with</c><00:00:16.160><c> a</c><00:00:16.320><c> broken</c><00:00:16.720><c> image</c><00:00:17.039><c> or</c>

00:00:17.430 --> 00:00:17.440 align:start position:0%
only to end up with a broken image or
 

00:00:17.440 --> 00:00:19.189 align:start position:0%
only to end up with a broken image or
your<00:00:17.680><c> website</c><00:00:18.000><c> might</c><00:00:18.240><c> try</c><00:00:18.480><c> to</c><00:00:18.640><c> fetch</c><00:00:18.960><c> data</c>

00:00:19.189 --> 00:00:19.199 align:start position:0%
your website might try to fetch data
 

00:00:19.199 --> 00:00:20.150 align:start position:0%
your website might try to fetch data
from<00:00:19.359><c> your</c><00:00:19.520><c> api</c>

00:00:20.150 --> 00:00:20.160 align:start position:0%
from your api
 

00:00:20.160 --> 00:00:21.910 align:start position:0%
from your api
then<00:00:20.400><c> fail</c><00:00:20.720><c> with</c><00:00:20.960><c> a</c><00:00:21.119><c> coors</c><00:00:21.439><c> error</c><00:00:21.680><c> in</c><00:00:21.840><c> the</c>

00:00:21.910 --> 00:00:21.920 align:start position:0%
then fail with a coors error in the
 

00:00:21.920 --> 00:00:23.189 align:start position:0%
then fail with a coors error in the
console<00:00:22.480><c> that</c><00:00:22.720><c> happens</c>

00:00:23.189 --> 00:00:23.199 align:start position:0%
console that happens
 

00:00:23.199 --> 00:00:25.109 align:start position:0%
console that happens
because<00:00:23.439><c> the</c><00:00:23.600><c> browser</c><00:00:24.240><c> implements</c><00:00:24.720><c> the</c><00:00:24.800><c> same</c>

00:00:25.109 --> 00:00:25.119 align:start position:0%
because the browser implements the same
 

00:00:25.119 --> 00:00:27.269 align:start position:0%
because the browser implements the same
origin<00:00:25.519><c> policy</c><00:00:26.160><c> as</c><00:00:26.320><c> part</c><00:00:26.480><c> of</c><00:00:26.640><c> its</c><00:00:26.800><c> security</c>

00:00:27.269 --> 00:00:27.279 align:start position:0%
origin policy as part of its security
 

00:00:27.279 --> 00:00:29.429 align:start position:0%
origin policy as part of its security
model<00:00:27.680><c> which</c><00:00:27.920><c> allows</c><00:00:28.240><c> a</c><00:00:28.320><c> website</c><00:00:28.800><c> to</c><00:00:29.039><c> freely</c>

00:00:29.429 --> 00:00:29.439 align:start position:0%
model which allows a website to freely
 

00:00:29.439 --> 00:00:29.990 align:start position:0%
model which allows a website to freely
request

00:00:29.990 --> 00:00:30.000 align:start position:0%
request
 

00:00:30.000 --> 00:00:32.229 align:start position:0%
request
images<00:00:30.400><c> and</c><00:00:30.480><c> data</c><00:00:30.800><c> from</c><00:00:30.960><c> its</c><00:00:31.199><c> own</c><00:00:31.359><c> url</c><00:00:32.000><c> but</c>

00:00:32.229 --> 00:00:32.239 align:start position:0%
images and data from its own url but
 

00:00:32.239 --> 00:00:34.389 align:start position:0%
images and data from its own url but
blocks<00:00:32.640><c> anything</c><00:00:32.960><c> from</c><00:00:33.200><c> an</c><00:00:33.360><c> external</c><00:00:33.760><c> url</c>

00:00:34.389 --> 00:00:34.399 align:start position:0%
blocks anything from an external url
 

00:00:34.399 --> 00:00:36.069 align:start position:0%
blocks anything from an external url
unless<00:00:34.719><c> certain</c><00:00:34.960><c> conditions</c><00:00:35.520><c> are</c><00:00:35.680><c> met</c><00:00:35.920><c> when</c>

00:00:36.069 --> 00:00:36.079 align:start position:0%
unless certain conditions are met when
 

00:00:36.079 --> 00:00:37.430 align:start position:0%
unless certain conditions are met when
the<00:00:36.239><c> browser</c><00:00:36.559><c> makes</c><00:00:36.800><c> a</c><00:00:36.880><c> request</c>

00:00:37.430 --> 00:00:37.440 align:start position:0%
the browser makes a request
 

00:00:37.440 --> 00:00:39.510 align:start position:0%
the browser makes a request
it<00:00:37.600><c> adds</c><00:00:37.840><c> an</c><00:00:38.000><c> origin</c><00:00:38.399><c> header</c><00:00:38.719><c> to</c><00:00:38.960><c> the</c><00:00:39.040><c> request</c>

00:00:39.510 --> 00:00:39.520 align:start position:0%
it adds an origin header to the request
 

00:00:39.520 --> 00:00:41.590 align:start position:0%
it adds an origin header to the request
message<00:00:40.000><c> if</c><00:00:40.160><c> that</c><00:00:40.320><c> request</c><00:00:40.719><c> goes</c><00:00:40.960><c> to</c><00:00:41.120><c> a</c><00:00:41.200><c> server</c>

00:00:41.590 --> 00:00:41.600 align:start position:0%
message if that request goes to a server
 

00:00:41.600 --> 00:00:42.630 align:start position:0%
message if that request goes to a server
on<00:00:41.760><c> the</c><00:00:41.840><c> same</c><00:00:42.079><c> origin</c>

00:00:42.630 --> 00:00:42.640 align:start position:0%
on the same origin
 

00:00:42.640 --> 00:00:44.470 align:start position:0%
on the same origin
then<00:00:42.800><c> it's</c><00:00:42.960><c> allowed</c><00:00:43.280><c> by</c><00:00:43.440><c> the</c><00:00:43.520><c> browser</c><00:00:44.000><c> with</c><00:00:44.239><c> no</c>

00:00:44.470 --> 00:00:44.480 align:start position:0%
then it's allowed by the browser with no
 

00:00:44.480 --> 00:00:45.830 align:start position:0%
then it's allowed by the browser with no
questions<00:00:44.879><c> asked</c><00:00:45.280><c> however</c>

00:00:45.830 --> 00:00:45.840 align:start position:0%
questions asked however
 

00:00:45.840 --> 00:00:47.830 align:start position:0%
questions asked however
if<00:00:46.000><c> that</c><00:00:46.160><c> request</c><00:00:46.559><c> goes</c><00:00:46.800><c> to</c><00:00:46.960><c> a</c><00:00:47.039><c> different</c><00:00:47.280><c> url</c>

00:00:47.830 --> 00:00:47.840 align:start position:0%
if that request goes to a different url
 

00:00:47.840 --> 00:00:49.510 align:start position:0%
if that request goes to a different url
then<00:00:48.000><c> it's</c><00:00:48.160><c> known</c><00:00:48.399><c> as</c><00:00:48.640><c> a</c><00:00:48.719><c> cross</c><00:00:49.120><c> origin</c>

00:00:49.510 --> 00:00:49.520 align:start position:0%
then it's known as a cross origin
 

00:00:49.520 --> 00:00:50.069 align:start position:0%
then it's known as a cross origin
request

00:00:50.069 --> 00:00:50.079 align:start position:0%
request
 

00:00:50.079 --> 00:00:51.990 align:start position:0%
request
when<00:00:50.320><c> sending</c><00:00:50.640><c> the</c><00:00:50.719><c> response</c><00:00:51.360><c> the</c><00:00:51.600><c> server</c>

00:00:51.990 --> 00:00:52.000 align:start position:0%
when sending the response the server
 

00:00:52.000 --> 00:00:54.549 align:start position:0%
when sending the response the server
will<00:00:52.160><c> add</c><00:00:52.399><c> the</c><00:00:52.640><c> access</c><00:00:53.120><c> control</c><00:00:53.680><c> allow</c><00:00:54.079><c> origin</c>

00:00:54.549 --> 00:00:54.559 align:start position:0%
will add the access control allow origin
 

00:00:54.559 --> 00:00:55.029 align:start position:0%
will add the access control allow origin
header

00:00:55.029 --> 00:00:55.039 align:start position:0%
header
 

00:00:55.039 --> 00:00:56.950 align:start position:0%
header
its<00:00:55.280><c> value</c><00:00:55.760><c> needs</c><00:00:56.000><c> to</c><00:00:56.079><c> match</c><00:00:56.399><c> the</c><00:00:56.559><c> origin</c>

00:00:56.950 --> 00:00:56.960 align:start position:0%
its value needs to match the origin
 

00:00:56.960 --> 00:00:58.069 align:start position:0%
its value needs to match the origin
header<00:00:57.280><c> on</c><00:00:57.440><c> the</c><00:00:57.520><c> request</c>

00:00:58.069 --> 00:00:58.079 align:start position:0%
header on the request
 

00:00:58.079 --> 00:00:59.830 align:start position:0%
header on the request
or<00:00:58.320><c> it</c><00:00:58.399><c> can</c><00:00:58.480><c> be</c><00:00:58.640><c> a</c><00:00:58.719><c> wild</c><00:00:58.960><c> card</c><00:00:59.280><c> which</c><00:00:59.440><c> allows</c>

00:00:59.830 --> 00:00:59.840 align:start position:0%
or it can be a wild card which allows
 

00:00:59.840 --> 00:01:01.430 align:start position:0%
or it can be a wild card which allows
any<00:01:00.000><c> url</c><00:01:00.480><c> to</c><00:01:00.559><c> make</c><00:01:00.719><c> the</c><00:01:00.879><c> request</c>

00:01:01.430 --> 00:01:01.440 align:start position:0%
any url to make the request
 

00:01:01.440 --> 00:01:03.110 align:start position:0%
any url to make the request
if<00:01:01.600><c> it's</c><00:01:01.760><c> a</c><00:01:01.840><c> mismatch</c><00:01:02.320><c> though</c><00:01:02.640><c> the</c><00:01:02.800><c> browser</c>

00:01:03.110 --> 00:01:03.120 align:start position:0%
if it's a mismatch though the browser
 

00:01:03.120 --> 00:01:04.630 align:start position:0%
if it's a mismatch though the browser
will<00:01:03.280><c> prevent</c><00:01:03.680><c> the</c><00:01:03.760><c> response</c><00:01:04.159><c> data</c><00:01:04.479><c> from</c>

00:01:04.630 --> 00:01:04.640 align:start position:0%
will prevent the response data from
 

00:01:04.640 --> 00:01:05.910 align:start position:0%
will prevent the response data from
being<00:01:04.960><c> shared</c><00:01:05.199><c> with</c><00:01:05.360><c> the</c><00:01:05.519><c> client</c>

00:01:05.910 --> 00:01:05.920 align:start position:0%
being shared with the client
 

00:01:05.920 --> 00:01:07.670 align:start position:0%
being shared with the client
this<00:01:06.159><c> results</c><00:01:06.479><c> in</c><00:01:06.560><c> an</c><00:01:06.799><c> error</c><00:01:06.960><c> in</c><00:01:07.040><c> the</c><00:01:07.200><c> browser</c>

00:01:07.670 --> 00:01:07.680 align:start position:0%
this results in an error in the browser
 

00:01:07.680 --> 00:01:09.429 align:start position:0%
this results in an error in the browser
but<00:01:07.840><c> for</c><00:01:08.080><c> security</c><00:01:08.560><c> reasons</c><00:01:08.960><c> there's</c><00:01:09.200><c> very</c>

00:01:09.429 --> 00:01:09.439 align:start position:0%
but for security reasons there's very
 

00:01:09.439 --> 00:01:11.350 align:start position:0%
but for security reasons there's very
limited<00:01:09.920><c> information</c><00:01:10.560><c> about</c><00:01:10.799><c> what</c><00:01:11.040><c> actually</c>

00:01:11.350 --> 00:01:11.360 align:start position:0%
limited information about what actually
 

00:01:11.360 --> 00:01:11.990 align:start position:0%
limited information about what actually
went<00:01:11.600><c> wrong</c>

00:01:11.990 --> 00:01:12.000 align:start position:0%
went wrong
 

00:01:12.000 --> 00:01:13.990 align:start position:0%
went wrong
the<00:01:12.159><c> solution</c><00:01:12.640><c> to</c><00:01:12.799><c> a</c><00:01:12.960><c> corsair</c><00:01:13.520><c> lies</c><00:01:13.760><c> on</c><00:01:13.840><c> the</c>

00:01:13.990 --> 00:01:14.000 align:start position:0%
the solution to a corsair lies on the
 

00:01:14.000 --> 00:01:15.590 align:start position:0%
the solution to a corsair lies on the
server<00:01:14.400><c> if</c><00:01:14.560><c> you</c><00:01:14.640><c> don't</c><00:01:14.799><c> control</c><00:01:15.119><c> the</c><00:01:15.280><c> server</c>

00:01:15.590 --> 00:01:15.600 align:start position:0%
server if you don't control the server
 

00:01:15.600 --> 00:01:16.390 align:start position:0%
server if you don't control the server
you're<00:01:15.759><c> out</c><00:01:15.920><c> of</c><00:01:16.000><c> luck</c>

00:01:16.390 --> 00:01:16.400 align:start position:0%
you're out of luck
 

00:01:16.400 --> 00:01:17.990 align:start position:0%
you're out of luck
if<00:01:16.560><c> you</c><00:01:16.640><c> do</c><00:01:16.799><c> control</c><00:01:17.200><c> it</c><00:01:17.360><c> you</c><00:01:17.520><c> likely</c><00:01:17.840><c> just</c>

00:01:17.990 --> 00:01:18.000 align:start position:0%
if you do control it you likely just
 

00:01:18.000 --> 00:01:19.910 align:start position:0%
if you do control it you likely just
need<00:01:18.240><c> to</c><00:01:18.400><c> configure</c><00:01:18.880><c> it</c><00:01:19.040><c> to</c><00:01:19.200><c> respond</c><00:01:19.680><c> with</c><00:01:19.840><c> a</c>

00:01:19.910 --> 00:01:19.920 align:start position:0%
need to configure it to respond with a
 

00:01:19.920 --> 00:01:22.230 align:start position:0%
need to configure it to respond with a
proper<00:01:20.240><c> header</c><00:01:20.640><c> in</c><00:01:20.799><c> express.js</c><00:01:21.600><c> for</c><00:01:21.759><c> example</c>

00:01:22.230 --> 00:01:22.240 align:start position:0%
proper header in express.js for example
 

00:01:22.240 --> 00:01:23.830 align:start position:0%
proper header in express.js for example
that<00:01:22.400><c> can</c><00:01:22.560><c> be</c><00:01:22.640><c> achieved</c><00:01:23.040><c> with</c><00:01:23.200><c> a</c><00:01:23.280><c> single</c><00:01:23.600><c> line</c>

00:01:23.830 --> 00:01:23.840 align:start position:0%
that can be achieved with a single line
 

00:01:23.840 --> 00:01:25.270 align:start position:0%
that can be achieved with a single line
of<00:01:23.920><c> middleware</c><00:01:24.320><c> code</c><00:01:24.640><c> which</c><00:01:24.880><c> tells</c><00:01:25.119><c> the</c>

00:01:25.270 --> 00:01:25.280 align:start position:0%
of middleware code which tells the
 

00:01:25.280 --> 00:01:27.270 align:start position:0%
of middleware code which tells the
server<00:01:25.600><c> to</c><00:01:25.840><c> include</c><00:01:26.159><c> the</c><00:01:26.240><c> course</c><00:01:26.560><c> headers</c><00:01:27.040><c> on</c>

00:01:27.270 --> 00:01:27.280 align:start position:0%
server to include the course headers on
 

00:01:27.280 --> 00:01:28.310 align:start position:0%
server to include the course headers on
every<00:01:27.520><c> response</c>

00:01:28.310 --> 00:01:28.320 align:start position:0%
every response
 

00:01:28.320 --> 00:01:31.030 align:start position:0%
every response
now<00:01:28.560><c> certain</c><00:01:28.880><c> http</c><00:01:29.520><c> requests</c><00:01:30.079><c> like</c><00:01:30.400><c> put</c><00:01:30.799><c> or</c>

00:01:31.030 --> 00:01:31.040 align:start position:0%
now certain http requests like put or
 

00:01:31.040 --> 00:01:32.950 align:start position:0%
now certain http requests like put or
any<00:01:31.200><c> request</c><00:01:31.600><c> with</c><00:01:31.840><c> a</c><00:01:31.920><c> non-standard</c><00:01:32.560><c> header</c>

00:01:32.950 --> 00:01:32.960 align:start position:0%
any request with a non-standard header
 

00:01:32.960 --> 00:01:34.390 align:start position:0%
any request with a non-standard header
will<00:01:33.200><c> need</c><00:01:33.360><c> to</c><00:01:33.439><c> be</c><00:01:33.600><c> preflighted</c>

00:01:34.390 --> 00:01:34.400 align:start position:0%
will need to be preflighted
 

00:01:34.400 --> 00:01:35.990 align:start position:0%
will need to be preflighted
and<00:01:34.560><c> just</c><00:01:34.720><c> like</c><00:01:34.880><c> at</c><00:01:34.960><c> the</c><00:01:35.119><c> airport</c><00:01:35.600><c> it's</c><00:01:35.840><c> a</c>

00:01:35.990 --> 00:01:36.000 align:start position:0%
and just like at the airport it's a
 

00:01:36.000 --> 00:01:38.069 align:start position:0%
and just like at the airport it's a
sanity<00:01:36.479><c> check</c><00:01:36.799><c> that</c><00:01:36.960><c> ensures</c><00:01:37.360><c> the</c><00:01:37.439><c> passenger</c>

00:01:38.069 --> 00:01:38.079 align:start position:0%
sanity check that ensures the passenger
 

00:01:38.079 --> 00:01:38.789 align:start position:0%
sanity check that ensures the passenger
or<00:01:38.240><c> request</c>

00:01:38.789 --> 00:01:38.799 align:start position:0%
or request
 

00:01:38.799 --> 00:01:41.030 align:start position:0%
or request
is<00:01:38.880><c> safe</c><00:01:39.119><c> to</c><00:01:39.280><c> fly</c><00:01:39.439><c> on</c><00:01:39.600><c> the</c><00:01:39.759><c> airplane</c><00:01:40.240><c> or</c><00:01:40.560><c> server</c>

00:01:41.030 --> 00:01:41.040 align:start position:0%
is safe to fly on the airplane or server
 

00:01:41.040 --> 00:01:42.710 align:start position:0%
is safe to fly on the airplane or server
the<00:01:41.200><c> browser</c><00:01:41.680><c> automatically</c><00:01:42.240><c> knows</c><00:01:42.479><c> when</c><00:01:42.640><c> to</c>

00:01:42.710 --> 00:01:42.720 align:start position:0%
the browser automatically knows when to
 

00:01:42.720 --> 00:01:44.550 align:start position:0%
the browser automatically knows when to
preflight<00:01:43.280><c> and</c><00:01:43.360><c> will</c><00:01:43.520><c> first</c><00:01:43.759><c> make</c><00:01:43.920><c> a</c><00:01:44.000><c> request</c>

00:01:44.550 --> 00:01:44.560 align:start position:0%
preflight and will first make a request
 

00:01:44.560 --> 00:01:46.710 align:start position:0%
preflight and will first make a request
using<00:01:44.880><c> the</c><00:01:45.040><c> options</c><00:01:45.600><c> http</c><00:01:46.320><c> verb</c>

00:01:46.710 --> 00:01:46.720 align:start position:0%
using the options http verb
 

00:01:46.720 --> 00:01:48.710 align:start position:0%
using the options http verb
the<00:01:46.880><c> server</c><00:01:47.280><c> will</c><00:01:47.439><c> then</c><00:01:47.600><c> respond</c><00:01:48.159><c> saying</c><00:01:48.399><c> yes</c>

00:01:48.710 --> 00:01:48.720 align:start position:0%
the server will then respond saying yes
 

00:01:48.720 --> 00:01:49.910 align:start position:0%
the server will then respond saying yes
i<00:01:48.880><c> allow</c><00:01:49.119><c> this</c><00:01:49.360><c> origin</c>

00:01:49.910 --> 00:01:49.920 align:start position:0%
i allow this origin
 

00:01:49.920 --> 00:01:51.429 align:start position:0%
i allow this origin
to<00:01:50.079><c> make</c><00:01:50.320><c> requests</c><00:01:50.720><c> with</c><00:01:50.960><c> the</c><00:01:51.040><c> following</c>

00:01:51.429 --> 00:01:51.439 align:start position:0%
to make requests with the following
 

00:01:51.439 --> 00:01:53.510 align:start position:0%
to make requests with the following
methods<00:01:52.000><c> at</c><00:01:52.079><c> which</c><00:01:52.399><c> point</c><00:01:52.799><c> the</c><00:01:52.960><c> main</c><00:01:53.200><c> request</c>

00:01:53.510 --> 00:01:53.520 align:start position:0%
methods at which point the main request
 

00:01:53.520 --> 00:01:53.990 align:start position:0%
methods at which point the main request
can<00:01:53.680><c> happen</c>

00:01:53.990 --> 00:01:54.000 align:start position:0%
can happen
 

00:01:54.000 --> 00:01:56.069 align:start position:0%
can happen
without<00:01:54.399><c> fear</c><00:01:54.640><c> of</c><00:01:54.720><c> disaster</c><00:01:55.439><c> that</c><00:01:55.600><c> may</c><00:01:55.840><c> sound</c>

00:01:56.069 --> 00:01:56.079 align:start position:0%
without fear of disaster that may sound
 

00:01:56.079 --> 00:01:57.910 align:start position:0%
without fear of disaster that may sound
inefficient<00:01:56.719><c> but</c><00:01:56.960><c> the</c><00:01:57.040><c> server</c><00:01:57.360><c> can</c><00:01:57.520><c> respond</c>

00:01:57.910 --> 00:01:57.920 align:start position:0%
inefficient but the server can respond
 

00:01:57.920 --> 00:01:59.590 align:start position:0%
inefficient but the server can respond
with<00:01:58.079><c> a</c><00:01:58.240><c> max</c><00:01:58.560><c> age</c><00:01:58.799><c> header</c><00:01:59.119><c> allowing</c><00:01:59.439><c> the</c>

00:01:59.590 --> 00:01:59.600 align:start position:0%
with a max age header allowing the
 

00:01:59.600 --> 00:02:01.510 align:start position:0%
with a max age header allowing the
browser<00:02:00.000><c> to</c><00:02:00.240><c> cache</c><00:02:00.479><c> a</c><00:02:00.560><c> preflight</c><00:02:01.119><c> for</c><00:02:01.360><c> a</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
browser to cache a preflight for a
 

00:02:01.520 --> 00:02:02.550 align:start position:0%
browser to cache a preflight for a
certain<00:02:01.759><c> amount</c><00:02:02.000><c> of</c><00:02:02.079><c> time</c>

00:02:02.550 --> 00:02:02.560 align:start position:0%
certain amount of time
 

00:02:02.560 --> 00:02:04.469 align:start position:0%
certain amount of time
if<00:02:02.640><c> you</c><00:02:02.799><c> happen</c><00:02:03.040><c> to</c><00:02:03.119><c> be</c><00:02:03.280><c> facing</c><00:02:03.680><c> a</c><00:02:03.840><c> coors</c><00:02:04.240><c> error</c>

00:02:04.469 --> 00:02:04.479 align:start position:0%
if you happen to be facing a coors error
 

00:02:04.479 --> 00:02:06.230 align:start position:0%
if you happen to be facing a coors error
right<00:02:04.640><c> now</c><00:02:05.040><c> open</c><00:02:05.280><c> the</c><00:02:05.439><c> network</c><00:02:05.759><c> tab</c><00:02:06.000><c> in</c><00:02:06.079><c> the</c>

00:02:06.230 --> 00:02:06.240 align:start position:0%
right now open the network tab in the
 

00:02:06.240 --> 00:02:06.789 align:start position:0%
right now open the network tab in the
browser

00:02:06.789 --> 00:02:06.799 align:start position:0%
browser
 

00:02:06.799 --> 00:02:08.469 align:start position:0%
browser
find<00:02:07.040><c> the</c><00:02:07.200><c> response</c><00:02:07.759><c> and</c><00:02:07.920><c> look</c><00:02:08.080><c> for</c><00:02:08.319><c> the</c>

00:02:08.469 --> 00:02:08.479 align:start position:0%
find the response and look for the
 

00:02:08.479 --> 00:02:10.869 align:start position:0%
find the response and look for the
access<00:02:08.959><c> control</c><00:02:09.440><c> allow</c><00:02:09.759><c> origin</c><00:02:10.160><c> header</c><00:02:10.560><c> if</c><00:02:10.720><c> it</c>

00:02:10.869 --> 00:02:10.879 align:start position:0%
access control allow origin header if it
 

00:02:10.879 --> 00:02:12.869 align:start position:0%
access control allow origin header if it
doesn't<00:02:11.120><c> exist</c><00:02:11.599><c> you</c><00:02:11.760><c> need</c><00:02:11.920><c> to</c><00:02:12.080><c> enable</c><00:02:12.480><c> cores</c>

00:02:12.869 --> 00:02:12.879 align:start position:0%
doesn't exist you need to enable cores
 

00:02:12.879 --> 00:02:13.589 align:start position:0%
doesn't exist you need to enable cores
on<00:02:12.959><c> your</c><00:02:13.120><c> server</c>

00:02:13.589 --> 00:02:13.599 align:start position:0%
on your server
 

00:02:13.599 --> 00:02:15.589 align:start position:0%
on your server
if<00:02:13.760><c> it</c><00:02:13.840><c> does</c><00:02:14.080><c> exist</c><00:02:14.480><c> the</c><00:02:14.640><c> url</c><00:02:15.120><c> may</c><00:02:15.280><c> be</c><00:02:15.440><c> a</c>

00:02:15.589 --> 00:02:15.599 align:start position:0%
if it does exist the url may be a
 

00:02:15.599 --> 00:02:16.949 align:start position:0%
if it does exist the url may be a
mismatch<00:02:16.000><c> with</c><00:02:16.160><c> the</c><00:02:16.319><c> website</c>

00:02:16.949 --> 00:02:16.959 align:start position:0%
mismatch with the website
 

00:02:16.959 --> 00:02:18.949 align:start position:0%
mismatch with the website
or<00:02:17.280><c> if</c><00:02:17.440><c> it</c><00:02:17.520><c> was</c><00:02:17.680><c> preflighted</c><00:02:18.400><c> it</c><00:02:18.480><c> may</c><00:02:18.640><c> not</c><00:02:18.800><c> be</c>

00:02:18.949 --> 00:02:18.959 align:start position:0%
or if it was preflighted it may not be
 

00:02:18.959 --> 00:02:20.949 align:start position:0%
or if it was preflighted it may not be
allowing<00:02:19.360><c> those</c><00:02:19.599><c> methods</c><00:02:20.080><c> or</c><00:02:20.319><c> headers</c><00:02:20.720><c> in</c><00:02:20.879><c> the</c>

00:02:20.949 --> 00:02:20.959 align:start position:0%
allowing those methods or headers in the
 

00:02:20.959 --> 00:02:21.589 align:start position:0%
allowing those methods or headers in the
request

00:02:21.589 --> 00:02:21.599 align:start position:0%
request
 

00:02:21.599 --> 00:02:22.710 align:start position:0%
request
all<00:02:21.760><c> of</c><00:02:21.840><c> which</c><00:02:22.080><c> are</c><00:02:22.160><c> things</c><00:02:22.480><c> you</c><00:02:22.560><c> can</c>

00:02:22.710 --> 00:02:22.720 align:start position:0%
all of which are things you can
 

00:02:22.720 --> 00:02:24.630 align:start position:0%
all of which are things you can
configure<00:02:23.280><c> on</c><00:02:23.440><c> the</c><00:02:23.599><c> server</c><00:02:24.080><c> this</c><00:02:24.319><c> has</c><00:02:24.400><c> been</c>

00:02:24.630 --> 00:02:24.640 align:start position:0%
configure on the server this has been
 

00:02:24.640 --> 00:02:26.710 align:start position:0%
configure on the server this has been
cross<00:02:24.959><c> origin</c><00:02:25.360><c> resource</c><00:02:25.760><c> sharing</c><00:02:26.160><c> in</c><00:02:26.239><c> 100</c>

00:02:26.710 --> 00:02:26.720 align:start position:0%
cross origin resource sharing in 100
 

00:02:26.720 --> 00:02:28.550 align:start position:0%
cross origin resource sharing in 100
seconds<00:02:27.200><c> thanks</c><00:02:27.440><c> for</c><00:02:27.599><c> watching</c><00:02:28.080><c> and</c><00:02:28.239><c> i</c><00:02:28.400><c> will</c>

00:02:28.550 --> 00:02:28.560 align:start position:0%
seconds thanks for watching and i will
 

00:02:28.560 --> 00:02:32.640 align:start position:0%
seconds thanks for watching and i will
see<00:02:28.720><c> you</c><00:02:28.959><c> in</c><00:02:29.040><c> the</c><00:02:29.120><c> next</c><00:02:29.640><c> one</c>

