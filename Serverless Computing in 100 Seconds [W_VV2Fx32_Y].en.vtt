WEBVTT



00:00:00.399 --> 00:00:02.550 align:start position:0%
 
serverless<00:00:00.960><c> computing</c><00:00:01.599><c> it's</c><00:00:01.839><c> a</c><00:00:01.920><c> misnomer</c>

00:00:02.550 --> 00:00:02.560 align:start position:0%
serverless computing it's a misnomer
 

00:00:02.560 --> 00:00:04.390 align:start position:0%
serverless computing it's a misnomer
used<00:00:02.800><c> to</c><00:00:02.879><c> describe</c><00:00:03.280><c> servers</c><00:00:03.760><c> in</c><00:00:03.840><c> the</c><00:00:03.919><c> cloud</c>

00:00:04.390 --> 00:00:04.400 align:start position:0%
used to describe servers in the cloud
 

00:00:04.400 --> 00:00:06.389 align:start position:0%
used to describe servers in the cloud
that<00:00:04.560><c> requires</c><00:00:05.040><c> zero</c><00:00:05.279><c> configuration</c><00:00:06.160><c> or</c>

00:00:06.389 --> 00:00:06.399 align:start position:0%
that requires zero configuration or
 

00:00:06.399 --> 00:00:07.670 align:start position:0%
that requires zero configuration or
maintenance<00:00:06.799><c> from</c><00:00:06.960><c> the</c><00:00:07.120><c> developer</c>

00:00:07.670 --> 00:00:07.680 align:start position:0%
maintenance from the developer
 

00:00:07.680 --> 00:00:09.430 align:start position:0%
maintenance from the developer
imagine<00:00:08.000><c> you</c><00:00:08.160><c> need</c><00:00:08.320><c> water</c><00:00:08.639><c> for</c><00:00:08.800><c> your</c><00:00:08.960><c> house</c>

00:00:09.430 --> 00:00:09.440 align:start position:0%
imagine you need water for your house
 

00:00:09.440 --> 00:00:10.709 align:start position:0%
imagine you need water for your house
you<00:00:09.599><c> could</c><00:00:09.840><c> spend</c><00:00:10.000><c> a</c><00:00:10.080><c> bunch</c><00:00:10.320><c> of</c><00:00:10.400><c> time</c><00:00:10.639><c> and</c>

00:00:10.709 --> 00:00:10.719 align:start position:0%
you could spend a bunch of time and
 

00:00:10.719 --> 00:00:11.749 align:start position:0%
you could spend a bunch of time and
money<00:00:11.040><c> digging</c><00:00:11.280><c> a</c><00:00:11.360><c> well</c>

00:00:11.749 --> 00:00:11.759 align:start position:0%
money digging a well
 

00:00:11.759 --> 00:00:13.589 align:start position:0%
money digging a well
testing<00:00:12.160><c> the</c><00:00:12.240><c> water</c><00:00:12.559><c> quality</c><00:00:13.040><c> and</c><00:00:13.200><c> plumbing</c>

00:00:13.589 --> 00:00:13.599 align:start position:0%
testing the water quality and plumbing
 

00:00:13.599 --> 00:00:15.350 align:start position:0%
testing the water quality and plumbing
it<00:00:13.679><c> to</c><00:00:13.759><c> your</c><00:00:13.920><c> house</c><00:00:14.320><c> or</c><00:00:14.719><c> you</c><00:00:14.799><c> could</c><00:00:14.960><c> just</c><00:00:15.120><c> tap</c>

00:00:15.350 --> 00:00:15.360 align:start position:0%
it to your house or you could just tap
 

00:00:15.360 --> 00:00:16.710 align:start position:0%
it to your house or you could just tap
into<00:00:15.599><c> the</c><00:00:15.679><c> city</c><00:00:15.839><c> water</c><00:00:16.080><c> supply</c>

00:00:16.710 --> 00:00:16.720 align:start position:0%
into the city water supply
 

00:00:16.720 --> 00:00:18.230 align:start position:0%
into the city water supply
and<00:00:16.880><c> pay</c><00:00:17.039><c> a</c><00:00:17.119><c> monthly</c><00:00:17.520><c> fee</c><00:00:17.840><c> based</c><00:00:18.080><c> on</c><00:00:18.160><c> the</c>

00:00:18.230 --> 00:00:18.240 align:start position:0%
and pay a monthly fee based on the
 

00:00:18.240 --> 00:00:19.750 align:start position:0%
and pay a monthly fee based on the
amount<00:00:18.480><c> of</c><00:00:18.560><c> water</c><00:00:18.880><c> that</c><00:00:18.960><c> you</c><00:00:19.199><c> use</c>

00:00:19.750 --> 00:00:19.760 align:start position:0%
amount of water that you use
 

00:00:19.760 --> 00:00:21.830 align:start position:0%
amount of water that you use
serverless<00:00:20.240><c> computing</c><00:00:20.800><c> is</c><00:00:20.960><c> the</c><00:00:21.039><c> same</c><00:00:21.359><c> idea</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
serverless computing is the same idea
 

00:00:21.840 --> 00:00:22.870 align:start position:0%
serverless computing is the same idea
but<00:00:22.000><c> instead</c><00:00:22.320><c> of</c><00:00:22.480><c> water</c>

00:00:22.870 --> 00:00:22.880 align:start position:0%
but instead of water
 

00:00:22.880 --> 00:00:24.710 align:start position:0%
but instead of water
we're<00:00:23.039><c> talking</c><00:00:23.359><c> about</c><00:00:23.519><c> the</c><00:00:23.680><c> amount</c><00:00:24.000><c> of</c><00:00:24.240><c> cpu</c>

00:00:24.710 --> 00:00:24.720 align:start position:0%
we're talking about the amount of cpu
 

00:00:24.720 --> 00:00:26.710 align:start position:0%
we're talking about the amount of cpu
and<00:00:24.800><c> memory</c><00:00:25.279><c> it</c><00:00:25.359><c> takes</c><00:00:25.599><c> to</c><00:00:25.760><c> run</c><00:00:26.000><c> your</c><00:00:26.160><c> code</c>

00:00:26.710 --> 00:00:26.720 align:start position:0%
and memory it takes to run your code
 

00:00:26.720 --> 00:00:29.189 align:start position:0%
and memory it takes to run your code
services<00:00:27.199><c> like</c><00:00:27.439><c> aws</c><00:00:28.080><c> lambda</c><00:00:28.560><c> google</c><00:00:28.880><c> cloud</c>

00:00:29.189 --> 00:00:29.199 align:start position:0%
services like aws lambda google cloud
 

00:00:29.199 --> 00:00:29.990 align:start position:0%
services like aws lambda google cloud
functions<00:00:29.760><c> and</c>

00:00:29.990 --> 00:00:30.000 align:start position:0%
functions and
 

00:00:30.000 --> 00:00:31.910 align:start position:0%
functions and
azure<00:00:30.320><c> functions</c><00:00:30.960><c> allow</c><00:00:31.279><c> you</c><00:00:31.359><c> to</c><00:00:31.599><c> run</c><00:00:31.760><c> your</c>

00:00:31.910 --> 00:00:31.920 align:start position:0%
azure functions allow you to run your
 

00:00:31.920 --> 00:00:33.750 align:start position:0%
azure functions allow you to run your
back-end<00:00:32.239><c> code</c><00:00:32.640><c> across</c><00:00:32.960><c> their</c><00:00:33.120><c> global</c><00:00:33.520><c> data</c>

00:00:33.750 --> 00:00:33.760 align:start position:0%
back-end code across their global data
 

00:00:33.760 --> 00:00:34.229 align:start position:0%
back-end code across their global data
centers

00:00:34.229 --> 00:00:34.239 align:start position:0%
centers
 

00:00:34.239 --> 00:00:35.670 align:start position:0%
centers
then<00:00:34.399><c> they</c><00:00:34.559><c> mail</c><00:00:34.800><c> you</c><00:00:34.960><c> a</c><00:00:35.040><c> bill</c><00:00:35.200><c> at</c><00:00:35.280><c> the</c><00:00:35.440><c> end</c><00:00:35.600><c> of</c>

00:00:35.670 --> 00:00:35.680 align:start position:0%
then they mail you a bill at the end of
 

00:00:35.680 --> 00:00:37.110 align:start position:0%
then they mail you a bill at the end of
the<00:00:35.760><c> month</c><00:00:36.000><c> that's</c><00:00:36.239><c> factored</c><00:00:36.640><c> down</c><00:00:36.880><c> to</c><00:00:37.040><c> the</c>

00:00:37.110 --> 00:00:37.120 align:start position:0%
the month that's factored down to the
 

00:00:37.120 --> 00:00:37.830 align:start position:0%
the month that's factored down to the
millisecond

00:00:37.830 --> 00:00:37.840 align:start position:0%
millisecond
 

00:00:37.840 --> 00:00:39.430 align:start position:0%
millisecond
the<00:00:38.000><c> beauty</c><00:00:38.239><c> of</c><00:00:38.320><c> this</c><00:00:38.559><c> approach</c><00:00:38.960><c> is</c><00:00:39.120><c> that</c><00:00:39.280><c> your</c>

00:00:39.430 --> 00:00:39.440 align:start position:0%
the beauty of this approach is that your
 

00:00:39.440 --> 00:00:41.190 align:start position:0%
the beauty of this approach is that your
only<00:00:39.680><c> concern</c><00:00:40.239><c> is</c><00:00:40.399><c> writing</c><00:00:40.800><c> code</c>

00:00:41.190 --> 00:00:41.200 align:start position:0%
only concern is writing code
 

00:00:41.200 --> 00:00:42.470 align:start position:0%
only concern is writing code
you<00:00:41.280><c> don't</c><00:00:41.440><c> have</c><00:00:41.600><c> to</c><00:00:41.680><c> pick</c><00:00:41.840><c> an</c><00:00:42.000><c> operating</c>

00:00:42.470 --> 00:00:42.480 align:start position:0%
you don't have to pick an operating
 

00:00:42.480 --> 00:00:44.470 align:start position:0%
you don't have to pick an operating
system<00:00:42.879><c> configure</c><00:00:43.360><c> networking</c><00:00:44.160><c> patch</c>

00:00:44.470 --> 00:00:44.480 align:start position:0%
system configure networking patch
 

00:00:44.480 --> 00:00:46.549 align:start position:0%
system configure networking patch
improvements<00:00:45.039><c> or</c><00:00:45.280><c> provision</c><00:00:45.760><c> capacity</c><00:00:46.320><c> to</c>

00:00:46.549 --> 00:00:46.559 align:start position:0%
improvements or provision capacity to
 

00:00:46.559 --> 00:00:48.470 align:start position:0%
improvements or provision capacity to
run<00:00:46.800><c> at</c><00:00:46.879><c> scale</c><00:00:47.280><c> the</c><00:00:47.440><c> cloud</c><00:00:47.760><c> handles</c><00:00:48.160><c> all</c><00:00:48.320><c> that</c>

00:00:48.470 --> 00:00:48.480 align:start position:0%
run at scale the cloud handles all that
 

00:00:48.480 --> 00:00:49.750 align:start position:0%
run at scale the cloud handles all that
for<00:00:48.640><c> you</c><00:00:48.879><c> behind</c><00:00:49.200><c> the</c><00:00:49.280><c> scenes</c>

00:00:49.750 --> 00:00:49.760 align:start position:0%
for you behind the scenes
 

00:00:49.760 --> 00:00:51.510 align:start position:0%
for you behind the scenes
from<00:00:49.920><c> an</c><00:00:50.079><c> architectural</c><00:00:50.800><c> standpoint</c><00:00:51.360><c> it</c>

00:00:51.510 --> 00:00:51.520 align:start position:0%
from an architectural standpoint it
 

00:00:51.520 --> 00:00:53.270 align:start position:0%
from an architectural standpoint it
allows<00:00:51.840><c> you</c><00:00:52.000><c> to</c><00:00:52.239><c> develop</c><00:00:52.640><c> and</c><00:00:52.800><c> test</c><00:00:53.120><c> each</c>

00:00:53.270 --> 00:00:53.280 align:start position:0%
allows you to develop and test each
 

00:00:53.280 --> 00:00:54.310 align:start position:0%
allows you to develop and test each
business<00:00:53.600><c> requirement</c>

00:00:54.310 --> 00:00:54.320 align:start position:0%
business requirement
 

00:00:54.320 --> 00:00:56.150 align:start position:0%
business requirement
independent<00:00:54.960><c> of</c><00:00:55.120><c> a</c><00:00:55.199><c> bigger</c><00:00:55.600><c> monolithic</c>

00:00:56.150 --> 00:00:56.160 align:start position:0%
independent of a bigger monolithic
 

00:00:56.160 --> 00:00:58.389 align:start position:0%
independent of a bigger monolithic
system<00:00:56.800><c> not</c><00:00:56.960><c> only</c><00:00:57.199><c> do</c><00:00:57.440><c> serverless</c><00:00:57.920><c> functions</c>

00:00:58.389 --> 00:00:58.399 align:start position:0%
system not only do serverless functions
 

00:00:58.399 --> 00:01:00.069 align:start position:0%
system not only do serverless functions
make<00:00:58.640><c> servers</c><00:00:59.120><c> easier</c><00:00:59.440><c> to</c><00:00:59.520><c> manage</c>

00:01:00.069 --> 00:01:00.079 align:start position:0%
make servers easier to manage
 

00:01:00.079 --> 00:01:02.069 align:start position:0%
make servers easier to manage
but<00:01:00.239><c> they</c><00:01:00.399><c> can</c><00:01:00.640><c> also</c><00:01:00.879><c> be</c><00:01:01.120><c> executed</c><00:01:01.680><c> based</c><00:01:02.000><c> on</c>

00:01:02.069 --> 00:01:02.079 align:start position:0%
but they can also be executed based on
 

00:01:02.079 --> 00:01:03.510 align:start position:0%
but they can also be executed based on
different<00:01:02.399><c> events</c><00:01:02.719><c> that</c><00:01:02.879><c> happen</c><00:01:03.280><c> in</c><00:01:03.359><c> the</c>

00:01:03.510 --> 00:01:03.520 align:start position:0%
different events that happen in the
 

00:01:03.520 --> 00:01:03.910 align:start position:0%
different events that happen in the
cloud

00:01:03.910 --> 00:01:03.920 align:start position:0%
cloud
 

00:01:03.920 --> 00:01:05.830 align:start position:0%
cloud
which<00:01:04.080><c> can</c><00:01:04.320><c> actually</c><00:01:04.720><c> simplify</c><00:01:05.280><c> your</c><00:01:05.439><c> backend</c>

00:01:05.830 --> 00:01:05.840 align:start position:0%
which can actually simplify your backend
 

00:01:05.840 --> 00:01:06.950 align:start position:0%
which can actually simplify your backend
code<00:01:06.240><c> for</c><00:01:06.400><c> example</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
code for example
 

00:01:06.960 --> 00:01:08.469 align:start position:0%
code for example
you<00:01:07.040><c> might</c><00:01:07.200><c> create</c><00:01:07.439><c> a</c><00:01:07.520><c> new</c><00:01:07.680><c> database</c><00:01:08.159><c> record</c>

00:01:08.469 --> 00:01:08.479 align:start position:0%
you might create a new database record
 

00:01:08.479 --> 00:01:10.390 align:start position:0%
you might create a new database record
when<00:01:08.640><c> a</c><00:01:08.720><c> user</c><00:01:09.040><c> places</c><00:01:09.360><c> an</c><00:01:09.600><c> order</c><00:01:09.920><c> which</c><00:01:10.159><c> then</c>

00:01:10.390 --> 00:01:10.400 align:start position:0%
when a user places an order which then
 

00:01:10.400 --> 00:01:11.990 align:start position:0%
when a user places an order which then
triggers<00:01:10.720><c> a</c><00:01:10.880><c> serverless</c><00:01:11.360><c> function</c><00:01:11.760><c> to</c>

00:01:11.990 --> 00:01:12.000 align:start position:0%
triggers a serverless function to
 

00:01:12.000 --> 00:01:14.230 align:start position:0%
triggers a serverless function to
send<00:01:12.240><c> an</c><00:01:12.479><c> email</c><00:01:12.799><c> confirmation</c><00:01:13.600><c> or</c><00:01:13.840><c> maybe</c><00:01:14.080><c> an</c>

00:01:14.230 --> 00:01:14.240 align:start position:0%
send an email confirmation or maybe an
 

00:01:14.240 --> 00:01:16.469 align:start position:0%
send an email confirmation or maybe an
iot<00:01:14.640><c> event</c><00:01:15.040><c> on</c><00:01:15.200><c> a</c><00:01:15.280><c> home</c><00:01:15.520><c> security</c><00:01:16.000><c> system</c>

00:01:16.469 --> 00:01:16.479 align:start position:0%
iot event on a home security system
 

00:01:16.479 --> 00:01:18.390 align:start position:0%
iot event on a home security system
invokes<00:01:16.880><c> a</c><00:01:17.040><c> function</c><00:01:17.520><c> that</c><00:01:17.759><c> sends</c><00:01:18.080><c> a</c><00:01:18.159><c> push</c>

00:01:18.390 --> 00:01:18.400 align:start position:0%
invokes a function that sends a push
 

00:01:18.400 --> 00:01:20.310 align:start position:0%
invokes a function that sends a push
notification<00:01:19.119><c> to</c><00:01:19.280><c> the</c><00:01:19.360><c> user's</c><00:01:19.759><c> device</c>

00:01:20.310 --> 00:01:20.320 align:start position:0%
notification to the user's device
 

00:01:20.320 --> 00:01:21.830 align:start position:0%
notification to the user's device
one<00:01:20.479><c> of</c><00:01:20.560><c> the</c><00:01:20.720><c> easiest</c><00:01:21.119><c> ways</c><00:01:21.280><c> to</c><00:01:21.360><c> get</c><00:01:21.520><c> started</c>

00:01:21.830 --> 00:01:21.840 align:start position:0%
one of the easiest ways to get started
 

00:01:21.840 --> 00:01:23.670 align:start position:0%
one of the easiest ways to get started
with<00:01:22.000><c> serverless</c><00:01:22.640><c> is</c><00:01:22.880><c> firebase</c><00:01:23.360><c> cloud</c>

00:01:23.670 --> 00:01:23.680 align:start position:0%
with serverless is firebase cloud
 

00:01:23.680 --> 00:01:25.270 align:start position:0%
with serverless is firebase cloud
functions<00:01:24.159><c> the</c><00:01:24.320><c> command</c><00:01:24.640><c> line</c><00:01:24.799><c> tool</c><00:01:25.119><c> will</c>

00:01:25.270 --> 00:01:25.280 align:start position:0%
functions the command line tool will
 

00:01:25.280 --> 00:01:26.230 align:start position:0%
functions the command line tool will
give<00:01:25.439><c> us</c><00:01:25.600><c> a</c><00:01:25.680><c> project</c>

00:01:26.230 --> 00:01:26.240 align:start position:0%
give us a project
 

00:01:26.240 --> 00:01:27.990 align:start position:0%
give us a project
that<00:01:26.479><c> looks</c><00:01:26.720><c> like</c><00:01:26.960><c> any</c><00:01:27.200><c> other</c><00:01:27.360><c> node.js</c>

00:01:27.990 --> 00:01:28.000 align:start position:0%
that looks like any other node.js
 

00:01:28.000 --> 00:01:30.550 align:start position:0%
that looks like any other node.js
backend<00:01:28.799><c> in</c><00:01:28.960><c> the</c><00:01:29.040><c> code</c><00:01:29.439><c> we</c><00:01:29.600><c> can</c><00:01:29.759><c> export</c><00:01:30.240><c> named</c>

00:01:30.550 --> 00:01:30.560 align:start position:0%
backend in the code we can export named
 

00:01:30.560 --> 00:01:31.190 align:start position:0%
backend in the code we can export named
functions

00:01:31.190 --> 00:01:31.200 align:start position:0%
functions
 

00:01:31.200 --> 00:01:33.190 align:start position:0%
functions
that<00:01:31.439><c> are</c><00:01:31.520><c> configured</c><00:01:32.159><c> to</c><00:01:32.400><c> run</c><00:01:32.640><c> on</c><00:01:32.880><c> different</c>

00:01:33.190 --> 00:01:33.200 align:start position:0%
that are configured to run on different
 

00:01:33.200 --> 00:01:34.950 align:start position:0%
that are configured to run on different
events<00:01:33.520><c> that</c><00:01:33.680><c> happen</c><00:01:34.000><c> in</c><00:01:34.079><c> google</c><00:01:34.400><c> cloud</c>

00:01:34.950 --> 00:01:34.960 align:start position:0%
events that happen in google cloud
 

00:01:34.960 --> 00:01:37.749 align:start position:0%
events that happen in google cloud
an<00:01:35.119><c> event</c><00:01:35.520><c> could</c><00:01:35.680><c> be</c><00:01:35.840><c> a</c><00:01:36.079><c> simple</c><00:01:36.479><c> http</c><00:01:37.200><c> request</c>

00:01:37.749 --> 00:01:37.759 align:start position:0%
an event could be a simple http request
 

00:01:37.759 --> 00:01:39.990 align:start position:0%
an event could be a simple http request
or<00:01:38.000><c> a</c><00:01:38.159><c> file</c><00:01:38.560><c> upload</c><00:01:39.040><c> database</c><00:01:39.600><c> write</c>

00:01:39.990 --> 00:01:40.000 align:start position:0%
or a file upload database write
 

00:01:40.000 --> 00:01:42.230 align:start position:0%
or a file upload database write
analytics<00:01:40.560><c> event</c><00:01:40.960><c> and</c><00:01:41.200><c> so</c><00:01:41.360><c> on</c><00:01:41.680><c> after</c><00:01:41.920><c> writing</c>

00:01:42.230 --> 00:01:42.240 align:start position:0%
analytics event and so on after writing
 

00:01:42.240 --> 00:01:43.749 align:start position:0%
analytics event and so on after writing
our<00:01:42.399><c> code</c><00:01:42.720><c> we</c><00:01:42.880><c> can</c><00:01:42.960><c> then</c><00:01:43.119><c> deploy</c><00:01:43.439><c> it</c><00:01:43.520><c> to</c>

00:01:43.749 --> 00:01:43.759 align:start position:0%
our code we can then deploy it to
 

00:01:43.759 --> 00:01:45.749 align:start position:0%
our code we can then deploy it to
production<00:01:44.320><c> with</c><00:01:44.560><c> a</c><00:01:44.720><c> single</c><00:01:44.960><c> command</c><00:01:45.439><c> and</c><00:01:45.600><c> we</c>

00:01:45.749 --> 00:01:45.759 align:start position:0%
production with a single command and we
 

00:01:45.759 --> 00:01:47.910 align:start position:0%
production with a single command and we
now<00:01:46.000><c> have</c><00:01:46.320><c> a</c><00:01:46.479><c> reliable</c><00:01:46.960><c> backend</c><00:01:47.439><c> that</c><00:01:47.680><c> is</c>

00:01:47.910 --> 00:01:47.920 align:start position:0%
now have a reliable backend that is
 

00:01:47.920 --> 00:01:48.870 align:start position:0%
now have a reliable backend that is
ready<00:01:48.159><c> to</c><00:01:48.320><c> scale</c>

00:01:48.870 --> 00:01:48.880 align:start position:0%
ready to scale
 

00:01:48.880 --> 00:01:51.190 align:start position:0%
ready to scale
this<00:01:49.040><c> has</c><00:01:49.200><c> been</c><00:01:49.360><c> serverless</c><00:01:50.000><c> in</c><00:01:50.159><c> 100</c><00:01:50.560><c> seconds</c>

00:01:51.190 --> 00:01:51.200 align:start position:0%
this has been serverless in 100 seconds
 

00:01:51.200 --> 00:01:52.870 align:start position:0%
this has been serverless in 100 seconds
but<00:01:51.360><c> if</c><00:01:51.439><c> that</c><00:01:51.680><c> sounded</c><00:01:51.920><c> too</c><00:01:52.079><c> good</c><00:01:52.240><c> to</c><00:01:52.320><c> be</c><00:01:52.399><c> true</c>

00:01:52.870 --> 00:01:52.880 align:start position:0%
but if that sounded too good to be true
 

00:01:52.880 --> 00:01:54.469 align:start position:0%
but if that sounded too good to be true
make<00:01:53.040><c> sure</c><00:01:53.200><c> to</c><00:01:53.439><c> stay</c><00:01:53.680><c> tuned</c><00:01:54.079><c> because</c><00:01:54.320><c> i've</c>

00:01:54.469 --> 00:01:54.479 align:start position:0%
make sure to stay tuned because i've
 

00:01:54.479 --> 00:01:56.389 align:start position:0%
make sure to stay tuned because i've
invited<00:01:54.960><c> dane</c><00:01:55.360><c> from</c><00:01:55.520><c> the</c><00:01:55.680><c> filled</c><00:01:55.920><c> stacks</c>

00:01:56.389 --> 00:01:56.399 align:start position:0%
invited dane from the filled stacks
 

00:01:56.399 --> 00:01:58.230 align:start position:0%
invited dane from the filled stacks
youtube<00:01:56.719><c> channel</c><00:01:57.119><c> to</c><00:01:57.360><c> show</c><00:01:57.600><c> us</c><00:01:57.680><c> how</c><00:01:57.840><c> to</c><00:01:58.000><c> build</c>

00:01:58.230 --> 00:01:58.240 align:start position:0%
youtube channel to show us how to build
 

00:01:58.240 --> 00:02:00.709 align:start position:0%
youtube channel to show us how to build
a<00:01:58.399><c> serverless</c><00:01:58.880><c> backend</c><00:01:59.439><c> for</c><00:01:59.680><c> a</c><00:01:59.920><c> big</c><00:02:00.159><c> complex</c>

00:02:00.709 --> 00:02:00.719 align:start position:0%
a serverless backend for a big complex
 

00:02:00.719 --> 00:02:01.270 align:start position:0%
a serverless backend for a big complex
project

00:02:01.270 --> 00:02:01.280 align:start position:0%
project
 

00:02:01.280 --> 00:02:02.389 align:start position:0%
project
if<00:02:01.360><c> you're</c><00:02:01.520><c> building</c><00:02:01.920><c> anything</c><00:02:02.240><c> with</c>

00:02:02.389 --> 00:02:02.399 align:start position:0%
if you're building anything with
 

00:02:02.399 --> 00:02:04.230 align:start position:0%
if you're building anything with
firebase<00:02:02.960><c> or</c><00:02:03.119><c> flutter</c><00:02:03.600><c> you'll</c><00:02:03.840><c> definitely</c>

00:02:04.230 --> 00:02:04.240 align:start position:0%
firebase or flutter you'll definitely
 

00:02:04.240 --> 00:02:05.990 align:start position:0%
firebase or flutter you'll definitely
want<00:02:04.479><c> to</c><00:02:04.719><c> follow</c><00:02:05.040><c> his</c><00:02:05.200><c> work</c>

00:02:05.990 --> 00:02:06.000 align:start position:0%
want to follow his work
 

00:02:06.000 --> 00:02:08.150 align:start position:0%
want to follow his work
hey<00:02:06.240><c> there</c><00:02:06.719><c> my</c><00:02:06.880><c> name</c><00:02:07.119><c> is</c><00:02:07.280><c> dane</c><00:02:07.600><c> and</c><00:02:07.759><c> i</c><00:02:07.840><c> run</c><00:02:08.080><c> a</c>

00:02:08.150 --> 00:02:08.160 align:start position:0%
hey there my name is dane and i run a
 

00:02:08.160 --> 00:02:09.669 align:start position:0%
hey there my name is dane and i run a
little<00:02:08.479><c> youtube</c><00:02:08.879><c> channel</c><00:02:09.200><c> called</c>

00:02:09.669 --> 00:02:09.679 align:start position:0%
little youtube channel called
 

00:02:09.679 --> 00:02:11.910 align:start position:0%
little youtube channel called
falstax<00:02:10.479><c> that's</c><00:02:10.800><c> focused</c><00:02:11.200><c> on</c><00:02:11.440><c> sharing</c><00:02:11.760><c> the</c>

00:02:11.910 --> 00:02:11.920 align:start position:0%
falstax that's focused on sharing the
 

00:02:11.920 --> 00:02:13.350 align:start position:0%
falstax that's focused on sharing the
code<00:02:12.239><c> that</c><00:02:12.400><c> we</c><00:02:12.560><c> use</c><00:02:12.800><c> to</c><00:02:12.959><c> build</c>

00:02:13.350 --> 00:02:13.360 align:start position:0%
code that we use to build
 

00:02:13.360 --> 00:02:15.910 align:start position:0%
code that we use to build
apps<00:02:13.599><c> for</c><00:02:13.840><c> our</c><00:02:14.000><c> clients</c><00:02:14.800><c> over</c><00:02:15.120><c> on</c><00:02:15.280><c> my</c><00:02:15.440><c> channel</c>

00:02:15.910 --> 00:02:15.920 align:start position:0%
apps for our clients over on my channel
 

00:02:15.920 --> 00:02:17.830 align:start position:0%
apps for our clients over on my channel
we<00:02:16.080><c> are</c><00:02:16.160><c> building</c><00:02:16.640><c> a</c><00:02:16.879><c> product</c><00:02:17.360><c> called</c>

00:02:17.830 --> 00:02:17.840 align:start position:0%
we are building a product called
 

00:02:17.840 --> 00:02:20.390 align:start position:0%
we are building a product called
boxed<00:02:18.239><c> out</c><00:02:18.640><c> a</c><00:02:18.800><c> set</c><00:02:19.040><c> of</c><00:02:19.200><c> software</c><00:02:19.760><c> built</c><00:02:20.080><c> for</c><00:02:20.319><c> a</c>

00:02:20.390 --> 00:02:20.400 align:start position:0%
boxed out a set of software built for a
 

00:02:20.400 --> 00:02:22.070 align:start position:0%
boxed out a set of software built for a
company<00:02:20.879><c> that</c><00:02:21.040><c> wants</c><00:02:21.280><c> to</c><00:02:21.440><c> run</c><00:02:21.760><c> a</c>

00:02:22.070 --> 00:02:22.080 align:start position:0%
company that wants to run a
 

00:02:22.080 --> 00:02:24.309 align:start position:0%
company that wants to run a
product<00:02:22.560><c> or</c><00:02:22.800><c> food</c><00:02:23.120><c> delivery</c><00:02:23.680><c> service</c>

00:02:24.309 --> 00:02:24.319 align:start position:0%
product or food delivery service
 

00:02:24.319 --> 00:02:25.750 align:start position:0%
product or food delivery service
building<00:02:24.720><c> one</c><00:02:24.879><c> cloud</c><00:02:25.280><c> function</c>

00:02:25.750 --> 00:02:25.760 align:start position:0%
building one cloud function
 

00:02:25.760 --> 00:02:28.229 align:start position:0%
building one cloud function
is<00:02:26.000><c> easy</c><00:02:26.800><c> but</c><00:02:26.959><c> how</c><00:02:27.120><c> do</c><00:02:27.280><c> you</c><00:02:27.360><c> structure</c><00:02:27.840><c> dozens</c>

00:02:28.229 --> 00:02:28.239 align:start position:0%
is easy but how do you structure dozens
 

00:02:28.239 --> 00:02:30.150 align:start position:0%
is easy but how do you structure dozens
of<00:02:28.400><c> functions</c><00:02:28.879><c> to</c><00:02:29.040><c> scale</c><00:02:29.360><c> to</c><00:02:29.520><c> real</c><00:02:29.760><c> world</c>

00:02:30.150 --> 00:02:30.160 align:start position:0%
of functions to scale to real world
 

00:02:30.160 --> 00:02:32.229 align:start position:0%
of functions to scale to real world
demands<00:02:30.959><c> how</c><00:02:31.120><c> do</c><00:02:31.200><c> you</c><00:02:31.360><c> ensure</c><00:02:31.680><c> you</c><00:02:31.840><c> have</c><00:02:32.080><c> a</c>

00:02:32.229 --> 00:02:32.239 align:start position:0%
demands how do you ensure you have a
 

00:02:32.239 --> 00:02:33.830 align:start position:0%
demands how do you ensure you have a
structured<00:02:32.800><c> and</c><00:02:32.959><c> maintainable</c>

00:02:33.830 --> 00:02:33.840 align:start position:0%
structured and maintainable
 

00:02:33.840 --> 00:02:36.070 align:start position:0%
structured and maintainable
backend<00:02:34.640><c> how</c><00:02:34.800><c> does</c><00:02:35.040><c> a</c><00:02:35.120><c> back-end</c><00:02:35.519><c> with</c><00:02:35.760><c> only</c>

00:02:36.070 --> 00:02:36.080 align:start position:0%
backend how does a back-end with only
 

00:02:36.080 --> 00:02:37.910 align:start position:0%
backend how does a back-end with only
serverless<00:02:36.640><c> functions</c><00:02:37.200><c> look</c>

00:02:37.910 --> 00:02:37.920 align:start position:0%
serverless functions look
 

00:02:37.920 --> 00:02:39.589 align:start position:0%
serverless functions look
over<00:02:38.160><c> the</c><00:02:38.319><c> next</c><00:02:38.560><c> 15</c><00:02:38.879><c> minutes</c><00:02:39.200><c> you'll</c><00:02:39.360><c> learn</c>

00:02:39.589 --> 00:02:39.599 align:start position:0%
over the next 15 minutes you'll learn
 

00:02:39.599 --> 00:02:41.670 align:start position:0%
over the next 15 minutes you'll learn
how<00:02:39.760><c> to</c><00:02:39.920><c> build</c><00:02:40.160><c> a</c><00:02:40.400><c> serverless</c><00:02:40.959><c> backend</c><00:02:41.440><c> for</c>

00:02:41.670 --> 00:02:41.680 align:start position:0%
how to build a serverless backend for
 

00:02:41.680 --> 00:02:42.949 align:start position:0%
how to build a serverless backend for
non-trivial<00:02:42.400><c> apps</c>

00:02:42.949 --> 00:02:42.959 align:start position:0%
non-trivial apps
 

00:02:42.959 --> 00:02:44.390 align:start position:0%
non-trivial apps
i'd<00:02:43.120><c> like</c><00:02:43.280><c> to</c><00:02:43.360><c> start</c><00:02:43.599><c> out</c><00:02:43.760><c> by</c><00:02:43.920><c> taking</c><00:02:44.239><c> you</c>

00:02:44.390 --> 00:02:44.400 align:start position:0%
i'd like to start out by taking you
 

00:02:44.400 --> 00:02:46.390 align:start position:0%
i'd like to start out by taking you
through<00:02:44.640><c> a</c><00:02:44.800><c> high-level</c><00:02:45.280><c> overview</c><00:02:45.920><c> of</c><00:02:46.080><c> how</c><00:02:46.239><c> the</c>

00:02:46.390 --> 00:02:46.400 align:start position:0%
through a high-level overview of how the
 

00:02:46.400 --> 00:02:47.830 align:start position:0%
through a high-level overview of how the
back-end<00:02:46.879><c> will</c><00:02:47.040><c> be</c><00:02:47.200><c> set</c><00:02:47.519><c> up</c>

00:02:47.830 --> 00:02:47.840 align:start position:0%
back-end will be set up
 

00:02:47.840 --> 00:02:49.910 align:start position:0%
back-end will be set up
this<00:02:48.080><c> overview</c><00:02:48.560><c> will</c><00:02:48.800><c> go</c><00:02:49.040><c> over</c><00:02:49.280><c> the</c><00:02:49.440><c> types</c><00:02:49.760><c> of</c>

00:02:49.910 --> 00:02:49.920 align:start position:0%
this overview will go over the types of
 

00:02:49.920 --> 00:02:50.949 align:start position:0%
this overview will go over the types of
functions<00:02:50.400><c> we</c><00:02:50.560><c> use</c>

00:02:50.949 --> 00:02:50.959 align:start position:0%
functions we use
 

00:02:50.959 --> 00:02:53.589 align:start position:0%
functions we use
as<00:02:51.200><c> well</c><00:02:51.519><c> as</c><00:02:51.680><c> the</c><00:02:51.920><c> actual</c><00:02:52.319><c> code</c><00:02:52.800><c> structure</c><00:02:53.440><c> the</c>

00:02:53.589 --> 00:02:53.599 align:start position:0%
as well as the actual code structure the
 

00:02:53.599 --> 00:02:55.910 align:start position:0%
as well as the actual code structure the
backend<00:02:54.080><c> is</c><00:02:54.239><c> bold</c><00:02:54.640><c> around</c><00:02:55.040><c> the</c><00:02:55.280><c> strings</c><00:02:55.680><c> that</c>

00:02:55.910 --> 00:02:55.920 align:start position:0%
backend is bold around the strings that
 

00:02:55.920 --> 00:02:57.030 align:start position:0%
backend is bold around the strings that
firebase<00:02:56.480><c> possess</c>

00:02:57.030 --> 00:02:57.040 align:start position:0%
firebase possess
 

00:02:57.040 --> 00:02:59.509 align:start position:0%
firebase possess
in<00:02:57.200><c> the</c><00:02:57.440><c> serverless</c><00:02:58.000><c> cloud</c><00:02:58.319><c> functions</c><00:02:58.959><c> setup</c>

00:02:59.509 --> 00:02:59.519 align:start position:0%
in the serverless cloud functions setup
 

00:02:59.519 --> 00:03:00.869 align:start position:0%
in the serverless cloud functions setup
focusing<00:03:00.000><c> on</c><00:03:00.080><c> those</c><00:03:00.319><c> strings</c>

00:03:00.869 --> 00:03:00.879 align:start position:0%
focusing on those strings
 

00:03:00.879 --> 00:03:02.869 align:start position:0%
focusing on those strings
we<00:03:01.040><c> can</c><00:03:01.280><c> break</c><00:03:01.519><c> the</c><00:03:01.599><c> system</c><00:03:02.000><c> into</c><00:03:02.319><c> two</c><00:03:02.560><c> types</c>

00:03:02.869 --> 00:03:02.879 align:start position:0%
we can break the system into two types
 

00:03:02.879 --> 00:03:03.990 align:start position:0%
we can break the system into two types
of<00:03:03.120><c> functions</c>

00:03:03.990 --> 00:03:04.000 align:start position:0%
of functions
 

00:03:04.000 --> 00:03:06.309 align:start position:0%
of functions
the<00:03:04.159><c> two</c><00:03:04.400><c> types</c><00:03:04.640><c> of</c><00:03:04.720><c> functions</c><00:03:05.440><c> are</c><00:03:05.599><c> restful</c>

00:03:06.309 --> 00:03:06.319 align:start position:0%
the two types of functions are restful
 

00:03:06.319 --> 00:03:07.430 align:start position:0%
the two types of functions are restful
and<00:03:06.560><c> reactive</c>

00:03:07.430 --> 00:03:07.440 align:start position:0%
and reactive
 

00:03:07.440 --> 00:03:09.750 align:start position:0%
and reactive
a<00:03:07.599><c> reactive</c><00:03:08.080><c> function</c><00:03:08.720><c> is</c><00:03:08.959><c> a</c><00:03:09.040><c> function</c><00:03:09.519><c> that</c>

00:03:09.750 --> 00:03:09.760 align:start position:0%
a reactive function is a function that
 

00:03:09.760 --> 00:03:10.790 align:start position:0%
a reactive function is a function that
will<00:03:10.080><c> only</c><00:03:10.400><c> run</c>

00:03:10.790 --> 00:03:10.800 align:start position:0%
will only run
 

00:03:10.800 --> 00:03:13.910 align:start position:0%
will only run
in<00:03:10.959><c> reaction</c><00:03:11.599><c> to</c><00:03:12.239><c> data</c><00:03:12.879><c> or</c><00:03:13.120><c> state</c><00:03:13.680><c> that's</c>

00:03:13.910 --> 00:03:13.920 align:start position:0%
in reaction to data or state that's
 

00:03:13.920 --> 00:03:15.830 align:start position:0%
in reaction to data or state that's
being<00:03:14.239><c> updated</c><00:03:14.800><c> on</c><00:03:14.959><c> the</c><00:03:15.120><c> back</c><00:03:15.360><c> end</c>

00:03:15.830 --> 00:03:15.840 align:start position:0%
being updated on the back end
 

00:03:15.840 --> 00:03:17.830 align:start position:0%
being updated on the back end
an<00:03:16.080><c> example</c><00:03:16.480><c> of</c><00:03:16.560><c> this</c><00:03:16.800><c> will</c><00:03:16.959><c> be</c><00:03:17.120><c> when</c><00:03:17.360><c> a</c><00:03:17.519><c> file</c>

00:03:17.830 --> 00:03:17.840 align:start position:0%
an example of this will be when a file
 

00:03:17.840 --> 00:03:19.670 align:start position:0%
an example of this will be when a file
is<00:03:18.000><c> uploaded</c><00:03:18.480><c> to</c><00:03:18.720><c> cloud</c><00:03:19.040><c> storage</c>

00:03:19.670 --> 00:03:19.680 align:start position:0%
is uploaded to cloud storage
 

00:03:19.680 --> 00:03:22.470 align:start position:0%
is uploaded to cloud storage
or<00:03:19.840><c> the</c><00:03:20.000><c> most</c><00:03:20.239><c> common</c><00:03:20.720><c> when</c><00:03:21.040><c> a</c><00:03:21.280><c> document</c><00:03:22.080><c> or</c><00:03:22.239><c> an</c>

00:03:22.470 --> 00:03:22.480 align:start position:0%
or the most common when a document or an
 

00:03:22.480 --> 00:03:24.949 align:start position:0%
or the most common when a document or an
entry<00:03:22.879><c> in</c><00:03:22.959><c> the</c><00:03:23.120><c> database</c><00:03:23.680><c> has</c><00:03:23.920><c> been</c><00:03:24.239><c> updated</c><00:03:24.799><c> a</c>

00:03:24.949 --> 00:03:24.959 align:start position:0%
entry in the database has been updated a
 

00:03:24.959 --> 00:03:26.949 align:start position:0%
entry in the database has been updated a
restful<00:03:25.360><c> function</c><00:03:25.840><c> is</c><00:03:26.000><c> a</c><00:03:26.159><c> traditional</c>

00:03:26.949 --> 00:03:26.959 align:start position:0%
restful function is a traditional
 

00:03:26.959 --> 00:03:29.509 align:start position:0%
restful function is a traditional
restful<00:03:27.440><c> function</c><00:03:28.080><c> which</c><00:03:28.319><c> will</c><00:03:28.560><c> run</c><00:03:28.959><c> when</c><00:03:29.360><c> a</c>

00:03:29.509 --> 00:03:29.519 align:start position:0%
restful function which will run when a
 

00:03:29.519 --> 00:03:31.990 align:start position:0%
restful function which will run when a
client<00:03:30.000><c> makes</c><00:03:30.319><c> an</c><00:03:30.560><c> http</c><00:03:31.360><c> request</c>

00:03:31.990 --> 00:03:32.000 align:start position:0%
client makes an http request
 

00:03:32.000 --> 00:03:34.229 align:start position:0%
client makes an http request
to<00:03:32.159><c> the</c><00:03:32.239><c> uri</c><00:03:32.879><c> that</c><00:03:33.040><c> the</c><00:03:33.200><c> function</c><00:03:33.599><c> is</c><00:03:33.840><c> assigned</c>

00:03:34.229 --> 00:03:34.239 align:start position:0%
to the uri that the function is assigned
 

00:03:34.239 --> 00:03:35.750 align:start position:0%
to the uri that the function is assigned
to<00:03:34.560><c> now</c><00:03:34.799><c> we</c><00:03:34.879><c> can</c><00:03:34.959><c> move</c><00:03:35.200><c> on</c><00:03:35.440><c> to</c>

00:03:35.750 --> 00:03:35.760 align:start position:0%
to now we can move on to
 

00:03:35.760 --> 00:03:38.390 align:start position:0%
to now we can move on to
the<00:03:36.000><c> code</c><00:03:36.480><c> structure</c><00:03:37.360><c> we</c><00:03:37.519><c> have</c><00:03:37.599><c> an</c><00:03:37.760><c> enforced</c>

00:03:38.390 --> 00:03:38.400 align:start position:0%
the code structure we have an enforced
 

00:03:38.400 --> 00:03:39.350 align:start position:0%
the code structure we have an enforced
code<00:03:38.720><c> structure</c>

00:03:39.350 --> 00:03:39.360 align:start position:0%
code structure
 

00:03:39.360 --> 00:03:41.589 align:start position:0%
code structure
that<00:03:39.599><c> will</c><00:03:39.840><c> help</c><00:03:40.080><c> with</c><00:03:40.400><c> organization</c><00:03:41.200><c> of</c><00:03:41.360><c> the</c>

00:03:41.589 --> 00:03:41.599 align:start position:0%
that will help with organization of the
 

00:03:41.599 --> 00:03:43.589 align:start position:0%
that will help with organization of the
backend<00:03:42.239><c> as</c><00:03:42.400><c> well</c><00:03:42.720><c> as</c><00:03:42.879><c> the</c><00:03:43.120><c> overall</c>

00:03:43.589 --> 00:03:43.599 align:start position:0%
backend as well as the overall
 

00:03:43.599 --> 00:03:45.110 align:start position:0%
backend as well as the overall
maintenance<00:03:44.239><c> as</c><00:03:44.400><c> it</c><00:03:44.560><c> grows</c>

00:03:45.110 --> 00:03:45.120 align:start position:0%
maintenance as it grows
 

00:03:45.120 --> 00:03:47.110 align:start position:0%
maintenance as it grows
there's<00:03:45.360><c> three</c><00:03:45.599><c> major</c><00:03:46.000><c> things</c><00:03:46.239><c> to</c><00:03:46.400><c> go</c><00:03:46.640><c> over</c>

00:03:47.110 --> 00:03:47.120 align:start position:0%
there's three major things to go over
 

00:03:47.120 --> 00:03:49.270 align:start position:0%
there's three major things to go over
number<00:03:47.440><c> one</c><00:03:47.920><c> each</c><00:03:48.319><c> function</c><00:03:48.799><c> will</c><00:03:48.959><c> be</c>

00:03:49.270 --> 00:03:49.280 align:start position:0%
number one each function will be
 

00:03:49.280 --> 00:03:52.149 align:start position:0%
number one each function will be
in<00:03:49.440><c> its</c><00:03:49.680><c> own</c><00:03:50.080><c> dedicated</c><00:03:50.879><c> file</c><00:03:51.440><c> this</c><00:03:51.680><c> is</c><00:03:51.840><c> to</c><00:03:51.920><c> get</c>

00:03:52.149 --> 00:03:52.159 align:start position:0%
in its own dedicated file this is to get
 

00:03:52.159 --> 00:03:53.509 align:start position:0%
in its own dedicated file this is to get
rid<00:03:52.400><c> of</c><00:03:52.560><c> the</c><00:03:52.799><c> natural</c>

00:03:53.509 --> 00:03:53.519 align:start position:0%
rid of the natural
 

00:03:53.519 --> 00:03:55.429 align:start position:0%
rid of the natural
tendency<00:03:54.239><c> when</c><00:03:54.480><c> starting</c><00:03:54.799><c> with</c><00:03:54.959><c> firebase</c>

00:03:55.429 --> 00:03:55.439 align:start position:0%
tendency when starting with firebase
 

00:03:55.439 --> 00:03:56.630 align:start position:0%
tendency when starting with firebase
cloud<00:03:55.760><c> functions</c>

00:03:56.630 --> 00:03:56.640 align:start position:0%
cloud functions
 

00:03:56.640 --> 00:03:58.869 align:start position:0%
cloud functions
to<00:03:56.799><c> keep</c><00:03:57.120><c> adding</c><00:03:57.519><c> functions</c><00:03:58.080><c> into</c><00:03:58.319><c> the</c><00:03:58.480><c> same</c>

00:03:58.869 --> 00:03:58.879 align:start position:0%
to keep adding functions into the same
 

00:03:58.879 --> 00:04:01.110 align:start position:0%
to keep adding functions into the same
index<00:03:59.280><c> file</c><00:03:59.599><c> forcing</c><00:04:00.000><c> it</c><00:04:00.080><c> to</c><00:04:00.159><c> grow</c><00:04:00.480><c> bigger</c><00:04:00.879><c> as</c>

00:04:01.110 --> 00:04:01.120 align:start position:0%
index file forcing it to grow bigger as
 

00:04:01.120 --> 00:04:03.110 align:start position:0%
index file forcing it to grow bigger as
your<00:04:01.360><c> backend</c><00:04:01.840><c> requirements</c><00:04:02.560><c> grow</c>

00:04:03.110 --> 00:04:03.120 align:start position:0%
your backend requirements grow
 

00:04:03.120 --> 00:04:05.350 align:start position:0%
your backend requirements grow
and<00:04:03.280><c> as</c><00:04:03.439><c> a</c><00:04:03.519><c> note</c><00:04:03.920><c> the</c><00:04:04.080><c> file</c><00:04:04.400><c> name</c><00:04:04.799><c> will</c><00:04:04.959><c> be</c><00:04:05.120><c> the</c>

00:04:05.350 --> 00:04:05.360 align:start position:0%
and as a note the file name will be the
 

00:04:05.360 --> 00:04:06.149 align:start position:0%
and as a note the file name will be the
exact<00:04:05.760><c> name</c>

00:04:06.149 --> 00:04:06.159 align:start position:0%
exact name
 

00:04:06.159 --> 00:04:08.309 align:start position:0%
exact name
of<00:04:06.319><c> the</c><00:04:06.640><c> endpoint</c><00:04:07.280><c> or</c><00:04:07.439><c> function</c><00:04:07.920><c> to</c><00:04:08.080><c> keep</c>

00:04:08.309 --> 00:04:08.319 align:start position:0%
of the endpoint or function to keep
 

00:04:08.319 --> 00:04:09.670 align:start position:0%
of the endpoint or function to keep
things<00:04:08.640><c> easy</c><00:04:08.879><c> to</c><00:04:09.040><c> manage</c>

00:04:09.670 --> 00:04:09.680 align:start position:0%
things easy to manage
 

00:04:09.680 --> 00:04:11.589 align:start position:0%
things easy to manage
this<00:04:09.920><c> is</c><00:04:10.000><c> not</c><00:04:10.159><c> a</c><00:04:10.239><c> requirement</c><00:04:10.879><c> but</c><00:04:11.120><c> i</c><00:04:11.200><c> found</c><00:04:11.519><c> it</c>

00:04:11.589 --> 00:04:11.599 align:start position:0%
this is not a requirement but i found it
 

00:04:11.599 --> 00:04:13.110 align:start position:0%
this is not a requirement but i found it
to<00:04:11.760><c> be</c><00:04:12.000><c> quite</c><00:04:12.400><c> useful</c>

00:04:13.110 --> 00:04:13.120 align:start position:0%
to be quite useful
 

00:04:13.120 --> 00:04:15.509 align:start position:0%
to be quite useful
number<00:04:13.439><c> two</c><00:04:13.920><c> functions</c><00:04:14.400><c> will</c><00:04:14.560><c> be</c><00:04:14.720><c> placed</c><00:04:15.200><c> in</c><00:04:15.360><c> a</c>

00:04:15.509 --> 00:04:15.519 align:start position:0%
number two functions will be placed in a
 

00:04:15.519 --> 00:04:18.629 align:start position:0%
number two functions will be placed in a
folder<00:04:16.079><c> titled</c><00:04:16.639><c> either</c><00:04:16.959><c> restful</c><00:04:17.600><c> or</c><00:04:17.759><c> reactive</c>

00:04:18.629 --> 00:04:18.639 align:start position:0%
folder titled either restful or reactive
 

00:04:18.639 --> 00:04:20.710 align:start position:0%
folder titled either restful or reactive
number<00:04:18.959><c> three</c><00:04:19.359><c> the</c><00:04:19.519><c> backend</c><00:04:20.000><c> will</c><00:04:20.160><c> be</c><00:04:20.320><c> split</c>

00:04:20.710 --> 00:04:20.720 align:start position:0%
number three the backend will be split
 

00:04:20.720 --> 00:04:23.030 align:start position:0%
number three the backend will be split
into<00:04:21.040><c> different</c><00:04:21.600><c> resource</c><00:04:22.079><c> groups</c><00:04:22.400><c> to</c><00:04:22.560><c> ensure</c>

00:04:23.030 --> 00:04:23.040 align:start position:0%
into different resource groups to ensure
 

00:04:23.040 --> 00:04:25.510 align:start position:0%
into different resource groups to ensure
a<00:04:23.280><c> structured</c><00:04:23.919><c> backend</c><00:04:24.479><c> in</c><00:04:24.720><c> production</c>

00:04:25.510 --> 00:04:25.520 align:start position:0%
a structured backend in production
 

00:04:25.520 --> 00:04:27.350 align:start position:0%
a structured backend in production
as<00:04:25.680><c> a</c><00:04:25.759><c> quick</c><00:04:26.000><c> example</c><00:04:26.479><c> of</c><00:04:26.560><c> this</c><00:04:26.800><c> we</c><00:04:26.960><c> can</c><00:04:27.199><c> look</c>

00:04:27.350 --> 00:04:27.360 align:start position:0%
as a quick example of this we can look
 

00:04:27.360 --> 00:04:29.189 align:start position:0%
as a quick example of this we can look
at<00:04:27.520><c> the</c><00:04:27.600><c> code</c><00:04:28.000><c> structure</c><00:04:28.400><c> below</c><00:04:28.800><c> for</c><00:04:28.960><c> the</c>

00:04:29.189 --> 00:04:29.199 align:start position:0%
at the code structure below for the
 

00:04:29.199 --> 00:04:31.430 align:start position:0%
at the code structure below for the
product<00:04:29.600><c> delivery</c><00:04:30.160><c> service</c><00:04:30.720><c> backend</c>

00:04:31.430 --> 00:04:31.440 align:start position:0%
product delivery service backend
 

00:04:31.440 --> 00:04:34.070 align:start position:0%
product delivery service backend
there<00:04:31.600><c> are</c><00:04:31.759><c> three</c><00:04:32.080><c> resource</c><00:04:32.560><c> groups</c><00:04:33.199><c> orders</c>

00:04:34.070 --> 00:04:34.080 align:start position:0%
there are three resource groups orders
 

00:04:34.080 --> 00:04:34.790 align:start position:0%
there are three resource groups orders
payments

00:04:34.790 --> 00:04:34.800 align:start position:0%
payments
 

00:04:34.800 --> 00:04:37.189 align:start position:0%
payments
and<00:04:35.040><c> users</c><00:04:35.919><c> and</c><00:04:36.080><c> in</c><00:04:36.240><c> each</c><00:04:36.400><c> of</c><00:04:36.479><c> those</c><00:04:36.800><c> resource</c>

00:04:37.189 --> 00:04:37.199 align:start position:0%
and users and in each of those resource
 

00:04:37.199 --> 00:04:38.469 align:start position:0%
and users and in each of those resource
groups<00:04:37.440><c> we</c><00:04:37.520><c> are</c><00:04:37.680><c> very</c><00:04:37.919><c> active</c>

00:04:38.469 --> 00:04:38.479 align:start position:0%
groups we are very active
 

00:04:38.479 --> 00:04:40.469 align:start position:0%
groups we are very active
and<00:04:38.720><c> a</c><00:04:38.880><c> restful</c><00:04:39.360><c> folder</c><00:04:39.840><c> this</c><00:04:40.000><c> is</c><00:04:40.080><c> the</c><00:04:40.240><c> only</c>

00:04:40.469 --> 00:04:40.479 align:start position:0%
and a restful folder this is the only
 

00:04:40.479 --> 00:04:42.310 align:start position:0%
and a restful folder this is the only
folder<00:04:40.800><c> structure</c><00:04:41.280><c> that</c><00:04:41.440><c> you</c><00:04:41.600><c> would</c><00:04:41.840><c> need</c>

00:04:42.310 --> 00:04:42.320 align:start position:0%
folder structure that you would need
 

00:04:42.320 --> 00:04:44.310 align:start position:0%
folder structure that you would need
the<00:04:42.479><c> rest</c><00:04:42.880><c> is</c><00:04:43.040><c> handled</c><00:04:43.520><c> by</c><00:04:43.680><c> the</c><00:04:43.840><c> fact</c><00:04:44.080><c> that</c>

00:04:44.310 --> 00:04:44.320 align:start position:0%
the rest is handled by the fact that
 

00:04:44.320 --> 00:04:45.670 align:start position:0%
the rest is handled by the fact that
each<00:04:44.560><c> of</c><00:04:44.639><c> the</c><00:04:44.800><c> files</c><00:04:45.199><c> will</c><00:04:45.360><c> be</c>

00:04:45.670 --> 00:04:45.680 align:start position:0%
each of the files will be
 

00:04:45.680 --> 00:04:48.150 align:start position:0%
each of the files will be
its<00:04:45.919><c> own</c><00:04:46.320><c> function</c><00:04:47.199><c> now</c><00:04:47.360><c> that</c><00:04:47.520><c> you</c><00:04:47.680><c> have</c><00:04:48.000><c> a</c>

00:04:48.150 --> 00:04:48.160 align:start position:0%
its own function now that you have a
 

00:04:48.160 --> 00:04:50.310 align:start position:0%
its own function now that you have a
basic<00:04:48.560><c> overview</c><00:04:49.040><c> of</c><00:04:49.199><c> the</c><00:04:49.360><c> code</c><00:04:49.680><c> setup</c>

00:04:50.310 --> 00:04:50.320 align:start position:0%
basic overview of the code setup
 

00:04:50.320 --> 00:04:52.390 align:start position:0%
basic overview of the code setup
let's<00:04:50.560><c> start</c><00:04:51.199><c> with</c><00:04:51.440><c> the</c><00:04:51.680><c> actual</c>

00:04:52.390 --> 00:04:52.400 align:start position:0%
let's start with the actual
 

00:04:52.400 --> 00:04:53.909 align:start position:0%
let's start with the actual
implementation

00:04:53.909 --> 00:04:53.919 align:start position:0%
implementation
 

00:04:53.919 --> 00:04:56.310 align:start position:0%
implementation
we'll<00:04:54.160><c> start</c><00:04:54.400><c> by</c><00:04:54.560><c> creating</c><00:04:55.120><c> a</c><00:04:55.199><c> new</c><00:04:55.520><c> folder</c>

00:04:56.310 --> 00:04:56.320 align:start position:0%
we'll start by creating a new folder
 

00:04:56.320 --> 00:04:57.590 align:start position:0%
we'll start by creating a new folder
called<00:04:56.720><c> boxed</c><00:04:57.199><c> out</c>

00:04:57.590 --> 00:04:57.600 align:start position:0%
called boxed out
 

00:04:57.600 --> 00:04:59.590 align:start position:0%
called boxed out
and<00:04:57.840><c> inside</c><00:04:58.160><c> that</c><00:04:58.320><c> folder</c><00:04:58.720><c> create</c><00:04:59.199><c> a</c><00:04:59.360><c> new</c>

00:04:59.590 --> 00:04:59.600 align:start position:0%
and inside that folder create a new
 

00:04:59.600 --> 00:05:01.270 align:start position:0%
and inside that folder create a new
folder<00:05:00.000><c> called</c><00:05:00.560><c> backend</c>

00:05:01.270 --> 00:05:01.280 align:start position:0%
folder called backend
 

00:05:01.280 --> 00:05:03.029 align:start position:0%
folder called backend
then<00:05:01.440><c> we</c><00:05:01.600><c> can</c><00:05:01.759><c> navigate</c><00:05:02.320><c> into</c><00:05:02.560><c> the</c><00:05:02.639><c> backend</c>

00:05:03.029 --> 00:05:03.039 align:start position:0%
then we can navigate into the backend
 

00:05:03.039 --> 00:05:04.790 align:start position:0%
then we can navigate into the backend
folder<00:05:03.440><c> and</c><00:05:03.680><c> run</c><00:05:04.080><c> firebase</c>

00:05:04.790 --> 00:05:04.800 align:start position:0%
folder and run firebase
 

00:05:04.800 --> 00:05:07.510 align:start position:0%
folder and run firebase
init<00:05:05.600><c> then</c><00:05:05.759><c> you</c><00:05:05.919><c> have</c><00:05:06.000><c> to</c><00:05:06.560><c> select</c><00:05:07.120><c> yes</c><00:05:07.360><c> to</c>

00:05:07.510 --> 00:05:07.520 align:start position:0%
init then you have to select yes to
 

00:05:07.520 --> 00:05:09.430 align:start position:0%
init then you have to select yes to
proceed<00:05:08.080><c> when</c><00:05:08.320><c> presented</c><00:05:08.960><c> with</c><00:05:09.199><c> the</c>

00:05:09.430 --> 00:05:09.440 align:start position:0%
proceed when presented with the
 

00:05:09.440 --> 00:05:10.870 align:start position:0%
proceed when presented with the
functions<00:05:10.080><c> to</c><00:05:10.320><c> select</c>

00:05:10.870 --> 00:05:10.880 align:start position:0%
functions to select
 

00:05:10.880 --> 00:05:13.670 align:start position:0%
functions to select
we'll<00:05:11.120><c> choose</c><00:05:11.680><c> firestore</c><00:05:12.560><c> functions</c><00:05:13.360><c> and</c>

00:05:13.670 --> 00:05:13.680 align:start position:0%
we'll choose firestore functions and
 

00:05:13.680 --> 00:05:14.550 align:start position:0%
we'll choose firestore functions and
emulators

00:05:14.550 --> 00:05:14.560 align:start position:0%
emulators
 

00:05:14.560 --> 00:05:16.390 align:start position:0%
emulators
then<00:05:14.800><c> we'll</c><00:05:15.039><c> choose</c><00:05:15.280><c> to</c><00:05:15.440><c> create</c><00:05:15.919><c> a</c><00:05:16.080><c> new</c>

00:05:16.390 --> 00:05:16.400 align:start position:0%
then we'll choose to create a new
 

00:05:16.400 --> 00:05:17.990 align:start position:0%
then we'll choose to create a new
project<00:05:17.039><c> and</c><00:05:17.199><c> we'll</c><00:05:17.360><c> call</c><00:05:17.680><c> out</c>

00:05:17.990 --> 00:05:18.000 align:start position:0%
project and we'll call out
 

00:05:18.000 --> 00:05:20.790 align:start position:0%
project and we'll call out
boxed<00:05:18.400><c> out</c><00:05:18.800><c> dash</c><00:05:19.360><c> backend</c><00:05:20.160><c> we'll</c><00:05:20.320><c> use</c><00:05:20.560><c> that</c>

00:05:20.790 --> 00:05:20.800 align:start position:0%
boxed out dash backend we'll use that
 

00:05:20.800 --> 00:05:22.390 align:start position:0%
boxed out dash backend we'll use that
same<00:05:21.039><c> name</c><00:05:21.440><c> for</c><00:05:21.600><c> the</c><00:05:21.840><c> project</c>

00:05:22.390 --> 00:05:22.400 align:start position:0%
same name for the project
 

00:05:22.400 --> 00:05:25.430 align:start position:0%
same name for the project
name<00:05:23.039><c> and</c><00:05:23.199><c> then</c><00:05:23.600><c> the</c><00:05:23.840><c> firestore</c><00:05:24.800><c> setup</c>

00:05:25.430 --> 00:05:25.440 align:start position:0%
name and then the firestore setup
 

00:05:25.440 --> 00:05:27.909 align:start position:0%
name and then the firestore setup
usually<00:05:26.080><c> fails</c><00:05:26.560><c> on</c><00:05:26.800><c> first</c><00:05:27.199><c> try</c><00:05:27.440><c> because</c><00:05:27.759><c> you</c>

00:05:27.909 --> 00:05:27.919 align:start position:0%
usually fails on first try because you
 

00:05:27.919 --> 00:05:29.430 align:start position:0%
usually fails on first try because you
have<00:05:28.080><c> to</c><00:05:28.320><c> click</c><00:05:28.639><c> on</c><00:05:28.800><c> the</c><00:05:29.039><c> get</c>

00:05:29.430 --> 00:05:29.440 align:start position:0%
have to click on the get
 

00:05:29.440 --> 00:05:32.550 align:start position:0%
have to click on the get
started<00:05:30.000><c> button</c><00:05:30.560><c> go</c><00:05:30.800><c> to</c><00:05:30.960><c> the</c><00:05:31.120><c> url</c><00:05:32.000><c> that</c><00:05:32.320><c> has</c>

00:05:32.550 --> 00:05:32.560 align:start position:0%
started button go to the url that has
 

00:05:32.560 --> 00:05:33.749 align:start position:0%
started button go to the url that has
been<00:05:32.800><c> handed</c><00:05:33.199><c> to</c><00:05:33.360><c> you</c>

00:05:33.749 --> 00:05:33.759 align:start position:0%
been handed to you
 

00:05:33.759 --> 00:05:36.550 align:start position:0%
been handed to you
you<00:05:34.000><c> end</c><00:05:34.160><c> up</c><00:05:34.320><c> on</c><00:05:34.479><c> the</c><00:05:34.639><c> cloud</c><00:05:35.280><c> firestore</c><00:05:36.000><c> page</c>

00:05:36.550 --> 00:05:36.560 align:start position:0%
you end up on the cloud firestore page
 

00:05:36.560 --> 00:05:38.070 align:start position:0%
you end up on the cloud firestore page
where<00:05:36.800><c> you</c><00:05:36.880><c> can</c><00:05:37.120><c> click</c><00:05:37.360><c> on</c><00:05:37.600><c> create</c>

00:05:38.070 --> 00:05:38.080 align:start position:0%
where you can click on create
 

00:05:38.080 --> 00:05:40.550 align:start position:0%
where you can click on create
database<00:05:39.039><c> for</c><00:05:39.199><c> now</c><00:05:39.440><c> we'll</c><00:05:39.600><c> start</c><00:05:40.000><c> in</c><00:05:40.240><c> test</c>

00:05:40.550 --> 00:05:40.560 align:start position:0%
database for now we'll start in test
 

00:05:40.560 --> 00:05:41.909 align:start position:0%
database for now we'll start in test
mode<00:05:40.880><c> i'm</c><00:05:41.120><c> going</c><00:05:41.280><c> to</c><00:05:41.440><c> select</c>

00:05:41.909 --> 00:05:41.919 align:start position:0%
mode i'm going to select
 

00:05:41.919 --> 00:05:44.310 align:start position:0%
mode i'm going to select
europe<00:05:42.400><c> west</c><00:05:42.800><c> because</c><00:05:43.039><c> i'm</c><00:05:43.199><c> in</c><00:05:43.360><c> africa</c><00:05:44.080><c> and</c>

00:05:44.310 --> 00:05:44.320 align:start position:0%
europe west because i'm in africa and
 

00:05:44.320 --> 00:05:45.670 align:start position:0%
europe west because i'm in africa and
once<00:05:44.639><c> that</c><00:05:44.880><c> is</c><00:05:44.960><c> complete</c>

00:05:45.670 --> 00:05:45.680 align:start position:0%
once that is complete
 

00:05:45.680 --> 00:05:48.469 align:start position:0%
once that is complete
go<00:05:45.919><c> back</c><00:05:46.320><c> to</c><00:05:46.479><c> your</c><00:05:47.199><c> command</c><00:05:47.680><c> line</c><00:05:48.000><c> shell</c><00:05:48.320><c> that</c>

00:05:48.469 --> 00:05:48.479 align:start position:0%
go back to your command line shell that
 

00:05:48.479 --> 00:05:49.430 align:start position:0%
go back to your command line shell that
you've<00:05:48.639><c> been</c><00:05:48.800><c> using</c>

00:05:49.430 --> 00:05:49.440 align:start position:0%
you've been using
 

00:05:49.440 --> 00:05:54.310 align:start position:0%
you've been using
then<00:05:49.680><c> we</c><00:05:49.840><c> can</c><00:05:50.000><c> run</c><00:05:50.400><c> firebase</c><00:05:51.039><c> init</c><00:05:51.440><c> again</c>

00:05:54.310 --> 00:05:54.320 align:start position:0%
 
 

00:05:54.320 --> 00:05:57.909 align:start position:0%
 
we'll<00:05:54.479><c> select</c><00:05:55.199><c> firestore</c><00:05:56.560><c> functions</c>

00:05:57.909 --> 00:05:57.919 align:start position:0%
we'll select firestore functions
 

00:05:57.919 --> 00:06:00.309 align:start position:0%
we'll select firestore functions
and<00:05:58.160><c> emulators</c><00:05:59.120><c> and</c><00:05:59.280><c> this</c><00:05:59.440><c> time</c><00:05:59.680><c> we'll</c><00:05:59.919><c> use</c><00:06:00.160><c> an</c>

00:06:00.309 --> 00:06:00.319 align:start position:0%
and emulators and this time we'll use an
 

00:06:00.319 --> 00:06:01.110 align:start position:0%
and emulators and this time we'll use an
existing

00:06:01.110 --> 00:06:01.120 align:start position:0%
existing
 

00:06:01.120 --> 00:06:04.230 align:start position:0%
existing
project<00:06:01.840><c> and</c><00:06:02.080><c> we'll</c><00:06:02.319><c> use</c><00:06:03.039><c> the</c><00:06:03.280><c> boxed</c><00:06:03.759><c> out</c>

00:06:04.230 --> 00:06:04.240 align:start position:0%
project and we'll use the boxed out
 

00:06:04.240 --> 00:06:06.469 align:start position:0%
project and we'll use the boxed out
backend<00:06:04.720><c> that</c><00:06:04.880><c> we</c><00:06:05.039><c> just</c><00:06:05.280><c> created</c><00:06:06.080><c> then</c><00:06:06.319><c> we'll</c>

00:06:06.469 --> 00:06:06.479 align:start position:0%
backend that we just created then we'll
 

00:06:06.479 --> 00:06:07.909 align:start position:0%
backend that we just created then we'll
select<00:06:06.880><c> the</c><00:06:07.120><c> default</c>

00:06:07.909 --> 00:06:07.919 align:start position:0%
select the default
 

00:06:07.919 --> 00:06:10.790 align:start position:0%
select the default
values<00:06:08.639><c> for</c><00:06:08.800><c> all</c><00:06:08.960><c> the</c><00:06:09.120><c> questions</c><00:06:10.319><c> and</c><00:06:10.479><c> for</c><00:06:10.639><c> the</c>

00:06:10.790 --> 00:06:10.800 align:start position:0%
values for all the questions and for the
 

00:06:10.800 --> 00:06:11.430 align:start position:0%
values for all the questions and for the
functions

00:06:11.430 --> 00:06:11.440 align:start position:0%
functions
 

00:06:11.440 --> 00:06:13.830 align:start position:0%
functions
setup<00:06:11.919><c> will</c><00:06:12.080><c> be</c><00:06:12.240><c> using</c><00:06:12.720><c> typescript</c><00:06:13.440><c> i'm</c><00:06:13.680><c> going</c>

00:06:13.830 --> 00:06:13.840 align:start position:0%
setup will be using typescript i'm going
 

00:06:13.840 --> 00:06:15.830 align:start position:0%
setup will be using typescript i'm going
to<00:06:14.000><c> say</c><00:06:14.240><c> no</c><00:06:14.479><c> to</c><00:06:14.639><c> eslint</c><00:06:15.199><c> for</c><00:06:15.360><c> now</c>

00:06:15.830 --> 00:06:15.840 align:start position:0%
to say no to eslint for now
 

00:06:15.840 --> 00:06:17.909 align:start position:0%
to say no to eslint for now
and<00:06:15.919><c> then</c><00:06:16.160><c> i</c><00:06:16.319><c> will</c><00:06:16.560><c> say</c><00:06:16.880><c> yes</c><00:06:17.199><c> to</c><00:06:17.440><c> installing</c>

00:06:17.909 --> 00:06:17.919 align:start position:0%
and then i will say yes to installing
 

00:06:17.919 --> 00:06:19.510 align:start position:0%
and then i will say yes to installing
the<00:06:18.000><c> dependencies</c>

00:06:19.510 --> 00:06:19.520 align:start position:0%
the dependencies
 

00:06:19.520 --> 00:06:21.430 align:start position:0%
the dependencies
when<00:06:19.759><c> asked</c><00:06:20.000><c> about</c><00:06:20.319><c> the</c><00:06:20.479><c> emulators</c><00:06:21.120><c> we</c><00:06:21.280><c> will</c>

00:06:21.430 --> 00:06:21.440 align:start position:0%
when asked about the emulators we will
 

00:06:21.440 --> 00:06:23.749 align:start position:0%
when asked about the emulators we will
select<00:06:22.000><c> functions</c><00:06:22.639><c> and</c><00:06:22.880><c> firestore</c><00:06:23.440><c> press</c>

00:06:23.749 --> 00:06:23.759 align:start position:0%
select functions and firestore press
 

00:06:23.759 --> 00:06:24.629 align:start position:0%
select functions and firestore press
enter<00:06:24.080><c> to</c><00:06:24.160><c> select</c>

00:06:24.629 --> 00:06:24.639 align:start position:0%
enter to select
 

00:06:24.639 --> 00:06:27.830 align:start position:0%
enter to select
all<00:06:24.800><c> the</c><00:06:24.960><c> default</c><00:06:25.520><c> ports</c><00:06:27.120><c> and</c><00:06:27.360><c> we'll</c>

00:06:27.830 --> 00:06:27.840 align:start position:0%
all the default ports and we'll
 

00:06:27.840 --> 00:06:30.309 align:start position:0%
all the default ports and we'll
select<00:06:28.240><c> to</c><00:06:28.400><c> enable</c><00:06:28.800><c> the</c><00:06:28.960><c> emulator</c><00:06:29.520><c> ui</c><00:06:30.080><c> if</c><00:06:30.240><c> you</c>

00:06:30.309 --> 00:06:30.319 align:start position:0%
select to enable the emulator ui if you
 

00:06:30.319 --> 00:06:31.990 align:start position:0%
select to enable the emulator ui if you
don't<00:06:30.560><c> have</c><00:06:30.720><c> the</c><00:06:30.800><c> emulators</c><00:06:31.360><c> downloaded</c>

00:06:31.990 --> 00:06:32.000 align:start position:0%
don't have the emulators downloaded
 

00:06:32.000 --> 00:06:34.230 align:start position:0%
don't have the emulators downloaded
select<00:06:32.400><c> yes</c><00:06:32.560><c> to</c><00:06:32.720><c> download</c><00:06:33.120><c> the</c><00:06:33.199><c> emulators</c>

00:06:34.230 --> 00:06:34.240 align:start position:0%
select yes to download the emulators
 

00:06:34.240 --> 00:06:36.629 align:start position:0%
select yes to download the emulators
and<00:06:34.400><c> that</c><00:06:34.639><c> should</c><00:06:34.800><c> complete</c><00:06:35.440><c> your</c><00:06:35.919><c> firebase</c>

00:06:36.629 --> 00:06:36.639 align:start position:0%
and that should complete your firebase
 

00:06:36.639 --> 00:06:37.350 align:start position:0%
and that should complete your firebase
functions

00:06:37.350 --> 00:06:37.360 align:start position:0%
functions
 

00:06:37.360 --> 00:06:41.830 align:start position:0%
functions
setup<00:06:38.720><c> and</c><00:06:38.960><c> if</c><00:06:39.039><c> we</c><00:06:39.199><c> open</c><00:06:39.520><c> up</c><00:06:39.680><c> this</c><00:06:39.919><c> code</c><00:06:40.240><c> now</c>

00:06:41.830 --> 00:06:41.840 align:start position:0%
setup and if we open up this code now
 

00:06:41.840 --> 00:06:44.469 align:start position:0%
setup and if we open up this code now
you'll<00:06:42.160><c> see</c><00:06:42.479><c> a</c><00:06:42.720><c> folder</c><00:06:43.440><c> with</c><00:06:43.759><c> another</c><00:06:44.080><c> folder</c>

00:06:44.469 --> 00:06:44.479 align:start position:0%
you'll see a folder with another folder
 

00:06:44.479 --> 00:06:45.909 align:start position:0%
you'll see a folder with another folder
inside<00:06:44.880><c> called</c><00:06:45.199><c> functions</c>

00:06:45.909 --> 00:06:45.919 align:start position:0%
inside called functions
 

00:06:45.919 --> 00:06:47.670 align:start position:0%
inside called functions
and<00:06:46.080><c> that</c><00:06:46.319><c> is</c><00:06:46.479><c> where</c><00:06:46.639><c> the</c><00:06:47.120><c> end</c><00:06:47.360><c> will</c><00:06:47.520><c> be</c>

00:06:47.670 --> 00:06:47.680 align:start position:0%
and that is where the end will be
 

00:06:47.680 --> 00:06:49.510 align:start position:0%
and that is where the end will be
written<00:06:48.240><c> the</c><00:06:48.479><c> files</c><00:06:48.960><c> in</c>

00:06:49.510 --> 00:06:49.520 align:start position:0%
written the files in
 

00:06:49.520 --> 00:06:52.870 align:start position:0%
written the files in
the<00:06:49.680><c> root</c><00:06:50.000><c> folder</c><00:06:50.880><c> describes</c><00:06:51.840><c> the</c><00:06:52.080><c> firestore</c>

00:06:52.870 --> 00:06:52.880 align:start position:0%
the root folder describes the firestore
 

00:06:52.880 --> 00:06:55.510 align:start position:0%
the root folder describes the firestore
project<00:06:53.440><c> and</c><00:06:53.680><c> some</c><00:06:53.919><c> of</c><00:06:54.000><c> the</c><00:06:54.240><c> overall</c><00:06:55.039><c> rules</c><00:06:55.440><c> in</c>

00:06:55.510 --> 00:06:55.520 align:start position:0%
project and some of the overall rules in
 

00:06:55.520 --> 00:06:56.870 align:start position:0%
project and some of the overall rules in
the<00:06:55.680><c> firestore</c><00:06:56.240><c> project</c>

00:06:56.870 --> 00:06:56.880 align:start position:0%
the firestore project
 

00:06:56.880 --> 00:06:58.870 align:start position:0%
the firestore project
now<00:06:57.039><c> that</c><00:06:57.199><c> we've</c><00:06:57.440><c> configured</c><00:06:58.000><c> the</c><00:06:58.240><c> basics</c><00:06:58.720><c> of</c>

00:06:58.870 --> 00:06:58.880 align:start position:0%
now that we've configured the basics of
 

00:06:58.880 --> 00:07:00.790 align:start position:0%
now that we've configured the basics of
firebase<00:06:59.440><c> functions</c><00:07:00.000><c> project</c>

00:07:00.790 --> 00:07:00.800 align:start position:0%
firebase functions project
 

00:07:00.800 --> 00:07:03.189 align:start position:0%
firebase functions project
we<00:07:00.960><c> can</c><00:07:01.280><c> implement</c><00:07:01.840><c> the</c><00:07:02.000><c> backend</c><00:07:02.400><c> system</c><00:07:02.960><c> as</c>

00:07:03.189 --> 00:07:03.199 align:start position:0%
we can implement the backend system as
 

00:07:03.199 --> 00:07:03.909 align:start position:0%
we can implement the backend system as
described

00:07:03.909 --> 00:07:03.919 align:start position:0%
described
 

00:07:03.919 --> 00:07:06.230 align:start position:0%
described
at<00:07:04.000><c> the</c><00:07:04.160><c> beginning</c><00:07:04.880><c> we'll</c><00:07:05.120><c> start</c><00:07:05.440><c> off</c><00:07:05.919><c> by</c>

00:07:06.230 --> 00:07:06.240 align:start position:0%
at the beginning we'll start off by
 

00:07:06.240 --> 00:07:07.510 align:start position:0%
at the beginning we'll start off by
installing<00:07:06.720><c> the</c><00:07:06.960><c> package</c>

00:07:07.510 --> 00:07:07.520 align:start position:0%
installing the package
 

00:07:07.520 --> 00:07:10.150 align:start position:0%
installing the package
dedicated<00:07:08.319><c> to</c><00:07:08.479><c> using</c><00:07:08.880><c> the</c><00:07:09.039><c> system</c><00:07:09.599><c> described</c>

00:07:10.150 --> 00:07:10.160 align:start position:0%
dedicated to using the system described
 

00:07:10.160 --> 00:07:10.710 align:start position:0%
dedicated to using the system described
earlier

00:07:10.710 --> 00:07:10.720 align:start position:0%
earlier
 

00:07:10.720 --> 00:07:12.950 align:start position:0%
earlier
it's<00:07:10.960><c> called</c><00:07:11.360><c> firebase</c><00:07:12.080><c> backend</c><00:07:12.720><c> we'll</c>

00:07:12.950 --> 00:07:12.960 align:start position:0%
it's called firebase backend we'll
 

00:07:12.960 --> 00:07:15.189 align:start position:0%
it's called firebase backend we'll
navigate<00:07:13.520><c> into</c><00:07:13.840><c> the</c><00:07:14.000><c> functions</c><00:07:14.560><c> folder</c>

00:07:15.189 --> 00:07:15.199 align:start position:0%
navigate into the functions folder
 

00:07:15.199 --> 00:07:18.150 align:start position:0%
navigate into the functions folder
and<00:07:15.280><c> then</c><00:07:15.440><c> we'll</c><00:07:15.680><c> run</c><00:07:16.000><c> npm</c><00:07:16.639><c> install</c><00:07:17.440><c> firebase</c>

00:07:18.150 --> 00:07:18.160 align:start position:0%
and then we'll run npm install firebase
 

00:07:18.160 --> 00:07:18.710 align:start position:0%
and then we'll run npm install firebase
dash

00:07:18.710 --> 00:07:18.720 align:start position:0%
dash
 

00:07:18.720 --> 00:07:20.589 align:start position:0%
dash
backend<00:07:19.360><c> then</c><00:07:19.599><c> you</c><00:07:19.680><c> can</c><00:07:19.840><c> open</c><00:07:20.160><c> up</c><00:07:20.319><c> your</c>

00:07:20.589 --> 00:07:20.599 align:start position:0%
backend then you can open up your
 

00:07:20.599 --> 00:07:22.150 align:start position:0%
backend then you can open up your
index.ts<00:07:21.680><c> file</c>

00:07:22.150 --> 00:07:22.160 align:start position:0%
index.ts file
 

00:07:22.160 --> 00:07:24.950 align:start position:0%
index.ts file
in<00:07:22.319><c> your</c><00:07:22.560><c> source</c><00:07:22.960><c> folder</c><00:07:23.840><c> you</c><00:07:24.000><c> can</c><00:07:24.240><c> delete</c><00:07:24.720><c> all</c>

00:07:24.950 --> 00:07:24.960 align:start position:0%
in your source folder you can delete all
 

00:07:24.960 --> 00:07:27.029 align:start position:0%
in your source folder you can delete all
of<00:07:25.039><c> the</c><00:07:25.199><c> code</c><00:07:25.599><c> in</c><00:07:25.680><c> the</c><00:07:25.840><c> file</c><00:07:26.240><c> currently</c>

00:07:27.029 --> 00:07:27.039 align:start position:0%
of the code in the file currently
 

00:07:27.039 --> 00:07:29.909 align:start position:0%
of the code in the file currently
then<00:07:27.280><c> we'll</c><00:07:27.520><c> import</c><00:07:28.160><c> the</c><00:07:28.639><c> function</c><00:07:29.360><c> parser</c>

00:07:29.909 --> 00:07:29.919 align:start position:0%
then we'll import the function parser
 

00:07:29.919 --> 00:07:31.670 align:start position:0%
then we'll import the function parser
from<00:07:30.160><c> the</c><00:07:30.240><c> firebase</c><00:07:30.960><c> backend</c>

00:07:31.670 --> 00:07:31.680 align:start position:0%
from the firebase backend
 

00:07:31.680 --> 00:07:34.790 align:start position:0%
from the firebase backend
then<00:07:31.919><c> we</c><00:07:32.080><c> can</c><00:07:32.319><c> set</c><00:07:32.880><c> the</c><00:07:33.120><c> exports</c><00:07:34.000><c> equal</c><00:07:34.319><c> to</c>

00:07:34.790 --> 00:07:34.800 align:start position:0%
then we can set the exports equal to
 

00:07:34.800 --> 00:07:38.070 align:start position:0%
then we can set the exports equal to
a<00:07:35.039><c> newly</c><00:07:35.440><c> constructed</c><00:07:36.319><c> function</c><00:07:36.880><c> parser</c>

00:07:38.070 --> 00:07:38.080 align:start position:0%
a newly constructed function parser
 

00:07:38.080 --> 00:07:41.589 align:start position:0%
a newly constructed function parser
that<00:07:38.319><c> takes</c><00:07:38.720><c> in</c><00:07:39.199><c> the</c><00:07:39.440><c> current</c><00:07:40.000><c> directory</c><00:07:40.800><c> name</c>

00:07:41.589 --> 00:07:41.599 align:start position:0%
that takes in the current directory name
 

00:07:41.599 --> 00:07:44.710 align:start position:0%
that takes in the current directory name
as<00:07:41.840><c> well</c><00:07:42.080><c> as</c><00:07:42.160><c> the</c><00:07:42.400><c> exports</c><00:07:43.440><c> this</c><00:07:43.680><c> will</c><00:07:43.919><c> be</c><00:07:44.560><c> all</c>

00:07:44.710 --> 00:07:44.720 align:start position:0%
as well as the exports this will be all
 

00:07:44.720 --> 00:07:47.189 align:start position:0%
as well as the exports this will be all
the<00:07:44.879><c> code</c><00:07:45.120><c> you</c><00:07:45.280><c> need</c><00:07:45.599><c> in</c><00:07:45.759><c> your</c><00:07:45.919><c> index.ts</c><00:07:46.800><c> file</c>

00:07:47.189 --> 00:07:47.199 align:start position:0%
the code you need in your index.ts file
 

00:07:47.199 --> 00:07:50.309 align:start position:0%
the code you need in your index.ts file
regardless<00:07:47.840><c> of</c><00:07:48.000><c> how</c><00:07:48.240><c> big</c><00:07:48.720><c> your</c><00:07:48.960><c> backend</c><00:07:49.440><c> gets</c>

00:07:50.309 --> 00:07:50.319 align:start position:0%
regardless of how big your backend gets
 

00:07:50.319 --> 00:07:52.230 align:start position:0%
regardless of how big your backend gets
and<00:07:50.400><c> that's</c><00:07:50.720><c> also</c><00:07:51.120><c> all</c><00:07:51.280><c> the</c><00:07:51.440><c> setup</c><00:07:51.759><c> we</c><00:07:51.919><c> need</c>

00:07:52.230 --> 00:07:52.240 align:start position:0%
and that's also all the setup we need
 

00:07:52.240 --> 00:07:53.589 align:start position:0%
and that's also all the setup we need
before<00:07:52.479><c> we</c><00:07:52.560><c> can</c><00:07:52.800><c> actually</c><00:07:53.120><c> start</c>

00:07:53.589 --> 00:07:53.599 align:start position:0%
before we can actually start
 

00:07:53.599 --> 00:07:55.830 align:start position:0%
before we can actually start
writing<00:07:54.080><c> any</c><00:07:54.319><c> functions</c><00:07:55.199><c> let's</c><00:07:55.440><c> start</c><00:07:55.680><c> with</c>

00:07:55.830 --> 00:07:55.840 align:start position:0%
writing any functions let's start with
 

00:07:55.840 --> 00:07:56.950 align:start position:0%
writing any functions let's start with
something<00:07:56.240><c> familiar</c>

00:07:56.950 --> 00:07:56.960 align:start position:0%
something familiar
 

00:07:56.960 --> 00:07:59.189 align:start position:0%
something familiar
we'll<00:07:57.120><c> create</c><00:07:57.520><c> a</c><00:07:57.759><c> restful</c><00:07:58.240><c> endpoint</c><00:07:58.800><c> on</c><00:07:58.960><c> our</c>

00:07:59.189 --> 00:07:59.199 align:start position:0%
we'll create a restful endpoint on our
 

00:07:59.199 --> 00:08:01.909 align:start position:0%
we'll create a restful endpoint on our
backend<00:07:59.759><c> we'll</c><00:08:00.000><c> start</c><00:08:00.240><c> by</c><00:08:00.479><c> creating</c><00:08:00.960><c> a</c><00:08:01.120><c> folder</c>

00:08:01.909 --> 00:08:01.919 align:start position:0%
backend we'll start by creating a folder
 

00:08:01.919 --> 00:08:04.150 align:start position:0%
backend we'll start by creating a folder
the<00:08:02.080><c> resource</c><00:08:02.560><c> group</c><00:08:02.960><c> and</c><00:08:03.120><c> we'll</c><00:08:03.360><c> call</c><00:08:03.599><c> that</c>

00:08:04.150 --> 00:08:04.160 align:start position:0%
the resource group and we'll call that
 

00:08:04.160 --> 00:08:05.110 align:start position:0%
the resource group and we'll call that
users

00:08:05.110 --> 00:08:05.120 align:start position:0%
users
 

00:08:05.120 --> 00:08:07.110 align:start position:0%
users
then<00:08:05.360><c> in</c><00:08:05.440><c> the</c><00:08:05.599><c> folder</c><00:08:06.080><c> we'll</c><00:08:06.319><c> create</c><00:08:06.800><c> another</c>

00:08:07.110 --> 00:08:07.120 align:start position:0%
then in the folder we'll create another
 

00:08:07.120 --> 00:08:08.230 align:start position:0%
then in the folder we'll create another
folder<00:08:07.599><c> called</c>

00:08:08.230 --> 00:08:08.240 align:start position:0%
folder called
 

00:08:08.240 --> 00:08:11.189 align:start position:0%
folder called
restful<00:08:09.199><c> and</c><00:08:09.440><c> in</c><00:08:09.520><c> that</c><00:08:09.759><c> folder</c><00:08:10.560><c> we'll</c><00:08:10.800><c> create</c>

00:08:11.189 --> 00:08:11.199 align:start position:0%
restful and in that folder we'll create
 

00:08:11.199 --> 00:08:12.150 align:start position:0%
restful and in that folder we'll create
a<00:08:11.360><c> new</c><00:08:11.680><c> file</c>

00:08:12.150 --> 00:08:12.160 align:start position:0%
a new file
 

00:08:12.160 --> 00:08:16.550 align:start position:0%
a new file
called<00:08:12.639><c> add</c><00:08:15.000><c> paymentmethod.endpoint.ts</c>

00:08:16.550 --> 00:08:16.560 align:start position:0%
called add paymentmethod.endpoint.ts
 

00:08:16.560 --> 00:08:19.510 align:start position:0%
called add paymentmethod.endpoint.ts
for<00:08:16.800><c> any</c><00:08:17.039><c> endpoint</c><00:08:17.599><c> the</c><00:08:17.840><c> file</c><00:08:18.160><c> has</c><00:08:18.400><c> to</c><00:08:18.639><c> end</c><00:08:18.960><c> in</c>

00:08:19.510 --> 00:08:19.520 align:start position:0%
for any endpoint the file has to end in
 

00:08:19.520 --> 00:08:19.909 align:start position:0%
for any endpoint the file has to end in
dot

00:08:19.909 --> 00:08:19.919 align:start position:0%
dot
 

00:08:19.919 --> 00:08:23.110 align:start position:0%
dot
endpoint<00:08:20.639><c> dot</c><00:08:21.120><c> ts</c><00:08:22.000><c> if</c><00:08:22.240><c> it</c><00:08:22.319><c> doesn't</c><00:08:22.800><c> then</c><00:08:23.039><c> it</c>

00:08:23.110 --> 00:08:23.120 align:start position:0%
endpoint dot ts if it doesn't then it
 

00:08:23.120 --> 00:08:25.589 align:start position:0%
endpoint dot ts if it doesn't then it
won't<00:08:23.360><c> be</c><00:08:23.520><c> loaded</c><00:08:24.000><c> as</c><00:08:24.160><c> an</c><00:08:24.319><c> http</c><00:08:24.960><c> endpoint</c><00:08:25.440><c> on</c>

00:08:25.589 --> 00:08:25.599 align:start position:0%
won't be loaded as an http endpoint on
 

00:08:25.599 --> 00:08:26.469 align:start position:0%
won't be loaded as an http endpoint on
the<00:08:25.759><c> backend</c>

00:08:26.469 --> 00:08:26.479 align:start position:0%
the backend
 

00:08:26.479 --> 00:08:28.629 align:start position:0%
the backend
then<00:08:26.639><c> we'll</c><00:08:26.800><c> start</c><00:08:27.199><c> off</c><00:08:27.599><c> in</c><00:08:27.759><c> the</c><00:08:27.919><c> file</c><00:08:28.400><c> by</c>

00:08:28.629 --> 00:08:28.639 align:start position:0%
then we'll start off in the file by
 

00:08:28.639 --> 00:08:29.990 align:start position:0%
then we'll start off in the file by
importing<00:08:29.360><c> request</c>

00:08:29.990 --> 00:08:30.000 align:start position:0%
importing request
 

00:08:30.000 --> 00:08:32.949 align:start position:0%
importing request
and<00:08:30.240><c> response</c><00:08:31.039><c> from</c><00:08:31.360><c> express</c><00:08:32.240><c> and</c><00:08:32.399><c> will</c><00:08:32.640><c> also</c>

00:08:32.949 --> 00:08:32.959 align:start position:0%
and response from express and will also
 

00:08:32.959 --> 00:08:33.589 align:start position:0%
and response from express and will also
import

00:08:33.589 --> 00:08:33.599 align:start position:0%
import
 

00:08:33.599 --> 00:08:35.509 align:start position:0%
import
endpoint<00:08:34.159><c> and</c><00:08:34.399><c> request</c><00:08:34.880><c> type</c><00:08:35.200><c> from</c><00:08:35.360><c> the</c>

00:08:35.509 --> 00:08:35.519 align:start position:0%
endpoint and request type from the
 

00:08:35.519 --> 00:08:36.870 align:start position:0%
endpoint and request type from the
firebase<00:08:36.240><c> backend</c>

00:08:36.870 --> 00:08:36.880 align:start position:0%
firebase backend
 

00:08:36.880 --> 00:08:40.469 align:start position:0%
firebase backend
then<00:08:37.120><c> we</c><00:08:37.360><c> will</c><00:08:38.159><c> export</c><00:08:38.800><c> a</c><00:08:39.039><c> default</c><00:08:39.919><c> new</c>

00:08:40.469 --> 00:08:40.479 align:start position:0%
then we will export a default new
 

00:08:40.479 --> 00:08:43.269 align:start position:0%
then we will export a default new
endpoint<00:08:41.279><c> the</c><00:08:41.440><c> first</c><00:08:41.760><c> value</c><00:08:42.159><c> will</c><00:08:42.399><c> pass</c><00:08:42.800><c> in</c><00:08:43.120><c> is</c>

00:08:43.269 --> 00:08:43.279 align:start position:0%
endpoint the first value will pass in is
 

00:08:43.279 --> 00:08:44.070 align:start position:0%
endpoint the first value will pass in is
the<00:08:43.519><c> name</c>

00:08:44.070 --> 00:08:44.080 align:start position:0%
the name
 

00:08:44.080 --> 00:08:46.310 align:start position:0%
the name
of<00:08:44.240><c> the</c><00:08:44.560><c> endpoint</c><00:08:45.120><c> we'll</c><00:08:45.279><c> pass</c><00:08:45.600><c> in</c><00:08:45.760><c> the</c><00:08:45.920><c> add</c>

00:08:46.310 --> 00:08:46.320 align:start position:0%
of the endpoint we'll pass in the add
 

00:08:46.320 --> 00:08:47.190 align:start position:0%
of the endpoint we'll pass in the add
payment<00:08:46.720><c> method</c>

00:08:47.190 --> 00:08:47.200 align:start position:0%
payment method
 

00:08:47.200 --> 00:08:49.990 align:start position:0%
payment method
string<00:08:47.839><c> the</c><00:08:48.000><c> second</c><00:08:48.320><c> parameter</c><00:08:49.120><c> expects</c><00:08:49.760><c> the</c>

00:08:49.990 --> 00:08:50.000 align:start position:0%
string the second parameter expects the
 

00:08:50.000 --> 00:08:50.630 align:start position:0%
string the second parameter expects the
type<00:08:50.399><c> of</c>

00:08:50.630 --> 00:08:50.640 align:start position:0%
type of
 

00:08:50.640 --> 00:08:53.590 align:start position:0%
type of
endpoint<00:08:51.200><c> that</c><00:08:51.440><c> we</c><00:08:51.920><c> are</c><00:08:52.160><c> creating</c><00:08:53.040><c> we'll</c><00:08:53.279><c> pass</c>

00:08:53.590 --> 00:08:53.600 align:start position:0%
endpoint that we are creating we'll pass
 

00:08:53.600 --> 00:08:54.550 align:start position:0%
endpoint that we are creating we'll pass
in<00:08:53.920><c> request</c>

00:08:54.550 --> 00:08:54.560 align:start position:0%
in request
 

00:08:54.560 --> 00:08:58.070 align:start position:0%
in request
type<00:08:55.040><c> dot</c><00:08:55.360><c> post</c><00:08:56.000><c> and</c><00:08:56.160><c> for</c><00:08:56.320><c> the</c><00:08:56.480><c> last</c><00:08:57.040><c> parameter</c>

00:08:58.070 --> 00:08:58.080 align:start position:0%
type dot post and for the last parameter
 

00:08:58.080 --> 00:09:01.110 align:start position:0%
type dot post and for the last parameter
we<00:08:58.320><c> pass</c><00:08:58.640><c> in</c><00:08:58.959><c> the</c><00:08:59.200><c> express</c><00:08:59.920><c> endpoint</c><00:09:00.560><c> handler</c>

00:09:01.110 --> 00:09:01.120 align:start position:0%
we pass in the express endpoint handler
 

00:09:01.120 --> 00:09:02.949 align:start position:0%
we pass in the express endpoint handler
which<00:09:01.360><c> is</c><00:09:01.440><c> will</c><00:09:01.600><c> be</c><00:09:01.760><c> the</c><00:09:02.000><c> actual</c><00:09:02.399><c> code</c><00:09:02.640><c> that's</c>

00:09:02.949 --> 00:09:02.959 align:start position:0%
which is will be the actual code that's
 

00:09:02.959 --> 00:09:05.110 align:start position:0%
which is will be the actual code that's
executed<00:09:03.600><c> when</c><00:09:03.760><c> your</c><00:09:04.000><c> endpoint</c><00:09:04.399><c> is</c><00:09:04.640><c> called</c>

00:09:05.110 --> 00:09:05.120 align:start position:0%
executed when your endpoint is called
 

00:09:05.120 --> 00:09:07.670 align:start position:0%
executed when your endpoint is called
this<00:09:05.440><c> is</c><00:09:05.600><c> a</c><00:09:05.839><c> function</c><00:09:06.399><c> that</c><00:09:06.640><c> takes</c><00:09:07.040><c> in</c><00:09:07.519><c> a</c>

00:09:07.670 --> 00:09:07.680 align:start position:0%
this is a function that takes in a
 

00:09:07.680 --> 00:09:08.550 align:start position:0%
this is a function that takes in a
request

00:09:08.550 --> 00:09:08.560 align:start position:0%
request
 

00:09:08.560 --> 00:09:10.550 align:start position:0%
request
as<00:09:08.720><c> well</c><00:09:08.959><c> as</c><00:09:09.120><c> a</c><00:09:09.279><c> response</c><00:09:10.000><c> and</c><00:09:10.160><c> what</c><00:09:10.399><c> we'll</c>

00:09:10.550 --> 00:09:10.560 align:start position:0%
as well as a response and what we'll
 

00:09:10.560 --> 00:09:11.750 align:start position:0%
as well as a response and what we'll
write<00:09:10.800><c> in</c><00:09:10.880><c> this</c><00:09:11.120><c> function</c>

00:09:11.750 --> 00:09:11.760 align:start position:0%
write in this function
 

00:09:11.760 --> 00:09:14.949 align:start position:0%
write in this function
is<00:09:12.399><c> just</c><00:09:12.640><c> some</c><00:09:12.880><c> code</c><00:09:13.279><c> to</c><00:09:13.519><c> read</c><00:09:14.080><c> the</c><00:09:14.320><c> values</c>

00:09:14.949 --> 00:09:14.959 align:start position:0%
is just some code to read the values
 

00:09:14.959 --> 00:09:17.509 align:start position:0%
is just some code to read the values
sent<00:09:15.360><c> in</c><00:09:15.519><c> the</c><00:09:15.600><c> request</c><00:09:16.320><c> and</c><00:09:16.399><c> then</c><00:09:16.720><c> return</c><00:09:17.120><c> that</c>

00:09:17.509 --> 00:09:17.519 align:start position:0%
sent in the request and then return that
 

00:09:17.519 --> 00:09:18.389 align:start position:0%
sent in the request and then return that
in<00:09:17.680><c> a</c><00:09:17.839><c> different</c>

00:09:18.389 --> 00:09:18.399 align:start position:0%
in a different
 

00:09:18.399 --> 00:09:20.710 align:start position:0%
in a different
format<00:09:18.800><c> so</c><00:09:18.959><c> we</c><00:09:19.040><c> can</c><00:09:19.200><c> know</c><00:09:19.440><c> that</c><00:09:19.600><c> it's</c><00:09:19.760><c> working</c>

00:09:20.710 --> 00:09:20.720 align:start position:0%
format so we can know that it's working
 

00:09:20.720 --> 00:09:22.150 align:start position:0%
format so we can know that it's working
we'll<00:09:20.880><c> start</c><00:09:21.200><c> by</c><00:09:21.440><c> reading</c>

00:09:22.150 --> 00:09:22.160 align:start position:0%
we'll start by reading
 

00:09:22.160 --> 00:09:24.790 align:start position:0%
we'll start by reading
out<00:09:22.480><c> the</c><00:09:22.720><c> card</c><00:09:23.120><c> number</c><00:09:23.519><c> and</c><00:09:23.680><c> the</c><00:09:23.920><c> card</c><00:09:24.320><c> holder</c>

00:09:24.790 --> 00:09:24.800 align:start position:0%
out the card number and the card holder
 

00:09:24.800 --> 00:09:25.829 align:start position:0%
out the card number and the card holder
from<00:09:25.040><c> the</c><00:09:25.120><c> request</c>

00:09:25.829 --> 00:09:25.839 align:start position:0%
from the request
 

00:09:25.839 --> 00:09:28.150 align:start position:0%
from the request
body<00:09:26.240><c> then</c><00:09:26.480><c> we'll</c><00:09:26.640><c> create</c><00:09:27.200><c> a</c><00:09:27.360><c> new</c><00:09:27.680><c> value</c>

00:09:28.150 --> 00:09:28.160 align:start position:0%
body then we'll create a new value
 

00:09:28.160 --> 00:09:29.269 align:start position:0%
body then we'll create a new value
called<00:09:28.640><c> payment</c>

00:09:29.269 --> 00:09:29.279 align:start position:0%
called payment
 

00:09:29.279 --> 00:09:31.590 align:start position:0%
called payment
token<00:09:30.000><c> that</c><00:09:30.240><c> has</c><00:09:30.640><c> these</c><00:09:30.959><c> two</c><00:09:31.200><c> values</c>

00:09:31.590 --> 00:09:31.600 align:start position:0%
token that has these two values
 

00:09:31.600 --> 00:09:33.829 align:start position:0%
token that has these two values
concatenated<00:09:32.640><c> with</c><00:09:32.800><c> an</c><00:09:33.040><c> underscore</c><00:09:33.600><c> in</c><00:09:33.760><c> the</c>

00:09:33.829 --> 00:09:33.839 align:start position:0%
concatenated with an underscore in the
 

00:09:33.839 --> 00:09:35.350 align:start position:0%
concatenated with an underscore in the
middle<00:09:34.240><c> and</c><00:09:34.399><c> then</c><00:09:34.560><c> we'll</c><00:09:34.800><c> return</c>

00:09:35.350 --> 00:09:35.360 align:start position:0%
middle and then we'll return
 

00:09:35.360 --> 00:09:38.630 align:start position:0%
middle and then we'll return
a<00:09:35.440><c> response</c><00:09:36.320><c> with</c><00:09:36.480><c> a</c><00:09:36.640><c> status</c><00:09:37.279><c> 201</c><00:09:38.160><c> and</c><00:09:38.399><c> we'll</c>

00:09:38.630 --> 00:09:38.640 align:start position:0%
a response with a status 201 and we'll
 

00:09:38.640 --> 00:09:39.509 align:start position:0%
a response with a status 201 and we'll
send<00:09:38.959><c> back</c>

00:09:39.509 --> 00:09:39.519 align:start position:0%
send back
 

00:09:39.519 --> 00:09:42.710 align:start position:0%
send back
a<00:09:39.760><c> map</c><00:09:40.320><c> with</c><00:09:40.640><c> a</c><00:09:41.040><c> key</c><00:09:41.440><c> token</c><00:09:41.920><c> and</c><00:09:42.080><c> we'll</c><00:09:42.320><c> assign</c>

00:09:42.710 --> 00:09:42.720 align:start position:0%
a map with a key token and we'll assign
 

00:09:42.720 --> 00:09:45.030 align:start position:0%
a map with a key token and we'll assign
it<00:09:42.959><c> the</c><00:09:43.200><c> payment</c><00:09:43.680><c> token</c><00:09:44.160><c> to</c><00:09:44.320><c> make</c><00:09:44.480><c> maintenance</c>

00:09:45.030 --> 00:09:45.040 align:start position:0%
it the payment token to make maintenance
 

00:09:45.040 --> 00:09:46.630 align:start position:0%
it the payment token to make maintenance
easy<00:09:45.360><c> as</c><00:09:45.519><c> the</c><00:09:45.600><c> code</c><00:09:45.839><c> base</c><00:09:46.080><c> grows</c>

00:09:46.630 --> 00:09:46.640 align:start position:0%
easy as the code base grows
 

00:09:46.640 --> 00:09:48.550 align:start position:0%
easy as the code base grows
remember<00:09:47.040><c> the</c><00:09:47.200><c> tip</c><00:09:47.440><c> that</c><00:09:47.600><c> i</c><00:09:47.680><c> mentioned</c><00:09:48.320><c> give</c>

00:09:48.550 --> 00:09:48.560 align:start position:0%
remember the tip that i mentioned give
 

00:09:48.560 --> 00:09:50.310 align:start position:0%
remember the tip that i mentioned give
your<00:09:48.800><c> file</c><00:09:49.120><c> name</c><00:09:49.440><c> the</c><00:09:49.600><c> same</c><00:09:49.920><c> name</c>

00:09:50.310 --> 00:09:50.320 align:start position:0%
your file name the same name
 

00:09:50.320 --> 00:09:52.630 align:start position:0%
your file name the same name
as<00:09:50.560><c> your</c><00:09:50.800><c> function</c><00:09:51.360><c> endpoint</c><00:09:51.920><c> that</c><00:09:52.160><c> way</c><00:09:52.399><c> when</c>

00:09:52.630 --> 00:09:52.640 align:start position:0%
as your function endpoint that way when
 

00:09:52.640 --> 00:09:54.710 align:start position:0%
as your function endpoint that way when
you<00:09:52.959><c> are</c><00:09:53.200><c> debugging</c><00:09:53.680><c> an</c><00:09:53.839><c> error</c><00:09:54.160><c> in</c><00:09:54.240><c> production</c>

00:09:54.710 --> 00:09:54.720 align:start position:0%
you are debugging an error in production
 

00:09:54.720 --> 00:09:56.790 align:start position:0%
you are debugging an error in production
you<00:09:54.880><c> know</c><00:09:55.120><c> exactly</c><00:09:55.440><c> which</c><00:09:55.680><c> file</c><00:09:55.920><c> to</c><00:09:56.080><c> go</c><00:09:56.320><c> to</c><00:09:56.560><c> to</c>

00:09:56.790 --> 00:09:56.800 align:start position:0%
you know exactly which file to go to to
 

00:09:56.800 --> 00:09:57.990 align:start position:0%
you know exactly which file to go to to
find<00:09:57.040><c> your</c><00:09:57.279><c> function</c>

00:09:57.990 --> 00:09:58.000 align:start position:0%
find your function
 

00:09:58.000 --> 00:10:00.389 align:start position:0%
find your function
now<00:09:58.240><c> we</c><00:09:58.320><c> can</c><00:09:58.480><c> go</c><00:09:58.640><c> ahead</c><00:09:59.040><c> and</c><00:09:59.279><c> test</c><00:09:59.600><c> out</c><00:09:59.920><c> this</c>

00:10:00.389 --> 00:10:00.399 align:start position:0%
now we can go ahead and test out this
 

00:10:00.399 --> 00:10:02.470 align:start position:0%
now we can go ahead and test out this
function<00:10:00.959><c> to</c><00:10:01.120><c> test</c><00:10:01.360><c> this</c><00:10:01.519><c> out</c><00:10:01.680><c> we</c><00:10:01.839><c> can</c><00:10:02.000><c> simply</c>

00:10:02.470 --> 00:10:02.480 align:start position:0%
function to test this out we can simply
 

00:10:02.480 --> 00:10:02.870 align:start position:0%
function to test this out we can simply
run

00:10:02.870 --> 00:10:02.880 align:start position:0%
run
 

00:10:02.880 --> 00:10:06.069 align:start position:0%
run
npm<00:10:03.680><c> run</c><00:10:04.079><c> serve</c><00:10:04.959><c> this</c><00:10:05.200><c> will</c><00:10:05.440><c> build</c><00:10:05.839><c> the</c>

00:10:06.069 --> 00:10:06.079 align:start position:0%
npm run serve this will build the
 

00:10:06.079 --> 00:10:06.870 align:start position:0%
npm run serve this will build the
typescript

00:10:06.870 --> 00:10:06.880 align:start position:0%
typescript
 

00:10:06.880 --> 00:10:08.949 align:start position:0%
typescript
code<00:10:07.519><c> and</c><00:10:07.600><c> then</c><00:10:07.920><c> serve</c><00:10:08.240><c> the</c><00:10:08.399><c> functions</c>

00:10:08.949 --> 00:10:08.959 align:start position:0%
code and then serve the functions
 

00:10:08.959 --> 00:10:11.030 align:start position:0%
code and then serve the functions
locally<00:10:09.440><c> through</c><00:10:09.680><c> the</c><00:10:09.839><c> emulator</c>

00:10:11.030 --> 00:10:11.040 align:start position:0%
locally through the emulator
 

00:10:11.040 --> 00:10:13.829 align:start position:0%
locally through the emulator
if<00:10:11.279><c> this</c><00:10:11.680><c> command</c><00:10:12.240><c> is</c><00:10:12.399><c> successful</c><00:10:13.279><c> you</c><00:10:13.519><c> should</c>

00:10:13.829 --> 00:10:13.839 align:start position:0%
if this command is successful you should
 

00:10:13.839 --> 00:10:14.230 align:start position:0%
if this command is successful you should
see

00:10:14.230 --> 00:10:14.240 align:start position:0%
see
 

00:10:14.240 --> 00:10:16.790 align:start position:0%
see
the<00:10:14.480><c> following</c><00:10:15.040><c> in</c><00:10:15.120><c> your</c><00:10:15.440><c> console</c><00:10:16.240><c> as</c><00:10:16.480><c> you</c><00:10:16.560><c> can</c>

00:10:16.790 --> 00:10:16.800 align:start position:0%
the following in your console as you can
 

00:10:16.800 --> 00:10:17.269 align:start position:0%
the following in your console as you can
see

00:10:17.269 --> 00:10:17.279 align:start position:0%
see
 

00:10:17.279 --> 00:10:20.310 align:start position:0%
see
the<00:10:17.440><c> api</c><00:10:18.480><c> has</c><00:10:18.720><c> been</c><00:10:19.040><c> deployed</c><00:10:19.839><c> under</c>

00:10:20.310 --> 00:10:20.320 align:start position:0%
the api has been deployed under
 

00:10:20.320 --> 00:10:23.590 align:start position:0%
the api has been deployed under
this<00:10:20.720><c> url</c><00:10:21.600><c> which</c><00:10:21.839><c> ends</c><00:10:22.160><c> in</c><00:10:22.480><c> users</c><00:10:23.120><c> dash</c>

00:10:23.590 --> 00:10:23.600 align:start position:0%
this url which ends in users dash
 

00:10:23.600 --> 00:10:26.790 align:start position:0%
this url which ends in users dash
api<00:10:24.399><c> each</c><00:10:25.040><c> resource</c><00:10:25.519><c> group</c><00:10:25.839><c> that</c><00:10:26.000><c> you</c><00:10:26.160><c> create</c>

00:10:26.790 --> 00:10:26.800 align:start position:0%
api each resource group that you create
 

00:10:26.800 --> 00:10:30.069 align:start position:0%
api each resource group that you create
will<00:10:27.040><c> have</c><00:10:27.920><c> all</c><00:10:28.079><c> the</c><00:10:28.320><c> api</c><00:10:28.880><c> endpoints</c><00:10:29.680><c> under</c>

00:10:30.069 --> 00:10:30.079 align:start position:0%
will have all the api endpoints under
 

00:10:30.079 --> 00:10:31.190 align:start position:0%
will have all the api endpoints under
the<00:10:30.240><c> resource</c><00:10:30.800><c> group</c>

00:10:31.190 --> 00:10:31.200 align:start position:0%
the resource group
 

00:10:31.200 --> 00:10:34.150 align:start position:0%
the resource group
dash<00:10:31.600><c> api</c><00:10:32.240><c> with</c><00:10:32.399><c> this</c><00:10:32.560><c> deployed</c><00:10:33.279><c> let's</c><00:10:33.839><c> see</c><00:10:34.079><c> if</c>

00:10:34.150 --> 00:10:34.160 align:start position:0%
dash api with this deployed let's see if
 

00:10:34.160 --> 00:10:35.910 align:start position:0%
dash api with this deployed let's see if
we<00:10:34.320><c> can</c><00:10:34.480><c> make</c><00:10:34.720><c> a</c><00:10:34.800><c> post</c><00:10:35.120><c> to</c><00:10:35.279><c> it</c><00:10:35.440><c> and</c><00:10:35.600><c> get</c><00:10:35.760><c> the</c>

00:10:35.910 --> 00:10:35.920 align:start position:0%
we can make a post to it and get the
 

00:10:35.920 --> 00:10:36.550 align:start position:0%
we can make a post to it and get the
expected

00:10:36.550 --> 00:10:36.560 align:start position:0%
expected
 

00:10:36.560 --> 00:10:38.949 align:start position:0%
expected
response<00:10:37.519><c> for</c><00:10:37.680><c> this</c><00:10:38.000><c> i</c><00:10:38.160><c> will</c><00:10:38.320><c> be</c><00:10:38.480><c> using</c>

00:10:38.949 --> 00:10:38.959 align:start position:0%
response for this i will be using
 

00:10:38.959 --> 00:10:39.750 align:start position:0%
response for this i will be using
postman

00:10:39.750 --> 00:10:39.760 align:start position:0%
postman
 

00:10:39.760 --> 00:10:41.829 align:start position:0%
postman
we'll<00:10:39.920><c> take</c><00:10:40.079><c> the</c><00:10:40.240><c> url</c><00:10:40.800><c> that</c><00:10:40.880><c> the</c><00:10:41.120><c> api</c><00:10:41.519><c> has</c><00:10:41.680><c> been</c>

00:10:41.829 --> 00:10:41.839 align:start position:0%
we'll take the url that the api has been
 

00:10:41.839 --> 00:10:42.790 align:start position:0%
we'll take the url that the api has been
deployed<00:10:42.320><c> to</c>

00:10:42.790 --> 00:10:42.800 align:start position:0%
deployed to
 

00:10:42.800 --> 00:10:45.829 align:start position:0%
deployed to
and<00:10:43.040><c> paste</c><00:10:43.360><c> that</c><00:10:43.600><c> in</c><00:10:43.680><c> the</c><00:10:43.839><c> postman</c><00:10:44.720><c> url</c><00:10:45.279><c> field</c>

00:10:45.829 --> 00:10:45.839 align:start position:0%
and paste that in the postman url field
 

00:10:45.839 --> 00:10:47.910 align:start position:0%
and paste that in the postman url field
we<00:10:46.000><c> can</c><00:10:46.240><c> add</c><00:10:46.560><c> our</c><00:10:46.880><c> actual</c>

00:10:47.910 --> 00:10:47.920 align:start position:0%
we can add our actual
 

00:10:47.920 --> 00:10:51.110 align:start position:0%
we can add our actual
endpoint<00:10:48.560><c> name</c><00:10:48.880><c> at</c><00:10:49.040><c> the</c><00:10:49.200><c> end</c><00:10:49.360><c> of</c><00:10:49.600><c> it</c><00:10:49.920><c> slash</c><00:10:50.640><c> add</c>

00:10:51.110 --> 00:10:51.120 align:start position:0%
endpoint name at the end of it slash add
 

00:10:51.120 --> 00:10:54.230 align:start position:0%
endpoint name at the end of it slash add
payment<00:10:51.760><c> method</c><00:10:52.800><c> we'll</c><00:10:53.040><c> change</c><00:10:53.440><c> the</c><00:10:53.600><c> request</c>

00:10:54.230 --> 00:10:54.240 align:start position:0%
payment method we'll change the request
 

00:10:54.240 --> 00:10:56.710 align:start position:0%
payment method we'll change the request
type<00:10:54.640><c> to</c><00:10:54.880><c> post</c><00:10:55.440><c> and</c><00:10:55.519><c> then</c><00:10:55.760><c> for</c><00:10:55.920><c> the</c><00:10:56.079><c> body</c><00:10:56.560><c> we</c>

00:10:56.710 --> 00:10:56.720 align:start position:0%
type to post and then for the body we
 

00:10:56.720 --> 00:10:57.750 align:start position:0%
type to post and then for the body we
will<00:10:56.959><c> pass</c><00:10:57.360><c> in</c>

00:10:57.750 --> 00:10:57.760 align:start position:0%
will pass in
 

00:10:57.760 --> 00:11:01.269 align:start position:0%
will pass in
payroll<00:10:58.640><c> jason</c><00:10:59.600><c> blob</c><00:11:00.240><c> the</c><00:11:00.399><c> first</c><00:11:00.640><c> value</c><00:11:01.040><c> will</c>

00:11:01.269 --> 00:11:01.279 align:start position:0%
payroll jason blob the first value will
 

00:11:01.279 --> 00:11:01.509 align:start position:0%
payroll jason blob the first value will
be

00:11:01.509 --> 00:11:01.519 align:start position:0%
be
 

00:11:01.519 --> 00:11:03.750 align:start position:0%
be
card<00:11:01.839><c> number</c><00:11:02.320><c> i'll</c><00:11:02.480><c> give</c><00:11:02.640><c> it</c><00:11:02.800><c> a</c><00:11:03.040><c> basic</c><00:11:03.440><c> value</c>

00:11:03.750 --> 00:11:03.760 align:start position:0%
card number i'll give it a basic value
 

00:11:03.760 --> 00:11:05.509 align:start position:0%
card number i'll give it a basic value
of<00:11:04.079><c> one</c><00:11:04.320><c> two</c><00:11:04.560><c> three</c><00:11:04.880><c> four</c><00:11:05.200><c> five</c>

00:11:05.509 --> 00:11:05.519 align:start position:0%
of one two three four five
 

00:11:05.519 --> 00:11:07.590 align:start position:0%
of one two three four five
six<00:11:05.760><c> seven</c><00:11:06.160><c> and</c><00:11:06.320><c> the</c><00:11:06.399><c> second</c><00:11:06.720><c> value</c><00:11:07.120><c> will</c><00:11:07.279><c> be</c>

00:11:07.590 --> 00:11:07.600 align:start position:0%
six seven and the second value will be
 

00:11:07.600 --> 00:11:09.990 align:start position:0%
six seven and the second value will be
card<00:11:08.079><c> underscore</c><00:11:08.720><c> holder</c><00:11:09.200><c> and</c><00:11:09.360><c> for</c><00:11:09.519><c> the</c><00:11:09.680><c> value</c>

00:11:09.990 --> 00:11:10.000 align:start position:0%
card underscore holder and for the value
 

00:11:10.000 --> 00:11:10.870 align:start position:0%
card underscore holder and for the value
we'll<00:11:10.240><c> pass</c><00:11:10.560><c> in</c>

00:11:10.870 --> 00:11:10.880 align:start position:0%
we'll pass in
 

00:11:10.880 --> 00:11:13.110 align:start position:0%
we'll pass in
full<00:11:11.120><c> stacks</c><00:11:11.680><c> when</c><00:11:11.920><c> i</c><00:11:12.000><c> execute</c><00:11:12.480><c> this</c><00:11:12.720><c> function</c>

00:11:13.110 --> 00:11:13.120 align:start position:0%
full stacks when i execute this function
 

00:11:13.120 --> 00:11:15.509 align:start position:0%
full stacks when i execute this function
now<00:11:13.440><c> we</c><00:11:13.680><c> should</c><00:11:13.920><c> get</c><00:11:14.160><c> back</c><00:11:14.480><c> a</c><00:11:14.720><c> token</c>

00:11:15.509 --> 00:11:15.519 align:start position:0%
now we should get back a token
 

00:11:15.519 --> 00:11:17.750 align:start position:0%
now we should get back a token
that<00:11:15.760><c> has</c><00:11:16.079><c> the</c><00:11:16.399><c> card</c><00:11:16.640><c> number</c><00:11:17.120><c> followed</c><00:11:17.440><c> by</c>

00:11:17.750 --> 00:11:17.760 align:start position:0%
that has the card number followed by
 

00:11:17.760 --> 00:11:19.910 align:start position:0%
that has the card number followed by
underscore<00:11:18.480><c> and</c><00:11:18.560><c> then</c><00:11:18.800><c> with</c><00:11:19.040><c> a</c><00:11:19.120><c> card</c><00:11:19.440><c> holder</c>

00:11:19.910 --> 00:11:19.920 align:start position:0%
underscore and then with a card holder
 

00:11:19.920 --> 00:11:20.710 align:start position:0%
underscore and then with a card holder
at<00:11:20.000><c> the</c><00:11:20.160><c> end</c><00:11:20.320><c> of</c><00:11:20.480><c> it</c>

00:11:20.710 --> 00:11:20.720 align:start position:0%
at the end of it
 

00:11:20.720 --> 00:11:22.470 align:start position:0%
at the end of it
and<00:11:20.880><c> that's</c><00:11:21.200><c> it</c><00:11:21.519><c> that's</c><00:11:21.760><c> how</c><00:11:21.839><c> we</c><00:11:22.000><c> create</c><00:11:22.320><c> an</c>

00:11:22.470 --> 00:11:22.480 align:start position:0%
and that's it that's how we create an
 

00:11:22.480 --> 00:11:24.310 align:start position:0%
and that's it that's how we create an
endpoint<00:11:22.959><c> and</c><00:11:23.040><c> that's</c><00:11:23.279><c> how</c><00:11:23.519><c> all</c><00:11:23.760><c> endpoints</c>

00:11:24.310 --> 00:11:24.320 align:start position:0%
endpoint and that's how all endpoints
 

00:11:24.320 --> 00:11:26.069 align:start position:0%
endpoint and that's how all endpoints
going<00:11:24.640><c> forward</c><00:11:25.040><c> will</c><00:11:25.200><c> be</c><00:11:25.440><c> created</c>

00:11:26.069 --> 00:11:26.079 align:start position:0%
going forward will be created
 

00:11:26.079 --> 00:11:28.389 align:start position:0%
going forward will be created
then<00:11:26.240><c> you</c><00:11:26.399><c> can</c><00:11:26.560><c> stop</c><00:11:27.120><c> your</c><00:11:27.440><c> emulators</c><00:11:28.160><c> from</c>

00:11:28.389 --> 00:11:28.399 align:start position:0%
then you can stop your emulators from
 

00:11:28.399 --> 00:11:30.710 align:start position:0%
then you can stop your emulators from
running<00:11:29.040><c> and</c><00:11:29.200><c> will</c><00:11:29.440><c> move</c><00:11:29.760><c> on</c><00:11:29.920><c> to</c><00:11:30.079><c> creating</c><00:11:30.640><c> a</c>

00:11:30.710 --> 00:11:30.720 align:start position:0%
running and will move on to creating a
 

00:11:30.720 --> 00:11:31.590 align:start position:0%
running and will move on to creating a
reactive

00:11:31.590 --> 00:11:31.600 align:start position:0%
reactive
 

00:11:31.600 --> 00:11:33.750 align:start position:0%
reactive
function<00:11:32.160><c> to</c><00:11:32.320><c> demonstrate</c><00:11:32.800><c> this</c><00:11:33.120><c> we'll</c><00:11:33.360><c> add</c><00:11:33.600><c> a</c>

00:11:33.750 --> 00:11:33.760 align:start position:0%
function to demonstrate this we'll add a
 

00:11:33.760 --> 00:11:36.470 align:start position:0%
function to demonstrate this we'll add a
function<00:11:34.320><c> that</c><00:11:34.560><c> will</c><00:11:34.800><c> fire</c><00:11:35.279><c> when</c><00:11:35.600><c> a</c><00:11:35.760><c> new</c><00:11:36.079><c> user</c>

00:11:36.470 --> 00:11:36.480 align:start position:0%
function that will fire when a new user
 

00:11:36.480 --> 00:11:38.949 align:start position:0%
function that will fire when a new user
is<00:11:36.720><c> created</c><00:11:37.279><c> in</c><00:11:37.360><c> the</c><00:11:37.519><c> firestore</c><00:11:38.240><c> database</c>

00:11:38.949 --> 00:11:38.959 align:start position:0%
is created in the firestore database
 

00:11:38.959 --> 00:11:41.030 align:start position:0%
is created in the firestore database
we'll<00:11:39.120><c> create</c><00:11:39.440><c> a</c><00:11:39.519><c> new</c><00:11:39.760><c> folder</c><00:11:40.320><c> in</c><00:11:40.399><c> the</c><00:11:40.640><c> users</c>

00:11:41.030 --> 00:11:41.040 align:start position:0%
we'll create a new folder in the users
 

00:11:41.040 --> 00:11:43.509 align:start position:0%
we'll create a new folder in the users
folder<00:11:41.519><c> called</c><00:11:41.920><c> reactive</c><00:11:42.640><c> and</c><00:11:42.880><c> inside</c><00:11:43.279><c> that</c>

00:11:43.509 --> 00:11:43.519 align:start position:0%
folder called reactive and inside that
 

00:11:43.519 --> 00:11:44.069 align:start position:0%
folder called reactive and inside that
folder

00:11:44.069 --> 00:11:44.079 align:start position:0%
folder
 

00:11:44.079 --> 00:11:48.509 align:start position:0%
folder
will<00:11:44.240><c> create</c><00:11:44.640><c> a</c><00:11:44.880><c> new</c><00:11:45.200><c> file</c><00:11:45.600><c> called</c><00:11:46.079><c> on</c>

00:11:48.509 --> 00:11:48.519 align:start position:0%
 
 

00:11:48.519 --> 00:11:49.829 align:start position:0%
 
usercreated.function.ts

00:11:49.829 --> 00:11:49.839 align:start position:0%
usercreated.function.ts
 

00:11:49.839 --> 00:11:52.430 align:start position:0%
usercreated.function.ts
and<00:11:50.079><c> as</c><00:11:50.240><c> you</c><00:11:50.320><c> can</c><00:11:50.560><c> imagine</c><00:11:51.279><c> the</c>

00:11:52.430 --> 00:11:52.440 align:start position:0%
and as you can imagine the
 

00:11:52.440 --> 00:11:53.590 align:start position:0%
and as you can imagine the
part.function.ts

00:11:53.590 --> 00:11:53.600 align:start position:0%
part.function.ts
 

00:11:53.600 --> 00:11:55.910 align:start position:0%
part.function.ts
is<00:11:53.920><c> very</c><00:11:54.240><c> important</c><00:11:54.959><c> that's</c><00:11:55.200><c> how</c><00:11:55.360><c> we</c><00:11:55.519><c> know</c>

00:11:55.910 --> 00:11:55.920 align:start position:0%
is very important that's how we know
 

00:11:55.920 --> 00:11:58.389 align:start position:0%
is very important that's how we know
which<00:11:56.160><c> file</c><00:11:56.399><c> to</c><00:11:56.560><c> load</c><00:11:56.959><c> as</c><00:11:57.120><c> a</c><00:11:57.279><c> reactive</c><00:11:57.920><c> cloud</c>

00:11:58.389 --> 00:11:58.399 align:start position:0%
which file to load as a reactive cloud
 

00:11:58.399 --> 00:12:00.389 align:start position:0%
which file to load as a reactive cloud
function<00:11:58.880><c> we'll</c><00:11:59.040><c> start</c><00:11:59.360><c> off</c><00:11:59.519><c> by</c><00:11:59.760><c> importing</c>

00:12:00.389 --> 00:12:00.399 align:start position:0%
function we'll start off by importing
 

00:12:00.399 --> 00:12:02.230 align:start position:0%
function we'll start off by importing
the<00:12:00.639><c> firebase</c><00:12:01.200><c> functions</c><00:12:01.839><c> as</c>

00:12:02.230 --> 00:12:02.240 align:start position:0%
the firebase functions as
 

00:12:02.240 --> 00:12:04.550 align:start position:0%
the firebase functions as
functions<00:12:02.959><c> and</c><00:12:03.040><c> then</c><00:12:03.279><c> on</c><00:12:03.440><c> the</c><00:12:03.680><c> exports</c><00:12:04.320><c> we'll</c>

00:12:04.550 --> 00:12:04.560 align:start position:0%
functions and then on the exports we'll
 

00:12:04.560 --> 00:12:05.829 align:start position:0%
functions and then on the exports we'll
create<00:12:05.040><c> a</c><00:12:05.279><c> new</c>

00:12:05.829 --> 00:12:05.839 align:start position:0%
create a new
 

00:12:05.839 --> 00:12:08.470 align:start position:0%
create a new
function<00:12:06.320><c> called</c><00:12:06.720><c> on</c><00:12:07.200><c> user</c><00:12:07.600><c> created</c><00:12:08.320><c> and</c>

00:12:08.470 --> 00:12:08.480 align:start position:0%
function called on user created and
 

00:12:08.480 --> 00:12:09.590 align:start position:0%
function called on user created and
we'll<00:12:08.720><c> assign</c><00:12:09.120><c> that</c>

00:12:09.590 --> 00:12:09.600 align:start position:0%
we'll assign that
 

00:12:09.600 --> 00:12:13.350 align:start position:0%
we'll assign that
to<00:12:10.079><c> the</c><00:12:10.320><c> oncreate</c><00:12:11.680><c> function</c><00:12:12.240><c> callback</c>

00:12:13.350 --> 00:12:13.360 align:start position:0%
to the oncreate function callback
 

00:12:13.360 --> 00:12:16.389 align:start position:0%
to the oncreate function callback
provided<00:12:14.000><c> by</c><00:12:14.320><c> a</c><00:12:14.560><c> document</c><00:12:15.279><c> from</c><00:12:15.680><c> firestore</c>

00:12:16.389 --> 00:12:16.399 align:start position:0%
provided by a document from firestore
 

00:12:16.399 --> 00:12:18.470 align:start position:0%
provided by a document from firestore
to<00:12:16.639><c> access</c><00:12:17.040><c> that</c><00:12:17.279><c> we'll</c><00:12:17.839><c> index</c><00:12:18.240><c> into</c>

00:12:18.470 --> 00:12:18.480 align:start position:0%
to access that we'll index into
 

00:12:18.480 --> 00:12:21.990 align:start position:0%
to access that we'll index into
functions

00:12:21.990 --> 00:12:22.000 align:start position:0%
 
 

00:12:22.000 --> 00:12:25.030 align:start position:0%
 
go<00:12:22.240><c> to</c><00:12:22.399><c> firestore</c><00:12:23.120><c> then</c><00:12:23.360><c> supply</c><00:12:24.160><c> the</c><00:12:24.399><c> document</c>

00:12:25.030 --> 00:12:25.040 align:start position:0%
go to firestore then supply the document
 

00:12:25.040 --> 00:12:25.590 align:start position:0%
go to firestore then supply the document
pattern

00:12:25.590 --> 00:12:25.600 align:start position:0%
pattern
 

00:12:25.600 --> 00:12:28.230 align:start position:0%
pattern
that<00:12:25.839><c> we</c><00:12:26.000><c> would</c><00:12:26.240><c> like</c><00:12:26.720><c> to</c><00:12:27.040><c> listen</c><00:12:27.360><c> to</c><00:12:27.839><c> in</c><00:12:28.000><c> our</c>

00:12:28.230 --> 00:12:28.240 align:start position:0%
that we would like to listen to in our
 

00:12:28.240 --> 00:12:30.629 align:start position:0%
that we would like to listen to in our
case<00:12:28.639><c> we</c><00:12:28.800><c> want</c><00:12:29.040><c> to</c><00:12:29.360><c> listen</c><00:12:29.760><c> to</c><00:12:30.000><c> the</c><00:12:30.240><c> users</c>

00:12:30.629 --> 00:12:30.639 align:start position:0%
case we want to listen to the users
 

00:12:30.639 --> 00:12:31.350 align:start position:0%
case we want to listen to the users
collection

00:12:31.350 --> 00:12:31.360 align:start position:0%
collection
 

00:12:31.360 --> 00:12:34.470 align:start position:0%
collection
and<00:12:31.760><c> check</c><00:12:32.160><c> for</c><00:12:32.399><c> any</c><00:12:32.720><c> new</c><00:12:33.040><c> user</c><00:12:33.440><c> id</c><00:12:33.920><c> and</c><00:12:34.079><c> lastly</c>

00:12:34.470 --> 00:12:34.480 align:start position:0%
and check for any new user id and lastly
 

00:12:34.480 --> 00:12:35.509 align:start position:0%
and check for any new user id and lastly
we<00:12:34.639><c> want</c><00:12:34.880><c> to</c><00:12:35.040><c> listen</c>

00:12:35.509 --> 00:12:35.519 align:start position:0%
we want to listen
 

00:12:35.519 --> 00:12:38.710 align:start position:0%
we want to listen
to<00:12:36.000><c> the</c><00:12:36.279><c> oncreate</c><00:12:37.279><c> function</c><00:12:37.839><c> callback</c><00:12:38.480><c> this</c>

00:12:38.710 --> 00:12:38.720 align:start position:0%
to the oncreate function callback this
 

00:12:38.720 --> 00:12:39.430 align:start position:0%
to the oncreate function callback this
takes<00:12:39.120><c> in</c>

00:12:39.430 --> 00:12:39.440 align:start position:0%
takes in
 

00:12:39.440 --> 00:12:42.150 align:start position:0%
takes in
a<00:12:40.079><c> callback</c><00:12:40.560><c> function</c><00:12:41.279><c> that</c><00:12:41.519><c> provides</c><00:12:42.000><c> us</c>

00:12:42.150 --> 00:12:42.160 align:start position:0%
a callback function that provides us
 

00:12:42.160 --> 00:12:43.269 align:start position:0%
a callback function that provides us
with<00:12:42.480><c> the</c><00:12:42.720><c> user's</c>

00:12:43.269 --> 00:12:43.279 align:start position:0%
with the user's
 

00:12:43.279 --> 00:12:46.069 align:start position:0%
with the user's
snapshot<00:12:44.000><c> as</c><00:12:44.160><c> well</c><00:12:44.399><c> as</c><00:12:44.639><c> the</c><00:12:44.880><c> context</c><00:12:45.519><c> of</c><00:12:45.680><c> this</c>

00:12:46.069 --> 00:12:46.079 align:start position:0%
snapshot as well as the context of this
 

00:12:46.079 --> 00:12:47.190 align:start position:0%
snapshot as well as the context of this
event<00:12:46.560><c> trigger</c>

00:12:47.190 --> 00:12:47.200 align:start position:0%
event trigger
 

00:12:47.200 --> 00:12:49.430 align:start position:0%
event trigger
the<00:12:47.360><c> data</c><00:12:47.760><c> for</c><00:12:48.000><c> this</c><00:12:48.240><c> document</c><00:12:49.040><c> can</c><00:12:49.279><c> be</c>

00:12:49.430 --> 00:12:49.440 align:start position:0%
the data for this document can be
 

00:12:49.440 --> 00:12:51.829 align:start position:0%
the data for this document can be
retrieved<00:12:49.920><c> by</c><00:12:50.160><c> calling</c><00:12:50.639><c> the</c><00:12:50.880><c> data</c><00:12:51.360><c> function</c>

00:12:51.829 --> 00:12:51.839 align:start position:0%
retrieved by calling the data function
 

00:12:51.839 --> 00:12:53.509 align:start position:0%
retrieved by calling the data function
on<00:12:52.000><c> the</c><00:12:52.160><c> user</c><00:12:52.639><c> snapshot</c>

00:12:53.509 --> 00:12:53.519 align:start position:0%
on the user snapshot
 

00:12:53.519 --> 00:12:55.910 align:start position:0%
on the user snapshot
to<00:12:53.680><c> avoid</c><00:12:54.160><c> getting</c><00:12:54.560><c> off</c><00:12:54.880><c> topic</c><00:12:55.279><c> we're</c><00:12:55.519><c> simply</c>

00:12:55.910 --> 00:12:55.920 align:start position:0%
to avoid getting off topic we're simply
 

00:12:55.920 --> 00:12:56.710 align:start position:0%
to avoid getting off topic we're simply
going<00:12:56.240><c> to</c>

00:12:56.710 --> 00:12:56.720 align:start position:0%
going to
 

00:12:56.720 --> 00:12:59.190 align:start position:0%
going to
log<00:12:57.040><c> out</c><00:12:57.279><c> some</c><00:12:57.600><c> text</c><00:12:58.000><c> that</c><00:12:58.240><c> says</c><00:12:58.480><c> that</c><00:12:58.720><c> we</c><00:12:58.880><c> have</c>

00:12:59.190 --> 00:12:59.200 align:start position:0%
log out some text that says that we have
 

00:12:59.200 --> 00:13:00.629 align:start position:0%
log out some text that says that we have
sent<00:12:59.519><c> an</c><00:12:59.680><c> email</c><00:13:00.160><c> to</c>

00:13:00.629 --> 00:13:00.639 align:start position:0%
sent an email to
 

00:13:00.639 --> 00:13:02.870 align:start position:0%
sent an email to
the<00:13:00.880><c> email</c><00:13:01.279><c> value</c><00:13:01.760><c> on</c><00:13:01.920><c> the</c><00:13:02.079><c> data</c><00:13:02.480><c> from</c><00:13:02.639><c> the</c>

00:13:02.870 --> 00:13:02.880 align:start position:0%
the email value on the data from the
 

00:13:02.880 --> 00:13:05.030 align:start position:0%
the email value on the data from the
document<00:13:03.519><c> to</c><00:13:03.680><c> test</c><00:13:04.079><c> out</c><00:13:04.240><c> a</c><00:13:04.320><c> reactive</c>

00:13:05.030 --> 00:13:05.040 align:start position:0%
document to test out a reactive
 

00:13:05.040 --> 00:13:07.269 align:start position:0%
document to test out a reactive
function<00:13:05.680><c> you</c><00:13:05.920><c> have</c><00:13:06.000><c> to</c><00:13:06.160><c> start</c><00:13:06.720><c> all</c><00:13:06.959><c> of</c><00:13:07.120><c> the</c>

00:13:07.269 --> 00:13:07.279 align:start position:0%
function you have to start all of the
 

00:13:07.279 --> 00:13:08.389 align:start position:0%
function you have to start all of the
emulators

00:13:08.389 --> 00:13:08.399 align:start position:0%
emulators
 

00:13:08.399 --> 00:13:11.910 align:start position:0%
emulators
so<00:13:08.560><c> the</c><00:13:08.800><c> npm</c><00:13:09.760><c> run</c><00:13:10.320><c> sir</c><00:13:10.639><c> function</c><00:13:11.279><c> won't</c><00:13:11.600><c> work</c>

00:13:11.910 --> 00:13:11.920 align:start position:0%
so the npm run sir function won't work
 

00:13:11.920 --> 00:13:13.509 align:start position:0%
so the npm run sir function won't work
because<00:13:12.320><c> that</c><00:13:12.639><c> only</c><00:13:12.880><c> deploys</c>

00:13:13.509 --> 00:13:13.519 align:start position:0%
because that only deploys
 

00:13:13.519 --> 00:13:15.590 align:start position:0%
because that only deploys
the<00:13:13.680><c> functions</c><00:13:14.160><c> to</c><00:13:14.320><c> the</c><00:13:14.480><c> emulator</c><00:13:15.040><c> so</c><00:13:15.200><c> to</c><00:13:15.360><c> run</c>

00:13:15.590 --> 00:13:15.600 align:start position:0%
the functions to the emulator so to run
 

00:13:15.600 --> 00:13:17.350 align:start position:0%
the functions to the emulator so to run
this<00:13:15.839><c> time</c><00:13:16.240><c> we'll</c><00:13:16.480><c> first</c><00:13:16.880><c> run</c>

00:13:17.350 --> 00:13:17.360 align:start position:0%
this time we'll first run
 

00:13:17.360 --> 00:13:19.990 align:start position:0%
this time we'll first run
npm<00:13:17.920><c> run</c><00:13:18.160><c> bold</c><00:13:18.639><c> and</c><00:13:18.800><c> once</c><00:13:19.040><c> that's</c><00:13:19.360><c> complete</c>

00:13:19.990 --> 00:13:20.000 align:start position:0%
npm run bold and once that's complete
 

00:13:20.000 --> 00:13:20.790 align:start position:0%
npm run bold and once that's complete
we'll<00:13:20.399><c> run</c>

00:13:20.790 --> 00:13:20.800 align:start position:0%
we'll run
 

00:13:20.800 --> 00:13:23.910 align:start position:0%
we'll run
firebase<00:13:21.519><c> emulators</c><00:13:22.560><c> colon</c><00:13:23.120><c> start</c><00:13:23.600><c> this</c><00:13:23.760><c> will</c>

00:13:23.910 --> 00:13:23.920 align:start position:0%
firebase emulators colon start this will
 

00:13:23.920 --> 00:13:24.470 align:start position:0%
firebase emulators colon start this will
start<00:13:24.240><c> up</c>

00:13:24.470 --> 00:13:24.480 align:start position:0%
start up
 

00:13:24.480 --> 00:13:26.949 align:start position:0%
start up
the<00:13:24.639><c> functions</c><00:13:25.279><c> as</c><00:13:25.519><c> well</c><00:13:25.839><c> as</c><00:13:26.079><c> the</c><00:13:26.320><c> firestore</c>

00:13:26.949 --> 00:13:26.959 align:start position:0%
the functions as well as the firestore
 

00:13:26.959 --> 00:13:28.629 align:start position:0%
the functions as well as the firestore
emulator<00:13:27.519><c> that</c><00:13:27.680><c> we</c><00:13:27.839><c> selected</c><00:13:28.399><c> at</c><00:13:28.560><c> the</c>

00:13:28.629 --> 00:13:28.639 align:start position:0%
emulator that we selected at the
 

00:13:28.639 --> 00:13:29.350 align:start position:0%
emulator that we selected at the
beginning

00:13:29.350 --> 00:13:29.360 align:start position:0%
beginning
 

00:13:29.360 --> 00:13:32.069 align:start position:0%
beginning
and<00:13:29.440><c> then</c><00:13:29.600><c> you'll</c><00:13:29.839><c> see</c><00:13:30.160><c> two</c><00:13:30.480><c> urls</c><00:13:31.519><c> one</c><00:13:31.760><c> for</c><00:13:31.920><c> the</c>

00:13:32.069 --> 00:13:32.079 align:start position:0%
and then you'll see two urls one for the
 

00:13:32.079 --> 00:13:33.829 align:start position:0%
and then you'll see two urls one for the
functions<00:13:32.560><c> emulator</c><00:13:33.200><c> and</c><00:13:33.360><c> one</c><00:13:33.519><c> for</c><00:13:33.680><c> the</c>

00:13:33.829 --> 00:13:33.839 align:start position:0%
functions emulator and one for the
 

00:13:33.839 --> 00:13:34.629 align:start position:0%
functions emulator and one for the
firestore

00:13:34.629 --> 00:13:34.639 align:start position:0%
firestore
 

00:13:34.639 --> 00:13:36.949 align:start position:0%
firestore
emulator<00:13:35.440><c> in</c><00:13:35.600><c> addition</c><00:13:35.920><c> to</c><00:13:36.079><c> that</c><00:13:36.399><c> we</c><00:13:36.560><c> can</c><00:13:36.720><c> see</c>

00:13:36.949 --> 00:13:36.959 align:start position:0%
emulator in addition to that we can see
 

00:13:36.959 --> 00:13:39.030 align:start position:0%
emulator in addition to that we can see
that<00:13:37.200><c> we</c><00:13:37.440><c> also</c><00:13:37.760><c> now</c><00:13:37.920><c> have</c><00:13:38.160><c> a</c><00:13:38.320><c> new</c><00:13:38.639><c> function</c>

00:13:39.030 --> 00:13:39.040 align:start position:0%
that we also now have a new function
 

00:13:39.040 --> 00:13:39.990 align:start position:0%
that we also now have a new function
deployed

00:13:39.990 --> 00:13:40.000 align:start position:0%
deployed
 

00:13:40.000 --> 00:13:43.110 align:start position:0%
deployed
called<00:13:40.320><c> on</c><00:13:40.880><c> user</c><00:13:41.360><c> created</c><00:13:42.000><c> we</c><00:13:42.160><c> will</c><00:13:42.560><c> go</c><00:13:42.800><c> ahead</c>

00:13:43.110 --> 00:13:43.120 align:start position:0%
called on user created we will go ahead
 

00:13:43.120 --> 00:13:43.910 align:start position:0%
called on user created we will go ahead
and<00:13:43.279><c> create</c>

00:13:43.910 --> 00:13:43.920 align:start position:0%
and create
 

00:13:43.920 --> 00:13:45.590 align:start position:0%
and create
an<00:13:44.079><c> actual</c><00:13:44.480><c> document</c><00:13:45.040><c> in</c><00:13:45.120><c> the</c><00:13:45.279><c> users</c>

00:13:45.590 --> 00:13:45.600 align:start position:0%
an actual document in the users
 

00:13:45.600 --> 00:13:47.430 align:start position:0%
an actual document in the users
collection<00:13:46.320><c> and</c><00:13:46.480><c> that</c><00:13:46.800><c> function</c>

00:13:47.430 --> 00:13:47.440 align:start position:0%
collection and that function
 

00:13:47.440 --> 00:13:49.829 align:start position:0%
collection and that function
should<00:13:47.760><c> fire</c><00:13:48.240><c> on</c><00:13:48.399><c> its</c><00:13:48.639><c> own</c><00:13:49.040><c> which</c><00:13:49.279><c> is</c><00:13:49.440><c> why</c><00:13:49.600><c> it's</c>

00:13:49.829 --> 00:13:49.839 align:start position:0%
should fire on its own which is why it's
 

00:13:49.839 --> 00:13:51.509 align:start position:0%
should fire on its own which is why it's
called<00:13:50.079><c> a</c><00:13:50.240><c> reactive</c><00:13:50.880><c> function</c>

00:13:51.509 --> 00:13:51.519 align:start position:0%
called a reactive function
 

00:13:51.519 --> 00:13:54.230 align:start position:0%
called a reactive function
you<00:13:51.600><c> can</c><00:13:51.839><c> open</c><00:13:52.160><c> up</c><00:13:52.320><c> the</c><00:13:52.560><c> firestore</c><00:13:53.600><c> emulator</c>

00:13:54.230 --> 00:13:54.240 align:start position:0%
you can open up the firestore emulator
 

00:13:54.240 --> 00:13:54.870 align:start position:0%
you can open up the firestore emulator
url

00:13:54.870 --> 00:13:54.880 align:start position:0%
url
 

00:13:54.880 --> 00:13:57.189 align:start position:0%
url
then<00:13:55.120><c> you</c><00:13:55.199><c> can</c><00:13:55.360><c> click</c><00:13:55.760><c> on</c><00:13:56.079><c> start</c><00:13:56.639><c> collection</c>

00:13:57.189 --> 00:13:57.199 align:start position:0%
then you can click on start collection
 

00:13:57.199 --> 00:13:59.590 align:start position:0%
then you can click on start collection
we'll<00:13:57.360><c> give</c><00:13:57.519><c> it</c><00:13:57.680><c> a</c><00:13:57.760><c> collection</c><00:13:58.240><c> id</c><00:13:58.639><c> of</c><00:13:58.959><c> users</c>

00:13:59.590 --> 00:13:59.600 align:start position:0%
we'll give it a collection id of users
 

00:13:59.600 --> 00:14:01.990 align:start position:0%
we'll give it a collection id of users
and<00:13:59.760><c> for</c><00:13:59.920><c> the</c><00:14:00.079><c> field</c><00:14:00.399><c> value</c><00:14:01.120><c> we</c><00:14:01.279><c> know</c><00:14:01.519><c> that</c><00:14:01.680><c> we</c>

00:14:01.990 --> 00:14:02.000 align:start position:0%
and for the field value we know that we
 

00:14:02.000 --> 00:14:03.269 align:start position:0%
and for the field value we know that we
are<00:14:02.240><c> expecting</c><00:14:02.959><c> an</c>

00:14:03.269 --> 00:14:03.279 align:start position:0%
are expecting an
 

00:14:03.279 --> 00:14:05.269 align:start position:0%
are expecting an
email<00:14:03.680><c> i'll</c><00:14:03.839><c> be</c><00:14:04.000><c> so</c><00:14:04.240><c> kind</c><00:14:04.480><c> to</c><00:14:04.560><c> give</c><00:14:04.720><c> you</c><00:14:04.959><c> my</c>

00:14:05.269 --> 00:14:05.279 align:start position:0%
email i'll be so kind to give you my
 

00:14:05.279 --> 00:14:07.110 align:start position:0%
email i'll be so kind to give you my
actual<00:14:05.680><c> email</c><00:14:06.079><c> address</c><00:14:06.480><c> in</c><00:14:06.639><c> case</c><00:14:06.880><c> you</c><00:14:06.959><c> have</c>

00:14:07.110 --> 00:14:07.120 align:start position:0%
actual email address in case you have
 

00:14:07.120 --> 00:14:07.990 align:start position:0%
actual email address in case you have
any<00:14:07.360><c> questions</c>

00:14:07.990 --> 00:14:08.000 align:start position:0%
any questions
 

00:14:08.000 --> 00:14:13.509 align:start position:0%
any questions
which<00:14:08.240><c> is</c><00:14:08.480><c> dane</c><00:14:09.199><c> at</c><00:14:12.199><c> faultstacks.com</c>

00:14:13.509 --> 00:14:13.519 align:start position:0%
which is dane at faultstacks.com
 

00:14:13.519 --> 00:14:15.910 align:start position:0%
which is dane at faultstacks.com
if<00:14:13.680><c> i</c><00:14:13.839><c> click</c><00:14:14.399><c> save</c><00:14:14.959><c> and</c><00:14:15.120><c> that</c><00:14:15.279><c> document</c><00:14:15.760><c> is</c>

00:14:15.910 --> 00:14:15.920 align:start position:0%
if i click save and that document is
 

00:14:15.920 --> 00:14:16.550 align:start position:0%
if i click save and that document is
created

00:14:16.550 --> 00:14:16.560 align:start position:0%
created
 

00:14:16.560 --> 00:14:18.949 align:start position:0%
created
when<00:14:16.800><c> i</c><00:14:16.959><c> open</c><00:14:17.279><c> up</c><00:14:17.440><c> the</c><00:14:17.680><c> console</c><00:14:18.480><c> there</c><00:14:18.720><c> should</c>

00:14:18.949 --> 00:14:18.959 align:start position:0%
when i open up the console there should
 

00:14:18.959 --> 00:14:19.590 align:start position:0%
when i open up the console there should
be

00:14:19.590 --> 00:14:19.600 align:start position:0%
be
 

00:14:19.600 --> 00:14:22.230 align:start position:0%
be
logs<00:14:20.560><c> saying</c><00:14:20.880><c> that</c><00:14:21.040><c> we've</c><00:14:21.279><c> sent</c><00:14:21.519><c> an</c><00:14:21.680><c> email</c><00:14:22.079><c> to</c>

00:14:22.230 --> 00:14:22.240 align:start position:0%
logs saying that we've sent an email to
 

00:14:22.240 --> 00:14:23.590 align:start position:0%
logs saying that we've sent an email to
this<00:14:22.560><c> email</c><00:14:22.800><c> address</c>

00:14:23.590 --> 00:14:23.600 align:start position:0%
this email address
 

00:14:23.600 --> 00:14:26.150 align:start position:0%
this email address
it<00:14:23.839><c> tells</c><00:14:24.160><c> us</c><00:14:24.320><c> that</c><00:14:24.560><c> it</c><00:14:24.720><c> begins</c><00:14:25.120><c> the</c><00:14:25.199><c> execution</c>

00:14:26.150 --> 00:14:26.160 align:start position:0%
it tells us that it begins the execution
 

00:14:26.160 --> 00:14:27.670 align:start position:0%
it tells us that it begins the execution
and<00:14:26.240><c> then</c><00:14:26.399><c> it</c><00:14:26.560><c> sends</c><00:14:26.959><c> the</c><00:14:27.199><c> email</c>

00:14:27.670 --> 00:14:27.680 align:start position:0%
and then it sends the email
 

00:14:27.680 --> 00:14:29.990 align:start position:0%
and then it sends the email
and<00:14:27.839><c> that's</c><00:14:28.079><c> it</c><00:14:28.240><c> you've</c><00:14:28.480><c> created</c><00:14:29.040><c> a</c><00:14:29.120><c> reactive</c>

00:14:29.990 --> 00:14:30.000 align:start position:0%
and that's it you've created a reactive
 

00:14:30.000 --> 00:14:31.590 align:start position:0%
and that's it you've created a reactive
function<00:14:30.639><c> as</c><00:14:30.880><c> well</c><00:14:31.120><c> as</c><00:14:31.360><c> an</c>

00:14:31.590 --> 00:14:31.600 align:start position:0%
function as well as an
 

00:14:31.600 --> 00:14:34.470 align:start position:0%
function as well as an
http<00:14:32.639><c> endpoint</c><00:14:33.440><c> going</c><00:14:33.760><c> further</c><00:14:34.240><c> when</c><00:14:34.399><c> you</c>

00:14:34.470 --> 00:14:34.480 align:start position:0%
http endpoint going further when you
 

00:14:34.480 --> 00:14:36.310 align:start position:0%
http endpoint going further when you
want<00:14:34.720><c> to</c><00:14:34.880><c> expand</c><00:14:35.279><c> your</c><00:14:35.519><c> backend</c>

00:14:36.310 --> 00:14:36.320 align:start position:0%
want to expand your backend
 

00:14:36.320 --> 00:14:38.389 align:start position:0%
want to expand your backend
you<00:14:36.480><c> simply</c><00:14:36.880><c> create</c><00:14:37.279><c> a</c><00:14:37.440><c> new</c><00:14:37.760><c> file</c><00:14:38.160><c> in</c><00:14:38.240><c> the</c>

00:14:38.389 --> 00:14:38.399 align:start position:0%
you simply create a new file in the
 

00:14:38.399 --> 00:14:39.590 align:start position:0%
you simply create a new file in the
dedicated<00:14:39.040><c> folder</c>

00:14:39.590 --> 00:14:39.600 align:start position:0%
dedicated folder
 

00:14:39.600 --> 00:14:41.590 align:start position:0%
dedicated folder
and<00:14:39.760><c> it</c><00:14:39.920><c> will</c><00:14:40.079><c> be</c><00:14:40.240><c> added</c><00:14:40.720><c> automatically</c><00:14:41.440><c> to</c>

00:14:41.590 --> 00:14:41.600 align:start position:0%
and it will be added automatically to
 

00:14:41.600 --> 00:14:43.750 align:start position:0%
and it will be added automatically to
your<00:14:41.760><c> backend</c><00:14:42.399><c> when</c><00:14:42.560><c> you</c><00:14:42.800><c> deploy</c><00:14:43.360><c> this</c><00:14:43.519><c> one</c>

00:14:43.750 --> 00:14:43.760 align:start position:0%
your backend when you deploy this one
 

00:14:43.760 --> 00:14:44.949 align:start position:0%
your backend when you deploy this one
last<00:14:44.000><c> thing</c><00:14:44.240><c> i</c><00:14:44.399><c> wanted</c>

00:14:44.949 --> 00:14:44.959 align:start position:0%
last thing i wanted
 

00:14:44.959 --> 00:14:47.590 align:start position:0%
last thing i wanted
to<00:14:45.199><c> show</c><00:14:45.440><c> you</c><00:14:45.760><c> which</c><00:14:46.000><c> is</c><00:14:46.079><c> to</c><00:14:46.320><c> improve</c><00:14:46.880><c> the</c><00:14:47.040><c> code</c>

00:14:47.590 --> 00:14:47.600 align:start position:0%
to show you which is to improve the code
 

00:14:47.600 --> 00:14:49.430 align:start position:0%
to show you which is to improve the code
setup<00:14:48.079><c> the</c><00:14:48.240><c> way</c><00:14:48.399><c> that</c><00:14:48.560><c> the</c><00:14:48.720><c> default</c>

00:14:49.430 --> 00:14:49.440 align:start position:0%
setup the way that the default
 

00:14:49.440 --> 00:14:51.430 align:start position:0%
setup the way that the default
typescript<00:14:50.079><c> project</c><00:14:50.480><c> is</c><00:14:50.560><c> set</c><00:14:50.800><c> up</c><00:14:51.040><c> is</c><00:14:51.199><c> not</c>

00:14:51.430 --> 00:14:51.440 align:start position:0%
typescript project is set up is not
 

00:14:51.440 --> 00:14:53.910 align:start position:0%
typescript project is set up is not
sufficient<00:14:52.160><c> for</c><00:14:52.399><c> consistent</c><00:14:53.120><c> deployments</c>

00:14:53.910 --> 00:14:53.920 align:start position:0%
sufficient for consistent deployments
 

00:14:53.920 --> 00:14:54.790 align:start position:0%
sufficient for consistent deployments
and<00:14:54.079><c> debugging</c>

00:14:54.790 --> 00:14:54.800 align:start position:0%
and debugging
 

00:14:54.800 --> 00:14:56.069 align:start position:0%
and debugging
and<00:14:54.880><c> because</c><00:14:55.199><c> of</c><00:14:55.360><c> that</c><00:14:55.519><c> we'll</c><00:14:55.760><c> add</c><00:14:55.920><c> some</c>

00:14:56.069 --> 00:14:56.079 align:start position:0%
and because of that we'll add some
 

00:14:56.079 --> 00:14:57.910 align:start position:0%
and because of that we'll add some
additional<00:14:56.560><c> things</c><00:14:56.880><c> into</c><00:14:57.199><c> our</c><00:14:57.360><c> project</c><00:14:57.760><c> we'll</c>

00:14:57.910 --> 00:14:57.920 align:start position:0%
additional things into our project we'll
 

00:14:57.920 --> 00:14:59.829 align:start position:0%
additional things into our project we'll
start<00:14:58.160><c> by</c><00:14:58.399><c> making</c><00:14:58.720><c> sure</c><00:14:58.959><c> that</c><00:14:59.279><c> the</c><00:14:59.519><c> old</c>

00:14:59.829 --> 00:14:59.839 align:start position:0%
start by making sure that the old
 

00:14:59.839 --> 00:15:00.870 align:start position:0%
start by making sure that the old
function<00:15:00.399><c> code</c>

00:15:00.870 --> 00:15:00.880 align:start position:0%
function code
 

00:15:00.880 --> 00:15:02.949 align:start position:0%
function code
doesn't<00:15:01.440><c> lurk</c><00:15:01.760><c> around</c><00:15:02.160><c> when</c><00:15:02.320><c> we're</c><00:15:02.560><c> testing</c>

00:15:02.949 --> 00:15:02.959 align:start position:0%
doesn't lurk around when we're testing
 

00:15:02.959 --> 00:15:04.069 align:start position:0%
doesn't lurk around when we're testing
any<00:15:03.199><c> new</c><00:15:03.519><c> changes</c>

00:15:04.069 --> 00:15:04.079 align:start position:0%
any new changes
 

00:15:04.079 --> 00:15:06.550 align:start position:0%
any new changes
to<00:15:04.320><c> fix</c><00:15:04.560><c> that</c><00:15:04.880><c> we'll</c><00:15:05.040><c> add</c><00:15:05.360><c> a</c><00:15:05.600><c> new</c><00:15:05.839><c> package</c><00:15:06.320><c> into</c>

00:15:06.550 --> 00:15:06.560 align:start position:0%
to fix that we'll add a new package into
 

00:15:06.560 --> 00:15:08.069 align:start position:0%
to fix that we'll add a new package into
the<00:15:06.720><c> functions</c><00:15:07.199><c> folder</c><00:15:07.600><c> called</c>

00:15:08.069 --> 00:15:08.079 align:start position:0%
the functions folder called
 

00:15:08.079 --> 00:15:11.350 align:start position:0%
the functions folder called
remraf<00:15:08.880><c> we'll</c><00:15:09.120><c> run</c><00:15:09.440><c> npm</c><00:15:10.160><c> install</c>

00:15:11.350 --> 00:15:11.360 align:start position:0%
remraf we'll run npm install
 

00:15:11.360 --> 00:15:14.389 align:start position:0%
remraf we'll run npm install
d<00:15:12.000><c> remraf</c><00:15:13.040><c> this</c><00:15:13.279><c> will</c><00:15:13.440><c> install</c><00:15:13.839><c> it</c><00:15:14.000><c> as</c><00:15:14.240><c> a</c>

00:15:14.389 --> 00:15:14.399 align:start position:0%
d remraf this will install it as a
 

00:15:14.399 --> 00:15:15.350 align:start position:0%
d remraf this will install it as a
development

00:15:15.350 --> 00:15:15.360 align:start position:0%
development
 

00:15:15.360 --> 00:15:17.949 align:start position:0%
development
dependency<00:15:16.399><c> then</c><00:15:16.560><c> you</c><00:15:16.720><c> can</c><00:15:16.880><c> open</c><00:15:17.199><c> up</c><00:15:17.360><c> your</c>

00:15:17.949 --> 00:15:17.959 align:start position:0%
dependency then you can open up your
 

00:15:17.959 --> 00:15:19.509 align:start position:0%
dependency then you can open up your
package.json<00:15:19.040><c> file</c>

00:15:19.509 --> 00:15:19.519 align:start position:0%
package.json file
 

00:15:19.519 --> 00:15:21.949 align:start position:0%
package.json file
and<00:15:19.680><c> we'll</c><00:15:19.920><c> add</c><00:15:20.399><c> two</c><00:15:20.639><c> new</c><00:15:20.880><c> scripts</c><00:15:21.360><c> into</c><00:15:21.600><c> the</c>

00:15:21.949 --> 00:15:21.959 align:start position:0%
and we'll add two new scripts into the
 

00:15:21.959 --> 00:15:23.110 align:start position:0%
and we'll add two new scripts into the
package.json

00:15:23.110 --> 00:15:23.120 align:start position:0%
package.json
 

00:15:23.120 --> 00:15:26.230 align:start position:0%
package.json
above<00:15:23.760><c> the</c><00:15:24.000><c> bold</c><00:15:24.480><c> script</c><00:15:24.959><c> we'll</c><00:15:25.199><c> add</c><00:15:25.519><c> a</c><00:15:25.839><c> clean</c>

00:15:26.230 --> 00:15:26.240 align:start position:0%
above the bold script we'll add a clean
 

00:15:26.240 --> 00:15:27.670 align:start position:0%
above the bold script we'll add a clean
script<00:15:26.720><c> which</c><00:15:26.959><c> we'll</c><00:15:27.199><c> call</c>

00:15:27.670 --> 00:15:27.680 align:start position:0%
script which we'll call
 

00:15:27.680 --> 00:15:30.949 align:start position:0%
script which we'll call
rimref<00:15:28.560><c> and</c><00:15:28.800><c> pass</c><00:15:29.199><c> in</c><00:15:29.519><c> the</c><00:15:29.680><c> lib</c><00:15:30.079><c> directory</c>

00:15:30.949 --> 00:15:30.959 align:start position:0%
rimref and pass in the lib directory
 

00:15:30.959 --> 00:15:33.430 align:start position:0%
rimref and pass in the lib directory
and<00:15:31.040><c> then</c><00:15:31.199><c> we'll</c><00:15:31.440><c> add</c><00:15:31.839><c> our</c><00:15:32.160><c> second</c><00:15:32.880><c> script</c>

00:15:33.430 --> 00:15:33.440 align:start position:0%
and then we'll add our second script
 

00:15:33.440 --> 00:15:34.310 align:start position:0%
and then we'll add our second script
which<00:15:33.680><c> is</c><00:15:33.839><c> called</c>

00:15:34.310 --> 00:15:34.320 align:start position:0%
which is called
 

00:15:34.320 --> 00:15:36.949 align:start position:0%
which is called
pre-build<00:15:35.040><c> and</c><00:15:35.120><c> this</c><00:15:35.360><c> will</c><00:15:35.680><c> call</c><00:15:36.160><c> the</c><00:15:36.399><c> clean</c>

00:15:36.949 --> 00:15:36.959 align:start position:0%
pre-build and this will call the clean
 

00:15:36.959 --> 00:15:37.749 align:start position:0%
pre-build and this will call the clean
script

00:15:37.749 --> 00:15:37.759 align:start position:0%
script
 

00:15:37.759 --> 00:15:39.749 align:start position:0%
script
the<00:15:37.920><c> pre-build</c><00:15:38.480><c> will</c><00:15:38.720><c> always</c><00:15:39.040><c> run</c><00:15:39.360><c> before</c>

00:15:39.749 --> 00:15:39.759 align:start position:0%
the pre-build will always run before
 

00:15:39.759 --> 00:15:41.910 align:start position:0%
the pre-build will always run before
build<00:15:40.160><c> which</c><00:15:40.399><c> pulls</c><00:15:40.720><c> our</c><00:15:40.880><c> typescript</c><00:15:41.600><c> meaning</c>

00:15:41.910 --> 00:15:41.920 align:start position:0%
build which pulls our typescript meaning
 

00:15:41.920 --> 00:15:43.590 align:start position:0%
build which pulls our typescript meaning
the<00:15:42.079><c> old</c><00:15:42.320><c> code</c><00:15:42.560><c> will</c><00:15:42.720><c> be</c><00:15:42.880><c> deleted</c>

00:15:43.590 --> 00:15:43.600 align:start position:0%
the old code will be deleted
 

00:15:43.600 --> 00:15:45.990 align:start position:0%
the old code will be deleted
before<00:15:44.160><c> we</c><00:15:44.399><c> build</c><00:15:44.800><c> the</c><00:15:44.959><c> new</c><00:15:45.199><c> code</c><00:15:45.600><c> and</c><00:15:45.680><c> then</c><00:15:45.920><c> to</c>

00:15:45.990 --> 00:15:46.000 align:start position:0%
before we build the new code and then to
 

00:15:46.000 --> 00:15:47.110 align:start position:0%
before we build the new code and then to
deploy<00:15:46.399><c> we</c><00:15:46.560><c> can</c><00:15:46.720><c> run</c>

00:15:47.110 --> 00:15:47.120 align:start position:0%
deploy we can run
 

00:15:47.120 --> 00:15:49.990 align:start position:0%
deploy we can run
npm<00:15:47.759><c> run</c><00:15:48.000><c> build</c><00:15:48.800><c> as</c><00:15:48.959><c> you</c><00:15:49.120><c> see</c><00:15:49.360><c> there</c><00:15:49.519><c> will</c><00:15:49.759><c> now</c>

00:15:49.990 --> 00:15:50.000 align:start position:0%
npm run build as you see there will now
 

00:15:50.000 --> 00:15:50.629 align:start position:0%
npm run build as you see there will now
be

00:15:50.629 --> 00:15:50.639 align:start position:0%
be
 

00:15:50.639 --> 00:15:52.550 align:start position:0%
be
three<00:15:50.880><c> scripts</c><00:15:51.360><c> that's</c><00:15:51.600><c> being</c><00:15:51.920><c> executed</c>

00:15:52.550 --> 00:15:52.560 align:start position:0%
three scripts that's being executed
 

00:15:52.560 --> 00:15:54.150 align:start position:0%
three scripts that's being executed
because<00:15:52.800><c> of</c><00:15:52.959><c> the</c><00:15:53.040><c> two</c><00:15:53.279><c> additional</c><00:15:53.759><c> ones</c><00:15:54.000><c> we</c>

00:15:54.150 --> 00:15:54.160 align:start position:0%
because of the two additional ones we
 

00:15:54.160 --> 00:15:55.430 align:start position:0%
because of the two additional ones we
added<00:15:54.560><c> and</c><00:15:54.639><c> then</c><00:15:54.880><c> we'll</c><00:15:55.120><c> run</c>

00:15:55.430 --> 00:15:55.440 align:start position:0%
added and then we'll run
 

00:15:55.440 --> 00:15:58.470 align:start position:0%
added and then we'll run
npm<00:15:56.079><c> run</c><00:15:56.480><c> deploy</c><00:15:57.040><c> this</c><00:15:57.199><c> will</c><00:15:57.440><c> only</c><00:15:57.680><c> deploy</c><00:15:58.240><c> the</c>

00:15:58.470 --> 00:15:58.480 align:start position:0%
npm run deploy this will only deploy the
 

00:15:58.480 --> 00:16:00.230 align:start position:0%
npm run deploy this will only deploy the
functions<00:15:59.120><c> to</c><00:15:59.360><c> your</c><00:15:59.519><c> backend</c>

00:16:00.230 --> 00:16:00.240 align:start position:0%
functions to your backend
 

00:16:00.240 --> 00:16:02.069 align:start position:0%
functions to your backend
when<00:16:00.399><c> the</c><00:16:00.560><c> deployment</c><00:16:01.120><c> is</c><00:16:01.279><c> complete</c><00:16:01.839><c> you'll</c>

00:16:02.069 --> 00:16:02.079 align:start position:0%
when the deployment is complete you'll
 

00:16:02.079 --> 00:16:04.310 align:start position:0%
when the deployment is complete you'll
see<00:16:02.320><c> your</c><00:16:02.480><c> api</c><00:16:03.120><c> link</c><00:16:03.440><c> printed</c><00:16:03.920><c> out</c>

00:16:04.310 --> 00:16:04.320 align:start position:0%
see your api link printed out
 

00:16:04.320 --> 00:16:06.710 align:start position:0%
see your api link printed out
and<00:16:04.480><c> we</c><00:16:04.639><c> can</c><00:16:04.880><c> do</c><00:16:05.279><c> the</c><00:16:05.519><c> exact</c><00:16:05.839><c> same</c><00:16:06.160><c> test</c><00:16:06.480><c> with</c>

00:16:06.710 --> 00:16:06.720 align:start position:0%
and we can do the exact same test with
 

00:16:06.720 --> 00:16:08.389 align:start position:0%
and we can do the exact same test with
postman<00:16:07.279><c> that</c><00:16:07.360><c> we</c><00:16:07.519><c> did</c><00:16:07.759><c> earlier</c>

00:16:08.389 --> 00:16:08.399 align:start position:0%
postman that we did earlier
 

00:16:08.399 --> 00:16:10.550 align:start position:0%
postman that we did earlier
this<00:16:08.639><c> is</c><00:16:08.800><c> quite</c><00:16:08.959><c> a</c><00:16:09.120><c> new</c><00:16:09.360><c> package</c><00:16:09.839><c> and</c><00:16:10.079><c> a</c><00:16:10.160><c> way</c><00:16:10.320><c> of</c>

00:16:10.550 --> 00:16:10.560 align:start position:0%
this is quite a new package and a way of
 

00:16:10.560 --> 00:16:11.829 align:start position:0%
this is quite a new package and a way of
developing<00:16:11.120><c> a</c><00:16:11.279><c> back-end</c>

00:16:11.829 --> 00:16:11.839 align:start position:0%
developing a back-end
 

00:16:11.839 --> 00:16:14.470 align:start position:0%
developing a back-end
on<00:16:12.000><c> firebase</c><00:16:12.639><c> for</c><00:16:12.880><c> us</c><00:16:13.120><c> but</c><00:16:13.360><c> it</c><00:16:13.519><c> provides</c><00:16:14.240><c> a</c>

00:16:14.470 --> 00:16:14.480 align:start position:0%
on firebase for us but it provides a
 

00:16:14.480 --> 00:16:16.069 align:start position:0%
on firebase for us but it provides a
clear<00:16:14.880><c> path</c><00:16:15.199><c> towards</c><00:16:15.759><c> a</c>

00:16:16.069 --> 00:16:16.079 align:start position:0%
clear path towards a
 

00:16:16.079 --> 00:16:19.030 align:start position:0%
clear path towards a
large<00:16:16.560><c> and</c><00:16:16.800><c> maintainable</c><00:16:17.759><c> firebase</c><00:16:18.560><c> product</c>

00:16:19.030 --> 00:16:19.040 align:start position:0%
large and maintainable firebase product
 

00:16:19.040 --> 00:16:20.949 align:start position:0%
large and maintainable firebase product
if<00:16:19.199><c> you</c><00:16:19.279><c> want</c><00:16:19.519><c> to</c><00:16:19.600><c> see</c><00:16:19.839><c> this</c><00:16:20.079><c> being</c><00:16:20.320><c> used</c><00:16:20.720><c> in</c>

00:16:20.949 --> 00:16:20.959 align:start position:0%
if you want to see this being used in
 

00:16:20.959 --> 00:16:23.110 align:start position:0%
if you want to see this being used in
development<00:16:21.600><c> please</c><00:16:21.920><c> check</c><00:16:22.160><c> out</c><00:16:22.320><c> my</c><00:16:22.560><c> channel</c>

00:16:23.110 --> 00:16:23.120 align:start position:0%
development please check out my channel
 

00:16:23.120 --> 00:16:24.710 align:start position:0%
development please check out my channel
where<00:16:23.279><c> i'll</c><00:16:23.360><c> be</c><00:16:23.519><c> doing</c><00:16:24.000><c> backend</c><00:16:24.480><c> and</c>

00:16:24.710 --> 00:16:24.720 align:start position:0%
where i'll be doing backend and
 

00:16:24.720 --> 00:16:26.949 align:start position:0%
where i'll be doing backend and
front-end<00:16:25.199><c> work</c><00:16:25.600><c> on</c><00:16:25.839><c> a</c><00:16:26.000><c> product</c><00:16:26.480><c> over</c><00:16:26.800><c> the</c>

00:16:26.949 --> 00:16:26.959 align:start position:0%
front-end work on a product over the
 

00:16:26.959 --> 00:16:27.590 align:start position:0%
front-end work on a product over the
next

00:16:27.590 --> 00:16:27.600 align:start position:0%
next
 

00:16:27.600 --> 00:16:29.350 align:start position:0%
next
year<00:16:28.079><c> thank</c><00:16:28.320><c> you</c><00:16:28.480><c> jeff</c><00:16:28.720><c> for</c><00:16:28.880><c> having</c><00:16:29.120><c> me</c><00:16:29.279><c> on</c>

00:16:29.350 --> 00:16:29.360 align:start position:0%
year thank you jeff for having me on
 

00:16:29.360 --> 00:16:31.269 align:start position:0%
year thank you jeff for having me on
this<00:16:29.680><c> awesome</c><00:16:30.079><c> channel</c><00:16:30.560><c> and</c><00:16:30.720><c> thank</c><00:16:30.959><c> you</c><00:16:31.120><c> to</c>

00:16:31.269 --> 00:16:31.279 align:start position:0%
this awesome channel and thank you to
 

00:16:31.279 --> 00:16:33.509 align:start position:0%
this awesome channel and thank you to
the<00:16:31.440><c> contributors</c><00:16:32.240><c> lou</c><00:16:32.480><c> allen</c><00:16:32.800><c> android</c><00:16:33.360><c> that</c>

00:16:33.509 --> 00:16:33.519 align:start position:0%
the contributors lou allen android that
 

00:16:33.519 --> 00:16:35.350 align:start position:0%
the contributors lou allen android that
helped<00:16:33.759><c> me</c><00:16:34.000><c> get</c><00:16:34.160><c> the</c><00:16:34.320><c> packages</c><00:16:34.880><c> ready</c><00:16:35.199><c> for</c>

00:16:35.350 --> 00:16:35.360 align:start position:0%
helped me get the packages ready for
 

00:16:35.360 --> 00:16:36.230 align:start position:0%
helped me get the packages ready for
this<00:16:35.600><c> tutorial</c>

00:16:36.230 --> 00:16:36.240 align:start position:0%
this tutorial
 

00:16:36.240 --> 00:16:38.069 align:start position:0%
this tutorial
thank<00:16:36.480><c> you</c><00:16:36.560><c> guys</c><00:16:36.800><c> for</c><00:16:36.959><c> watching</c><00:16:37.519><c> and</c><00:16:37.600><c> i</c><00:16:37.680><c> hope</c><00:16:37.920><c> i</c>

00:16:38.069 --> 00:16:38.079 align:start position:0%
thank you guys for watching and i hope i
 

00:16:38.079 --> 00:16:40.470 align:start position:0%
thank you guys for watching and i hope i
see<00:16:38.240><c> you</c><00:16:38.399><c> over</c><00:16:38.720><c> at</c><00:16:38.800><c> the</c><00:16:38.959><c> full</c><00:16:39.120><c> stacks</c><00:16:39.519><c> channel</c>

00:16:40.470 --> 00:16:40.480 align:start position:0%
see you over at the full stacks channel
 

00:16:40.480 --> 00:16:42.389 align:start position:0%
see you over at the full stacks channel
thanks<00:16:40.720><c> for</c><00:16:40.880><c> watching</c><00:16:41.440><c> and</c><00:16:41.680><c> i</c><00:16:41.759><c> will</c><00:16:42.000><c> see</c><00:16:42.160><c> you</c>

00:16:42.389 --> 00:16:42.399 align:start position:0%
thanks for watching and i will see you
 

00:16:42.399 --> 00:16:47.680 align:start position:0%
thanks for watching and i will see you
in<00:16:42.560><c> the</c><00:16:42.639><c> next</c><00:16:44.680><c> one</c>

