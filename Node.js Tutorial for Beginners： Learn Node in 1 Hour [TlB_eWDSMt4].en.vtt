WEBVTT



00:00:00.210 --> 00:00:01.330 align:start position:0%
 
[Music]

00:00:01.330 --> 00:00:01.340 align:start position:0%
[Music]
 

00:00:01.340 --> 00:00:04.940 align:start position:0%
[Music]
no<00:00:02.340><c> js'</c><00:00:02.790><c> or</c><00:00:03.000><c> note</c><00:00:03.300><c> is</c><00:00:03.600><c> an</c><00:00:03.959><c> open</c><00:00:04.410><c> source</c><00:00:04.620><c> and</c>

00:00:04.940 --> 00:00:04.950 align:start position:0%
no js' or note is an open source and
 

00:00:04.950 --> 00:00:08.120 align:start position:0%
no js' or note is an open source and
cross-platform<00:00:05.580><c> runtime</c><00:00:06.680><c> environment</c><00:00:07.680><c> for</c>

00:00:08.120 --> 00:00:08.130 align:start position:0%
cross-platform runtime environment for
 

00:00:08.130 --> 00:00:11.089 align:start position:0%
cross-platform runtime environment for
executing<00:00:08.790><c> JavaScript</c><00:00:08.970><c> code</c><00:00:09.840><c> outside</c><00:00:10.769><c> of</c><00:00:11.010><c> a</c>

00:00:11.089 --> 00:00:11.099 align:start position:0%
executing JavaScript code outside of a
 

00:00:11.099 --> 00:00:13.910 align:start position:0%
executing JavaScript code outside of a
browser<00:00:11.450><c> quite</c><00:00:12.450><c> often</c><00:00:12.690><c> we</c><00:00:12.990><c> use</c><00:00:13.019><c> no</c><00:00:13.349><c> to</c><00:00:13.410><c> build</c>

00:00:13.910 --> 00:00:13.920 align:start position:0%
browser quite often we use no to build
 

00:00:13.920 --> 00:00:17.320 align:start position:0%
browser quite often we use no to build
back-end<00:00:14.759><c> services</c><00:00:15.269><c> also</c><00:00:15.540><c> called</c><00:00:16.020><c> api's</c><00:00:16.770><c> or</c>

00:00:17.320 --> 00:00:17.330 align:start position:0%
back-end services also called api's or
 

00:00:17.330 --> 00:00:20.540 align:start position:0%
back-end services also called api's or
application<00:00:18.330><c> programming</c><00:00:18.590><c> interfaces</c><00:00:19.590><c> these</c>

00:00:20.540 --> 00:00:20.550 align:start position:0%
application programming interfaces these
 

00:00:20.550 --> 00:00:23.240 align:start position:0%
application programming interfaces these
are<00:00:20.760><c> the</c><00:00:20.939><c> services</c><00:00:21.510><c> that</c><00:00:21.810><c> power</c><00:00:22.260><c> our</c><00:00:22.619><c> client</c>

00:00:23.240 --> 00:00:23.250 align:start position:0%
are the services that power our client
 

00:00:23.250 --> 00:00:25.580 align:start position:0%
are the services that power our client
applications<00:00:23.850><c> like</c><00:00:24.330><c> a</c><00:00:24.390><c> web</c><00:00:24.630><c> app</c><00:00:24.810><c> running</c>

00:00:25.580 --> 00:00:25.590 align:start position:0%
applications like a web app running
 

00:00:25.590 --> 00:00:28.160 align:start position:0%
applications like a web app running
inside<00:00:26.070><c> of</c><00:00:26.250><c> a</c><00:00:26.310><c> web</c><00:00:26.490><c> browser</c><00:00:26.760><c> or</c><00:00:27.210><c> mobile</c><00:00:27.510><c> app</c>

00:00:28.160 --> 00:00:28.170 align:start position:0%
inside of a web browser or mobile app
 

00:00:28.170 --> 00:00:31.339 align:start position:0%
inside of a web browser or mobile app
running<00:00:28.769><c> on</c><00:00:29.039><c> a</c><00:00:29.099><c> mobile</c><00:00:29.400><c> device</c><00:00:29.840><c> these</c><00:00:30.840><c> client</c>

00:00:31.339 --> 00:00:31.349 align:start position:0%
running on a mobile device these client
 

00:00:31.349 --> 00:00:33.799 align:start position:0%
running on a mobile device these client
apps<00:00:31.529><c> are</c><00:00:31.830><c> simply</c><00:00:32.399><c> what</c><00:00:32.880><c> the</c><00:00:33.030><c> user</c><00:00:33.210><c> sees</c><00:00:33.570><c> and</c>

00:00:33.799 --> 00:00:33.809 align:start position:0%
apps are simply what the user sees and
 

00:00:33.809 --> 00:00:36.290 align:start position:0%
apps are simply what the user sees and
interacts<00:00:34.620><c> with</c><00:00:34.770><c> they're</c><00:00:35.460><c> just</c><00:00:35.730><c> the</c><00:00:35.820><c> surface</c>

00:00:36.290 --> 00:00:36.300 align:start position:0%
interacts with they're just the surface
 

00:00:36.300 --> 00:00:38.240 align:start position:0%
interacts with they're just the surface
they<00:00:36.780><c> need</c><00:00:36.960><c> to</c><00:00:37.079><c> talk</c><00:00:37.320><c> to</c><00:00:37.530><c> some</c><00:00:37.710><c> services</c>

00:00:38.240 --> 00:00:38.250 align:start position:0%
they need to talk to some services
 

00:00:38.250 --> 00:00:41.510 align:start position:0%
they need to talk to some services
sitting<00:00:38.969><c> on</c><00:00:39.120><c> the</c><00:00:39.239><c> server</c><00:00:39.540><c> or</c><00:00:39.960><c> in</c><00:00:40.440><c> the</c><00:00:40.559><c> cloud</c><00:00:40.829><c> to</c>

00:00:41.510 --> 00:00:41.520 align:start position:0%
sitting on the server or in the cloud to
 

00:00:41.520 --> 00:00:44.209 align:start position:0%
sitting on the server or in the cloud to
store<00:00:41.850><c> data</c><00:00:42.059><c> send</c><00:00:43.020><c> emails</c><00:00:43.469><c> or</c><00:00:43.680><c> push</c>

00:00:44.209 --> 00:00:44.219 align:start position:0%
store data send emails or push
 

00:00:44.219 --> 00:00:46.940 align:start position:0%
store data send emails or push
notifications<00:00:45.000><c> kick</c><00:00:45.690><c> off</c><00:00:45.870><c> workflows</c><00:00:46.410><c> and</c><00:00:46.680><c> so</c>

00:00:46.940 --> 00:00:46.950 align:start position:0%
notifications kick off workflows and so
 

00:00:46.950 --> 00:00:50.150 align:start position:0%
notifications kick off workflows and so
on<00:00:47.070><c> node</c><00:00:48.030><c> is</c><00:00:48.300><c> ideal</c><00:00:48.780><c> for</c><00:00:48.809><c> building</c><00:00:49.410><c> highly</c>

00:00:50.150 --> 00:00:50.160 align:start position:0%
on node is ideal for building highly
 

00:00:50.160 --> 00:00:53.270 align:start position:0%
on node is ideal for building highly
scalable<00:00:50.730><c> data</c><00:00:51.390><c> intensive</c><00:00:51.840><c> and</c><00:00:52.350><c> real-time</c>

00:00:53.270 --> 00:00:53.280 align:start position:0%
scalable data intensive and real-time
 

00:00:53.280 --> 00:00:56.060 align:start position:0%
scalable data intensive and real-time
back-end<00:00:54.180><c> services</c><00:00:54.660><c> that</c><00:00:54.930><c> power</c><00:00:55.230><c> our</c><00:00:55.559><c> client</c>

00:00:56.060 --> 00:00:56.070 align:start position:0%
back-end services that power our client
 

00:00:56.070 --> 00:00:58.760 align:start position:0%
back-end services that power our client
applications<00:00:56.610><c> now</c><00:00:57.480><c> you</c><00:00:57.629><c> might</c><00:00:57.840><c> ask</c><00:00:57.870><c> but</c><00:00:58.530><c> mosh</c>

00:00:58.760 --> 00:00:58.770 align:start position:0%
applications now you might ask but mosh
 

00:00:58.770 --> 00:01:01.160 align:start position:0%
applications now you might ask but mosh
there<00:00:59.219><c> are</c><00:00:59.399><c> other</c><00:00:59.820><c> tools</c><00:01:00.210><c> and</c><00:01:00.420><c> frameworks</c><00:01:00.750><c> out</c>

00:01:01.160 --> 00:01:01.170 align:start position:0%
there are other tools and frameworks out
 

00:01:01.170 --> 00:01:03.170 align:start position:0%
there are other tools and frameworks out
there<00:01:01.230><c> for</c><00:01:01.770><c> building</c><00:01:02.250><c> back-end</c><00:01:02.730><c> services</c>

00:01:03.170 --> 00:01:03.180 align:start position:0%
there for building back-end services
 

00:01:03.180 --> 00:01:06.380 align:start position:0%
there for building back-end services
such<00:01:03.600><c> as</c><00:01:03.629><c> a</c><00:01:03.989><c> speed</c><00:01:04.290><c> a</c><00:01:04.350><c> bed</c><00:01:04.589><c> rails</c><00:01:05.220><c> Django</c><00:01:06.180><c> and</c>

00:01:06.380 --> 00:01:06.390 align:start position:0%
such as a speed a bed rails Django and
 

00:01:06.390 --> 00:01:09.289 align:start position:0%
such as a speed a bed rails Django and
so<00:01:06.600><c> on</c><00:01:06.750><c> so</c><00:01:07.229><c> what's</c><00:01:07.439><c> so</c><00:01:07.590><c> special</c><00:01:07.619><c> about</c><00:01:08.130><c> no</c><00:01:08.460><c> well</c>

00:01:09.289 --> 00:01:09.299 align:start position:0%
so on so what's so special about no well
 

00:01:09.299 --> 00:01:12.380 align:start position:0%
so on so what's so special about no well
note<00:01:10.080><c> is</c><00:01:10.350><c> easy</c><00:01:10.619><c> to</c><00:01:10.920><c> get</c><00:01:11.070><c> started</c><00:01:11.340><c> and</c><00:01:11.670><c> can</c><00:01:12.240><c> be</c>

00:01:12.380 --> 00:01:12.390 align:start position:0%
note is easy to get started and can be
 

00:01:12.390 --> 00:01:15.050 align:start position:0%
note is easy to get started and can be
used<00:01:12.630><c> for</c><00:01:13.020><c> prototyping</c><00:01:13.530><c> and</c><00:01:14.100><c> agile</c>

00:01:15.050 --> 00:01:15.060 align:start position:0%
used for prototyping and agile
 

00:01:15.060 --> 00:01:17.510 align:start position:0%
used for prototyping and agile
development<00:01:15.659><c> but</c><00:01:16.380><c> it</c><00:01:16.470><c> can</c><00:01:16.590><c> also</c><00:01:16.830><c> be</c><00:01:16.979><c> used</c><00:01:17.280><c> for</c>

00:01:17.510 --> 00:01:17.520 align:start position:0%
development but it can also be used for
 

00:01:17.520 --> 00:01:20.539 align:start position:0%
development but it can also be used for
building<00:01:17.729><c> super</c><00:01:18.600><c> fast</c><00:01:18.869><c> and</c><00:01:19.110><c> highly</c><00:01:19.770><c> scalable</c>

00:01:20.539 --> 00:01:20.549 align:start position:0%
building super fast and highly scalable
 

00:01:20.549 --> 00:01:23.090 align:start position:0%
building super fast and highly scalable
services<00:01:20.869><c> it's</c><00:01:21.869><c> used</c><00:01:22.170><c> in</c><00:01:22.350><c> production</c><00:01:22.680><c> by</c>

00:01:23.090 --> 00:01:23.100 align:start position:0%
services it's used in production by
 

00:01:23.100 --> 00:01:25.760 align:start position:0%
services it's used in production by
large<00:01:23.400><c> companies</c><00:01:24.000><c> such</c><00:01:24.390><c> as</c><00:01:24.420><c> PayPal</c><00:01:24.990><c> uber</c>

00:01:25.760 --> 00:01:25.770 align:start position:0%
large companies such as PayPal uber
 

00:01:25.770 --> 00:01:29.270 align:start position:0%
large companies such as PayPal uber
Netflix<00:01:26.700><c> Walmart</c><00:01:27.600><c> and</c><00:01:27.810><c> so</c><00:01:28.049><c> on</c><00:01:28.229><c> in</c><00:01:28.710><c> fact</c><00:01:29.070><c> at</c>

00:01:29.270 --> 00:01:29.280 align:start position:0%
Netflix Walmart and so on in fact at
 

00:01:29.280 --> 00:01:31.850 align:start position:0%
Netflix Walmart and so on in fact at
PayPal<00:01:29.790><c> that</c><00:01:30.329><c> rebuilt</c><00:01:30.810><c> one</c><00:01:31.200><c> of</c><00:01:31.350><c> their</c><00:01:31.470><c> Java</c>

00:01:31.850 --> 00:01:31.860 align:start position:0%
PayPal that rebuilt one of their Java
 

00:01:31.860 --> 00:01:34.160 align:start position:0%
PayPal that rebuilt one of their Java
and<00:01:32.159><c> spring</c><00:01:32.640><c> based</c><00:01:32.880><c> applications</c><00:01:33.630><c> using</c><00:01:33.840><c> node</c>

00:01:34.160 --> 00:01:34.170 align:start position:0%
and spring based applications using node
 

00:01:34.170 --> 00:01:36.920 align:start position:0%
and spring based applications using node
and<00:01:34.439><c> it</c><00:01:35.310><c> found</c><00:01:35.640><c> that</c><00:01:35.820><c> the</c><00:01:36.030><c> node</c><00:01:36.270><c> application</c>

00:01:36.920 --> 00:01:36.930 align:start position:0%
and it found that the node application
 

00:01:36.930 --> 00:01:39.679 align:start position:0%
and it found that the node application
was<00:01:37.290><c> built</c><00:01:37.530><c> twice</c><00:01:38.220><c> as</c><00:01:38.460><c> fast</c><00:01:38.729><c> with</c><00:01:38.939><c> fewer</c>

00:01:39.679 --> 00:01:39.689 align:start position:0%
was built twice as fast with fewer
 

00:01:39.689 --> 00:01:43.520 align:start position:0%
was built twice as fast with fewer
people<00:01:39.960><c> in</c><00:01:40.939><c> 33%</c><00:01:41.939><c> fewer</c><00:01:42.420><c> lines</c><00:01:42.780><c> of</c><00:01:42.990><c> code</c><00:01:43.259><c> and</c>

00:01:43.520 --> 00:01:43.530 align:start position:0%
people in 33% fewer lines of code and
 

00:01:43.530 --> 00:01:47.420 align:start position:0%
people in 33% fewer lines of code and
40%<00:01:44.369><c> fewer</c><00:01:45.360><c> files</c><00:01:45.810><c> and</c><00:01:46.110><c> more</c><00:01:46.890><c> importantly</c>

00:01:47.420 --> 00:01:47.430 align:start position:0%
40% fewer files and more importantly
 

00:01:47.430 --> 00:01:49.969 align:start position:0%
40% fewer files and more importantly
they<00:01:48.060><c> double</c><00:01:48.600><c> the</c><00:01:48.840><c> number</c><00:01:49.170><c> of</c><00:01:49.290><c> requests</c>

00:01:49.969 --> 00:01:49.979 align:start position:0%
they double the number of requests
 

00:01:49.979 --> 00:01:52.730 align:start position:0%
they double the number of requests
served<00:01:50.549><c> per</c><00:01:50.790><c> second</c><00:01:51.210><c> while</c><00:01:51.840><c> decreasing</c><00:01:52.170><c> the</c>

00:01:52.730 --> 00:01:52.740 align:start position:0%
served per second while decreasing the
 

00:01:52.740 --> 00:01:56.569 align:start position:0%
served per second while decreasing the
average<00:01:53.250><c> response</c><00:01:53.520><c> time</c><00:01:53.970><c> by</c><00:01:54.350><c> 35%</c><00:01:55.350><c> so</c><00:01:56.130><c> node</c><00:01:56.369><c> is</c>

00:01:56.569 --> 00:01:56.579 align:start position:0%
average response time by 35% so node is
 

00:01:56.579 --> 00:01:58.789 align:start position:0%
average response time by 35% so node is
an<00:01:56.729><c> excellent</c><00:01:57.210><c> choice</c><00:01:57.509><c> for</c><00:01:57.869><c> building</c><00:01:58.110><c> highly</c>

00:01:58.789 --> 00:01:58.799 align:start position:0%
an excellent choice for building highly
 

00:01:58.799 --> 00:02:01.580 align:start position:0%
an excellent choice for building highly
scalable<00:01:59.369><c> services</c><00:02:00.140><c> another</c><00:02:01.140><c> reason</c><00:02:01.560><c> for</c>

00:02:01.580 --> 00:02:01.590 align:start position:0%
scalable services another reason for
 

00:02:01.590 --> 00:02:03.950 align:start position:0%
scalable services another reason for
using<00:02:01.829><c> node</c><00:02:02.159><c> is</c><00:02:02.490><c> that</c><00:02:02.909><c> in</c><00:02:03.030><c> old</c><00:02:03.270><c> applications</c>

00:02:03.950 --> 00:02:03.960 align:start position:0%
using node is that in old applications
 

00:02:03.960 --> 00:02:06.230 align:start position:0%
using node is that in old applications
we<00:02:04.170><c> use</c><00:02:04.250><c> JavaScript</c><00:02:05.250><c> so</c><00:02:05.909><c> if</c><00:02:06.060><c> you're</c><00:02:06.210><c> a</c>

00:02:06.230 --> 00:02:06.240 align:start position:0%
we use JavaScript so if you're a
 

00:02:06.240 --> 00:02:08.119 align:start position:0%
we use JavaScript so if you're a
front-end<00:02:06.780><c> developer</c><00:02:07.259><c> and</c><00:02:07.469><c> know</c><00:02:07.680><c> JavaScript</c>

00:02:08.119 --> 00:02:08.129 align:start position:0%
front-end developer and know JavaScript
 

00:02:08.129 --> 00:02:11.839 align:start position:0%
front-end developer and know JavaScript
you<00:02:09.030><c> can</c><00:02:09.060><c> reuse</c><00:02:09.660><c> your</c><00:02:09.690><c> JavaScript</c><00:02:10.590><c> skills</c><00:02:10.920><c> and</c>

00:02:11.839 --> 00:02:11.849 align:start position:0%
you can reuse your JavaScript skills and
 

00:02:11.849 --> 00:02:14.209 align:start position:0%
you can reuse your JavaScript skills and
-<00:02:12.420><c> a</c><00:02:12.450><c> full-stack</c><00:02:13.049><c> developer</c><00:02:13.109><c> and</c><00:02:13.799><c> get</c><00:02:14.189><c> a</c>

00:02:14.209 --> 00:02:14.219 align:start position:0%
- a full-stack developer and get a
 

00:02:14.219 --> 00:02:16.369 align:start position:0%
- a full-stack developer and get a
better<00:02:14.519><c> job</c><00:02:14.640><c> with</c><00:02:14.849><c> better</c><00:02:15.209><c> pay</c><00:02:15.480><c> you</c><00:02:16.200><c> don't</c>

00:02:16.369 --> 00:02:16.379 align:start position:0%
better job with better pay you don't
 

00:02:16.379 --> 00:02:17.979 align:start position:0%
better job with better pay you don't
have<00:02:16.499><c> to</c><00:02:16.620><c> learn</c><00:02:16.739><c> a</c><00:02:16.950><c> new</c><00:02:17.219><c> programming</c><00:02:17.489><c> language</c>

00:02:17.979 --> 00:02:17.989 align:start position:0%
have to learn a new programming language
 

00:02:17.989 --> 00:02:21.379 align:start position:0%
have to learn a new programming language
also<00:02:19.040><c> because</c><00:02:20.040><c> you</c><00:02:20.159><c> can</c><00:02:20.280><c> use</c><00:02:20.430><c> JavaScript</c><00:02:20.909><c> both</c>

00:02:21.379 --> 00:02:21.389 align:start position:0%
also because you can use JavaScript both
 

00:02:21.389 --> 00:02:23.089 align:start position:0%
also because you can use JavaScript both
on<00:02:21.629><c> the</c><00:02:21.870><c> front</c><00:02:22.139><c> end</c><00:02:22.349><c> and</c><00:02:22.439><c> on</c><00:02:22.829><c> the</c><00:02:22.920><c> back</c><00:02:23.069><c> end</c>

00:02:23.089 --> 00:02:23.099 align:start position:0%
on the front end and on the back end
 

00:02:23.099 --> 00:02:25.580 align:start position:0%
on the front end and on the back end
your<00:02:23.909><c> source</c><00:02:24.269><c> code</c><00:02:24.569><c> will</c><00:02:24.780><c> be</c><00:02:24.810><c> cleaner</c><00:02:25.260><c> and</c>

00:02:25.580 --> 00:02:25.590 align:start position:0%
your source code will be cleaner and
 

00:02:25.590 --> 00:02:28.129 align:start position:0%
your source code will be cleaner and
more<00:02:25.920><c> consistent</c><00:02:26.639><c> so</c><00:02:27.269><c> you</c><00:02:27.299><c> will</c><00:02:27.599><c> use</c><00:02:27.749><c> the</c><00:02:27.900><c> same</c>

00:02:28.129 --> 00:02:28.139 align:start position:0%
more consistent so you will use the same
 

00:02:28.139 --> 00:02:30.080 align:start position:0%
more consistent so you will use the same
naming<00:02:28.500><c> conventions</c><00:02:29.040><c> the</c><00:02:29.280><c> same</c><00:02:29.549><c> tools</c><00:02:29.879><c> and</c>

00:02:30.080 --> 00:02:30.090 align:start position:0%
naming conventions the same tools and
 

00:02:30.090 --> 00:02:32.809 align:start position:0%
naming conventions the same tools and
the<00:02:30.359><c> same</c><00:02:30.599><c> best</c><00:02:30.930><c> practices</c><00:02:31.590><c> and</c><00:02:31.819><c> finally</c>

00:02:32.809 --> 00:02:32.819 align:start position:0%
the same best practices and finally
 

00:02:32.819 --> 00:02:35.030 align:start position:0%
the same best practices and finally
another<00:02:33.150><c> reason</c><00:02:33.599><c> for</c><00:02:33.750><c> using</c><00:02:33.900><c> node</c><00:02:34.230><c> is</c><00:02:34.469><c> that</c><00:02:34.920><c> it</c>

00:02:35.030 --> 00:02:35.040 align:start position:0%
another reason for using node is that it
 

00:02:35.040 --> 00:02:37.789 align:start position:0%
another reason for using node is that it
has<00:02:35.250><c> the</c><00:02:35.459><c> largest</c><00:02:35.819><c> ecosystem</c><00:02:36.450><c> of</c><00:02:37.049><c> open</c><00:02:37.620><c> source</c>

00:02:37.789 --> 00:02:37.799 align:start position:0%
has the largest ecosystem of open source
 

00:02:37.799 --> 00:02:40.849 align:start position:0%
has the largest ecosystem of open source
libraries<00:02:38.489><c> available</c><00:02:38.700><c> to</c><00:02:39.450><c> you</c><00:02:39.569><c> so</c><00:02:40.349><c> for</c><00:02:40.680><c> pretty</c>

00:02:40.849 --> 00:02:40.859 align:start position:0%
libraries available to you so for pretty
 

00:02:40.859 --> 00:02:42.920 align:start position:0%
libraries available to you so for pretty
much<00:02:40.950><c> any</c><00:02:41.280><c> features</c><00:02:41.790><c> or</c><00:02:42.030><c> building</c><00:02:42.510><c> blocks</c><00:02:42.540><c> you</c>

00:02:42.920 --> 00:02:42.930 align:start position:0%
much any features or building blocks you
 

00:02:42.930 --> 00:02:44.899 align:start position:0%
much any features or building blocks you
want<00:02:43.019><c> to</c><00:02:43.169><c> add</c><00:02:43.319><c> your</c><00:02:43.590><c> application</c><00:02:44.189><c> there</c><00:02:44.879><c> is</c>

00:02:44.899 --> 00:02:44.909 align:start position:0%
want to add your application there is
 

00:02:44.909 --> 00:02:47.300 align:start position:0%
want to add your application there is
some<00:02:45.209><c> free</c><00:02:45.480><c> open</c><00:02:46.260><c> source</c><00:02:46.500><c> library</c><00:02:46.919><c> out</c><00:02:47.069><c> there</c>

00:02:47.300 --> 00:02:47.310 align:start position:0%
some free open source library out there
 

00:02:47.310 --> 00:02:49.220 align:start position:0%
some free open source library out there
that<00:02:47.489><c> you</c><00:02:47.579><c> can</c><00:02:47.730><c> use</c><00:02:47.909><c> so</c><00:02:48.540><c> you</c><00:02:48.810><c> don't</c><00:02:48.840><c> have</c><00:02:49.109><c> to</c>

00:02:49.220 --> 00:02:49.230 align:start position:0%
that you can use so you don't have to
 

00:02:49.230 --> 00:02:51.319 align:start position:0%
that you can use so you don't have to
build<00:02:49.500><c> this</c><00:02:49.919><c> building</c><00:02:50.459><c> blocks</c><00:02:50.760><c> from</c><00:02:50.939><c> scratch</c>

00:02:51.319 --> 00:02:51.329 align:start position:0%
build this building blocks from scratch
 

00:02:51.329 --> 00:02:54.020 align:start position:0%
build this building blocks from scratch
and<00:02:51.659><c> instead</c><00:02:52.590><c> you</c><00:02:52.709><c> can</c><00:02:52.799><c> focus</c><00:02:53.129><c> on</c><00:02:53.400><c> the</c><00:02:53.639><c> core</c><00:02:54.000><c> of</c>

00:02:54.020 --> 00:02:54.030 align:start position:0%
and instead you can focus on the core of
 

00:02:54.030 --> 00:02:56.270 align:start position:0%
and instead you can focus on the core of
your<00:02:54.209><c> application</c><00:02:54.840><c> next</c><00:02:55.769><c> we're</c><00:02:56.040><c> going</c><00:02:56.159><c> to</c>

00:02:56.270 --> 00:02:56.280 align:start position:0%
your application next we're going to
 

00:02:56.280 --> 00:03:02.510 align:start position:0%
your application next we're going to
look<00:02:56.400><c> at</c><00:02:56.549><c> the</c><00:02:56.699><c> architecture</c><00:02:57.120><c> of</c><00:02:57.449><c> node</c>

00:03:02.510 --> 00:03:02.520 align:start position:0%
 
 

00:03:02.520 --> 00:03:05.100 align:start position:0%
 
so<00:03:03.520><c> in</c><00:03:03.700><c> the</c><00:03:03.820><c> last</c><00:03:03.970><c> video</c><00:03:04.270><c> you</c><00:03:04.330><c> learned</c><00:03:04.750><c> that</c>

00:03:05.100 --> 00:03:05.110 align:start position:0%
so in the last video you learned that
 

00:03:05.110 --> 00:03:07.200 align:start position:0%
so in the last video you learned that
note<00:03:05.410><c> is</c><00:03:05.680><c> a</c><00:03:05.740><c> runtime</c><00:03:06.310><c> environment</c><00:03:06.940><c> for</c>

00:03:07.200 --> 00:03:07.210 align:start position:0%
note is a runtime environment for
 

00:03:07.210 --> 00:03:09.870 align:start position:0%
note is a runtime environment for
executing<00:03:07.870><c> JavaScript</c><00:03:08.050><c> code</c><00:03:08.920><c> but</c><00:03:09.580><c> what</c><00:03:09.730><c> is</c><00:03:09.850><c> a</c>

00:03:09.870 --> 00:03:09.880 align:start position:0%
executing JavaScript code but what is a
 

00:03:09.880 --> 00:03:12.570 align:start position:0%
executing JavaScript code but what is a
runtime<00:03:10.270><c> environment</c><00:03:10.810><c> really</c><00:03:10.960><c> well</c><00:03:11.860><c> before</c>

00:03:12.570 --> 00:03:12.580 align:start position:0%
runtime environment really well before
 

00:03:12.580 --> 00:03:15.030 align:start position:0%
runtime environment really well before
node<00:03:12.940><c> we</c><00:03:13.210><c> use</c><00:03:13.300><c> JavaScript</c><00:03:14.050><c> only</c><00:03:14.710><c> to</c><00:03:14.860><c> build</c>

00:03:15.030 --> 00:03:15.040 align:start position:0%
node we use JavaScript only to build
 

00:03:15.040 --> 00:03:17.370 align:start position:0%
node we use JavaScript only to build
applications<00:03:15.310><c> that</c><00:03:16.120><c> run</c><00:03:16.450><c> inside</c><00:03:17.110><c> of</c><00:03:17.170><c> a</c>

00:03:17.370 --> 00:03:17.380 align:start position:0%
applications that run inside of a
 

00:03:17.380 --> 00:03:20.190 align:start position:0%
applications that run inside of a
browser<00:03:17.580><c> so</c><00:03:18.580><c> every</c><00:03:19.000><c> browser</c><00:03:19.240><c> out</c><00:03:19.450><c> there</c><00:03:19.600><c> has</c>

00:03:20.190 --> 00:03:20.200 align:start position:0%
browser so every browser out there has
 

00:03:20.200 --> 00:03:23.220 align:start position:0%
browser so every browser out there has
what<00:03:20.500><c> we</c><00:03:20.530><c> call</c><00:03:20.680><c> a</c><00:03:21.150><c> JavaScript</c><00:03:22.150><c> engine</c><00:03:22.240><c> that</c>

00:03:23.220 --> 00:03:23.230 align:start position:0%
what we call a JavaScript engine that
 

00:03:23.230 --> 00:03:25.800 align:start position:0%
what we call a JavaScript engine that
takes<00:03:23.500><c> our</c><00:03:23.770><c> JavaScript</c><00:03:24.460><c> code</c><00:03:24.670><c> and</c><00:03:24.880><c> converts</c>

00:03:25.800 --> 00:03:25.810 align:start position:0%
takes our JavaScript code and converts
 

00:03:25.810 --> 00:03:27.480 align:start position:0%
takes our JavaScript code and converts
it<00:03:25.960><c> to</c><00:03:25.990><c> code</c><00:03:26.410><c> that</c><00:03:26.680><c> a</c><00:03:26.710><c> computer</c><00:03:27.160><c> can</c>

00:03:27.480 --> 00:03:27.490 align:start position:0%
it to code that a computer can
 

00:03:27.490 --> 00:03:30.210 align:start position:0%
it to code that a computer can
understand<00:03:27.970><c> for</c><00:03:28.720><c> example</c><00:03:28.750><c> Microsoft</c><00:03:29.650><c> eight</c>

00:03:30.210 --> 00:03:30.220 align:start position:0%
understand for example Microsoft eight
 

00:03:30.220 --> 00:03:33.810 align:start position:0%
understand for example Microsoft eight
uses<00:03:30.730><c> chakra</c><00:03:31.360><c> Firefox</c><00:03:32.260><c> uses</c><00:03:32.680><c> spider</c><00:03:33.310><c> monkey</c>

00:03:33.810 --> 00:03:33.820 align:start position:0%
uses chakra Firefox uses spider monkey
 

00:03:33.820 --> 00:03:36.960 align:start position:0%
uses chakra Firefox uses spider monkey
and<00:03:34.030><c> chrome</c><00:03:34.660><c> uses</c><00:03:35.140><c> v8</c><00:03:35.530><c> and</c><00:03:35.860><c> it's</c><00:03:36.610><c> because</c><00:03:36.940><c> of</c>

00:03:36.960 --> 00:03:36.970 align:start position:0%
and chrome uses v8 and it's because of
 

00:03:36.970 --> 00:03:39.270 align:start position:0%
and chrome uses v8 and it's because of
these<00:03:37.180><c> varieties</c><00:03:37.600><c> of</c><00:03:37.930><c> engines</c><00:03:38.800><c> that</c>

00:03:39.270 --> 00:03:39.280 align:start position:0%
these varieties of engines that
 

00:03:39.280 --> 00:03:41.460 align:start position:0%
these varieties of engines that
sometimes<00:03:39.850><c> JavaScript</c><00:03:40.600><c> code</c><00:03:40.810><c> can</c><00:03:40.840><c> behave</c>

00:03:41.460 --> 00:03:41.470 align:start position:0%
sometimes JavaScript code can behave
 

00:03:41.470 --> 00:03:43.710 align:start position:0%
sometimes JavaScript code can behave
differently<00:03:42.310><c> in</c><00:03:42.550><c> one</c><00:03:42.820><c> browser</c><00:03:43.090><c> or</c><00:03:43.390><c> another</c>

00:03:43.710 --> 00:03:43.720 align:start position:0%
differently in one browser or another
 

00:03:43.720 --> 00:03:46.620 align:start position:0%
differently in one browser or another
now<00:03:44.620><c> a</c><00:03:44.860><c> browser</c><00:03:45.310><c> provides</c><00:03:45.790><c> a</c><00:03:46.090><c> runtime</c>

00:03:46.620 --> 00:03:46.630 align:start position:0%
now a browser provides a runtime
 

00:03:46.630 --> 00:03:49.170 align:start position:0%
now a browser provides a runtime
environment<00:03:47.200><c> for</c><00:03:47.590><c> JavaScript</c><00:03:48.250><c> code</c><00:03:48.460><c> for</c>

00:03:49.170 --> 00:03:49.180 align:start position:0%
environment for JavaScript code for
 

00:03:49.180 --> 00:03:51.030 align:start position:0%
environment for JavaScript code for
example<00:03:49.270><c> you</c><00:03:49.750><c> probably</c><00:03:49.930><c> know</c><00:03:50.320><c> that</c><00:03:50.860><c> in</c>

00:03:51.030 --> 00:03:51.040 align:start position:0%
example you probably know that in
 

00:03:51.040 --> 00:03:53.100 align:start position:0%
example you probably know that in
browsers<00:03:51.580><c> we</c><00:03:51.880><c> have</c><00:03:52.060><c> the</c><00:03:52.210><c> window</c><00:03:52.630><c> or</c><00:03:52.840><c> the</c>

00:03:53.100 --> 00:03:53.110 align:start position:0%
browsers we have the window or the
 

00:03:53.110 --> 00:03:56.130 align:start position:0%
browsers we have the window or the
document<00:03:53.680><c> object</c><00:03:53.940><c> these</c><00:03:54.940><c> objects</c><00:03:55.660><c> allow</c><00:03:55.960><c> us</c>

00:03:56.130 --> 00:03:56.140 align:start position:0%
document object these objects allow us
 

00:03:56.140 --> 00:03:58.230 align:start position:0%
document object these objects allow us
to<00:03:56.590><c> work</c><00:03:56.770><c> with</c><00:03:57.040><c> the</c><00:03:57.130><c> environment</c><00:03:57.850><c> in</c><00:03:58.000><c> which</c>

00:03:58.230 --> 00:03:58.240 align:start position:0%
to work with the environment in which
 

00:03:58.240 --> 00:04:01.650 align:start position:0%
to work with the environment in which
our<00:03:58.540><c> code</c><00:03:58.900><c> is</c><00:03:59.080><c> running</c><00:03:59.530><c> now</c><00:04:00.190><c> up</c><00:04:00.400><c> to</c><00:04:00.580><c> 2009</c><00:04:01.300><c> the</c>

00:04:01.650 --> 00:04:01.660 align:start position:0%
our code is running now up to 2009 the
 

00:04:01.660 --> 00:04:04.530 align:start position:0%
our code is running now up to 2009 the
only<00:04:02.320><c> way</c><00:04:02.440><c> to</c><00:04:02.500><c> execute</c><00:04:03.190><c> JavaScript</c><00:04:03.820><c> code</c><00:04:04.030><c> was</c>

00:04:04.530 --> 00:04:04.540 align:start position:0%
only way to execute JavaScript code was
 

00:04:04.540 --> 00:04:07.560 align:start position:0%
only way to execute JavaScript code was
inside<00:04:05.080><c> of</c><00:04:05.260><c> a</c><00:04:05.380><c> browser</c><00:04:05.470><c> in</c><00:04:06.360><c> 2009</c>

00:04:07.560 --> 00:04:07.570 align:start position:0%
inside of a browser in 2009
 

00:04:07.570 --> 00:04:10.350 align:start position:0%
inside of a browser in 2009
Brian<00:04:08.170><c> Dahl</c><00:04:08.440><c> the</c><00:04:08.830><c> creator</c><00:04:09.160><c> of</c><00:04:09.250><c> node</c><00:04:09.550><c> came</c><00:04:10.180><c> up</c>

00:04:10.350 --> 00:04:10.360 align:start position:0%
Brian Dahl the creator of node came up
 

00:04:10.360 --> 00:04:12.990 align:start position:0%
Brian Dahl the creator of node came up
with<00:04:10.570><c> a</c><00:04:10.600><c> brilliant</c><00:04:10.959><c> idea</c><00:04:11.610><c> he</c><00:04:12.610><c> thought</c><00:04:12.850><c> it</c>

00:04:12.990 --> 00:04:13.000 align:start position:0%
with a brilliant idea he thought it
 

00:04:13.000 --> 00:04:15.000 align:start position:0%
with a brilliant idea he thought it
would<00:04:13.120><c> be</c><00:04:13.240><c> great</c><00:04:13.450><c> to</c><00:04:13.570><c> execute</c><00:04:14.290><c> JavaScript</c>

00:04:15.000 --> 00:04:15.010 align:start position:0%
would be great to execute JavaScript
 

00:04:15.010 --> 00:04:17.849 align:start position:0%
would be great to execute JavaScript
outside<00:04:15.640><c> of</c><00:04:15.730><c> a</c><00:04:15.790><c> browser</c><00:04:16.000><c> so</c><00:04:16.840><c> he</c><00:04:17.020><c> took</c><00:04:17.200><c> Google's</c>

00:04:17.849 --> 00:04:17.859 align:start position:0%
outside of a browser so he took Google's
 

00:04:17.859 --> 00:04:20.190 align:start position:0%
outside of a browser so he took Google's
v8<00:04:18.520><c> engine</c><00:04:19.060><c> which</c><00:04:19.299><c> is</c><00:04:19.450><c> the</c><00:04:19.570><c> fastest</c>

00:04:20.190 --> 00:04:20.200 align:start position:0%
v8 engine which is the fastest
 

00:04:20.200 --> 00:04:23.160 align:start position:0%
v8 engine which is the fastest
JavaScript<00:04:21.040><c> engine</c><00:04:21.459><c> out</c><00:04:21.609><c> there</c><00:04:21.820><c> and</c><00:04:22.170><c> embedded</c>

00:04:23.160 --> 00:04:23.170 align:start position:0%
JavaScript engine out there and embedded
 

00:04:23.170 --> 00:04:26.280 align:start position:0%
JavaScript engine out there and embedded
it<00:04:23.290><c> inside</c><00:04:24.040><c> a</c><00:04:24.220><c> C++</c><00:04:25.000><c> program</c><00:04:25.030><c> and</c><00:04:25.660><c> called</c><00:04:26.080><c> that</c>

00:04:26.280 --> 00:04:26.290 align:start position:0%
it inside a C++ program and called that
 

00:04:26.290 --> 00:04:29.040 align:start position:0%
it inside a C++ program and called that
program<00:04:26.710><c> node</c><00:04:27.310><c> so</c><00:04:28.210><c> similar</c><00:04:28.600><c> to</c><00:04:28.630><c> a</c><00:04:28.780><c> browser</c>

00:04:29.040 --> 00:04:29.050 align:start position:0%
program node so similar to a browser
 

00:04:29.050 --> 00:04:31.620 align:start position:0%
program node so similar to a browser
node<00:04:29.950><c> is</c><00:04:30.220><c> a</c><00:04:30.280><c> runtime</c><00:04:30.820><c> environment</c><00:04:31.420><c> for</c>

00:04:31.620 --> 00:04:31.630 align:start position:0%
node is a runtime environment for
 

00:04:31.630 --> 00:04:34.410 align:start position:0%
node is a runtime environment for
JavaScript<00:04:32.320><c> code</c><00:04:32.500><c> it</c><00:04:32.800><c> contains</c><00:04:33.610><c> a</c><00:04:33.700><c> JavaScript</c>

00:04:34.410 --> 00:04:34.420 align:start position:0%
JavaScript code it contains a JavaScript
 

00:04:34.420 --> 00:04:36.870 align:start position:0%
JavaScript code it contains a JavaScript
engine<00:04:34.510><c> that</c><00:04:35.080><c> can</c><00:04:35.260><c> execute</c><00:04:35.740><c> our</c><00:04:36.130><c> JavaScript</c>

00:04:36.870 --> 00:04:36.880 align:start position:0%
engine that can execute our JavaScript
 

00:04:36.880 --> 00:04:39.750 align:start position:0%
engine that can execute our JavaScript
code<00:04:37.090><c> but</c><00:04:37.720><c> it</c><00:04:37.840><c> also</c><00:04:38.050><c> has</c><00:04:38.440><c> certain</c><00:04:39.130><c> objects</c>

00:04:39.750 --> 00:04:39.760 align:start position:0%
code but it also has certain objects
 

00:04:39.760 --> 00:04:41.880 align:start position:0%
code but it also has certain objects
that<00:04:39.940><c> provide</c><00:04:40.360><c> an</c><00:04:40.570><c> environment</c><00:04:41.110><c> for</c><00:04:41.770><c> our</c>

00:04:41.880 --> 00:04:41.890 align:start position:0%
that provide an environment for our
 

00:04:41.890 --> 00:04:44.220 align:start position:0%
that provide an environment for our
JavaScript<00:04:42.550><c> code</c><00:04:42.760><c> but</c><00:04:43.510><c> these</c><00:04:43.660><c> objects</c><00:04:44.140><c> are</c>

00:04:44.220 --> 00:04:44.230 align:start position:0%
JavaScript code but these objects are
 

00:04:44.230 --> 00:04:45.840 align:start position:0%
JavaScript code but these objects are
different<00:04:44.410><c> from</c><00:04:44.770><c> the</c><00:04:44.919><c> environment</c><00:04:45.100><c> objects</c>

00:04:45.840 --> 00:04:45.850 align:start position:0%
different from the environment objects
 

00:04:45.850 --> 00:04:48.180 align:start position:0%
different from the environment objects
we<00:04:45.970><c> have</c><00:04:46.000><c> in</c><00:04:46.450><c> browsers</c><00:04:46.930><c> for</c><00:04:47.590><c> example</c><00:04:48.010><c> we</c><00:04:48.100><c> don't</c>

00:04:48.180 --> 00:04:48.190 align:start position:0%
we have in browsers for example we don't
 

00:04:48.190 --> 00:04:50.580 align:start position:0%
we have in browsers for example we don't
have<00:04:48.370><c> the</c><00:04:48.550><c> document</c><00:04:49.120><c> object</c><00:04:49.290><c> instead</c><00:04:50.290><c> we</c><00:04:50.440><c> have</c>

00:04:50.580 --> 00:04:50.590 align:start position:0%
have the document object instead we have
 

00:04:50.590 --> 00:04:52.290 align:start position:0%
have the document object instead we have
other<00:04:50.830><c> objects</c><00:04:51.490><c> that</c><00:04:51.760><c> give</c><00:04:52.000><c> us</c><00:04:52.120><c> more</c>

00:04:52.290 --> 00:04:52.300 align:start position:0%
other objects that give us more
 

00:04:52.300 --> 00:04:54.930 align:start position:0%
other objects that give us more
interesting<00:04:53.050><c> capabilities</c><00:04:53.430><c> for</c><00:04:54.430><c> example</c><00:04:54.820><c> we</c>

00:04:54.930 --> 00:04:54.940 align:start position:0%
interesting capabilities for example we
 

00:04:54.940 --> 00:04:57.270 align:start position:0%
interesting capabilities for example we
can<00:04:55.060><c> work</c><00:04:55.270><c> with</c><00:04:55.480><c> the</c><00:04:55.600><c> file</c><00:04:55.840><c> system</c><00:04:56.100><c> listen</c><00:04:57.100><c> for</c>

00:04:57.270 --> 00:04:57.280 align:start position:0%
can work with the file system listen for
 

00:04:57.280 --> 00:05:00.000 align:start position:0%
can work with the file system listen for
requests<00:04:57.850><c> and</c><00:04:58.000><c> a</c><00:04:58.180><c> given</c><00:04:58.390><c> port</c><00:04:58.780><c> and</c><00:04:58.990><c> so</c><00:04:59.290><c> on</c><00:04:59.410><c> we</c>

00:05:00.000 --> 00:05:00.010 align:start position:0%
requests and a given port and so on we
 

00:05:00.010 --> 00:05:01.830 align:start position:0%
requests and a given port and so on we
can't<00:05:00.310><c> do</c><00:05:00.490><c> stuff</c><00:05:00.760><c> like</c><00:05:00.970><c> that</c><00:05:01.120><c> inside</c><00:05:01.690><c> of</c><00:05:01.780><c> a</c>

00:05:01.830 --> 00:05:01.840 align:start position:0%
can't do stuff like that inside of a
 

00:05:01.840 --> 00:05:05.460 align:start position:0%
can't do stuff like that inside of a
browser<00:05:01.960><c> right</c><00:05:02.710><c> so</c><00:05:03.610><c> in</c><00:05:03.970><c> essence</c><00:05:04.390><c> node</c><00:05:05.140><c> is</c><00:05:05.410><c> a</c>

00:05:05.460 --> 00:05:05.470 align:start position:0%
browser right so in essence node is a
 

00:05:05.470 --> 00:05:08.520 align:start position:0%
browser right so in essence node is a
program<00:05:06.220><c> that</c><00:05:06.460><c> includes</c><00:05:06.970><c> the</c><00:05:07.360><c> v8</c><00:05:07.750><c> JavaScript</c>

00:05:08.520 --> 00:05:08.530 align:start position:0%
program that includes the v8 JavaScript
 

00:05:08.530 --> 00:05:11.700 align:start position:0%
program that includes the v8 JavaScript
engine<00:05:08.700><c> plus</c><00:05:09.700><c> some</c><00:05:10.210><c> additional</c><00:05:10.470><c> modules</c><00:05:11.470><c> that</c>

00:05:11.700 --> 00:05:11.710 align:start position:0%
engine plus some additional modules that
 

00:05:11.710 --> 00:05:14.070 align:start position:0%
engine plus some additional modules that
give<00:05:11.890><c> us</c><00:05:12.010><c> capabilities</c><00:05:12.820><c> not</c><00:05:13.419><c> available</c>

00:05:14.070 --> 00:05:14.080 align:start position:0%
give us capabilities not available
 

00:05:14.080 --> 00:05:14.850 align:start position:0%
give us capabilities not available
inside

00:05:14.850 --> 00:05:14.860 align:start position:0%
inside
 

00:05:14.860 --> 00:05:16.800 align:start position:0%
inside
browsers<00:05:15.250><c> we</c><00:05:16.030><c> can</c><00:05:16.180><c> work</c><00:05:16.360><c> with</c><00:05:16.539><c> the</c><00:05:16.599><c> file</c>

00:05:16.800 --> 00:05:16.810 align:start position:0%
browsers we can work with the file
 

00:05:16.810 --> 00:05:19.529 align:start position:0%
browsers we can work with the file
system<00:05:17.229><c> or</c><00:05:17.409><c> the</c><00:05:17.620><c> network</c><00:05:17.800><c> and</c><00:05:18.280><c> so</c><00:05:18.460><c> on</c><00:05:18.580><c> both</c>

00:05:19.529 --> 00:05:19.539 align:start position:0%
system or the network and so on both
 

00:05:19.539 --> 00:05:21.300 align:start position:0%
system or the network and so on both
chrome<00:05:19.990><c> and</c><00:05:20.229><c> note</c><00:05:20.439><c> share</c><00:05:20.860><c> the</c><00:05:21.039><c> same</c>

00:05:21.300 --> 00:05:21.310 align:start position:0%
chrome and note share the same
 

00:05:21.310 --> 00:05:23.550 align:start position:0%
chrome and note share the same
JavaScript<00:05:22.030><c> engine</c><00:05:22.419><c> but</c><00:05:22.960><c> they</c><00:05:23.080><c> provide</c>

00:05:23.550 --> 00:05:23.560 align:start position:0%
JavaScript engine but they provide
 

00:05:23.560 --> 00:05:25.589 align:start position:0%
JavaScript engine but they provide
different<00:05:24.340><c> runtime</c><00:05:24.789><c> environments</c><00:05:25.449><c> for</c>

00:05:25.589 --> 00:05:25.599 align:start position:0%
different runtime environments for
 

00:05:25.599 --> 00:05:27.779 align:start position:0%
different runtime environments for
JavaScript<00:05:26.229><c> now</c><00:05:27.039><c> I've</c><00:05:27.250><c> seen</c><00:05:27.400><c> people</c>

00:05:27.779 --> 00:05:27.789 align:start position:0%
JavaScript now I've seen people
 

00:05:27.789 --> 00:05:31.320 align:start position:0%
JavaScript now I've seen people
comparing<00:05:28.479><c> no</c><00:05:28.750><c> to</c><00:05:28.810><c> c-sharp</c><00:05:29.289><c> or</c><00:05:29.740><c> Ruby</c><00:05:30.580><c> or</c><00:05:30.610><c> some</c>

00:05:31.320 --> 00:05:31.330 align:start position:0%
comparing no to c-sharp or Ruby or some
 

00:05:31.330 --> 00:05:33.570 align:start position:0%
comparing no to c-sharp or Ruby or some
other<00:05:31.539><c> programming</c><00:05:32.080><c> languages</c><00:05:32.680><c> but</c><00:05:32.889><c> this</c>

00:05:33.570 --> 00:05:33.580 align:start position:0%
other programming languages but this
 

00:05:33.580 --> 00:05:35.580 align:start position:0%
other programming languages but this
comparisons<00:05:34.360><c> are</c><00:05:34.569><c> fundamentally</c><00:05:35.409><c> wrong</c>

00:05:35.580 --> 00:05:35.590 align:start position:0%
comparisons are fundamentally wrong
 

00:05:35.590 --> 00:05:38.249 align:start position:0%
comparisons are fundamentally wrong
because<00:05:36.340><c> node</c><00:05:36.759><c> is</c><00:05:37.030><c> not</c><00:05:37.389><c> a</c><00:05:37.629><c> programming</c>

00:05:38.249 --> 00:05:38.259 align:start position:0%
because node is not a programming
 

00:05:38.259 --> 00:05:40.499 align:start position:0%
because node is not a programming
language<00:05:38.349><c> it's</c><00:05:39.189><c> like</c><00:05:39.370><c> comparing</c><00:05:39.699><c> a</c><00:05:39.879><c> car</c><00:05:40.210><c> with</c>

00:05:40.499 --> 00:05:40.509 align:start position:0%
language it's like comparing a car with
 

00:05:40.509 --> 00:05:43.409 align:start position:0%
language it's like comparing a car with
an<00:05:40.599><c> apple</c><00:05:41.080><c> by</c><00:05:41.949><c> the</c><00:05:42.009><c> same</c><00:05:42.280><c> token</c><00:05:42.490><c> note</c><00:05:43.180><c> should</c>

00:05:43.409 --> 00:05:43.419 align:start position:0%
an apple by the same token note should
 

00:05:43.419 --> 00:05:45.779 align:start position:0%
an apple by the same token note should
not<00:05:43.659><c> be</c><00:05:43.840><c> compared</c><00:05:44.319><c> with</c><00:05:44.500><c> frameworks</c><00:05:45.250><c> such</c><00:05:45.729><c> as</c>

00:05:45.779 --> 00:05:45.789 align:start position:0%
not be compared with frameworks such as
 

00:05:45.789 --> 00:05:48.689 align:start position:0%
not be compared with frameworks such as
a<00:05:46.030><c> spool</c><00:05:46.360><c> of</c><00:05:46.449><c> meth</c><00:05:46.659><c> or</c><00:05:46.930><c> rails</c><00:05:47.439><c> or</c><00:05:47.770><c> Django</c><00:05:47.889><c> and</c>

00:05:48.689 --> 00:05:48.699 align:start position:0%
a spool of meth or rails or Django and
 

00:05:48.699 --> 00:05:51.570 align:start position:0%
a spool of meth or rails or Django and
so<00:05:48.909><c> on</c><00:05:49.029><c> these</c><00:05:49.779><c> are</c><00:05:49.840><c> frameworks</c><00:05:50.620><c> for</c><00:05:50.949><c> building</c>

00:05:51.570 --> 00:05:51.580 align:start position:0%
so on these are frameworks for building
 

00:05:51.580 --> 00:05:54.269 align:start position:0%
so on these are frameworks for building
web<00:05:51.969><c> applications</c><00:05:52.270><c> note</c><00:05:53.259><c> is</c><00:05:53.469><c> not</c><00:05:53.770><c> a</c><00:05:53.830><c> framework</c>

00:05:54.269 --> 00:05:54.279 align:start position:0%
web applications note is not a framework
 

00:05:54.279 --> 00:05:57.059 align:start position:0%
web applications note is not a framework
it's<00:05:54.969><c> a</c><00:05:55.120><c> runtime</c><00:05:55.509><c> environment</c><00:05:56.080><c> for</c><00:05:56.409><c> executing</c>

00:05:57.059 --> 00:05:57.069 align:start position:0%
it's a runtime environment for executing
 

00:05:57.069 --> 00:05:59.730 align:start position:0%
it's a runtime environment for executing
JavaScript<00:05:57.400><c> code</c><00:05:58.300><c> next</c><00:05:59.259><c> we're</c><00:05:59.379><c> going</c><00:05:59.500><c> to</c><00:05:59.620><c> look</c>

00:05:59.730 --> 00:05:59.740 align:start position:0%
JavaScript code next we're going to look
 

00:05:59.740 --> 00:06:05.729 align:start position:0%
JavaScript code next we're going to look
at<00:05:59.889><c> how</c><00:06:00.310><c> node</c><00:06:00.759><c> works</c>

00:06:05.729 --> 00:06:05.739 align:start position:0%
 
 

00:06:05.739 --> 00:06:08.169 align:start position:0%
 
so<00:06:06.739><c> earlier</c><00:06:07.069><c> I</c><00:06:07.129><c> mentioned</c><00:06:07.309><c> that</c><00:06:07.819><c> note</c>

00:06:08.169 --> 00:06:08.179 align:start position:0%
so earlier I mentioned that note
 

00:06:08.179 --> 00:06:10.299 align:start position:0%
so earlier I mentioned that note
applications<00:06:08.839><c> are</c><00:06:09.050><c> highly</c><00:06:09.559><c> scalable</c><00:06:10.099><c> and</c>

00:06:10.299 --> 00:06:10.309 align:start position:0%
applications are highly scalable and
 

00:06:10.309 --> 00:06:12.839 align:start position:0%
applications are highly scalable and
this<00:06:10.639><c> is</c><00:06:10.759><c> because</c><00:06:11.059><c> of</c><00:06:11.179><c> the</c><00:06:11.270><c> non-blocking</c><00:06:11.929><c> or</c>

00:06:12.839 --> 00:06:12.849 align:start position:0%
this is because of the non-blocking or
 

00:06:12.849 --> 00:06:15.519 align:start position:0%
this is because of the non-blocking or
asynchronous<00:06:13.849><c> nature</c><00:06:14.059><c> of</c><00:06:14.389><c> note</c><00:06:14.629><c> what</c><00:06:15.349><c> do</c><00:06:15.439><c> you</c>

00:06:15.519 --> 00:06:15.529 align:start position:0%
asynchronous nature of note what do you
 

00:06:15.529 --> 00:06:17.529 align:start position:0%
asynchronous nature of note what do you
mean<00:06:15.679><c> by</c><00:06:15.800><c> asynchronous</c><00:06:16.429><c> let</c><00:06:17.059><c> me</c><00:06:17.269><c> give</c><00:06:17.419><c> you</c><00:06:17.509><c> a</c>

00:06:17.529 --> 00:06:17.539 align:start position:0%
mean by asynchronous let me give you a
 

00:06:17.539 --> 00:06:20.049 align:start position:0%
mean by asynchronous let me give you a
metaphor<00:06:18.219><c> imagine</c><00:06:19.219><c> you</c><00:06:19.309><c> go</c><00:06:19.459><c> to</c><00:06:19.489><c> a</c><00:06:19.669><c> restaurant</c>

00:06:20.049 --> 00:06:20.059 align:start position:0%
metaphor imagine you go to a restaurant
 

00:06:20.059 --> 00:06:22.869 align:start position:0%
metaphor imagine you go to a restaurant
a<00:06:20.449><c> waiter</c><00:06:21.229><c> comes</c><00:06:21.529><c> to</c><00:06:21.649><c> your</c><00:06:21.739><c> table</c><00:06:21.919><c> takes</c><00:06:22.729><c> your</c>

00:06:22.869 --> 00:06:22.879 align:start position:0%
a waiter comes to your table takes your
 

00:06:22.879 --> 00:06:25.269 align:start position:0%
a waiter comes to your table takes your
order<00:06:22.909><c> and</c><00:06:23.360><c> gives</c><00:06:23.749><c> it</c><00:06:23.869><c> to</c><00:06:23.989><c> the</c><00:06:24.080><c> kitchen</c><00:06:24.439><c> then</c>

00:06:25.269 --> 00:06:25.279 align:start position:0%
order and gives it to the kitchen then
 

00:06:25.279 --> 00:06:27.399 align:start position:0%
order and gives it to the kitchen then
they<00:06:25.550><c> move</c><00:06:25.729><c> on</c><00:06:25.849><c> to</c><00:06:25.939><c> serve</c><00:06:26.269><c> another</c><00:06:26.869><c> table</c>

00:06:27.399 --> 00:06:27.409 align:start position:0%
they move on to serve another table
 

00:06:27.409 --> 00:06:30.579 align:start position:0%
they move on to serve another table
while<00:06:28.099><c> the</c><00:06:28.129><c> chef</c><00:06:28.550><c> is</c><00:06:28.789><c> preparing</c><00:06:28.819><c> your</c><00:06:29.479><c> meal</c><00:06:29.689><c> so</c>

00:06:30.579 --> 00:06:30.589 align:start position:0%
while the chef is preparing your meal so
 

00:06:30.589 --> 00:06:32.799 align:start position:0%
while the chef is preparing your meal so
the<00:06:30.800><c> same</c><00:06:31.009><c> person</c><00:06:31.279><c> can</c><00:06:31.729><c> serve</c><00:06:31.999><c> many</c><00:06:32.629><c> different</c>

00:06:32.799 --> 00:06:32.809 align:start position:0%
the same person can serve many different
 

00:06:32.809 --> 00:06:34.989 align:start position:0%
the same person can serve many different
tables<00:06:33.619><c> they</c><00:06:34.099><c> don't</c><00:06:34.309><c> have</c><00:06:34.429><c> to</c><00:06:34.550><c> wait</c><00:06:34.669><c> for</c><00:06:34.729><c> the</c>

00:06:34.989 --> 00:06:34.999 align:start position:0%
tables they don't have to wait for the
 

00:06:34.999 --> 00:06:37.480 align:start position:0%
tables they don't have to wait for the
chef<00:06:35.239><c> to</c><00:06:35.269><c> cook</c><00:06:35.839><c> one</c><00:06:36.050><c> meal</c><00:06:36.080><c> before</c><00:06:37.039><c> they</c><00:06:37.219><c> serve</c>

00:06:37.480 --> 00:06:37.490 align:start position:0%
chef to cook one meal before they serve
 

00:06:37.490 --> 00:06:39.850 align:start position:0%
chef to cook one meal before they serve
another<00:06:38.089><c> table</c><00:06:38.539><c> this</c><00:06:39.199><c> is</c><00:06:39.379><c> what</c><00:06:39.529><c> we</c><00:06:39.649><c> call</c>

00:06:39.850 --> 00:06:39.860 align:start position:0%
another table this is what we call
 

00:06:39.860 --> 00:06:42.459 align:start position:0%
another table this is what we call
non-blocking<00:06:40.789><c> or</c><00:06:41.469><c> asynchronous</c>

00:06:42.459 --> 00:06:42.469 align:start position:0%
non-blocking or asynchronous
 

00:06:42.469 --> 00:06:44.980 align:start position:0%
non-blocking or asynchronous
architecture<00:06:43.309><c> and</c><00:06:43.610><c> this</c><00:06:44.059><c> is</c><00:06:44.240><c> how</c><00:06:44.419><c> node</c>

00:06:44.980 --> 00:06:44.990 align:start position:0%
architecture and this is how node
 

00:06:44.990 --> 00:06:47.709 align:start position:0%
architecture and this is how node
applications<00:06:45.679><c> work</c><00:06:45.919><c> the</c><00:06:46.639><c> waiter</c><00:06:46.879><c> is</c><00:06:47.209><c> like</c><00:06:47.689><c> a</c>

00:06:47.709 --> 00:06:47.719 align:start position:0%
applications work the waiter is like a
 

00:06:47.719 --> 00:06:51.399 align:start position:0%
applications work the waiter is like a
thread<00:06:48.259><c> allocated</c><00:06:49.219><c> to</c><00:06:49.399><c> handle</c><00:06:49.879><c> a</c><00:06:50.059><c> request</c><00:06:50.409><c> so</c>

00:06:51.399 --> 00:06:51.409 align:start position:0%
thread allocated to handle a request so
 

00:06:51.409 --> 00:06:53.529 align:start position:0%
thread allocated to handle a request so
a<00:06:51.619><c> single</c><00:06:52.129><c> thread</c><00:06:52.369><c> is</c><00:06:52.550><c> used</c><00:06:52.819><c> to</c><00:06:53.300><c> handle</c>

00:06:53.529 --> 00:06:53.539 align:start position:0%
a single thread is used to handle
 

00:06:53.539 --> 00:06:56.529 align:start position:0%
a single thread is used to handle
multiple<00:06:54.169><c> requests</c><00:06:55.039><c> in</c><00:06:55.479><c> contrast</c><00:06:56.479><c> to</c>

00:06:56.529 --> 00:06:56.539 align:start position:0%
multiple requests in contrast to
 

00:06:56.539 --> 00:06:57.399 align:start position:0%
multiple requests in contrast to
non-blocking

00:06:57.399 --> 00:06:57.409 align:start position:0%
non-blocking
 

00:06:57.409 --> 00:06:59.549 align:start position:0%
non-blocking
or<00:06:57.550><c> asynchronous</c><00:06:58.550><c> architecture</c><00:06:59.209><c> we</c><00:06:59.449><c> have</c>

00:06:59.549 --> 00:06:59.559 align:start position:0%
or asynchronous architecture we have
 

00:06:59.559 --> 00:07:02.319 align:start position:0%
or asynchronous architecture we have
blocking<00:07:00.559><c> or</c><00:07:00.800><c> synchronous</c><00:07:01.729><c> architecture</c>

00:07:02.319 --> 00:07:02.329 align:start position:0%
blocking or synchronous architecture
 

00:07:02.329 --> 00:07:05.439 align:start position:0%
blocking or synchronous architecture
let's<00:07:03.079><c> see</c><00:07:03.229><c> how</c><00:07:03.439><c> that</c><00:07:03.739><c> works</c><00:07:04.039><c> so</c><00:07:04.309><c> back</c><00:07:05.239><c> to</c><00:07:05.269><c> our</c>

00:07:05.439 --> 00:07:05.449 align:start position:0%
let's see how that works so back to our
 

00:07:05.449 --> 00:07:07.509 align:start position:0%
let's see how that works so back to our
restaurant<00:07:05.989><c> example</c><00:07:06.219><c> imagine</c><00:07:07.219><c> you</c><00:07:07.339><c> go</c><00:07:07.459><c> to</c>

00:07:07.509 --> 00:07:07.519 align:start position:0%
restaurant example imagine you go to
 

00:07:07.519 --> 00:07:09.429 align:start position:0%
restaurant example imagine you go to
another<00:07:08.059><c> restaurant</c><00:07:08.509><c> and</c><00:07:08.839><c> in</c><00:07:09.229><c> this</c>

00:07:09.429 --> 00:07:09.439 align:start position:0%
another restaurant and in this
 

00:07:09.439 --> 00:07:11.980 align:start position:0%
another restaurant and in this
restaurant<00:07:09.919><c> a</c><00:07:10.039><c> waiter</c><00:07:10.399><c> is</c><00:07:10.729><c> allocated</c><00:07:11.569><c> to</c><00:07:11.689><c> you</c>

00:07:11.980 --> 00:07:11.990 align:start position:0%
restaurant a waiter is allocated to you
 

00:07:11.990 --> 00:07:13.959 align:start position:0%
restaurant a waiter is allocated to you
they<00:07:12.349><c> take</c><00:07:12.619><c> your</c><00:07:12.769><c> order</c><00:07:13.069><c> and</c><00:07:13.249><c> give</c><00:07:13.669><c> it</c><00:07:13.789><c> to</c><00:07:13.879><c> the</c>

00:07:13.959 --> 00:07:13.969 align:start position:0%
they take your order and give it to the
 

00:07:13.969 --> 00:07:15.639 align:start position:0%
they take your order and give it to the
kitchen<00:07:14.119><c> now</c><00:07:14.809><c> they</c><00:07:15.019><c> are</c><00:07:15.079><c> sitting</c><00:07:15.409><c> in</c><00:07:15.529><c> the</c>

00:07:15.639 --> 00:07:15.649 align:start position:0%
kitchen now they are sitting in the
 

00:07:15.649 --> 00:07:18.009 align:start position:0%
kitchen now they are sitting in the
kitchen<00:07:15.800><c> waiting</c><00:07:16.639><c> for</c><00:07:16.819><c> the</c><00:07:16.909><c> chef</c><00:07:17.149><c> to</c><00:07:17.179><c> prepare</c>

00:07:18.009 --> 00:07:18.019 align:start position:0%
kitchen waiting for the chef to prepare
 

00:07:18.019 --> 00:07:20.259 align:start position:0%
kitchen waiting for the chef to prepare
your<00:07:18.229><c> meal</c><00:07:18.409><c> at</c><00:07:19.099><c> this</c><00:07:19.309><c> time</c><00:07:19.519><c> they're</c><00:07:19.759><c> not</c><00:07:19.789><c> doing</c>

00:07:20.259 --> 00:07:20.269 align:start position:0%
your meal at this time they're not doing
 

00:07:20.269 --> 00:07:21.850 align:start position:0%
your meal at this time they're not doing
anything<00:07:20.569><c> else</c><00:07:20.809><c> they're</c><00:07:21.229><c> just</c><00:07:21.259><c> waiting</c>

00:07:21.850 --> 00:07:21.860 align:start position:0%
anything else they're just waiting
 

00:07:21.860 --> 00:07:24.159 align:start position:0%
anything else they're just waiting
they're<00:07:22.429><c> not</c><00:07:22.639><c> going</c><00:07:22.879><c> to</c><00:07:22.939><c> take</c><00:07:23.179><c> an</c><00:07:23.389><c> order</c><00:07:23.779><c> from</c>

00:07:24.159 --> 00:07:24.169 align:start position:0%
they're not going to take an order from
 

00:07:24.169 --> 00:07:26.649 align:start position:0%
they're not going to take an order from
another<00:07:24.409><c> table</c><00:07:25.159><c> until</c><00:07:25.399><c> your</c><00:07:25.939><c> meal</c><00:07:26.209><c> is</c><00:07:26.419><c> ready</c>

00:07:26.649 --> 00:07:26.659 align:start position:0%
another table until your meal is ready
 

00:07:26.659 --> 00:07:29.369 align:start position:0%
another table until your meal is ready
this<00:07:27.499><c> is</c><00:07:27.559><c> what</c><00:07:27.860><c> we</c><00:07:27.979><c> call</c><00:07:28.189><c> blocking</c><00:07:29.149><c> or</c>

00:07:29.369 --> 00:07:29.379 align:start position:0%
this is what we call blocking or
 

00:07:29.379 --> 00:07:32.079 align:start position:0%
this is what we call blocking or
synchronous<00:07:30.379><c> architecture</c><00:07:31.069><c> and</c><00:07:31.369><c> that's</c><00:07:31.879><c> how</c>

00:07:32.079 --> 00:07:32.089 align:start position:0%
synchronous architecture and that's how
 

00:07:32.089 --> 00:07:34.299 align:start position:0%
synchronous architecture and that's how
applications<00:07:32.719><c> built</c><00:07:33.199><c> with</c><00:07:33.529><c> frameworks</c><00:07:34.099><c> like</c>

00:07:34.299 --> 00:07:34.309 align:start position:0%
applications built with frameworks like
 

00:07:34.309 --> 00:07:37.089 align:start position:0%
applications built with frameworks like
a<00:07:34.459><c> speed</c><00:07:34.789><c> net</c><00:07:35.089><c> or</c><00:07:35.269><c> rails</c><00:07:35.569><c> work</c><00:07:36.139><c> out</c><00:07:36.409><c> of</c><00:07:36.769><c> the</c><00:07:36.889><c> box</c>

00:07:37.089 --> 00:07:37.099 align:start position:0%
a speed net or rails work out of the box
 

00:07:37.099 --> 00:07:39.579 align:start position:0%
a speed net or rails work out of the box
so<00:07:38.059><c> when</c><00:07:38.300><c> we</c><00:07:38.419><c> receive</c><00:07:38.539><c> a</c><00:07:38.869><c> request</c><00:07:39.169><c> on</c><00:07:39.439><c> the</c>

00:07:39.579 --> 00:07:39.589 align:start position:0%
so when we receive a request on the
 

00:07:39.589 --> 00:07:42.249 align:start position:0%
so when we receive a request on the
server<00:07:39.860><c> a</c><00:07:40.159><c> thread</c><00:07:40.759><c> is</c><00:07:40.999><c> allocated</c><00:07:41.719><c> to</c><00:07:41.869><c> handle</c>

00:07:42.249 --> 00:07:42.259 align:start position:0%
server a thread is allocated to handle
 

00:07:42.259 --> 00:07:44.739 align:start position:0%
server a thread is allocated to handle
that<00:07:42.409><c> request</c><00:07:42.860><c> as</c><00:07:43.129><c> part</c><00:07:44.059><c> of</c><00:07:44.119><c> handling</c><00:07:44.569><c> that</c>

00:07:44.739 --> 00:07:44.749 align:start position:0%
that request as part of handling that
 

00:07:44.749 --> 00:07:46.600 align:start position:0%
that request as part of handling that
requests<00:07:45.259><c> and</c><00:07:45.619><c> is</c><00:07:45.829><c> likely</c><00:07:46.069><c> that</c><00:07:46.189><c> we're</c><00:07:46.459><c> going</c>

00:07:46.600 --> 00:07:46.610 align:start position:0%
requests and is likely that we're going
 

00:07:46.610 --> 00:07:48.850 align:start position:0%
requests and is likely that we're going
to<00:07:46.699><c> query</c><00:07:47.119><c> a</c><00:07:47.300><c> database</c><00:07:47.539><c> and</c><00:07:48.079><c> as</c><00:07:48.589><c> you</c><00:07:48.709><c> know</c>

00:07:48.850 --> 00:07:48.860 align:start position:0%
to query a database and as you know
 

00:07:48.860 --> 00:07:50.499 align:start position:0%
to query a database and as you know
sometimes<00:07:49.550><c> it</c><00:07:49.729><c> may</c><00:07:49.879><c> take</c><00:07:50.089><c> a</c><00:07:50.119><c> little</c><00:07:50.360><c> while</c>

00:07:50.499 --> 00:07:50.509 align:start position:0%
sometimes it may take a little while
 

00:07:50.509 --> 00:07:53.169 align:start position:0%
sometimes it may take a little while
until<00:07:50.929><c> the</c><00:07:51.439><c> result</c><00:07:51.829><c> is</c><00:07:52.009><c> ready</c><00:07:52.339><c> when</c><00:07:53.059><c> the</c>

00:07:53.169 --> 00:07:53.179 align:start position:0%
until the result is ready when the
 

00:07:53.179 --> 00:07:55.119 align:start position:0%
until the result is ready when the
database<00:07:53.479><c> is</c><00:07:53.749><c> executing</c><00:07:54.469><c> the</c><00:07:54.499><c> query</c><00:07:54.829><c> that</c>

00:07:55.119 --> 00:07:55.129 align:start position:0%
database is executing the query that
 

00:07:55.129 --> 00:07:58.059 align:start position:0%
database is executing the query that
thread<00:07:55.789><c> is</c><00:07:55.939><c> sitting</c><00:07:56.329><c> there</c><00:07:56.479><c> waiting</c><00:07:56.959><c> it</c><00:07:57.679><c> can't</c>

00:07:58.059 --> 00:07:58.069 align:start position:0%
thread is sitting there waiting it can't
 

00:07:58.069 --> 00:08:00.549 align:start position:0%
thread is sitting there waiting it can't
be<00:07:58.249><c> used</c><00:07:58.429><c> to</c><00:07:58.639><c> serve</c><00:07:58.879><c> another</c><00:07:59.360><c> client</c><00:07:59.809><c> so</c><00:08:00.529><c> we</c>

00:08:00.549 --> 00:08:00.559 align:start position:0%
be used to serve another client so we
 

00:08:00.559 --> 00:08:02.799 align:start position:0%
be used to serve another client so we
need<00:08:00.800><c> a</c><00:08:00.919><c> new</c><00:08:01.219><c> thread</c><00:08:01.610><c> to</c><00:08:01.879><c> serve</c><00:08:02.119><c> another</c>

00:08:02.799 --> 00:08:02.809 align:start position:0%
need a new thread to serve another
 

00:08:02.809 --> 00:08:05.529 align:start position:0%
need a new thread to serve another
client<00:08:03.429><c> imagine</c><00:08:04.429><c> what</c><00:08:04.639><c> would</c><00:08:04.789><c> happen</c><00:08:04.999><c> if</c><00:08:05.240><c> we</c>

00:08:05.529 --> 00:08:05.539 align:start position:0%
client imagine what would happen if we
 

00:08:05.539 --> 00:08:07.329 align:start position:0%
client imagine what would happen if we
have<00:08:05.719><c> a</c><00:08:05.990><c> large</c><00:08:06.409><c> number</c><00:08:06.649><c> of</c><00:08:06.829><c> concurrent</c>

00:08:07.329 --> 00:08:07.339 align:start position:0%
have a large number of concurrent
 

00:08:07.339 --> 00:08:09.939 align:start position:0%
have a large number of concurrent
clients<00:08:07.939><c> at</c><00:08:08.089><c> some</c><00:08:08.779><c> point</c><00:08:09.019><c> we're</c><00:08:09.409><c> going</c><00:08:09.589><c> to</c><00:08:09.679><c> run</c>

00:08:09.939 --> 00:08:09.949 align:start position:0%
clients at some point we're going to run
 

00:08:09.949 --> 00:08:12.639 align:start position:0%
clients at some point we're going to run
out<00:08:10.189><c> of</c><00:08:10.369><c> threads</c><00:08:10.699><c> to</c><00:08:11.089><c> serve</c><00:08:11.449><c> these</c><00:08:11.689><c> clients</c><00:08:12.139><c> so</c>

00:08:12.639 --> 00:08:12.649 align:start position:0%
out of threads to serve these clients so
 

00:08:12.649 --> 00:08:15.879 align:start position:0%
out of threads to serve these clients so
new<00:08:13.159><c> clients</c><00:08:13.639><c> have</c><00:08:13.999><c> to</c><00:08:14.209><c> wait</c><00:08:14.419><c> until</c><00:08:14.889><c> three</c>

00:08:15.879 --> 00:08:15.889 align:start position:0%
new clients have to wait until three
 

00:08:15.889 --> 00:08:17.620 align:start position:0%
new clients have to wait until three
threads<00:08:16.249><c> are</c><00:08:16.399><c> available</c>

00:08:17.620 --> 00:08:17.630 align:start position:0%
threads are available
 

00:08:17.630 --> 00:08:19.540 align:start position:0%
threads are available
or<00:08:17.720><c> if</c><00:08:17.900><c> we</c><00:08:18.080><c> don't</c><00:08:18.200><c> want</c><00:08:18.290><c> them</c><00:08:18.530><c> to</c><00:08:18.650><c> wait</c><00:08:18.830><c> we</c><00:08:19.400><c> need</c>

00:08:19.540 --> 00:08:19.550 align:start position:0%
or if we don't want them to wait we need
 

00:08:19.550 --> 00:08:22.390 align:start position:0%
or if we don't want them to wait we need
to<00:08:19.670><c> add</c><00:08:19.790><c> more</c><00:08:20.120><c> hardware</c><00:08:20.990><c> so</c><00:08:21.830><c> with</c><00:08:22.040><c> this</c><00:08:22.160><c> kind</c>

00:08:22.390 --> 00:08:22.400 align:start position:0%
to add more hardware so with this kind
 

00:08:22.400 --> 00:08:24.820 align:start position:0%
to add more hardware so with this kind
of<00:08:22.460><c> architecture</c><00:08:23.210><c> we</c><00:08:23.600><c> are</c><00:08:23.660><c> not</c><00:08:23.870><c> utilizing</c><00:08:24.500><c> our</c>

00:08:24.820 --> 00:08:24.830 align:start position:0%
of architecture we are not utilizing our
 

00:08:24.830 --> 00:08:27.400 align:start position:0%
of architecture we are not utilizing our
resources<00:08:25.030><c> efficiently</c><00:08:26.110><c> this</c><00:08:27.110><c> is</c><00:08:27.290><c> the</c>

00:08:27.400 --> 00:08:27.410 align:start position:0%
resources efficiently this is the
 

00:08:27.410 --> 00:08:29.560 align:start position:0%
resources efficiently this is the
problem<00:08:27.710><c> with</c><00:08:28.040><c> blocking</c><00:08:28.340><c> or</c><00:08:29.000><c> synchronous</c>

00:08:29.560 --> 00:08:29.570 align:start position:0%
problem with blocking or synchronous
 

00:08:29.570 --> 00:08:31.960 align:start position:0%
problem with blocking or synchronous
architecture<00:08:30.410><c> and</c><00:08:30.590><c> as</c><00:08:31.070><c> I</c><00:08:31.130><c> explained</c><00:08:31.580><c> that's</c>

00:08:31.960 --> 00:08:31.970 align:start position:0%
architecture and as I explained that's
 

00:08:31.970 --> 00:08:34.210 align:start position:0%
architecture and as I explained that's
how<00:08:32.240><c> applications</c><00:08:32.870><c> built</c><00:08:33.349><c> with</c><00:08:33.710><c> frameworks</c>

00:08:34.210 --> 00:08:34.220 align:start position:0%
how applications built with frameworks
 

00:08:34.220 --> 00:08:36.820 align:start position:0%
how applications built with frameworks
like<00:08:34.430><c> a</c><00:08:34.640><c> speed</c><00:08:34.940><c> a</c><00:08:35.030><c> that</c><00:08:35.270><c> worked</c><00:08:35.900><c> by</c><00:08:36.110><c> default</c><00:08:36.560><c> of</c>

00:08:36.820 --> 00:08:36.830 align:start position:0%
like a speed a that worked by default of
 

00:08:36.830 --> 00:08:39.460 align:start position:0%
like a speed a that worked by default of
course<00:08:37.520><c> in</c><00:08:37.700><c> asp.net</c><00:08:38.000><c> it</c><00:08:38.510><c> is</c><00:08:38.690><c> possible</c><00:08:39.289><c> to</c><00:08:39.320><c> use</c>

00:08:39.460 --> 00:08:39.470 align:start position:0%
course in asp.net it is possible to use
 

00:08:39.470 --> 00:08:41.980 align:start position:0%
course in asp.net it is possible to use
asynchronous<00:08:40.340><c> architecture</c><00:08:41.150><c> what</c><00:08:41.750><c> you</c><00:08:41.870><c> will</c>

00:08:41.980 --> 00:08:41.990 align:start position:0%
asynchronous architecture what you will
 

00:08:41.990 --> 00:08:43.990 align:start position:0%
asynchronous architecture what you will
have<00:08:42.169><c> to</c><00:08:42.289><c> do</c><00:08:42.440><c> extra</c><00:08:43.099><c> work</c><00:08:43.370><c> for</c><00:08:43.400><c> now</c><00:08:43.760><c> in</c>

00:08:43.990 --> 00:08:44.000 align:start position:0%
have to do extra work for now in
 

00:08:44.000 --> 00:08:46.450 align:start position:0%
have to do extra work for now in
contrast<00:08:44.870><c> no</c><00:08:45.530><c> the</c><00:08:45.680><c> applications</c><00:08:46.250><c> are</c>

00:08:46.450 --> 00:08:46.460 align:start position:0%
contrast no the applications are
 

00:08:46.460 --> 00:08:49.090 align:start position:0%
contrast no the applications are
asynchronous<00:08:47.060><c> by</c><00:08:47.750><c> default</c><00:08:48.200><c> so</c><00:08:48.710><c> you</c><00:08:48.890><c> don't</c>

00:08:49.090 --> 00:08:49.100 align:start position:0%
asynchronous by default so you don't
 

00:08:49.100 --> 00:08:50.860 align:start position:0%
asynchronous by default so you don't
have<00:08:49.250><c> to</c><00:08:49.340><c> do</c><00:08:49.490><c> anything</c><00:08:49.940><c> extra</c>

00:08:50.860 --> 00:08:50.870 align:start position:0%
have to do anything extra
 

00:08:50.870 --> 00:08:53.020 align:start position:0%
have to do anything extra
in<00:08:51.020><c> node</c><00:08:51.530><c> we</c><00:08:51.770><c> have</c><00:08:51.920><c> a</c><00:08:51.950><c> single</c><00:08:52.400><c> thread</c><00:08:52.670><c> to</c>

00:08:53.020 --> 00:08:53.030 align:start position:0%
in node we have a single thread to
 

00:08:53.030 --> 00:08:55.750 align:start position:0%
in node we have a single thread to
handle<00:08:53.510><c> all</c><00:08:53.720><c> requests</c><00:08:54.590><c> when</c><00:08:55.280><c> a</c><00:08:55.310><c> request</c>

00:08:55.750 --> 00:08:55.760 align:start position:0%
handle all requests when a request
 

00:08:55.760 --> 00:08:58.360 align:start position:0%
handle all requests when a request
arrives<00:08:55.940><c> that</c><00:08:56.780><c> single</c><00:08:57.260><c> thread</c><00:08:57.530><c> is</c><00:08:57.740><c> used</c><00:08:57.980><c> to</c>

00:08:58.360 --> 00:08:58.370 align:start position:0%
arrives that single thread is used to
 

00:08:58.370 --> 00:09:00.730 align:start position:0%
arrives that single thread is used to
handle<00:08:58.760><c> that</c><00:08:58.910><c> request</c><00:08:59.330><c> if</c><00:09:00.020><c> we</c><00:09:00.260><c> need</c><00:09:00.410><c> to</c><00:09:00.530><c> query</c>

00:09:00.730 --> 00:09:00.740 align:start position:0%
handle that request if we need to query
 

00:09:00.740 --> 00:09:03.010 align:start position:0%
handle that request if we need to query
a<00:09:00.860><c> database</c><00:09:01.190><c> or</c><00:09:01.670><c> thread</c><00:09:02.240><c> doesn't</c><00:09:02.570><c> have</c><00:09:02.870><c> to</c>

00:09:03.010 --> 00:09:03.020 align:start position:0%
a database or thread doesn't have to
 

00:09:03.020 --> 00:09:05.190 align:start position:0%
a database or thread doesn't have to
wait<00:09:03.200><c> for</c><00:09:03.470><c> the</c><00:09:03.530><c> database</c><00:09:03.890><c> to</c><00:09:04.250><c> return</c><00:09:04.790><c> the</c><00:09:05.000><c> data</c>

00:09:05.190 --> 00:09:05.200 align:start position:0%
wait for the database to return the data
 

00:09:05.200 --> 00:09:07.780 align:start position:0%
wait for the database to return the data
while<00:09:06.200><c> the</c><00:09:06.380><c> database</c><00:09:06.770><c> is</c><00:09:06.950><c> executing</c><00:09:07.640><c> our</c>

00:09:07.780 --> 00:09:07.790 align:start position:0%
while the database is executing our
 

00:09:07.790 --> 00:09:10.150 align:start position:0%
while the database is executing our
query<00:09:08.150><c> that</c><00:09:08.690><c> thread</c><00:09:09.020><c> will</c><00:09:09.200><c> be</c><00:09:09.320><c> used</c><00:09:09.530><c> to</c><00:09:09.920><c> serve</c>

00:09:10.150 --> 00:09:10.160 align:start position:0%
query that thread will be used to serve
 

00:09:10.160 --> 00:09:12.460 align:start position:0%
query that thread will be used to serve
another<00:09:10.520><c> client</c><00:09:11.000><c> when</c><00:09:11.930><c> the</c><00:09:12.050><c> database</c>

00:09:12.460 --> 00:09:12.470 align:start position:0%
another client when the database
 

00:09:12.470 --> 00:09:15.070 align:start position:0%
another client when the database
prepares<00:09:13.010><c> the</c><00:09:13.160><c> result</c><00:09:13.490><c> it</c><00:09:13.700><c> puts</c><00:09:14.210><c> a</c><00:09:14.360><c> message</c><00:09:14.690><c> in</c>

00:09:15.070 --> 00:09:15.080 align:start position:0%
prepares the result it puts a message in
 

00:09:15.080 --> 00:09:18.790 align:start position:0%
prepares the result it puts a message in
what<00:09:15.440><c> we</c><00:09:15.620><c> call</c><00:09:15.920><c> an</c><00:09:16.190><c> event</c><00:09:16.730><c> queue</c><00:09:17.690><c> node</c><00:09:18.560><c> is</c>

00:09:18.790 --> 00:09:18.800 align:start position:0%
what we call an event queue node is
 

00:09:18.800 --> 00:09:20.980 align:start position:0%
what we call an event queue node is
continuously<00:09:19.460><c> monitoring</c><00:09:20.330><c> this</c><00:09:20.540><c> queue</c><00:09:20.810><c> in</c>

00:09:20.980 --> 00:09:20.990 align:start position:0%
continuously monitoring this queue in
 

00:09:20.990 --> 00:09:21.730 align:start position:0%
continuously monitoring this queue in
the<00:09:21.110><c> background</c>

00:09:21.730 --> 00:09:21.740 align:start position:0%
the background
 

00:09:21.740 --> 00:09:23.980 align:start position:0%
the background
when<00:09:22.280><c> it</c><00:09:22.370><c> finds</c><00:09:22.640><c> an</c><00:09:22.820><c> event</c><00:09:23.210><c> in</c><00:09:23.360><c> this</c><00:09:23.540><c> queue</c><00:09:23.780><c> it</c>

00:09:23.980 --> 00:09:23.990 align:start position:0%
when it finds an event in this queue it
 

00:09:23.990 --> 00:09:26.710 align:start position:0%
when it finds an event in this queue it
will<00:09:24.410><c> take</c><00:09:24.620><c> it</c><00:09:24.740><c> out</c><00:09:24.860><c> and</c><00:09:25.160><c> process</c><00:09:25.880><c> it</c><00:09:26.030><c> this</c>

00:09:26.710 --> 00:09:26.720 align:start position:0%
will take it out and process it this
 

00:09:26.720 --> 00:09:29.260 align:start position:0%
will take it out and process it this
kind<00:09:26.960><c> of</c><00:09:27.020><c> architecture</c><00:09:27.380><c> makes</c><00:09:28.220><c> node</c><00:09:28.580><c> ideal</c>

00:09:29.260 --> 00:09:29.270 align:start position:0%
kind of architecture makes node ideal
 

00:09:29.270 --> 00:09:31.600 align:start position:0%
kind of architecture makes node ideal
for<00:09:29.570><c> building</c><00:09:30.020><c> applications</c><00:09:30.230><c> that</c><00:09:30.890><c> include</c><00:09:31.400><c> a</c>

00:09:31.600 --> 00:09:31.610 align:start position:0%
for building applications that include a
 

00:09:31.610 --> 00:09:34.750 align:start position:0%
for building applications that include a
lot<00:09:32.060><c> of</c><00:09:32.180><c> disk</c><00:09:32.510><c> or</c><00:09:32.810><c> network</c><00:09:32.870><c> access</c><00:09:33.740><c> we</c><00:09:34.730><c> can</c>

00:09:34.750 --> 00:09:34.760 align:start position:0%
lot of disk or network access we can
 

00:09:34.760 --> 00:09:36.970 align:start position:0%
lot of disk or network access we can
serve<00:09:35.120><c> more</c><00:09:35.420><c> clients</c><00:09:35.930><c> without</c><00:09:36.290><c> the</c><00:09:36.560><c> need</c><00:09:36.740><c> to</c>

00:09:36.970 --> 00:09:36.980 align:start position:0%
serve more clients without the need to
 

00:09:36.980 --> 00:09:39.880 align:start position:0%
serve more clients without the need to
throw<00:09:37.430><c> in</c><00:09:37.640><c> more</c><00:09:38.060><c> hardware</c><00:09:38.600><c> and</c><00:09:38.810><c> that's</c><00:09:39.170><c> why</c><00:09:39.440><c> no</c>

00:09:39.880 --> 00:09:39.890 align:start position:0%
throw in more hardware and that's why no
 

00:09:39.890 --> 00:09:42.090 align:start position:0%
throw in more hardware and that's why no
the<00:09:39.950><c> applications</c><00:09:40.640><c> are</c><00:09:40.820><c> highly</c><00:09:41.240><c> scalable</c><00:09:41.840><c> in</c>

00:09:42.090 --> 00:09:42.100 align:start position:0%
the applications are highly scalable in
 

00:09:42.100 --> 00:09:45.460 align:start position:0%
the applications are highly scalable in
contrast<00:09:43.100><c> node</c><00:09:43.550><c> should</c><00:09:43.880><c> not</c><00:09:44.090><c> be</c><00:09:44.270><c> used</c><00:09:44.510><c> for</c><00:09:44.750><c> CPU</c>

00:09:45.460 --> 00:09:45.470 align:start position:0%
contrast node should not be used for CPU
 

00:09:45.470 --> 00:09:48.040 align:start position:0%
contrast node should not be used for CPU
intensive<00:09:46.010><c> applications</c><00:09:46.910><c> like</c><00:09:47.300><c> a</c><00:09:47.540><c> video</c>

00:09:48.040 --> 00:09:48.050 align:start position:0%
intensive applications like a video
 

00:09:48.050 --> 00:09:50.470 align:start position:0%
intensive applications like a video
encoding<00:09:48.590><c> or</c><00:09:48.890><c> an</c><00:09:49.370><c> image</c><00:09:49.970><c> manipulation</c>

00:09:50.470 --> 00:09:50.480 align:start position:0%
encoding or an image manipulation
 

00:09:50.480 --> 00:09:53.680 align:start position:0%
encoding or an image manipulation
service<00:09:51.290><c> in</c><00:09:51.500><c> this</c><00:09:52.250><c> kind</c><00:09:52.490><c> of</c><00:09:52.580><c> applications</c><00:09:53.150><c> we</c>

00:09:53.680 --> 00:09:53.690 align:start position:0%
service in this kind of applications we
 

00:09:53.690 --> 00:09:55.630 align:start position:0%
service in this kind of applications we
have<00:09:53.720><c> a</c><00:09:54.140><c> lot</c><00:09:54.470><c> of</c><00:09:54.500><c> calculations</c><00:09:55.160><c> that</c><00:09:55.490><c> should</c>

00:09:55.630 --> 00:09:55.640 align:start position:0%
have a lot of calculations that should
 

00:09:55.640 --> 00:09:58.480 align:start position:0%
have a lot of calculations that should
be<00:09:55.760><c> done</c><00:09:55.970><c> by</c><00:09:56.030><c> CPU</c><00:09:56.720><c> and</c><00:09:56.960><c> few</c><00:09:57.680><c> operations</c><00:09:58.190><c> that</c>

00:09:58.480 --> 00:09:58.490 align:start position:0%
be done by CPU and few operations that
 

00:09:58.490 --> 00:10:00.870 align:start position:0%
be done by CPU and few operations that
touch<00:09:58.910><c> the</c><00:09:59.120><c> file</c><00:09:59.390><c> system</c><00:09:59.900><c> or</c><00:10:00.080><c> the</c><00:10:00.470><c> network</c>

00:10:00.870 --> 00:10:00.880 align:start position:0%
touch the file system or the network
 

00:10:00.880 --> 00:10:03.490 align:start position:0%
touch the file system or the network
since<00:10:01.880><c> no</c><00:10:02.090><c> the</c><00:10:02.150><c> applications</c><00:10:02.810><c> are</c><00:10:02.930><c> single</c>

00:10:03.490 --> 00:10:03.500 align:start position:0%
since no the applications are single
 

00:10:03.500 --> 00:10:05.410 align:start position:0%
since no the applications are single
threaded<00:10:03.670><c> when</c><00:10:04.670><c> performing</c><00:10:05.270><c> the</c>

00:10:05.410 --> 00:10:05.420 align:start position:0%
threaded when performing the
 

00:10:05.420 --> 00:10:07.660 align:start position:0%
threaded when performing the
calculations<00:10:06.170><c> to</c><00:10:06.350><c> serve</c><00:10:06.620><c> one</c><00:10:06.860><c> client</c><00:10:07.130><c> other</c>

00:10:07.660 --> 00:10:07.670 align:start position:0%
calculations to serve one client other
 

00:10:07.670 --> 00:10:10.660 align:start position:0%
calculations to serve one client other
clients<00:10:08.270><c> have</c><00:10:08.510><c> to</c><00:10:08.750><c> wait</c><00:10:09.020><c> and</c><00:10:09.320><c> that's</c><00:10:10.010><c> why</c><00:10:10.190><c> node</c>

00:10:10.660 --> 00:10:10.670 align:start position:0%
clients have to wait and that's why node
 

00:10:10.670 --> 00:10:12.910 align:start position:0%
clients have to wait and that's why node
should<00:10:11.000><c> not</c><00:10:11.240><c> be</c><00:10:11.450><c> used</c><00:10:11.660><c> or</c><00:10:12.050><c> CPU</c><00:10:12.530><c> intensive</c>

00:10:12.910 --> 00:10:12.920 align:start position:0%
should not be used or CPU intensive
 

00:10:12.920 --> 00:10:15.370 align:start position:0%
should not be used or CPU intensive
applications<00:10:13.910><c> it</c><00:10:14.210><c> should</c><00:10:14.660><c> only</c><00:10:14.870><c> be</c><00:10:15.050><c> used</c><00:10:15.260><c> for</c>

00:10:15.370 --> 00:10:15.380 align:start position:0%
applications it should only be used for
 

00:10:15.380 --> 00:10:18.090 align:start position:0%
applications it should only be used for
building<00:10:15.920><c> data</c><00:10:16.490><c> intensive</c><00:10:17.030><c> and</c><00:10:17.510><c> real-time</c>

00:10:18.090 --> 00:10:18.100 align:start position:0%
building data intensive and real-time
 

00:10:18.100 --> 00:10:20.260 align:start position:0%
building data intensive and real-time
applications<00:10:19.100><c> okay</c>

00:10:20.260 --> 00:10:20.270 align:start position:0%
applications okay
 

00:10:20.270 --> 00:10:22.720 align:start position:0%
applications okay
enough<00:10:20.720><c> theory</c><00:10:20.990><c> Nix</c><00:10:21.620><c> I'm</c><00:10:21.860><c> gonna</c><00:10:22.010><c> show</c><00:10:22.220><c> you</c><00:10:22.280><c> how</c>

00:10:22.720 --> 00:10:22.730 align:start position:0%
enough theory Nix I'm gonna show you how
 

00:10:22.730 --> 00:10:25.060 align:start position:0%
enough theory Nix I'm gonna show you how
to<00:10:22.790><c> install</c><00:10:23.150><c> node</c><00:10:23.540><c> and</c><00:10:23.810><c> build</c><00:10:24.410><c> your</c><00:10:24.770><c> first</c>

00:10:25.060 --> 00:10:25.070 align:start position:0%
to install node and build your first
 

00:10:25.070 --> 00:10:27.140 align:start position:0%
to install node and build your first
node<00:10:25.610><c> application</c>

00:10:27.140 --> 00:10:27.150 align:start position:0%
node application
 

00:10:27.150 --> 00:10:31.330 align:start position:0%
node application
you

00:10:31.330 --> 00:10:31.340 align:start position:0%
 
 

00:10:31.340 --> 00:10:32.860 align:start position:0%
 
in<00:10:31.460><c> this</c><00:10:32.029><c> lecture</c><00:10:32.300><c> I'm</c><00:10:32.480><c> going</c><00:10:32.630><c> to</c><00:10:32.690><c> show</c><00:10:32.840><c> you</c>

00:10:32.860 --> 00:10:32.870 align:start position:0%
in this lecture I'm going to show you
 

00:10:32.870 --> 00:10:35.620 align:start position:0%
in this lecture I'm going to show you
how<00:10:33.170><c> to</c><00:10:33.230><c> install</c><00:10:33.590><c> note</c><00:10:34.220><c> if</c><00:10:34.970><c> you're</c><00:10:35.150><c> on</c><00:10:35.270><c> Windows</c>

00:10:35.620 --> 00:10:35.630 align:start position:0%
how to install note if you're on Windows
 

00:10:35.630 --> 00:10:37.930 align:start position:0%
how to install note if you're on Windows
open<00:10:36.170><c> up</c><00:10:36.290><c> command</c><00:10:36.620><c> prompt</c><00:10:37.070><c> if</c><00:10:37.400><c> you're</c><00:10:37.610><c> on</c><00:10:37.730><c> Mac</c>

00:10:37.930 --> 00:10:37.940 align:start position:0%
open up command prompt if you're on Mac
 

00:10:37.940 --> 00:10:40.720 align:start position:0%
open up command prompt if you're on Mac
or<00:10:38.210><c> Linux</c><00:10:38.240><c> open</c><00:10:39.200><c> up</c><00:10:39.320><c> the</c><00:10:39.440><c> terminal</c><00:10:39.730><c> first</c>

00:10:40.720 --> 00:10:40.730 align:start position:0%
or Linux open up the terminal first
 

00:10:40.730 --> 00:10:42.760 align:start position:0%
or Linux open up the terminal first
let's<00:10:41.090><c> see</c><00:10:41.240><c> if</c><00:10:41.270><c> you</c><00:10:41.510><c> already</c><00:10:41.779><c> have</c><00:10:42.110><c> node</c><00:10:42.470><c> on</c>

00:10:42.760 --> 00:10:42.770 align:start position:0%
let's see if you already have node on
 

00:10:42.770 --> 00:10:46.660 align:start position:0%
let's see if you already have node on
your<00:10:42.950><c> machine</c><00:10:43.279><c> or</c><00:10:43.310><c> not</c><00:10:43.640><c> so</c><00:10:44.330><c> run</c><00:10:44.600><c> note</c><00:10:45.170><c> space</c><00:10:45.980><c> -</c>

00:10:46.660 --> 00:10:46.670 align:start position:0%
your machine or not so run note space -
 

00:10:46.670 --> 00:10:50.470 align:start position:0%
your machine or not so run note space -
-<00:10:47.110><c> version</c><00:10:48.520><c> you</c><00:10:49.520><c> can</c><00:10:49.670><c> see</c><00:10:49.850><c> on</c><00:10:50.060><c> this</c><00:10:50.240><c> machine</c>

00:10:50.470 --> 00:10:50.480 align:start position:0%
- version you can see on this machine
 

00:10:50.480 --> 00:10:53.860 align:start position:0%
- version you can see on this machine
I'm<00:10:50.810><c> running</c><00:10:51.500><c> node</c><00:10:51.740><c> version</c><00:10:52.250><c> 6.0</c><00:10:53.210><c> point</c><00:10:53.540><c> three</c>

00:10:53.860 --> 00:10:53.870 align:start position:0%
I'm running node version 6.0 point three
 

00:10:53.870 --> 00:10:56.590 align:start position:0%
I'm running node version 6.0 point three
this<00:10:54.320><c> is</c><00:10:54.380><c> an</c><00:10:54.650><c> earlier</c><00:10:55.160><c> version</c><00:10:55.430><c> of</c><00:10:55.730><c> node</c><00:10:55.970><c> the</c>

00:10:56.590 --> 00:10:56.600 align:start position:0%
this is an earlier version of node the
 

00:10:56.600 --> 00:10:58.780 align:start position:0%
this is an earlier version of node the
latest<00:10:57.080><c> stable</c><00:10:57.560><c> version</c><00:10:57.740><c> is</c><00:10:58.190><c> version</c><00:10:58.400><c> eight</c>

00:10:58.780 --> 00:10:58.790 align:start position:0%
latest stable version is version eight
 

00:10:58.790 --> 00:11:01.450 align:start position:0%
latest stable version is version eight
now<00:10:59.570><c> on</c><00:10:59.720><c> your</c><00:10:59.930><c> machine</c><00:10:59.960><c> chances</c><00:11:00.800><c> are</c><00:11:00.950><c> you</c><00:11:01.339><c> may</c>

00:11:01.450 --> 00:11:01.460 align:start position:0%
now on your machine chances are you may
 

00:11:01.460 --> 00:11:02.920 align:start position:0%
now on your machine chances are you may
not<00:11:01.490><c> have</c><00:11:01.820><c> known</c><00:11:02.060><c> or</c><00:11:02.300><c> you</c><00:11:02.420><c> might</c><00:11:02.600><c> have</c><00:11:02.720><c> an</c>

00:11:02.920 --> 00:11:02.930 align:start position:0%
not have known or you might have an
 

00:11:02.930 --> 00:11:05.470 align:start position:0%
not have known or you might have an
earlier<00:11:03.320><c> version</c><00:11:03.520><c> either</c><00:11:04.520><c> way</c><00:11:04.820><c> I</c><00:11:05.000><c> want</c><00:11:05.270><c> you</c><00:11:05.360><c> to</c>

00:11:05.470 --> 00:11:05.480 align:start position:0%
earlier version either way I want you to
 

00:11:05.480 --> 00:11:08.770 align:start position:0%
earlier version either way I want you to
install<00:11:05.839><c> the</c><00:11:06.200><c> latest</c><00:11:06.410><c> version</c><00:11:07.010><c> of</c><00:11:07.100><c> node</c>

00:11:08.770 --> 00:11:08.780 align:start position:0%
install the latest version of node
 

00:11:08.780 --> 00:11:11.380 align:start position:0%
install the latest version of node
so<00:11:09.380><c> open</c><00:11:09.710><c> up</c><00:11:09.800><c> your</c><00:11:09.920><c> browser</c><00:11:10.130><c> and</c><00:11:10.640><c> head</c><00:11:11.090><c> over</c><00:11:11.150><c> to</c>

00:11:11.380 --> 00:11:11.390 align:start position:0%
so open up your browser and head over to
 

00:11:11.390 --> 00:11:14.920 align:start position:0%
so open up your browser and head over to
note<00:11:11.810><c> J</c><00:11:12.080><c> s</c><00:11:12.290><c> org</c><00:11:13.100><c> on</c><00:11:13.310><c> this</c><00:11:14.240><c> home</c><00:11:14.420><c> page</c><00:11:14.630><c> you</c><00:11:14.780><c> can</c>

00:11:14.920 --> 00:11:14.930 align:start position:0%
note J s org on this home page you can
 

00:11:14.930 --> 00:11:18.250 align:start position:0%
note J s org on this home page you can
see<00:11:15.080><c> we</c><00:11:15.260><c> have</c><00:11:15.440><c> two</c><00:11:15.950><c> versions</c><00:11:16.280><c> for</c><00:11:16.940><c> note</c><00:11:17.150><c> one</c><00:11:18.050><c> is</c>

00:11:18.250 --> 00:11:18.260 align:start position:0%
see we have two versions for note one is
 

00:11:18.260 --> 00:11:20.770 align:start position:0%
see we have two versions for note one is
the<00:11:18.770><c> latest</c><00:11:19.250><c> stable</c><00:11:19.880><c> version</c><00:11:20.060><c> which</c><00:11:20.660><c> is</c>

00:11:20.770 --> 00:11:20.780 align:start position:0%
the latest stable version which is
 

00:11:20.780 --> 00:11:23.410 align:start position:0%
the latest stable version which is
recommended<00:11:21.110><c> for</c><00:11:21.590><c> most</c><00:11:22.040><c> users</c><00:11:22.430><c> at</c><00:11:23.030><c> the</c><00:11:23.240><c> time</c>

00:11:23.410 --> 00:11:23.420 align:start position:0%
recommended for most users at the time
 

00:11:23.420 --> 00:11:24.940 align:start position:0%
recommended for most users at the time
of<00:11:23.540><c> recording</c><00:11:23.690><c> this</c><00:11:23.960><c> video</c><00:11:24.200><c> test</c><00:11:24.560><c> version</c>

00:11:24.940 --> 00:11:24.950 align:start position:0%
of recording this video test version
 

00:11:24.950 --> 00:11:27.160 align:start position:0%
of recording this video test version
eight<00:11:25.130><c> point</c><00:11:25.550><c> nine</c><00:11:25.640><c> point</c><00:11:26.120><c> one</c><00:11:26.180><c> and</c><00:11:26.540><c> there's</c>

00:11:27.160 --> 00:11:27.170 align:start position:0%
eight point nine point one and there's
 

00:11:27.170 --> 00:11:29.170 align:start position:0%
eight point nine point one and there's
always<00:11:27.410><c> a</c><00:11:27.860><c> newer</c><00:11:28.280><c> version</c><00:11:28.580><c> which</c><00:11:29.030><c> is</c>

00:11:29.170 --> 00:11:29.180 align:start position:0%
always a newer version which is
 

00:11:29.180 --> 00:11:31.450 align:start position:0%
always a newer version which is
experimental<00:11:30.110><c> and</c><00:11:30.350><c> it</c><00:11:30.500><c> might</c><00:11:30.680><c> not</c><00:11:30.710><c> be</c><00:11:31.190><c> stable</c>

00:11:31.450 --> 00:11:31.460 align:start position:0%
experimental and it might not be stable
 

00:11:31.460 --> 00:11:33.940 align:start position:0%
experimental and it might not be stable
so<00:11:32.330><c> I</c><00:11:32.540><c> want</c><00:11:32.750><c> you</c><00:11:32.840><c> to</c><00:11:32.870><c> install</c><00:11:33.290><c> the</c><00:11:33.710><c> latest</c>

00:11:33.940 --> 00:11:33.950 align:start position:0%
so I want you to install the latest
 

00:11:33.950 --> 00:11:37.060 align:start position:0%
so I want you to install the latest
stable<00:11:34.790><c> version</c><00:11:35.290><c> also</c><00:11:36.290><c> take</c><00:11:36.620><c> into</c><00:11:36.860><c> account</c>

00:11:37.060 --> 00:11:37.070 align:start position:0%
stable version also take into account
 

00:11:37.070 --> 00:11:38.950 align:start position:0%
stable version also take into account
that<00:11:37.310><c> in</c><00:11:37.520><c> the</c><00:11:37.610><c> future</c><00:11:37.970><c> when</c><00:11:38.360><c> you're</c><00:11:38.480><c> watching</c>

00:11:38.950 --> 00:11:38.960 align:start position:0%
that in the future when you're watching
 

00:11:38.960 --> 00:11:41.230 align:start position:0%
that in the future when you're watching
this<00:11:39.050><c> video</c><00:11:39.230><c> chances</c><00:11:39.530><c> are</c><00:11:40.010><c> the</c><00:11:40.400><c> latest</c><00:11:40.880><c> stable</c>

00:11:41.230 --> 00:11:41.240 align:start position:0%
this video chances are the latest stable
 

00:11:41.240 --> 00:11:43.600 align:start position:0%
this video chances are the latest stable
version<00:11:41.420><c> might</c><00:11:41.930><c> be</c><00:11:42.080><c> newer</c><00:11:42.290><c> if</c><00:11:43.100><c> you're</c><00:11:43.340><c> worried</c>

00:11:43.600 --> 00:11:43.610 align:start position:0%
version might be newer if you're worried
 

00:11:43.610 --> 00:11:44.770 align:start position:0%
version might be newer if you're worried
that<00:11:43.640><c> this</c><00:11:43.910><c> course</c><00:11:44.180><c> is</c><00:11:44.300><c> going</c><00:11:44.480><c> to</c><00:11:44.570><c> get</c>

00:11:44.770 --> 00:11:44.780 align:start position:0%
that this course is going to get
 

00:11:44.780 --> 00:11:47.020 align:start position:0%
that this course is going to get
outdated<00:11:45.170><c> don't</c><00:11:45.770><c> worry</c><00:11:45.950><c> because</c><00:11:46.610><c> in</c><00:11:46.910><c> this</c>

00:11:47.020 --> 00:11:47.030 align:start position:0%
outdated don't worry because in this
 

00:11:47.030 --> 00:11:48.820 align:start position:0%
outdated don't worry because in this
course<00:11:47.300><c> we're</c><00:11:47.510><c> going</c><00:11:47.660><c> to</c><00:11:47.750><c> focus</c><00:11:48.080><c> on</c><00:11:48.440><c> the</c>

00:11:48.820 --> 00:11:48.830 align:start position:0%
course we're going to focus on the
 

00:11:48.830 --> 00:11:51.010 align:start position:0%
course we're going to focus on the
fundamentals<00:11:49.640><c> so</c><00:11:50.270><c> I'm</c><00:11:50.360><c> going</c><00:11:50.570><c> to</c><00:11:50.630><c> work</c><00:11:50.840><c> with</c>

00:11:51.010 --> 00:11:51.020 align:start position:0%
fundamentals so I'm going to work with
 

00:11:51.020 --> 00:11:53.170 align:start position:0%
fundamentals so I'm going to work with
the<00:11:51.110><c> core</c><00:11:51.410><c> modules</c><00:11:51.860><c> of</c><00:11:52.010><c> note</c><00:11:52.220><c> these</c><00:11:52.790><c> core</c>

00:11:53.170 --> 00:11:53.180 align:start position:0%
the core modules of note these core
 

00:11:53.180 --> 00:11:55.240 align:start position:0%
the core modules of note these core
modules<00:11:53.630><c> are</c><00:11:53.780><c> stable</c><00:11:54.620><c> they</c><00:11:54.830><c> have</c><00:11:54.980><c> been</c><00:11:55.130><c> there</c>

00:11:55.240 --> 00:11:55.250 align:start position:0%
modules are stable they have been there
 

00:11:55.250 --> 00:11:57.310 align:start position:0%
modules are stable they have been there
for<00:11:55.310><c> a</c><00:11:55.520><c> long</c><00:11:55.700><c> time</c><00:11:55.730><c> so</c><00:11:56.630><c> the</c><00:11:56.750><c> code</c><00:11:56.990><c> that</c><00:11:57.020><c> we're</c>

00:11:57.310 --> 00:11:57.320 align:start position:0%
for a long time so the code that we're
 

00:11:57.320 --> 00:11:58.990 align:start position:0%
for a long time so the code that we're
going<00:11:57.470><c> to</c><00:11:57.560><c> write</c><00:11:57.800><c> in</c><00:11:57.950><c> this</c><00:11:58.100><c> course</c><00:11:58.370><c> will</c>

00:11:58.990 --> 00:11:59.000 align:start position:0%
going to write in this course will
 

00:11:59.000 --> 00:12:00.760 align:start position:0%
going to write in this course will
continue<00:11:59.300><c> to</c><00:11:59.540><c> work</c><00:11:59.870><c> with</c><00:12:00.260><c> the</c><00:12:00.410><c> future</c>

00:12:00.760 --> 00:12:00.770 align:start position:0%
continue to work with the future
 

00:12:00.770 --> 00:12:03.310 align:start position:0%
continue to work with the future
versions<00:12:01.280><c> of</c><00:12:01.430><c> note</c><00:12:01.640><c> once</c><00:12:02.540><c> you</c><00:12:02.690><c> master</c><00:12:03.200><c> the</c>

00:12:03.310 --> 00:12:03.320 align:start position:0%
versions of note once you master the
 

00:12:03.320 --> 00:12:05.440 align:start position:0%
versions of note once you master the
fundamentals<00:12:03.500><c> you</c><00:12:04.310><c> can</c><00:12:04.460><c> always</c><00:12:04.940><c> learn</c><00:12:05.150><c> about</c>

00:12:05.440 --> 00:12:05.450 align:start position:0%
fundamentals you can always learn about
 

00:12:05.450 --> 00:12:07.420 align:start position:0%
fundamentals you can always learn about
the<00:12:05.960><c> new</c><00:12:06.200><c> features</c><00:12:06.650><c> that</c><00:12:06.680><c> come</c><00:12:07.100><c> in</c><00:12:07.280><c> every</c>

00:12:07.420 --> 00:12:07.430 align:start position:0%
the new features that come in every
 

00:12:07.430 --> 00:12:10.390 align:start position:0%
the new features that come in every
version<00:12:07.880><c> by</c><00:12:08.390><c> looking</c><00:12:08.780><c> at</c><00:12:08.900><c> the</c><00:12:09.050><c> change</c><00:12:09.320><c> lock</c><00:12:09.590><c> so</c>

00:12:10.390 --> 00:12:10.400 align:start position:0%
version by looking at the change lock so
 

00:12:10.400 --> 00:12:12.730 align:start position:0%
version by looking at the change lock so
let's<00:12:10.670><c> not</c><00:12:10.790><c> worry</c><00:12:11.000><c> about</c><00:12:11.120><c> the</c><00:12:11.690><c> fancy</c><00:12:12.080><c> new</c>

00:12:12.730 --> 00:12:12.740 align:start position:0%
let's not worry about the fancy new
 

00:12:12.740 --> 00:12:14.710 align:start position:0%
let's not worry about the fancy new
features<00:12:13.160><c> in</c><00:12:13.370><c> node</c><00:12:13.550><c> and</c><00:12:13.790><c> focus</c><00:12:14.510><c> on</c><00:12:14.630><c> the</c>

00:12:14.710 --> 00:12:14.720 align:start position:0%
features in node and focus on the
 

00:12:14.720 --> 00:12:16.900 align:start position:0%
features in node and focus on the
fundamentals<00:12:15.350><c> so</c><00:12:16.190><c> let's</c><00:12:16.430><c> go</c><00:12:16.550><c> ahead</c><00:12:16.640><c> and</c>

00:12:16.900 --> 00:12:16.910 align:start position:0%
fundamentals so let's go ahead and
 

00:12:16.910 --> 00:12:20.070 align:start position:0%
fundamentals so let's go ahead and
install<00:12:17.240><c> the</c><00:12:17.630><c> latest</c><00:12:18.020><c> stable</c><00:12:18.470><c> version</c>

00:12:20.070 --> 00:12:20.080 align:start position:0%
install the latest stable version
 

00:12:20.080 --> 00:12:22.860 align:start position:0%
install the latest stable version
you<00:12:20.410><c> can</c><00:12:20.560><c> see</c><00:12:20.710><c> here</c><00:12:20.890><c> I</c><00:12:20.920><c> get</c><00:12:21.190><c> a</c><00:12:21.370><c> package</c><00:12:21.820><c> we</c><00:12:22.660><c> run</c>

00:12:22.860 --> 00:12:22.870 align:start position:0%
you can see here I get a package we run
 

00:12:22.870 --> 00:12:25.860 align:start position:0%
you can see here I get a package we run
it<00:12:23.020><c> it's</c><00:12:23.200><c> an</c><00:12:23.380><c> installer</c><00:12:23.880><c> take</c><00:12:24.880><c> a</c><00:12:24.910><c> look</c><00:12:25.210><c> very</c>

00:12:25.860 --> 00:12:25.870 align:start position:0%
it it's an installer take a look very
 

00:12:25.870 --> 00:12:31.160 align:start position:0%
it it's an installer take a look very
simple<00:12:26.350><c> just</c><00:12:27.070><c> continue</c><00:12:27.550><c> continue</c><00:12:28.540><c> continue</c>

00:12:31.160 --> 00:12:31.170 align:start position:0%
 
 

00:12:31.170 --> 00:12:37.250 align:start position:0%
 
install<00:12:32.670><c> you</c><00:12:33.670><c> need</c><00:12:33.850><c> to</c><00:12:33.940><c> enter</c><00:12:34.210><c> our</c><00:12:34.360><c> password</c>

00:12:37.250 --> 00:12:37.260 align:start position:0%
 
 

00:12:37.260 --> 00:12:42.960 align:start position:0%
 
and<00:12:39.690><c> the</c><00:12:40.690><c> installation</c><00:12:41.230><c> is</c><00:12:41.320><c> complete</c><00:12:41.820><c> it</c><00:12:42.820><c> took</c>

00:12:42.960 --> 00:12:42.970 align:start position:0%
and the installation is complete it took
 

00:12:42.970 --> 00:12:46.890 align:start position:0%
and the installation is complete it took
only<00:12:43.210><c> a</c><00:12:43.360><c> few</c><00:12:43.390><c> seconds</c><00:12:44.020><c> so</c><00:12:44.670><c> now</c><00:12:45.670><c> back</c><00:12:46.630><c> in</c><00:12:46.810><c> the</c>

00:12:46.890 --> 00:12:46.900 align:start position:0%
only a few seconds so now back in the
 

00:12:46.900 --> 00:12:50.370 align:start position:0%
only a few seconds so now back in the
terminal<00:12:47.080><c> let's</c><00:12:47.860><c> run</c><00:12:48.100><c> node</c><00:12:48.850><c> -</c><00:12:49.510><c> -</c><00:12:49.810><c> version</c><00:12:50.200><c> one</c>

00:12:50.370 --> 00:12:50.380 align:start position:0%
terminal let's run node - - version one
 

00:12:50.380 --> 00:12:53.220 align:start position:0%
terminal let's run node - - version one
more<00:12:50.560><c> time</c><00:12:50.850><c> you</c><00:12:51.850><c> can</c><00:12:52.000><c> see</c><00:12:52.150><c> I</c><00:12:52.180><c> upgraded</c><00:12:52.780><c> my</c><00:12:52.900><c> node</c>

00:12:53.220 --> 00:12:53.230 align:start position:0%
more time you can see I upgraded my node
 

00:12:53.230 --> 00:12:55.370 align:start position:0%
more time you can see I upgraded my node
to<00:12:53.440><c> version</c><00:12:53.650><c> eight</c><00:12:53.950><c> point</c><00:12:54.400><c> nine</c><00:12:54.460><c> point</c><00:12:54.970><c> one</c>

00:12:55.370 --> 00:12:55.380 align:start position:0%
to version eight point nine point one
 

00:12:55.380 --> 00:12:58.170 align:start position:0%
to version eight point nine point one
next<00:12:56.380><c> we're</c><00:12:56.590><c> going</c><00:12:56.680><c> to</c><00:12:56.800><c> build</c><00:12:56.950><c> our</c><00:12:57.190><c> first</c><00:12:57.610><c> node</c>

00:12:58.170 --> 00:12:58.180 align:start position:0%
next we're going to build our first node
 

00:12:58.180 --> 00:13:03.860 align:start position:0%
next we're going to build our first node
application

00:13:03.860 --> 00:13:03.870 align:start position:0%
 
 

00:13:03.870 --> 00:13:05.810 align:start position:0%
 
alright<00:13:04.620><c> now</c><00:13:04.770><c> we're</c><00:13:05.010><c> ready</c><00:13:05.040><c> to</c><00:13:05.250><c> build</c><00:13:05.550><c> our</c>

00:13:05.810 --> 00:13:05.820 align:start position:0%
alright now we're ready to build our
 

00:13:05.820 --> 00:13:08.330 align:start position:0%
alright now we're ready to build our
first<00:13:06.180><c> node</c><00:13:06.510><c> application</c><00:13:06.950><c> so</c><00:13:07.950><c> I'm</c><00:13:08.220><c> gonna</c>

00:13:08.330 --> 00:13:08.340 align:start position:0%
first node application so I'm gonna
 

00:13:08.340 --> 00:13:13.120 align:start position:0%
first node application so I'm gonna
create<00:13:08.610><c> a</c><00:13:08.880><c> new</c><00:13:08.910><c> folder</c><00:13:10.430><c> call</c><00:13:11.430><c> it</c><00:13:11.550><c> first</c><00:13:11.850><c> app</c>

00:13:13.120 --> 00:13:13.130 align:start position:0%
create a new folder call it first app
 

00:13:13.130 --> 00:13:17.480 align:start position:0%
create a new folder call it first app
let's<00:13:14.130><c> go</c><00:13:14.310><c> to</c><00:13:14.400><c> this</c><00:13:14.550><c> folder</c><00:13:15.980><c> now</c><00:13:16.980><c> I'm</c><00:13:17.220><c> going</c><00:13:17.400><c> to</c>

00:13:17.480 --> 00:13:17.490 align:start position:0%
let's go to this folder now I'm going to
 

00:13:17.490 --> 00:13:19.910 align:start position:0%
let's go to this folder now I'm going to
open<00:13:17.640><c> this</c><00:13:18.060><c> folder</c><00:13:18.270><c> inside</c><00:13:19.230><c> of</c><00:13:19.290><c> Visual</c><00:13:19.590><c> Studio</c>

00:13:19.910 --> 00:13:19.920 align:start position:0%
open this folder inside of Visual Studio
 

00:13:19.920 --> 00:13:22.690 align:start position:0%
open this folder inside of Visual Studio
code<00:13:20.340><c> which</c><00:13:20.850><c> is</c><00:13:21.000><c> my</c><00:13:21.120><c> preferred</c><00:13:21.540><c> code</c><00:13:21.900><c> editor</c>

00:13:22.690 --> 00:13:22.700 align:start position:0%
code which is my preferred code editor
 

00:13:22.700 --> 00:13:28.820 align:start position:0%
code which is my preferred code editor
so<00:13:23.700><c> code</c><00:13:24.030><c> period</c><00:13:27.080><c> so</c><00:13:28.080><c> this</c><00:13:28.230><c> is</c><00:13:28.380><c> Visual</c><00:13:28.710><c> Studio</c>

00:13:28.820 --> 00:13:28.830 align:start position:0%
so code period so this is Visual Studio
 

00:13:28.830 --> 00:13:31.880 align:start position:0%
so code period so this is Visual Studio
code<00:13:29.250><c> or</c><00:13:29.490><c> vs</c><00:13:29.910><c> code</c><00:13:30.150><c> it's</c><00:13:30.810><c> a</c><00:13:30.930><c> free</c><00:13:31.200><c> powerful</c>

00:13:31.880 --> 00:13:31.890 align:start position:0%
code or vs code it's a free powerful
 

00:13:31.890 --> 00:13:33.710 align:start position:0%
code or vs code it's a free powerful
editor<00:13:32.250><c> but</c><00:13:32.580><c> you</c><00:13:32.700><c> can</c><00:13:32.850><c> use</c><00:13:32.970><c> any</c><00:13:33.180><c> editors</c><00:13:33.690><c> that</c>

00:13:33.710 --> 00:13:33.720 align:start position:0%
editor but you can use any editors that
 

00:13:33.720 --> 00:13:36.290 align:start position:0%
editor but you can use any editors that
you<00:13:34.020><c> prefer</c><00:13:34.470><c> you</c><00:13:34.950><c> can</c><00:13:35.070><c> use</c><00:13:35.130><c> sublime</c><00:13:35.610><c> you</c><00:13:36.120><c> can</c>

00:13:36.290 --> 00:13:36.300 align:start position:0%
you prefer you can use sublime you can
 

00:13:36.300 --> 00:13:39.650 align:start position:0%
you prefer you can use sublime you can
use<00:13:36.420><c> atom</c><00:13:36.870><c> or</c><00:13:37.170><c> any</c><00:13:37.440><c> other</c><00:13:37.770><c> editors</c><00:13:38.310><c> so</c><00:13:39.240><c> here</c><00:13:39.540><c> in</c>

00:13:39.650 --> 00:13:39.660 align:start position:0%
use atom or any other editors so here in
 

00:13:39.660 --> 00:13:42.130 align:start position:0%
use atom or any other editors so here in
this<00:13:39.780><c> folder</c><00:13:39.960><c> I'm</c><00:13:40.350><c> gonna</c><00:13:40.740><c> add</c><00:13:40.860><c> in</c><00:13:40.980><c> your</c><00:13:41.100><c> file</c>

00:13:42.130 --> 00:13:42.140 align:start position:0%
this folder I'm gonna add in your file
 

00:13:42.140 --> 00:13:47.150 align:start position:0%
this folder I'm gonna add in your file
app<00:13:43.140><c> is</c><00:13:44.330><c> in</c><00:13:45.330><c> this</c><00:13:45.690><c> file</c><00:13:45.870><c> we</c><00:13:45.960><c> can</c><00:13:46.140><c> write</c><00:13:46.350><c> regular</c>

00:13:47.150 --> 00:13:47.160 align:start position:0%
app is in this file we can write regular
 

00:13:47.160 --> 00:13:49.220 align:start position:0%
app is in this file we can write regular
JavaScript<00:13:47.910><c> just</c><00:13:48.240><c> like</c><00:13:48.450><c> the</c><00:13:48.540><c> JavaScript</c><00:13:48.960><c> that</c>

00:13:49.220 --> 00:13:49.230 align:start position:0%
JavaScript just like the JavaScript that
 

00:13:49.230 --> 00:13:51.470 align:start position:0%
JavaScript just like the JavaScript that
we<00:13:49.410><c> write</c><00:13:49.620><c> for</c><00:13:49.650><c> the</c><00:13:49.950><c> browsers</c><00:13:50.430><c> so</c><00:13:51.240><c> I'm</c><00:13:51.360><c> gonna</c>

00:13:51.470 --> 00:13:51.480 align:start position:0%
we write for the browsers so I'm gonna
 

00:13:51.480 --> 00:13:55.910 align:start position:0%
we write for the browsers so I'm gonna
define<00:13:51.900><c> a</c><00:13:51.930><c> function</c><00:13:53.000><c> say</c><00:13:54.000><c> hello</c><00:13:54.590><c> that</c><00:13:55.590><c> takes</c><00:13:55.830><c> a</c>

00:13:55.910 --> 00:13:55.920 align:start position:0%
define a function say hello that takes a
 

00:13:55.920 --> 00:14:00.050 align:start position:0%
define a function say hello that takes a
parameter<00:13:56.180><c> name</c><00:13:57.180><c> and</c><00:13:58.160><c> simply</c><00:13:59.160><c> logs</c><00:13:59.550><c> a</c><00:13:59.730><c> message</c>

00:14:00.050 --> 00:14:00.060 align:start position:0%
parameter name and simply logs a message
 

00:14:00.060 --> 00:14:05.480 align:start position:0%
parameter name and simply logs a message
on<00:14:00.210><c> the</c><00:14:00.300><c> console</c><00:14:00.720><c> so</c><00:14:01.620><c> hello</c><00:14:02.840><c> +</c><00:14:03.840><c> name</c><00:14:04.080><c> and</c><00:14:04.490><c> then</c>

00:14:05.480 --> 00:14:05.490 align:start position:0%
on the console so hello + name and then
 

00:14:05.490 --> 00:14:07.930 align:start position:0%
on the console so hello + name and then
we<00:14:05.580><c> can</c><00:14:05.700><c> call</c><00:14:05.940><c> this</c><00:14:06.120><c> function</c><00:14:06.620><c> like</c><00:14:07.620><c> this</c>

00:14:07.930 --> 00:14:07.940 align:start position:0%
we can call this function like this
 

00:14:07.940 --> 00:14:13.100 align:start position:0%
we can call this function like this
Marsh<00:14:09.560><c> now</c><00:14:10.560><c> to</c><00:14:10.620><c> execute</c><00:14:11.280><c> this</c><00:14:11.400><c> code</c><00:14:12.110><c> we're</c>

00:14:13.100 --> 00:14:13.110 align:start position:0%
Marsh now to execute this code we're
 

00:14:13.110 --> 00:14:15.290 align:start position:0%
Marsh now to execute this code we're
going<00:14:13.200><c> to</c><00:14:13.260><c> go</c><00:14:13.350><c> back</c><00:14:13.560><c> to</c><00:14:13.680><c> the</c><00:14:13.770><c> terminal</c><00:14:14.010><c> and</c><00:14:14.490><c> run</c>

00:14:15.290 --> 00:14:15.300 align:start position:0%
going to go back to the terminal and run
 

00:14:15.300 --> 00:14:17.870 align:start position:0%
going to go back to the terminal and run
node<00:14:15.660><c> and</c><00:14:16.050><c> pass</c><00:14:16.800><c> the</c><00:14:16.950><c> name</c><00:14:17.070><c> of</c><00:14:17.220><c> the</c><00:14:17.310><c> file</c><00:14:17.520><c> as</c><00:14:17.730><c> an</c>

00:14:17.870 --> 00:14:17.880 align:start position:0%
node and pass the name of the file as an
 

00:14:17.880 --> 00:14:21.380 align:start position:0%
node and pass the name of the file as an
argument<00:14:18.330><c> so</c><00:14:18.690><c> app</c><00:14:18.900><c> the</c><00:14:19.530><c> jas</c><00:14:19.920><c> so</c><00:14:20.610><c> node</c><00:14:20.880><c> as</c><00:14:21.090><c> I</c>

00:14:21.380 --> 00:14:21.390 align:start position:0%
argument so app the jas so node as I
 

00:14:21.390 --> 00:14:24.470 align:start position:0%
argument so app the jas so node as I
told<00:14:21.570><c> you</c><00:14:21.690><c> before</c><00:14:22.050><c> is</c><00:14:22.230><c> a</c><00:14:22.620><c> C++</c><00:14:23.490><c> program</c><00:14:23.520><c> it</c>

00:14:24.470 --> 00:14:24.480 align:start position:0%
told you before is a C++ program it
 

00:14:24.480 --> 00:14:27.290 align:start position:0%
told you before is a C++ program it
includes<00:14:24.900><c> Chrome's</c><00:14:25.620><c> v8</c><00:14:26.280><c> JavaScript</c><00:14:27.210><c> engine</c>

00:14:27.290 --> 00:14:27.300 align:start position:0%
includes Chrome's v8 JavaScript engine
 

00:14:27.300 --> 00:14:29.810 align:start position:0%
includes Chrome's v8 JavaScript engine
so<00:14:28.230><c> this</c><00:14:28.380><c> app</c><00:14:28.560><c> the</c><00:14:28.860><c> J's</c><00:14:29.100><c> file</c><00:14:29.490><c> that</c><00:14:29.670><c> we're</c>

00:14:29.810 --> 00:14:29.820 align:start position:0%
so this app the J's file that we're
 

00:14:29.820 --> 00:14:31.940 align:start position:0%
so this app the J's file that we're
gonna<00:14:29.940><c> pass</c><00:14:30.180><c> to</c><00:14:30.450><c> node</c><00:14:30.720><c> node</c><00:14:31.380><c> is</c><00:14:31.560><c> going</c><00:14:31.680><c> to</c><00:14:31.830><c> give</c>

00:14:31.940 --> 00:14:31.950 align:start position:0%
gonna pass to node node is going to give
 

00:14:31.950 --> 00:14:35.600 align:start position:0%
gonna pass to node node is going to give
it<00:14:31.980><c> to</c><00:14:32.190><c> v8</c><00:14:32.580><c> for</c><00:14:33.060><c> execution</c><00:14:33.950><c> so</c><00:14:34.950><c> you</c><00:14:35.190><c> can</c><00:14:35.310><c> see</c><00:14:35.490><c> we</c>

00:14:35.600 --> 00:14:35.610 align:start position:0%
it to v8 for execution so you can see we
 

00:14:35.610 --> 00:14:37.970 align:start position:0%
it to v8 for execution so you can see we
got<00:14:35.730><c> hello</c><00:14:36.000><c> Marsh</c><00:14:36.330><c> on</c><00:14:36.570><c> the</c><00:14:36.720><c> console</c><00:14:37.140><c> now</c><00:14:37.320><c> let</c>

00:14:37.970 --> 00:14:37.980 align:start position:0%
got hello Marsh on the console now let
 

00:14:37.980 --> 00:14:38.960 align:start position:0%
got hello Marsh on the console now let
me<00:14:38.220><c> show</c><00:14:38.340><c> you</c><00:14:38.430><c> something</c>

00:14:38.960 --> 00:14:38.970 align:start position:0%
me show you something
 

00:14:38.970 --> 00:14:42.120 align:start position:0%
me show you something
so<00:14:39.360><c> back</c><00:14:39.600><c> in</c><00:14:39.630><c> vs</c><00:14:39.990><c> code</c>

00:14:42.120 --> 00:14:42.130 align:start position:0%
so back in vs code
 

00:14:42.130 --> 00:14:45.090 align:start position:0%
so back in vs code
temporarily<00:14:42.640><c> comment</c><00:14:43.180><c> out</c><00:14:43.300><c> this</c><00:14:43.480><c> line</c><00:14:43.720><c> and</c><00:14:44.100><c> do</c>

00:14:45.090 --> 00:14:45.100 align:start position:0%
temporarily comment out this line and do
 

00:14:45.100 --> 00:14:49.590 align:start position:0%
temporarily comment out this line and do
it<00:14:45.190><c> console</c><00:14:45.760><c> that</c><00:14:46.420><c> log</c><00:14:46.750><c> of</c><00:14:47.190><c> window</c><00:14:48.480><c> let's</c><00:14:49.480><c> see</c>

00:14:49.590 --> 00:14:49.600 align:start position:0%
it console that log of window let's see
 

00:14:49.600 --> 00:14:51.470 align:start position:0%
it console that log of window let's see
what<00:14:49.750><c> happens</c><00:14:50.110><c> so</c><00:14:50.290><c> back</c><00:14:50.950><c> in</c><00:14:51.100><c> the</c><00:14:51.160><c> terminal</c>

00:14:51.470 --> 00:14:51.480 align:start position:0%
what happens so back in the terminal
 

00:14:51.480 --> 00:14:56.340 align:start position:0%
what happens so back in the terminal
let's<00:14:52.480><c> run</c><00:14:52.690><c> node</c><00:14:52.960><c> app</c><00:14:53.230><c> a</c><00:14:53.950><c> Jas</c><00:14:55.140><c> you</c><00:14:56.140><c> got</c><00:14:56.260><c> an</c>

00:14:56.340 --> 00:14:56.350 align:start position:0%
let's run node app a Jas you got an
 

00:14:56.350 --> 00:15:00.150 align:start position:0%
let's run node app a Jas you got an
exception<00:14:57.000><c> window</c><00:14:58.000><c> is</c><00:14:58.210><c> not</c><00:14:58.630><c> defined</c><00:14:59.080><c> so</c><00:14:59.290><c> as</c><00:14:59.920><c> I</c>

00:15:00.150 --> 00:15:00.160 align:start position:0%
exception window is not defined so as I
 

00:15:00.160 --> 00:15:02.340 align:start position:0%
exception window is not defined so as I
told<00:15:00.220><c> you</c><00:15:00.460><c> before</c><00:15:00.580><c> in</c><00:15:01.240><c> node</c><00:15:01.660><c> we</c><00:15:01.990><c> don't</c><00:15:02.140><c> have</c>

00:15:02.340 --> 00:15:02.350 align:start position:0%
told you before in node we don't have
 

00:15:02.350 --> 00:15:05.310 align:start position:0%
told you before in node we don't have
the<00:15:02.530><c> window</c><00:15:02.920><c> or</c><00:15:03.130><c> document</c><00:15:03.940><c> objects</c><00:15:04.510><c> these</c><00:15:05.050><c> are</c>

00:15:05.310 --> 00:15:05.320 align:start position:0%
the window or document objects these are
 

00:15:05.320 --> 00:15:07.080 align:start position:0%
the window or document objects these are
part<00:15:05.650><c> of</c><00:15:05.710><c> the</c><00:15:05.770><c> runtime</c><00:15:06.070><c> environment</c><00:15:06.790><c> that</c><00:15:06.970><c> we</c>

00:15:07.080 --> 00:15:07.090 align:start position:0%
part of the runtime environment that we
 

00:15:07.090 --> 00:15:10.020 align:start position:0%
part of the runtime environment that we
get<00:15:07.330><c> with</c><00:15:07.810><c> browsers</c><00:15:08.380><c> in</c><00:15:08.980><c> node</c><00:15:09.340><c> we</c><00:15:09.610><c> have</c><00:15:09.640><c> other</c>

00:15:10.020 --> 00:15:10.030 align:start position:0%
get with browsers in node we have other
 

00:15:10.030 --> 00:15:12.330 align:start position:0%
get with browsers in node we have other
objects<00:15:10.600><c> to</c><00:15:11.020><c> work</c><00:15:11.200><c> with</c><00:15:11.410><c> files</c><00:15:11.650><c> with</c><00:15:12.250><c> the</c>

00:15:12.330 --> 00:15:12.340 align:start position:0%
objects to work with files with the
 

00:15:12.340 --> 00:15:14.580 align:start position:0%
objects to work with files with the
operating<00:15:12.790><c> system</c><00:15:12.880><c> with</c><00:15:13.630><c> the</c><00:15:13.750><c> network</c><00:15:14.200><c> and</c><00:15:14.380><c> so</c>

00:15:14.580 --> 00:15:14.590 align:start position:0%
operating system with the network and so
 

00:15:14.590 --> 00:15:16.140 align:start position:0%
operating system with the network and so
on<00:15:14.710><c> and</c><00:15:15.040><c> that's</c><00:15:15.640><c> what</c><00:15:15.760><c> you're</c><00:15:15.850><c> gonna</c><00:15:15.940><c> learn</c>

00:15:16.140 --> 00:15:16.150 align:start position:0%
on and that's what you're gonna learn
 

00:15:16.150 --> 00:15:18.390 align:start position:0%
on and that's what you're gonna learn
about<00:15:16.420><c> in</c><00:15:16.630><c> the</c><00:15:16.840><c> next</c><00:15:17.050><c> section</c><00:15:17.290><c> I</c><00:15:17.650><c> hope</c><00:15:18.250><c> you</c>

00:15:18.390 --> 00:15:18.400 align:start position:0%
about in the next section I hope you
 

00:15:18.400 --> 00:15:19.770 align:start position:0%
about in the next section I hope you
enjoyed<00:15:18.610><c> this</c><00:15:18.730><c> section</c><00:15:19.060><c> and</c><00:15:19.210><c> thank</c><00:15:19.600><c> you</c><00:15:19.690><c> for</c>

00:15:19.770 --> 00:15:19.780 align:start position:0%
enjoyed this section and thank you for
 

00:15:19.780 --> 00:15:24.760 align:start position:0%
enjoyed this section and thank you for
watching

00:15:24.760 --> 00:15:24.770 align:start position:0%
 
 

00:15:24.770 --> 00:15:27.170 align:start position:0%
 
in<00:15:25.770><c> this</c><00:15:25.920><c> section</c><00:15:26.190><c> we're</c><00:15:26.610><c> going</c><00:15:26.730><c> to</c><00:15:26.820><c> look</c><00:15:27.000><c> at</c>

00:15:27.170 --> 00:15:27.180 align:start position:0%
in this section we're going to look at
 

00:15:27.180 --> 00:15:29.960 align:start position:0%
in this section we're going to look at
the<00:15:27.300><c> module</c><00:15:27.780><c> system</c><00:15:27.960><c> in</c><00:15:28.440><c> node</c><00:15:28.920><c> you</c><00:15:29.700><c> will</c><00:15:29.790><c> learn</c>

00:15:29.960 --> 00:15:29.970 align:start position:0%
the module system in node you will learn
 

00:15:29.970 --> 00:15:32.450 align:start position:0%
the module system in node you will learn
what<00:15:30.300><c> modules</c><00:15:30.840><c> are</c><00:15:31.050><c> why</c><00:15:31.710><c> we</c><00:15:31.890><c> need</c><00:15:32.070><c> them</c><00:15:32.250><c> and</c>

00:15:32.450 --> 00:15:32.460 align:start position:0%
what modules are why we need them and
 

00:15:32.460 --> 00:15:34.520 align:start position:0%
what modules are why we need them and
how<00:15:32.760><c> they</c><00:15:32.940><c> work</c><00:15:33.140><c> throughout</c><00:15:34.140><c> this</c><00:15:34.320><c> section</c>

00:15:34.520 --> 00:15:34.530 align:start position:0%
how they work throughout this section
 

00:15:34.530 --> 00:15:37.010 align:start position:0%
how they work throughout this section
we'll<00:15:35.070><c> explore</c><00:15:35.460><c> a</c><00:15:35.700><c> feel</c><00:15:36.240><c> of</c><00:15:36.330><c> the</c><00:15:36.480><c> modules</c>

00:15:37.010 --> 00:15:37.020 align:start position:0%
we'll explore a feel of the modules
 

00:15:37.020 --> 00:15:39.530 align:start position:0%
we'll explore a feel of the modules
built<00:15:37.560><c> into</c><00:15:38.010><c> the</c><00:15:38.100><c> core</c><00:15:38.340><c> of</c><00:15:38.460><c> node</c><00:15:38.700><c> such</c><00:15:39.390><c> as</c>

00:15:39.530 --> 00:15:39.540 align:start position:0%
built into the core of node such as
 

00:15:39.540 --> 00:15:43.090 align:start position:0%
built into the core of node such as
operating<00:15:40.140><c> system</c><00:15:40.530><c> file</c><00:15:41.310><c> system</c><00:15:41.900><c> events</c><00:15:42.900><c> and</c>

00:15:43.090 --> 00:15:43.100 align:start position:0%
operating system file system events and
 

00:15:43.100 --> 00:15:46.100 align:start position:0%
operating system file system events and
HTTP<00:15:44.100><c> you</c><00:15:44.820><c> will</c><00:15:44.940><c> also</c><00:15:45.150><c> learn</c><00:15:45.480><c> how</c><00:15:45.540><c> to</c><00:15:45.900><c> create</c>

00:15:46.100 --> 00:15:46.110 align:start position:0%
HTTP you will also learn how to create
 

00:15:46.110 --> 00:15:54.680 align:start position:0%
HTTP you will also learn how to create
your<00:15:46.560><c> own</c><00:15:46.770><c> modules</c><00:15:47.490><c> now</c><00:15:48.180><c> let's</c><00:15:48.870><c> get</c><00:15:49.080><c> started</c>

00:15:54.680 --> 00:15:54.690 align:start position:0%
 
 

00:15:54.690 --> 00:15:57.680 align:start position:0%
 
so<00:15:55.319><c> in</c><00:15:55.560><c> the</c><00:15:55.620><c> last</c><00:15:55.769><c> section</c><00:15:55.980><c> we</c><00:15:56.449><c> use</c><00:15:57.449><c> this</c>

00:15:57.680 --> 00:15:57.690 align:start position:0%
so in the last section we use this
 

00:15:57.690 --> 00:16:00.800 align:start position:0%
so in the last section we use this
console<00:15:58.290><c> that</c><00:15:59.250><c> log</c><00:15:59.519><c> function</c><00:16:00.000><c> to</c><00:16:00.629><c> lock</c>

00:16:00.800 --> 00:16:00.810 align:start position:0%
console that log function to lock
 

00:16:00.810 --> 00:16:03.019 align:start position:0%
console that log function to lock
something<00:16:01.079><c> on</c><00:16:01.379><c> the</c><00:16:01.500><c> console</c><00:16:01.920><c> now</c><00:16:02.850><c> this</c>

00:16:03.019 --> 00:16:03.029 align:start position:0%
something on the console now this
 

00:16:03.029 --> 00:16:06.139 align:start position:0%
something on the console now this
console<00:16:03.540><c> object</c><00:16:03.959><c> is</c><00:16:04.170><c> what</c><00:16:04.740><c> we</c><00:16:04.889><c> call</c><00:16:05.100><c> a</c><00:16:05.370><c> global</c>

00:16:06.139 --> 00:16:06.149 align:start position:0%
console object is what we call a global
 

00:16:06.149 --> 00:16:08.900 align:start position:0%
console object is what we call a global
object<00:16:06.720><c> so</c><00:16:07.560><c> it's</c><00:16:07.740><c> part</c><00:16:08.040><c> of</c><00:16:08.129><c> the</c><00:16:08.220><c> global</c><00:16:08.610><c> scope</c>

00:16:08.900 --> 00:16:08.910 align:start position:0%
object so it's part of the global scope
 

00:16:08.910 --> 00:16:11.780 align:start position:0%
object so it's part of the global scope
which<00:16:09.660><c> means</c><00:16:09.930><c> we</c><00:16:10.079><c> can</c><00:16:10.230><c> access</c><00:16:10.470><c> it</c><00:16:10.949><c> anywhere</c><00:16:11.459><c> in</c>

00:16:11.780 --> 00:16:11.790 align:start position:0%
which means we can access it anywhere in
 

00:16:11.790 --> 00:16:14.360 align:start position:0%
which means we can access it anywhere in
any<00:16:12.180><c> files</c><00:16:12.540><c> we</c><00:16:13.529><c> have</c><00:16:13.680><c> a</c><00:16:13.709><c> bunch</c><00:16:13.949><c> of</c><00:16:14.069><c> other</c>

00:16:14.360 --> 00:16:14.370 align:start position:0%
any files we have a bunch of other
 

00:16:14.370 --> 00:16:16.639 align:start position:0%
any files we have a bunch of other
objects<00:16:15.180><c> and</c><00:16:15.300><c> functions</c><00:16:15.600><c> that</c><00:16:16.290><c> are</c><00:16:16.439><c> also</c>

00:16:16.639 --> 00:16:16.649 align:start position:0%
objects and functions that are also
 

00:16:16.649 --> 00:16:18.920 align:start position:0%
objects and functions that are also
globally<00:16:17.370><c> available</c><00:16:17.490><c> in</c><00:16:18.060><c> node</c><00:16:18.269><c> for</c><00:16:18.899><c> example</c>

00:16:18.920 --> 00:16:18.930 align:start position:0%
globally available in node for example
 

00:16:18.930 --> 00:16:21.769 align:start position:0%
globally available in node for example
we<00:16:19.500><c> have</c><00:16:19.680><c> set</c><00:16:20.519><c> timeout</c><00:16:21.029><c> which</c><00:16:21.540><c> you</c><00:16:21.689><c> have</c>

00:16:21.769 --> 00:16:21.779 align:start position:0%
we have set timeout which you have
 

00:16:21.779 --> 00:16:24.290 align:start position:0%
we have set timeout which you have
probably<00:16:22.290><c> seen</c><00:16:22.529><c> before</c><00:16:22.589><c> we</c><00:16:23.579><c> use</c><00:16:23.699><c> this</c><00:16:23.879><c> to</c><00:16:24.089><c> call</c>

00:16:24.290 --> 00:16:24.300 align:start position:0%
probably seen before we use this to call
 

00:16:24.300 --> 00:16:27.170 align:start position:0%
probably seen before we use this to call
a<00:16:24.329><c> function</c><00:16:24.569><c> after</c><00:16:25.290><c> a</c><00:16:25.860><c> delay</c><00:16:26.220><c> like</c><00:16:26.550><c> one</c><00:16:26.759><c> second</c>

00:16:27.170 --> 00:16:27.180 align:start position:0%
a function after a delay like one second
 

00:16:27.180 --> 00:16:29.300 align:start position:0%
a function after a delay like one second
two<00:16:27.329><c> second</c><00:16:27.660><c> whatever</c><00:16:27.990><c> so</c><00:16:28.620><c> this</c><00:16:28.769><c> is</c><00:16:28.889><c> just</c><00:16:28.980><c> part</c>

00:16:29.300 --> 00:16:29.310 align:start position:0%
two second whatever so this is just part
 

00:16:29.310 --> 00:16:31.519 align:start position:0%
two second whatever so this is just part
of<00:16:29.339><c> the</c><00:16:29.519><c> standard</c><00:16:30.050><c> JavaScript</c><00:16:31.050><c> we</c><00:16:31.230><c> can</c><00:16:31.379><c> use</c>

00:16:31.519 --> 00:16:31.529 align:start position:0%
of the standard JavaScript we can use
 

00:16:31.529 --> 00:16:33.769 align:start position:0%
of the standard JavaScript we can use
this<00:16:31.709><c> on</c><00:16:31.920><c> the</c><00:16:31.980><c> client</c><00:16:32.670><c> we</c><00:16:33.269><c> can</c><00:16:33.420><c> use</c><00:16:33.600><c> this</c>

00:16:33.769 --> 00:16:33.779 align:start position:0%
this on the client we can use this
 

00:16:33.779 --> 00:16:36.559 align:start position:0%
this on the client we can use this
inside<00:16:34.439><c> of</c><00:16:34.560><c> a</c><00:16:34.649><c> browser</c><00:16:34.769><c> or</c><00:16:35.250><c> inside</c><00:16:36.089><c> of</c><00:16:36.180><c> node</c>

00:16:36.559 --> 00:16:36.569 align:start position:0%
inside of a browser or inside of node
 

00:16:36.569 --> 00:16:40.329 align:start position:0%
inside of a browser or inside of node
we<00:16:37.230><c> also</c><00:16:37.470><c> have</c><00:16:38.209><c> clear</c><00:16:39.209><c> timeout</c>

00:16:40.329 --> 00:16:40.339 align:start position:0%
we also have clear timeout
 

00:16:40.339 --> 00:16:44.389 align:start position:0%
we also have clear timeout
similarly<00:16:41.339><c> we</c><00:16:41.550><c> have</c><00:16:41.790><c> set</c><00:16:42.569><c> interval</c><00:16:43.220><c> which</c><00:16:44.220><c> we</c>

00:16:44.389 --> 00:16:44.399 align:start position:0%
similarly we have set interval which we
 

00:16:44.399 --> 00:16:47.629 align:start position:0%
similarly we have set interval which we
use<00:16:44.579><c> to</c><00:16:44.930><c> repeatedly</c><00:16:45.930><c> call</c><00:16:46.470><c> a</c><00:16:46.500><c> function</c><00:16:47.009><c> after</c>

00:16:47.629 --> 00:16:47.639 align:start position:0%
use to repeatedly call a function after
 

00:16:47.639 --> 00:16:50.689 align:start position:0%
use to repeatedly call a function after
a<00:16:47.670><c> given</c><00:16:47.910><c> delay</c><00:16:48.350><c> we</c><00:16:49.350><c> also</c><00:16:49.529><c> have</c><00:16:49.860><c> clear</c>

00:16:50.689 --> 00:16:50.699 align:start position:0%
a given delay we also have clear
 

00:16:50.699 --> 00:16:52.850 align:start position:0%
a given delay we also have clear
interval<00:16:51.149><c> which</c><00:16:51.389><c> we</c><00:16:51.540><c> use</c><00:16:51.750><c> to</c><00:16:51.959><c> stop</c><00:16:52.709><c> that</c>

00:16:52.850 --> 00:16:52.860 align:start position:0%
interval which we use to stop that
 

00:16:52.860 --> 00:16:54.590 align:start position:0%
interval which we use to stop that
function<00:16:53.279><c> from</c><00:16:53.490><c> being</c><00:16:53.699><c> called</c><00:16:53.939><c> repeatedly</c>

00:16:54.590 --> 00:16:54.600 align:start position:0%
function from being called repeatedly
 

00:16:54.600 --> 00:16:56.840 align:start position:0%
function from being called repeatedly
so<00:16:55.290><c> these</c><00:16:55.439><c> are</c><00:16:55.620><c> the</c><00:16:55.740><c> global</c><00:16:55.949><c> objects</c><00:16:56.639><c> in</c>

00:16:56.840 --> 00:16:56.850 align:start position:0%
so these are the global objects in
 

00:16:56.850 --> 00:16:59.569 align:start position:0%
so these are the global objects in
JavaScript<00:16:57.509><c> now</c><00:16:58.350><c> he</c><00:16:58.410><c> node</c><00:16:58.740><c> we</c><00:16:58.949><c> have</c><00:16:59.160><c> a</c><00:16:59.339><c> couple</c>

00:16:59.569 --> 00:16:59.579 align:start position:0%
JavaScript now he node we have a couple
 

00:16:59.579 --> 00:17:01.249 align:start position:0%
JavaScript now he node we have a couple
other<00:16:59.910><c> global</c><00:17:00.300><c> objects</c><00:17:00.870><c> that</c><00:17:01.019><c> you're</c><00:17:01.139><c> going</c>

00:17:01.249 --> 00:17:01.259 align:start position:0%
other global objects that you're going
 

00:17:01.259 --> 00:17:04.579 align:start position:0%
other global objects that you're going
to<00:17:01.290><c> learn</c><00:17:01.529><c> about</c><00:17:01.709><c> later</c><00:17:02.459><c> in</c><00:17:02.759><c> this</c><00:17:02.910><c> section</c><00:17:03.589><c> now</c>

00:17:04.579 --> 00:17:04.589 align:start position:0%
to learn about later in this section now
 

00:17:04.589 --> 00:17:07.309 align:start position:0%
to learn about later in this section now
in<00:17:04.740><c> browsers</c><00:17:05.250><c> we</c><00:17:05.490><c> have</c><00:17:05.669><c> this</c><00:17:05.850><c> window</c><00:17:06.720><c> object</c>

00:17:07.309 --> 00:17:07.319 align:start position:0%
in browsers we have this window object
 

00:17:07.319 --> 00:17:10.640 align:start position:0%
in browsers we have this window object
that<00:17:07.949><c> represents</c><00:17:08.699><c> our</c><00:17:08.789><c> global</c><00:17:09.539><c> scope</c><00:17:09.900><c> so</c><00:17:10.470><c> all</c>

00:17:10.640 --> 00:17:10.650 align:start position:0%
that represents our global scope so all
 

00:17:10.650 --> 00:17:12.500 align:start position:0%
that represents our global scope so all
the<00:17:10.949><c> variables</c><00:17:11.159><c> and</c><00:17:11.579><c> functions</c><00:17:11.970><c> that</c><00:17:12.360><c> are</c>

00:17:12.500 --> 00:17:12.510 align:start position:0%
the variables and functions that are
 

00:17:12.510 --> 00:17:15.049 align:start position:0%
the variables and functions that are
defined<00:17:12.630><c> globally</c><00:17:13.409><c> we</c><00:17:13.949><c> can</c><00:17:13.980><c> access</c><00:17:14.610><c> them</c><00:17:14.819><c> via</c>

00:17:15.049 --> 00:17:15.059 align:start position:0%
defined globally we can access them via
 

00:17:15.059 --> 00:17:18.230 align:start position:0%
defined globally we can access them via
this<00:17:15.780><c> window</c><00:17:16.110><c> object</c><00:17:16.530><c> so</c><00:17:17.039><c> we</c><00:17:17.189><c> can</c><00:17:17.220><c> call</c><00:17:17.579><c> window</c>

00:17:18.230 --> 00:17:18.240 align:start position:0%
this window object so we can call window
 

00:17:18.240 --> 00:17:21.649 align:start position:0%
this window object so we can call window
that<00:17:18.780><c> console</c><00:17:19.380><c> that</c><00:17:20.039><c> log</c><00:17:20.339><c> or</c><00:17:20.669><c> simply</c><00:17:21.630><c> just</c>

00:17:21.649 --> 00:17:21.659 align:start position:0%
that console that log or simply just
 

00:17:21.659 --> 00:17:24.860 align:start position:0%
that console that log or simply just
console<00:17:22.470><c> that</c><00:17:22.919><c> lock</c><00:17:23.189><c> the</c><00:17:24.089><c> JavaScript</c><00:17:24.720><c> engine</c>

00:17:24.860 --> 00:17:24.870 align:start position:0%
console that lock the JavaScript engine
 

00:17:24.870 --> 00:17:27.799 align:start position:0%
console that lock the JavaScript engine
will<00:17:25.589><c> prefix</c><00:17:26.250><c> this</c><00:17:26.400><c> statement</c><00:17:26.699><c> with</c><00:17:27.390><c> window</c>

00:17:27.799 --> 00:17:27.809 align:start position:0%
will prefix this statement with window
 

00:17:27.809 --> 00:17:30.409 align:start position:0%
will prefix this statement with window
that<00:17:28.289><c> console</c><00:17:28.860><c> dot</c><00:17:29.280><c> lock</c><00:17:29.610><c> because</c><00:17:30.090><c> that's</c>

00:17:30.409 --> 00:17:30.419 align:start position:0%
that console dot lock because that's
 

00:17:30.419 --> 00:17:32.990 align:start position:0%
that console dot lock because that's
where<00:17:30.750><c> this</c><00:17:31.110><c> object</c><00:17:31.440><c> is</c><00:17:31.799><c> defined</c><00:17:32.010><c> similarly</c>

00:17:32.990 --> 00:17:33.000 align:start position:0%
where this object is defined similarly
 

00:17:33.000 --> 00:17:35.090 align:start position:0%
where this object is defined similarly
all<00:17:33.450><c> these</c><00:17:33.840><c> other</c><00:17:34.110><c> functions</c><00:17:34.380><c> you</c><00:17:34.620><c> see</c><00:17:34.830><c> here</c>

00:17:35.090 --> 00:17:35.100 align:start position:0%
all these other functions you see here
 

00:17:35.100 --> 00:17:38.000 align:start position:0%
all these other functions you see here
they<00:17:35.850><c> belong</c><00:17:36.299><c> to</c><00:17:36.720><c> the</c><00:17:36.840><c> window</c><00:17:37.110><c> object</c><00:17:37.590><c> so</c><00:17:37.890><c> we</c>

00:17:38.000 --> 00:17:38.010 align:start position:0%
they belong to the window object so we
 

00:17:38.010 --> 00:17:41.000 align:start position:0%
they belong to the window object so we
can<00:17:38.159><c> call</c><00:17:38.400><c> window</c><00:17:39.210><c> that's</c><00:17:39.870><c> set</c><00:17:40.140><c> timeout</c><00:17:40.559><c> or</c>

00:17:41.000 --> 00:17:41.010 align:start position:0%
can call window that's set timeout or
 

00:17:41.010 --> 00:17:44.600 align:start position:0%
can call window that's set timeout or
call<00:17:41.669><c> it</c><00:17:41.789><c> directly</c><00:17:42.179><c> by</c><00:17:43.080><c> the</c><00:17:43.140><c> same</c><00:17:43.409><c> token</c><00:17:43.650><c> when</c>

00:17:44.600 --> 00:17:44.610 align:start position:0%
call it directly by the same token when
 

00:17:44.610 --> 00:17:48.580 align:start position:0%
call it directly by the same token when
we<00:17:44.789><c> declare</c><00:17:45.210><c> a</c><00:17:45.419><c> variable</c><00:17:45.500><c> let's</c><00:17:46.500><c> say</c><00:17:46.590><c> message</c>

00:17:48.580 --> 00:17:48.590 align:start position:0%
we declare a variable let's say message
 

00:17:48.590 --> 00:17:52.940 align:start position:0%
we declare a variable let's say message
that<00:17:49.590><c> variable</c><00:17:50.130><c> is</c><00:17:50.309><c> also</c><00:17:50.580><c> available</c><00:17:51.059><c> via</c><00:17:51.950><c> the</c>

00:17:52.940 --> 00:17:52.950 align:start position:0%
that variable is also available via the
 

00:17:52.950 --> 00:17:56.750 align:start position:0%
that variable is also available via the
window<00:17:53.250><c> object</c><00:17:54.020><c> okay</c><00:17:55.020><c> however</c><00:17:55.860><c> in</c><00:17:56.340><c> the</c><00:17:56.580><c> last</c>

00:17:56.750 --> 00:17:56.760 align:start position:0%
window object okay however in the last
 

00:17:56.760 --> 00:17:59.000 align:start position:0%
window object okay however in the last
section<00:17:57.000><c> I</c><00:17:57.299><c> told</c><00:17:57.840><c> you</c><00:17:57.990><c> that</c><00:17:58.080><c> in</c><00:17:58.260><c> node</c><00:17:58.530><c> we</c><00:17:58.830><c> don't</c>

00:17:59.000 --> 00:17:59.010 align:start position:0%
section I told you that in node we don't
 

00:17:59.010 --> 00:18:01.580 align:start position:0%
section I told you that in node we don't
have<00:17:59.190><c> this</c><00:17:59.340><c> window</c><00:17:59.640><c> object</c><00:18:00.299><c> instead</c><00:18:01.230><c> we</c><00:18:01.380><c> have</c>

00:18:01.580 --> 00:18:01.590 align:start position:0%
have this window object instead we have
 

00:18:01.590 --> 00:18:05.360 align:start position:0%
have this window object instead we have
another<00:18:02.340><c> object</c><00:18:02.580><c> called</c><00:18:03.200><c> global</c><00:18:04.220><c> so</c><00:18:05.220><c> all</c>

00:18:05.360 --> 00:18:05.370 align:start position:0%
another object called global so all
 

00:18:05.370 --> 00:18:07.190 align:start position:0%
another object called global so all
these<00:18:05.549><c> functions</c><00:18:06.000><c> and</c><00:18:06.149><c> objects</c><00:18:06.630><c> we</c><00:18:06.750><c> have</c><00:18:06.780><c> here</c>

00:18:07.190 --> 00:18:07.200 align:start position:0%
these functions and objects we have here
 

00:18:07.200 --> 00:18:07.980 align:start position:0%
these functions and objects we have here
we<00:18:07.770><c> can</c>

00:18:07.980 --> 00:18:07.990 align:start position:0%
we can
 

00:18:07.990 --> 00:18:10.470 align:start position:0%
we can
access<00:18:08.380><c> them</c><00:18:08.620><c> find</c><00:18:09.400><c> the</c><00:18:09.550><c> global</c><00:18:09.850><c> object</c><00:18:10.270><c> so</c><00:18:10.390><c> we</c>

00:18:10.470 --> 00:18:10.480 align:start position:0%
access them find the global object so we
 

00:18:10.480 --> 00:18:13.980 align:start position:0%
access them find the global object so we
can<00:18:10.630><c> do</c><00:18:10.750><c> global</c><00:18:11.340><c> that</c><00:18:12.340><c> console</c><00:18:12.910><c> dot</c><00:18:13.300><c> log</c><00:18:13.360><c> or</c>

00:18:13.980 --> 00:18:13.990 align:start position:0%
can do global that console dot log or
 

00:18:13.990 --> 00:18:16.530 align:start position:0%
can do global that console dot log or
global<00:18:14.560><c> that</c><00:18:14.860><c> set</c><00:18:15.100><c> timeout</c><00:18:15.610><c> and</c><00:18:15.850><c> so</c><00:18:16.120><c> on</c><00:18:16.240><c> of</c>

00:18:16.530 --> 00:18:16.540 align:start position:0%
global that set timeout and so on of
 

00:18:16.540 --> 00:18:18.690 align:start position:0%
global that set timeout and so on of
course<00:18:17.020><c> it's</c><00:18:17.530><c> easier</c><00:18:17.920><c> to</c><00:18:18.070><c> use</c><00:18:18.190><c> the</c><00:18:18.340><c> shorthand</c>

00:18:18.690 --> 00:18:18.700 align:start position:0%
course it's easier to use the shorthand
 

00:18:18.700 --> 00:18:20.940 align:start position:0%
course it's easier to use the shorthand
instead<00:18:19.450><c> of</c><00:18:19.540><c> prefix</c><00:18:19.990><c> in</c><00:18:20.140><c> them</c><00:18:20.320><c> with</c><00:18:20.800><c> this</c>

00:18:20.940 --> 00:18:20.950 align:start position:0%
instead of prefix in them with this
 

00:18:20.950 --> 00:18:22.980 align:start position:0%
instead of prefix in them with this
global<00:18:21.220><c> but</c><00:18:22.180><c> one</c><00:18:22.360><c> thing</c><00:18:22.570><c> you</c><00:18:22.660><c> need</c><00:18:22.780><c> to</c><00:18:22.810><c> know</c>

00:18:22.980 --> 00:18:22.990 align:start position:0%
global but one thing you need to know
 

00:18:22.990 --> 00:18:25.290 align:start position:0%
global but one thing you need to know
about<00:18:23.140><c> note</c><00:18:23.500><c> is</c><00:18:23.770><c> that</c><00:18:24.310><c> these</c><00:18:24.640><c> variables</c><00:18:25.180><c> that</c>

00:18:25.290 --> 00:18:25.300 align:start position:0%
about note is that these variables that
 

00:18:25.300 --> 00:18:28.170 align:start position:0%
about note is that these variables that
we<00:18:25.420><c> define</c><00:18:25.720><c> here</c><00:18:26.110><c> they</c><00:18:26.470><c> are</c><00:18:26.710><c> not</c><00:18:27.100><c> added</c><00:18:27.790><c> to</c><00:18:28.000><c> the</c>

00:18:28.170 --> 00:18:28.180 align:start position:0%
we define here they are not added to the
 

00:18:28.180 --> 00:18:31.740 align:start position:0%
we define here they are not added to the
global<00:18:28.600><c> object</c><00:18:28.780><c> in</c><00:18:29.410><c> other</c><00:18:30.130><c> words</c><00:18:30.430><c> if</c><00:18:31.030><c> we</c><00:18:31.330><c> do</c><00:18:31.540><c> a</c>

00:18:31.740 --> 00:18:31.750 align:start position:0%
global object in other words if we do a
 

00:18:31.750 --> 00:18:37.160 align:start position:0%
global object in other words if we do a
console<00:18:32.440><c> dot</c><00:18:33.190><c> log</c><00:18:33.250><c> of</c><00:18:34.380><c> global</c><00:18:35.380><c> that</c><00:18:36.160><c> message</c>

00:18:37.160 --> 00:18:37.170 align:start position:0%
console dot log of global that message
 

00:18:37.170 --> 00:18:39.990 align:start position:0%
console dot log of global that message
we<00:18:38.170><c> are</c><00:18:38.230><c> going</c><00:18:38.410><c> to</c><00:18:38.500><c> see</c><00:18:38.680><c> undefined</c><00:18:39.520><c> on</c><00:18:39.700><c> the</c>

00:18:39.990 --> 00:18:40.000 align:start position:0%
we are going to see undefined on the
 

00:18:40.000 --> 00:18:42.210 align:start position:0%
we are going to see undefined on the
console<00:18:40.420><c> so</c><00:18:40.630><c> let</c><00:18:40.780><c> me</c><00:18:40.870><c> show</c><00:18:41.050><c> you</c><00:18:41.110><c> I'm</c><00:18:41.920><c> gonna</c>

00:18:42.210 --> 00:18:42.220 align:start position:0%
console so let me show you I'm gonna
 

00:18:42.220 --> 00:18:45.390 align:start position:0%
console so let me show you I'm gonna
delete<00:18:42.520><c> all</c><00:18:42.760><c> the</c><00:18:43.060><c> code</c><00:18:43.240><c> here</c><00:18:43.860><c> now</c><00:18:44.860><c> back</c><00:18:45.160><c> in</c><00:18:45.310><c> the</c>

00:18:45.390 --> 00:18:45.400 align:start position:0%
delete all the code here now back in the
 

00:18:45.400 --> 00:18:50.910 align:start position:0%
delete all the code here now back in the
terminal<00:18:46.350><c> let's</c><00:18:47.350><c> run</c><00:18:47.530><c> note</c><00:18:47.770><c> app</c><00:18:48.330><c> j</c><00:18:49.330><c> s</c><00:18:49.740><c> so</c><00:18:50.740><c> we</c>

00:18:50.910 --> 00:18:50.920 align:start position:0%
terminal let's run note app j s so we
 

00:18:50.920 --> 00:18:54.870 align:start position:0%
terminal let's run note app j s so we
get<00:18:51.070><c> undefined</c><00:18:51.880><c> in</c><00:18:52.120><c> the</c><00:18:52.510><c> console</c><00:18:53.580><c> so</c><00:18:54.580><c> as</c><00:18:54.760><c> you</c>

00:18:54.870 --> 00:18:54.880 align:start position:0%
get undefined in the console so as you
 

00:18:54.880 --> 00:18:57.000 align:start position:0%
get undefined in the console so as you
can<00:18:55.000><c> see</c><00:18:55.060><c> the</c><00:18:55.780><c> variables</c><00:18:56.290><c> and</c><00:18:56.470><c> functions</c><00:18:56.710><c> that</c>

00:18:57.000 --> 00:18:57.010 align:start position:0%
can see the variables and functions that
 

00:18:57.010 --> 00:18:59.100 align:start position:0%
can see the variables and functions that
we<00:18:57.160><c> defined</c><00:18:57.520><c> here</c><00:18:57.580><c> they</c><00:18:58.210><c> are</c><00:18:58.330><c> not</c><00:18:58.540><c> added</c><00:18:58.930><c> to</c>

00:18:59.100 --> 00:18:59.110 align:start position:0%
we defined here they are not added to
 

00:18:59.110 --> 00:19:02.100 align:start position:0%
we defined here they are not added to
the<00:18:59.440><c> global</c><00:18:59.770><c> object</c><00:18:59.920><c> they're</c><00:19:00.880><c> only</c><00:19:01.330><c> scoped</c><00:19:01.840><c> to</c>

00:19:02.100 --> 00:19:02.110 align:start position:0%
the global object they're only scoped to
 

00:19:02.110 --> 00:19:05.310 align:start position:0%
the global object they're only scoped to
this<00:19:02.470><c> fire</c><00:19:02.740><c> app</c><00:19:03.130><c> dot</c><00:19:03.640><c> j</c><00:19:03.910><c> s</c><00:19:04.120><c> so</c><00:19:04.840><c> they</c><00:19:04.990><c> are</c><00:19:05.080><c> not</c>

00:19:05.310 --> 00:19:05.320 align:start position:0%
this fire app dot j s so they are not
 

00:19:05.320 --> 00:19:07.860 align:start position:0%
this fire app dot j s so they are not
available<00:19:05.620><c> outside</c><00:19:06.100><c> of</c><00:19:06.610><c> this</c><00:19:06.820><c> file</c><00:19:07.090><c> and</c><00:19:07.300><c> this</c>

00:19:07.860 --> 00:19:07.870 align:start position:0%
available outside of this file and this
 

00:19:07.870 --> 00:19:10.020 align:start position:0%
available outside of this file and this
is<00:19:08.020><c> because</c><00:19:08.320><c> nodes</c><00:19:08.650><c> modular</c><00:19:09.400><c> system</c><00:19:09.850><c> that</c>

00:19:10.020 --> 00:19:10.030 align:start position:0%
is because nodes modular system that
 

00:19:10.030 --> 00:19:11.670 align:start position:0%
is because nodes modular system that
you're<00:19:10.150><c> going</c><00:19:10.270><c> to</c><00:19:10.330><c> learn</c><00:19:10.450><c> about</c><00:19:10.510><c> in</c><00:19:11.050><c> the</c><00:19:11.470><c> next</c>

00:19:11.670 --> 00:19:11.680 align:start position:0%
you're going to learn about in the next
 

00:19:11.680 --> 00:19:13.320 align:start position:0%
you're going to learn about in the next
lecture

00:19:13.320 --> 00:19:13.330 align:start position:0%
lecture
 

00:19:13.330 --> 00:19:17.110 align:start position:0%
lecture
you

00:19:17.110 --> 00:19:17.120 align:start position:0%
 
 

00:19:17.120 --> 00:19:19.480 align:start position:0%
 
so<00:19:17.750><c> in</c><00:19:17.930><c> the</c><00:19:18.050><c> last</c><00:19:18.200><c> section</c><00:19:18.590><c> you'll</c><00:19:19.130><c> learn</c><00:19:19.250><c> that</c>

00:19:19.480 --> 00:19:19.490 align:start position:0%
so in the last section you'll learn that
 

00:19:19.490 --> 00:19:21.430 align:start position:0%
so in the last section you'll learn that
in<00:19:19.670><c> the</c><00:19:19.730><c> client-side</c><00:19:20.390><c> JavaScript</c><00:19:20.450><c> that</c><00:19:21.380><c> we</c>

00:19:21.430 --> 00:19:21.440 align:start position:0%
in the client-side JavaScript that we
 

00:19:21.440 --> 00:19:24.430 align:start position:0%
in the client-side JavaScript that we
run<00:19:21.740><c> inside</c><00:19:22.370><c> of</c><00:19:22.520><c> browsers</c><00:19:22.970><c> when</c><00:19:23.750><c> we</c><00:19:23.870><c> declare</c><00:19:24.260><c> a</c>

00:19:24.430 --> 00:19:24.440 align:start position:0%
run inside of browsers when we declare a
 

00:19:24.440 --> 00:19:26.800 align:start position:0%
run inside of browsers when we declare a
variable<00:19:24.470><c> or</c><00:19:25.160><c> a</c><00:19:25.280><c> function</c><00:19:25.760><c> that</c><00:19:25.970><c> is</c><00:19:26.360><c> added</c><00:19:26.780><c> to</c>

00:19:26.800 --> 00:19:26.810 align:start position:0%
variable or a function that is added to
 

00:19:26.810 --> 00:19:30.190 align:start position:0%
variable or a function that is added to
the<00:19:27.020><c> global</c><00:19:27.590><c> scope</c><00:19:27.950><c> for</c><00:19:28.910><c> example</c><00:19:29.360><c> when</c><00:19:30.080><c> we</c>

00:19:30.190 --> 00:19:30.200 align:start position:0%
the global scope for example when we
 

00:19:30.200 --> 00:19:35.050 align:start position:0%
the global scope for example when we
define<00:19:30.560><c> a</c><00:19:30.770><c> function</c><00:19:31.640><c> like</c><00:19:32.510><c> say</c><00:19:32.780><c> hello</c><00:19:34.060><c> that</c>

00:19:35.050 --> 00:19:35.060 align:start position:0%
define a function like say hello that
 

00:19:35.060 --> 00:19:37.600 align:start position:0%
define a function like say hello that
function<00:19:35.480><c> is</c><00:19:35.830><c> added</c><00:19:36.830><c> to</c><00:19:36.920><c> the</c><00:19:37.010><c> global</c><00:19:37.370><c> scope</c>

00:19:37.600 --> 00:19:37.610 align:start position:0%
function is added to the global scope
 

00:19:37.610 --> 00:19:41.790 align:start position:0%
function is added to the global scope
and<00:19:37.990><c> it's</c><00:19:38.990><c> available</c><00:19:39.310><c> via</c><00:19:40.310><c> the</c><00:19:40.490><c> window</c><00:19:40.970><c> object</c>

00:19:41.790 --> 00:19:41.800 align:start position:0%
and it's available via the window object
 

00:19:41.800 --> 00:19:44.500 align:start position:0%
and it's available via the window object
now<00:19:42.800><c> there</c><00:19:43.010><c> is</c><00:19:43.100><c> a</c><00:19:43.130><c> problem</c><00:19:43.520><c> with</c><00:19:44.390><c> this</c>

00:19:44.500 --> 00:19:44.510 align:start position:0%
now there is a problem with this
 

00:19:44.510 --> 00:19:47.140 align:start position:0%
now there is a problem with this
behavior<00:19:44.690><c> in</c><00:19:45.380><c> a</c><00:19:45.800><c> real</c><00:19:45.980><c> world</c><00:19:46.160><c> application</c><00:19:46.250><c> we</c>

00:19:47.140 --> 00:19:47.150 align:start position:0%
behavior in a real world application we
 

00:19:47.150 --> 00:19:49.630 align:start position:0%
behavior in a real world application we
often<00:19:47.510><c> split</c><00:19:47.810><c> our</c><00:19:48.080><c> JavaScript</c><00:19:48.770><c> code</c><00:19:48.980><c> into</c>

00:19:49.630 --> 00:19:49.640 align:start position:0%
often split our JavaScript code into
 

00:19:49.640 --> 00:19:52.510 align:start position:0%
often split our JavaScript code into
multiple<00:19:50.210><c> files</c><00:19:50.510><c> so</c><00:19:51.380><c> it</c><00:19:51.560><c> is</c><00:19:51.680><c> possible</c><00:19:52.220><c> that</c><00:19:52.250><c> we</c>

00:19:52.510 --> 00:19:52.520 align:start position:0%
multiple files so it is possible that we
 

00:19:52.520 --> 00:19:54.790 align:start position:0%
multiple files so it is possible that we
have<00:19:52.550><c> two</c><00:19:52.850><c> files</c><00:19:53.090><c> and</c><00:19:53.390><c> in</c><00:19:54.020><c> both</c><00:19:54.260><c> these</c><00:19:54.500><c> files</c>

00:19:54.790 --> 00:19:54.800 align:start position:0%
have two files and in both these files
 

00:19:54.800 --> 00:19:57.580 align:start position:0%
have two files and in both these files
we<00:19:55.010><c> define</c><00:19:55.400><c> this</c><00:19:56.000><c> function</c><00:19:56.300><c> say</c><00:19:57.020><c> hello</c><00:19:57.260><c> with</c>

00:19:57.580 --> 00:19:57.590 align:start position:0%
we define this function say hello with
 

00:19:57.590 --> 00:20:00.010 align:start position:0%
we define this function say hello with
the<00:19:57.650><c> exact</c><00:19:58.070><c> same</c><00:19:58.550><c> name</c><00:19:58.790><c> because</c><00:19:59.630><c> this</c>

00:20:00.010 --> 00:20:00.020 align:start position:0%
the exact same name because this
 

00:20:00.020 --> 00:20:01.930 align:start position:0%
the exact same name because this
function<00:20:00.200><c> is</c><00:20:00.530><c> added</c><00:20:01.040><c> to</c><00:20:01.070><c> the</c><00:20:01.250><c> global</c><00:20:01.640><c> scope</c>

00:20:01.930 --> 00:20:01.940 align:start position:0%
function is added to the global scope
 

00:20:01.940 --> 00:20:04.750 align:start position:0%
function is added to the global scope
when<00:20:02.720><c> we</c><00:20:02.870><c> define</c><00:20:03.290><c> this</c><00:20:03.470><c> function</c><00:20:03.710><c> in</c><00:20:04.130><c> another</c>

00:20:04.750 --> 00:20:04.760 align:start position:0%
when we define this function in another
 

00:20:04.760 --> 00:20:07.150 align:start position:0%
when we define this function in another
file<00:20:05.090><c> that</c><00:20:05.360><c> new</c><00:20:06.050><c> definition</c><00:20:06.650><c> is</c><00:20:06.800><c> going</c><00:20:06.980><c> to</c>

00:20:07.150 --> 00:20:07.160 align:start position:0%
file that new definition is going to
 

00:20:07.160 --> 00:20:09.970 align:start position:0%
file that new definition is going to
overwrite<00:20:07.880><c> the</c><00:20:08.150><c> previous</c><00:20:08.660><c> definition</c><00:20:09.560><c> so</c>

00:20:09.970 --> 00:20:09.980 align:start position:0%
overwrite the previous definition so
 

00:20:09.980 --> 00:20:11.590 align:start position:0%
overwrite the previous definition so
this<00:20:10.160><c> is</c><00:20:10.280><c> the</c><00:20:10.400><c> problem</c><00:20:10.790><c> with</c><00:20:11.120><c> the</c><00:20:11.180><c> global</c>

00:20:11.590 --> 00:20:11.600 align:start position:0%
this is the problem with the global
 

00:20:11.600 --> 00:20:14.770 align:start position:0%
this is the problem with the global
scope<00:20:11.930><c> so</c><00:20:12.920><c> in</c><00:20:13.100><c> order</c><00:20:13.250><c> to</c><00:20:13.460><c> build</c><00:20:13.610><c> reliable</c><00:20:14.360><c> and</c>

00:20:14.770 --> 00:20:14.780 align:start position:0%
scope so in order to build reliable and
 

00:20:14.780 --> 00:20:16.660 align:start position:0%
scope so in order to build reliable and
maintainable<00:20:15.440><c> applications</c><00:20:16.100><c> we</c><00:20:16.490><c> should</c>

00:20:16.660 --> 00:20:16.670 align:start position:0%
maintainable applications we should
 

00:20:16.670 --> 00:20:19.030 align:start position:0%
maintainable applications we should
avoid<00:20:17.120><c> defining</c><00:20:17.900><c> variables</c><00:20:18.590><c> and</c><00:20:18.800><c> functions</c>

00:20:19.030 --> 00:20:19.040 align:start position:0%
avoid defining variables and functions
 

00:20:19.040 --> 00:20:21.850 align:start position:0%
avoid defining variables and functions
in<00:20:19.520><c> the</c><00:20:19.880><c> global</c><00:20:20.300><c> scope</c><00:20:20.590><c> instead</c><00:20:21.590><c> we</c><00:20:21.740><c> need</c>

00:20:21.850 --> 00:20:21.860 align:start position:0%
in the global scope instead we need
 

00:20:21.860 --> 00:20:24.520 align:start position:0%
in the global scope instead we need
modularity<00:20:22.640><c> we</c><00:20:23.480><c> need</c><00:20:23.600><c> to</c><00:20:23.690><c> create</c><00:20:23.930><c> small</c>

00:20:24.520 --> 00:20:24.530 align:start position:0%
modularity we need to create small
 

00:20:24.530 --> 00:20:27.190 align:start position:0%
modularity we need to create small
building<00:20:25.250><c> blocks</c><00:20:25.280><c> or</c><00:20:25.760><c> modules</c><00:20:26.390><c> where</c><00:20:27.050><c> we</c>

00:20:27.190 --> 00:20:27.200 align:start position:0%
building blocks or modules where we
 

00:20:27.200 --> 00:20:29.710 align:start position:0%
building blocks or modules where we
define<00:20:27.530><c> our</c><00:20:27.740><c> variables</c><00:20:28.580><c> and</c><00:20:28.760><c> functions</c><00:20:28.910><c> so</c>

00:20:29.710 --> 00:20:29.720 align:start position:0%
define our variables and functions so
 

00:20:29.720 --> 00:20:31.690 align:start position:0%
define our variables and functions so
two<00:20:30.230><c> variables</c><00:20:30.740><c> or</c><00:20:30.920><c> two</c><00:20:31.070><c> functions</c><00:20:31.520><c> with</c><00:20:31.670><c> the</c>

00:20:31.690 --> 00:20:31.700 align:start position:0%
two variables or two functions with the
 

00:20:31.700 --> 00:20:33.910 align:start position:0%
two variables or two functions with the
same<00:20:31.790><c> name</c><00:20:32.210><c> don't</c><00:20:32.660><c> overwrite</c><00:20:33.320><c> another</c>

00:20:33.910 --> 00:20:33.920 align:start position:0%
same name don't overwrite another
 

00:20:33.920 --> 00:20:35.920 align:start position:0%
same name don't overwrite another
variable<00:20:34.400><c> or</c><00:20:34.550><c> function</c><00:20:34.760><c> defined</c><00:20:35.420><c> somewhere</c>

00:20:35.920 --> 00:20:35.930 align:start position:0%
variable or function defined somewhere
 

00:20:35.930 --> 00:20:39.070 align:start position:0%
variable or function defined somewhere
else<00:20:36.260><c> that</c><00:20:36.940><c> encapsulated</c><00:20:37.940><c> inside</c><00:20:38.330><c> of</c><00:20:38.960><c> that</c>

00:20:39.070 --> 00:20:39.080 align:start position:0%
else that encapsulated inside of that
 

00:20:39.080 --> 00:20:42.160 align:start position:0%
else that encapsulated inside of that
module<00:20:39.590><c> now</c><00:20:40.550><c> at</c><00:20:40.730><c> the</c><00:20:40.880><c> core</c><00:20:41.120><c> of</c><00:20:41.270><c> node</c><00:20:41.480><c> we</c><00:20:42.050><c> have</c>

00:20:42.160 --> 00:20:42.170 align:start position:0%
module now at the core of node we have
 

00:20:42.170 --> 00:20:45.310 align:start position:0%
module now at the core of node we have
this<00:20:42.290><c> concept</c><00:20:42.800><c> called</c><00:20:43.100><c> module</c><00:20:43.970><c> so</c><00:20:44.630><c> every</c><00:20:45.020><c> file</c>

00:20:45.310 --> 00:20:45.320 align:start position:0%
this concept called module so every file
 

00:20:45.320 --> 00:20:47.410 align:start position:0%
this concept called module so every file
in<00:20:45.560><c> a</c><00:20:45.650><c> node</c><00:20:45.830><c> application</c><00:20:46.040><c> is</c><00:20:46.640><c> considered</c><00:20:47.330><c> a</c>

00:20:47.410 --> 00:20:47.420 align:start position:0%
in a node application is considered a
 

00:20:47.420 --> 00:20:49.900 align:start position:0%
in a node application is considered a
module<00:20:47.990><c> the</c><00:20:48.650><c> variables</c><00:20:49.220><c> and</c><00:20:49.340><c> functions</c><00:20:49.550><c> would</c>

00:20:49.900 --> 00:20:49.910 align:start position:0%
module the variables and functions would
 

00:20:49.910 --> 00:20:51.820 align:start position:0%
module the variables and functions would
define<00:20:50.240><c> in</c><00:20:50.360><c> that</c><00:20:50.510><c> file</c><00:20:50.780><c> or</c><00:20:51.020><c> that</c><00:20:51.050><c> module</c><00:20:51.620><c> are</c>

00:20:51.820 --> 00:20:51.830 align:start position:0%
define in that file or that module are
 

00:20:51.830 --> 00:20:54.940 align:start position:0%
define in that file or that module are
scoped<00:20:52.580><c> to</c><00:20:52.820><c> that</c><00:20:53.090><c> file</c><00:20:53.360><c> in</c><00:20:53.950><c> object-oriented</c>

00:20:54.940 --> 00:20:54.950 align:start position:0%
scoped to that file in object-oriented
 

00:20:54.950 --> 00:20:56.890 align:start position:0%
scoped to that file in object-oriented
programming<00:20:55.580><c> terms</c><00:20:55.910><c> we</c><00:20:56.120><c> say</c><00:20:56.330><c> there</c><00:20:56.780><c> are</c>

00:20:56.890 --> 00:20:56.900 align:start position:0%
programming terms we say there are
 

00:20:56.900 --> 00:20:58.900 align:start position:0%
programming terms we say there are
private<00:20:57.470><c> they</c><00:20:57.980><c> are</c><00:20:58.040><c> not</c><00:20:58.280><c> available</c><00:20:58.460><c> outside</c>

00:20:58.900 --> 00:20:58.910 align:start position:0%
private they are not available outside
 

00:20:58.910 --> 00:21:01.420 align:start position:0%
private they are not available outside
that<00:20:59.660><c> container</c><00:21:00.110><c> outside</c><00:21:00.680><c> that</c><00:21:00.860><c> module</c><00:21:01.280><c> if</c>

00:21:01.420 --> 00:21:01.430 align:start position:0%
that container outside that module if
 

00:21:01.430 --> 00:21:03.370 align:start position:0%
that container outside that module if
you<00:21:02.000><c> want</c><00:21:02.120><c> to</c><00:21:02.210><c> use</c><00:21:02.390><c> a</c><00:21:02.540><c> variable</c><00:21:03.110><c> or</c><00:21:03.200><c> a</c><00:21:03.290><c> function</c>

00:21:03.370 --> 00:21:03.380 align:start position:0%
you want to use a variable or a function
 

00:21:03.380 --> 00:21:06.070 align:start position:0%
you want to use a variable or a function
defined<00:21:04.010><c> in</c><00:21:04.370><c> a</c><00:21:04.460><c> module</c><00:21:04.670><c> outside</c><00:21:05.570><c> that</c><00:21:05.720><c> module</c>

00:21:06.070 --> 00:21:06.080 align:start position:0%
defined in a module outside that module
 

00:21:06.080 --> 00:21:08.740 align:start position:0%
defined in a module outside that module
you<00:21:06.470><c> need</c><00:21:06.500><c> to</c><00:21:06.710><c> explicitly</c><00:21:07.460><c> export</c><00:21:08.450><c> it</c><00:21:08.600><c> and</c>

00:21:08.740 --> 00:21:08.750 align:start position:0%
you need to explicitly export it and
 

00:21:08.750 --> 00:21:10.900 align:start position:0%
you need to explicitly export it and
make<00:21:09.080><c> it</c><00:21:09.110><c> public</c><00:21:09.770><c> and</c><00:21:09.980><c> we're</c><00:21:10.490><c> going</c><00:21:10.640><c> to</c><00:21:10.760><c> look</c>

00:21:10.900 --> 00:21:10.910 align:start position:0%
make it public and we're going to look
 

00:21:10.910 --> 00:21:13.090 align:start position:0%
make it public and we're going to look
at<00:21:11.030><c> that</c><00:21:11.150><c> in</c><00:21:11.330><c> the</c><00:21:11.450><c> next</c><00:21:11.690><c> lecture</c><00:21:11.900><c> so</c><00:21:12.260><c> what</c><00:21:13.070><c> I</c>

00:21:13.090 --> 00:21:13.100 align:start position:0%
at that in the next lecture so what I
 

00:21:13.100 --> 00:21:14.470 align:start position:0%
at that in the next lecture so what I
want<00:21:13.310><c> you</c><00:21:13.400><c> to</c><00:21:13.430><c> take</c><00:21:13.790><c> away</c><00:21:13.970><c> from</c><00:21:14.300><c> this</c><00:21:14.420><c> lecture</c>

00:21:14.470 --> 00:21:14.480 align:start position:0%
want you to take away from this lecture
 

00:21:14.480 --> 00:21:17.350 align:start position:0%
want you to take away from this lecture
is<00:21:14.990><c> that</c><00:21:15.590><c> every</c><00:21:16.040><c> node</c><00:21:16.280><c> application</c><00:21:16.520><c> has</c><00:21:17.150><c> at</c>

00:21:17.350 --> 00:21:17.360 align:start position:0%
is that every node application has at
 

00:21:17.360 --> 00:21:20.110 align:start position:0%
is that every node application has at
least<00:21:17.540><c> one</c><00:21:18.200><c> file</c><00:21:18.500><c> or</c><00:21:18.770><c> one</c><00:21:19.250><c> module</c><00:21:19.730><c> which</c><00:21:19.940><c> we</c>

00:21:20.110 --> 00:21:20.120 align:start position:0%
least one file or one module which we
 

00:21:20.120 --> 00:21:22.750 align:start position:0%
least one file or one module which we
call<00:21:20.360><c> a</c><00:21:20.630><c> main</c><00:21:21.170><c> module</c><00:21:21.650><c> so</c><00:21:21.920><c> in</c><00:21:22.010><c> this</c><00:21:22.130><c> case</c><00:21:22.340><c> is</c>

00:21:22.750 --> 00:21:22.760 align:start position:0%
call a main module so in this case is
 

00:21:22.760 --> 00:21:26.260 align:start position:0%
call a main module so in this case is
after<00:21:23.060><c> J</c><00:21:23.570><c> s</c><00:21:23.750><c> is</c><00:21:24.050><c> our</c><00:21:24.500><c> main</c><00:21:24.740><c> module</c><00:21:25.190><c> now</c><00:21:26.000><c> let</c><00:21:26.180><c> me</c>

00:21:26.260 --> 00:21:26.270 align:start position:0%
after J s is our main module now let me
 

00:21:26.270 --> 00:21:27.790 align:start position:0%
after J s is our main module now let me
show<00:21:26.390><c> you</c><00:21:26.420><c> this</c><00:21:26.660><c> module</c><00:21:27.050><c> so</c><00:21:27.200><c> I'm</c><00:21:27.590><c> going</c><00:21:27.740><c> to</c>

00:21:27.790 --> 00:21:27.800 align:start position:0%
show you this module so I'm going to
 

00:21:27.800 --> 00:21:30.909 align:start position:0%
show you this module so I'm going to
delete<00:21:28.040><c> all</c><00:21:28.250><c> this</c><00:21:28.640><c> code</c><00:21:28.850><c> here</c><00:21:29.150><c> and</c><00:21:29.800><c> do</c>

00:21:30.909 --> 00:21:30.919 align:start position:0%
delete all this code here and do
 

00:21:30.919 --> 00:21:35.760 align:start position:0%
delete all this code here and do
a<00:21:30.950><c> console</c><00:21:31.580><c> that</c><00:21:32.080><c> log</c><00:21:33.080><c> of</c><00:21:33.730><c> module</c>

00:21:35.760 --> 00:21:35.770 align:start position:0%
a console that log of module
 

00:21:35.770 --> 00:21:38.640 align:start position:0%
a console that log of module
now<00:21:36.429><c> this</c><00:21:36.610><c> module</c><00:21:37.030><c> object</c><00:21:37.150><c> here</c><00:21:37.660><c> may</c><00:21:38.290><c> appear</c>

00:21:38.640 --> 00:21:38.650 align:start position:0%
now this module object here may appear
 

00:21:38.650 --> 00:21:40.650 align:start position:0%
now this module object here may appear
to<00:21:38.679><c> be</c><00:21:38.830><c> global</c><00:21:39.400><c> so</c><00:21:39.910><c> you</c><00:21:40.000><c> may</c><00:21:40.120><c> think</c><00:21:40.390><c> we</c><00:21:40.540><c> can</c>

00:21:40.650 --> 00:21:40.660 align:start position:0%
to be global so you may think we can
 

00:21:40.660 --> 00:21:44.160 align:start position:0%
to be global so you may think we can
access<00:21:41.140><c> it</c><00:21:41.290><c> while</c><00:21:41.470><c> the</c><00:21:41.980><c> global</c><00:21:42.250><c> object</c><00:21:43.170><c> like</c>

00:21:44.160 --> 00:21:44.170 align:start position:0%
access it while the global object like
 

00:21:44.170 --> 00:21:47.070 align:start position:0%
access it while the global object like
global<00:21:44.530><c> console</c><00:21:45.220><c> but</c><00:21:45.880><c> actually</c><00:21:46.450><c> this</c><00:21:46.660><c> is</c><00:21:46.809><c> not</c>

00:21:47.070 --> 00:21:47.080 align:start position:0%
global console but actually this is not
 

00:21:47.080 --> 00:21:49.770 align:start position:0%
global console but actually this is not
a<00:21:47.290><c> global</c><00:21:47.590><c> object</c><00:21:47.950><c> it</c><00:21:48.670><c> appears</c><00:21:49.120><c> to</c><00:21:49.240><c> be</c><00:21:49.360><c> global</c>

00:21:49.770 --> 00:21:49.780 align:start position:0%
a global object it appears to be global
 

00:21:49.780 --> 00:21:51.840 align:start position:0%
a global object it appears to be global
but<00:21:50.140><c> it's</c><00:21:50.320><c> not</c><00:21:50.679><c> global</c><00:21:51.010><c> and</c><00:21:51.340><c> you</c><00:21:51.400><c> will</c><00:21:51.520><c> find</c>

00:21:51.840 --> 00:21:51.850 align:start position:0%
but it's not global and you will find
 

00:21:51.850 --> 00:21:55.500 align:start position:0%
but it's not global and you will find
out<00:21:52.000><c> why</c><00:21:52.240><c> very</c><00:21:52.929><c> soon</c><00:21:53.400><c> so</c><00:21:54.400><c> let's</c><00:21:55.030><c> just</c><00:21:55.270><c> lock</c>

00:21:55.500 --> 00:21:55.510 align:start position:0%
out why very soon so let's just lock
 

00:21:55.510 --> 00:21:57.419 align:start position:0%
out why very soon so let's just lock
this<00:21:55.690><c> module</c><00:21:56.170><c> object</c><00:21:56.290><c> and</c><00:21:56.740><c> see</c><00:21:56.920><c> what</c><00:21:57.130><c> we</c><00:21:57.280><c> see</c>

00:21:57.419 --> 00:21:57.429 align:start position:0%
this module object and see what we see
 

00:21:57.429 --> 00:22:01.020 align:start position:0%
this module object and see what we see
in<00:21:57.610><c> the</c><00:21:57.700><c> console</c><00:21:58.679><c> back</c><00:21:59.679><c> in</c><00:21:59.860><c> the</c><00:21:59.980><c> terminal</c><00:22:00.370><c> node</c>

00:22:01.020 --> 00:22:01.030 align:start position:0%
in the console back in the terminal node
 

00:22:01.030 --> 00:22:04.980 align:start position:0%
in the console back in the terminal node
app<00:22:01.660><c> the</c><00:22:02.410><c> jas</c><00:22:03.300><c> so</c><00:22:04.300><c> you</c><00:22:04.360><c> can</c><00:22:04.510><c> see</c><00:22:04.660><c> we</c><00:22:04.780><c> have</c><00:22:04.900><c> an</c>

00:22:04.980 --> 00:22:04.990 align:start position:0%
app the jas so you can see we have an
 

00:22:04.990 --> 00:22:08.130 align:start position:0%
app the jas so you can see we have an
object<00:22:05.170><c> module</c><00:22:05.940><c> it's</c><00:22:06.940><c> a</c><00:22:07.059><c> JSON</c><00:22:07.480><c> object</c><00:22:07.600><c> with</c>

00:22:08.130 --> 00:22:08.140 align:start position:0%
object module it's a JSON object with
 

00:22:08.140 --> 00:22:09.870 align:start position:0%
object module it's a JSON object with
these<00:22:08.320><c> key</c><00:22:08.590><c> value</c><00:22:08.860><c> pairs</c><00:22:09.130><c> so</c><00:22:09.340><c> we</c><00:22:09.460><c> have</c><00:22:09.610><c> ID</c>

00:22:09.870 --> 00:22:09.880 align:start position:0%
these key value pairs so we have ID
 

00:22:09.880 --> 00:22:12.270 align:start position:0%
these key value pairs so we have ID
every<00:22:10.780><c> module</c><00:22:10.929><c> has</c><00:22:11.170><c> an</c><00:22:11.410><c> ID</c><00:22:11.590><c> or</c><00:22:11.920><c> a</c><00:22:11.980><c> unique</c>

00:22:12.270 --> 00:22:12.280 align:start position:0%
every module has an ID or a unique
 

00:22:12.280 --> 00:22:16.080 align:start position:0%
every module has an ID or a unique
identifier<00:22:12.880><c> we</c><00:22:13.750><c> have</c><00:22:13.840><c> exports</c><00:22:14.410><c> parent</c><00:22:15.309><c> file</c>

00:22:16.080 --> 00:22:16.090 align:start position:0%
identifier we have exports parent file
 

00:22:16.090 --> 00:22:18.390 align:start position:0%
identifier we have exports parent file
name<00:22:16.330><c> which</c><00:22:16.600><c> is</c><00:22:16.720><c> the</c><00:22:16.870><c> complete</c><00:22:17.260><c> pass</c><00:22:17.500><c> to</c><00:22:18.370><c> that</c>

00:22:18.390 --> 00:22:18.400 align:start position:0%
name which is the complete pass to that
 

00:22:18.400 --> 00:22:21.450 align:start position:0%
name which is the complete pass to that
file<00:22:19.260><c> loaded</c><00:22:20.260><c> which</c><00:22:20.650><c> is</c><00:22:20.800><c> a</c><00:22:20.830><c> boolean</c><00:22:21.100><c> that</c>

00:22:21.450 --> 00:22:21.460 align:start position:0%
file loaded which is a boolean that
 

00:22:21.460 --> 00:22:23.370 align:start position:0%
file loaded which is a boolean that
determines<00:22:22.150><c> if</c><00:22:22.240><c> this</c><00:22:22.390><c> module</c><00:22:22.780><c> is</c><00:22:22.900><c> loaded</c><00:22:23.110><c> or</c>

00:22:23.370 --> 00:22:23.380 align:start position:0%
determines if this module is loaded or
 

00:22:23.380 --> 00:22:26.820 align:start position:0%
determines if this module is loaded or
not<00:22:23.410><c> we</c><00:22:24.309><c> have</c><00:22:24.460><c> children</c><00:22:24.490><c> and</c><00:22:25.150><c> paths</c><00:22:25.750><c> now</c><00:22:26.620><c> for</c>

00:22:26.820 --> 00:22:26.830 align:start position:0%
not we have children and paths now for
 

00:22:26.830 --> 00:22:28.380 align:start position:0%
not we have children and paths now for
now<00:22:26.920><c> don't</c><00:22:27.250><c> worry</c><00:22:27.429><c> about</c><00:22:27.670><c> these</c><00:22:28.000><c> properties</c>

00:22:28.380 --> 00:22:28.390 align:start position:0%
now don't worry about these properties
 

00:22:28.390 --> 00:22:30.990 align:start position:0%
now don't worry about these properties
as<00:22:28.900><c> we</c><00:22:29.590><c> go</c><00:22:29.740><c> through</c><00:22:29.950><c> this</c><00:22:30.040><c> section</c><00:22:30.280><c> you</c><00:22:30.820><c> will</c>

00:22:30.990 --> 00:22:31.000 align:start position:0%
as we go through this section you will
 

00:22:31.000 --> 00:22:32.880 align:start position:0%
as we go through this section you will
gradually<00:22:31.420><c> become</c><00:22:31.660><c> familiar</c><00:22:32.230><c> with</c><00:22:32.590><c> this</c>

00:22:32.880 --> 00:22:32.890 align:start position:0%
gradually become familiar with this
 

00:22:32.890 --> 00:22:36.930 align:start position:0%
gradually become familiar with this
properties<00:22:34.080><c> so</c><00:22:35.080><c> in</c><00:22:35.320><c> node</c><00:22:35.530><c> every</c><00:22:35.860><c> file</c><00:22:36.520><c> is</c><00:22:36.880><c> a</c>

00:22:36.930 --> 00:22:36.940 align:start position:0%
properties so in node every file is a
 

00:22:36.940 --> 00:22:39.210 align:start position:0%
properties so in node every file is a
module<00:22:37.420><c> and</c><00:22:37.600><c> the</c><00:22:38.290><c> variables</c><00:22:38.770><c> and</c><00:22:38.950><c> functions</c>

00:22:39.210 --> 00:22:39.220 align:start position:0%
module and the variables and functions
 

00:22:39.220 --> 00:22:42.060 align:start position:0%
module and the variables and functions
defined<00:22:39.970><c> in</c><00:22:40.120><c> that</c><00:22:40.270><c> file</c><00:22:40.510><c> are</c><00:22:40.720><c> scoped</c><00:22:41.530><c> to</c><00:22:41.920><c> that</c>

00:22:42.060 --> 00:22:42.070 align:start position:0%
defined in that file are scoped to that
 

00:22:42.070 --> 00:22:44.549 align:start position:0%
defined in that file are scoped to that
module<00:22:42.309><c> they</c><00:22:42.820><c> are</c><00:22:42.880><c> not</c><00:22:43.150><c> available</c><00:22:43.690><c> outside</c><00:22:43.929><c> of</c>

00:22:44.549 --> 00:22:44.559 align:start position:0%
module they are not available outside of
 

00:22:44.559 --> 00:22:46.560 align:start position:0%
module they are not available outside of
that<00:22:44.679><c> module</c><00:22:44.890><c> in</c><00:22:45.640><c> the</c><00:22:45.790><c> next</c><00:22:46.030><c> lecture</c><00:22:46.330><c> you're</c>

00:22:46.560 --> 00:22:46.570 align:start position:0%
that module in the next lecture you're
 

00:22:46.570 --> 00:22:48.690 align:start position:0%
that module in the next lecture you're
going<00:22:46.750><c> to</c><00:22:46.840><c> learn</c><00:22:46.990><c> how</c><00:22:47.470><c> to</c><00:22:47.500><c> create</c><00:22:47.890><c> and</c><00:22:48.190><c> load</c><00:22:48.520><c> a</c>

00:22:48.690 --> 00:22:48.700 align:start position:0%
going to learn how to create and load a
 

00:22:48.700 --> 00:22:54.000 align:start position:0%
going to learn how to create and load a
module

00:22:54.000 --> 00:22:54.010 align:start position:0%
 
 

00:22:54.010 --> 00:22:56.820 align:start position:0%
 
alright<00:22:54.820><c> now</c><00:22:55.000><c> let's</c><00:22:55.270><c> add</c><00:22:55.450><c> a</c><00:22:55.660><c> new</c><00:22:56.140><c> module</c><00:22:56.380><c> to</c>

00:22:56.820 --> 00:22:56.830 align:start position:0%
alright now let's add a new module to
 

00:22:56.830 --> 00:23:00.030 align:start position:0%
alright now let's add a new module to
this<00:22:56.919><c> application</c><00:22:57.580><c> so</c><00:22:58.559><c> I'm</c><00:22:59.559><c> gonna</c><00:22:59.710><c> add</c><00:22:59.830><c> a</c><00:22:59.890><c> new</c>

00:23:00.030 --> 00:23:00.040 align:start position:0%
this application so I'm gonna add a new
 

00:23:00.040 --> 00:23:04.799 align:start position:0%
this application so I'm gonna add a new
file<00:23:00.750><c> logger</c><00:23:01.890><c> dot</c><00:23:02.890><c> J</c><00:23:03.220><c> s</c><00:23:03.400><c> let's</c><00:23:04.270><c> imagine</c><00:23:04.450><c> we're</c>

00:23:04.799 --> 00:23:04.809 align:start position:0%
file logger dot J s let's imagine we're
 

00:23:04.809 --> 00:23:07.020 align:start position:0%
file logger dot J s let's imagine we're
going<00:23:04.840><c> to</c><00:23:04.990><c> create</c><00:23:05.169><c> a</c><00:23:05.440><c> module</c><00:23:06.070><c> for</c><00:23:06.700><c> login</c>

00:23:07.020 --> 00:23:07.030 align:start position:0%
going to create a module for login
 

00:23:07.030 --> 00:23:08.850 align:start position:0%
going to create a module for login
messages<00:23:07.750><c> and</c><00:23:07.960><c> we're</c><00:23:08.169><c> gonna</c><00:23:08.260><c> reuse</c><00:23:08.679><c> this</c>

00:23:08.850 --> 00:23:08.860 align:start position:0%
messages and we're gonna reuse this
 

00:23:08.860 --> 00:23:10.650 align:start position:0%
messages and we're gonna reuse this
module<00:23:09.309><c> in</c><00:23:09.490><c> various</c><00:23:10.090><c> parts</c><00:23:10.450><c> of</c><00:23:10.540><c> this</c>

00:23:10.650 --> 00:23:10.660 align:start position:0%
module in various parts of this
 

00:23:10.660 --> 00:23:12.510 align:start position:0%
module in various parts of this
application<00:23:10.870><c> or</c><00:23:11.470><c> potentially</c><00:23:12.130><c> in</c><00:23:12.250><c> other</c>

00:23:12.510 --> 00:23:12.520 align:start position:0%
application or potentially in other
 

00:23:12.520 --> 00:23:17.520 align:start position:0%
application or potentially in other
applications<00:23:13.290><c> so</c><00:23:14.290><c> loggernet</c><00:23:15.100><c> J</c><00:23:15.400><c> s</c><00:23:16.380><c> now</c><00:23:17.380><c> in</c>

00:23:17.520 --> 00:23:17.530 align:start position:0%
applications so loggernet J s now in
 

00:23:17.530 --> 00:23:19.590 align:start position:0%
applications so loggernet J s now in
this<00:23:17.679><c> module</c><00:23:17.919><c> let's</c><00:23:18.549><c> imagine</c><00:23:19.000><c> that</c><00:23:19.270><c> we're</c>

00:23:19.590 --> 00:23:19.600 align:start position:0%
this module let's imagine that we're
 

00:23:19.600 --> 00:23:21.900 align:start position:0%
this module let's imagine that we're
going<00:23:19.720><c> to</c><00:23:19.809><c> use</c><00:23:20.020><c> one</c><00:23:20.290><c> of</c><00:23:20.320><c> those</c><00:23:20.530><c> remote</c><00:23:21.220><c> logging</c>

00:23:21.900 --> 00:23:21.910 align:start position:0%
going to use one of those remote logging
 

00:23:21.910 --> 00:23:25.200 align:start position:0%
going to use one of those remote logging
services<00:23:22.840><c> for</c><00:23:23.350><c> login</c><00:23:23.620><c> our</c><00:23:23.950><c> messages</c><00:23:24.490><c> so</c><00:23:25.030><c> there</c>

00:23:25.200 --> 00:23:25.210 align:start position:0%
services for login our messages so there
 

00:23:25.210 --> 00:23:27.060 align:start position:0%
services for login our messages so there
are<00:23:25.360><c> websites</c><00:23:25.840><c> out</c><00:23:26.230><c> there</c><00:23:26.290><c> there</c><00:23:26.710><c> provide</c>

00:23:27.060 --> 00:23:27.070 align:start position:0%
are websites out there there provide
 

00:23:27.070 --> 00:23:29.940 align:start position:0%
are websites out there there provide
logging<00:23:27.820><c> as</c><00:23:27.970><c> a</c><00:23:28.030><c> service</c><00:23:28.570><c> they</c><00:23:29.169><c> give</c><00:23:29.350><c> us</c><00:23:29.440><c> a</c><00:23:29.559><c> URL</c>

00:23:29.940 --> 00:23:29.950 align:start position:0%
logging as a service they give us a URL
 

00:23:29.950 --> 00:23:32.460 align:start position:0%
logging as a service they give us a URL
and<00:23:30.340><c> we</c><00:23:30.490><c> can</c><00:23:30.610><c> send</c><00:23:30.880><c> an</c><00:23:31.000><c> HTTP</c><00:23:31.720><c> request</c><00:23:31.929><c> to</c><00:23:32.320><c> that</c>

00:23:32.460 --> 00:23:32.470 align:start position:0%
and we can send an HTTP request to that
 

00:23:32.470 --> 00:23:36.330 align:start position:0%
and we can send an HTTP request to that
URL<00:23:32.679><c> to</c><00:23:33.220><c> log</c><00:23:33.760><c> messages</c><00:23:34.419><c> in</c><00:23:34.600><c> the</c><00:23:34.900><c> cloud</c><00:23:35.169><c> so</c><00:23:35.950><c> here</c>

00:23:36.330 --> 00:23:36.340 align:start position:0%
URL to log messages in the cloud so here
 

00:23:36.340 --> 00:23:41.640 align:start position:0%
URL to log messages in the cloud so here
I'm<00:23:36.669><c> gonna</c><00:23:36.970><c> declare</c><00:23:37.360><c> a</c><00:23:37.600><c> variable</c><00:23:38.910><c> like</c><00:23:39.910><c> URL</c>

00:23:41.640 --> 00:23:41.650 align:start position:0%
I'm gonna declare a variable like URL
 

00:23:41.650 --> 00:23:44.060 align:start position:0%
I'm gonna declare a variable like URL
and<00:23:41.740><c> set</c><00:23:42.220><c> it</c><00:23:42.250><c> to</c><00:23:42.340><c> something</c><00:23:42.640><c> like</c><00:23:42.790><c> this</c><00:23:43.090><c> HTTP</c>

00:23:44.060 --> 00:23:44.070 align:start position:0%
and set it to something like this HTTP
 

00:23:44.070 --> 00:23:48.840 align:start position:0%
and set it to something like this HTTP
my<00:23:45.070><c> lager</c><00:23:45.370><c> dot</c><00:23:46.180><c> io</c><00:23:46.420><c> /</c><00:23:47.230><c> lock</c><00:23:47.890><c> and</c><00:23:48.160><c> of</c><00:23:48.520><c> course</c><00:23:48.730><c> I'm</c>

00:23:48.840 --> 00:23:48.850 align:start position:0%
my lager dot io / lock and of course I'm
 

00:23:48.850 --> 00:23:50.880 align:start position:0%
my lager dot io / lock and of course I'm
making<00:23:49.240><c> this</c><00:23:49.330><c> up</c><00:23:49.540><c> it</c><00:23:49.990><c> may</c><00:23:50.230><c> not</c><00:23:50.410><c> be</c><00:23:50.590><c> a</c><00:23:50.620><c> true</c>

00:23:50.880 --> 00:23:50.890 align:start position:0%
making this up it may not be a true
 

00:23:50.890 --> 00:23:53.100 align:start position:0%
making this up it may not be a true
service<00:23:51.340><c> out</c><00:23:51.520><c> there</c><00:23:51.550><c> but</c><00:23:52.270><c> let's</c><00:23:52.420><c> imagine</c><00:23:52.540><c> in</c>

00:23:53.100 --> 00:23:53.110 align:start position:0%
service out there but let's imagine in
 

00:23:53.110 --> 00:23:54.960 align:start position:0%
service out there but let's imagine in
this<00:23:53.560><c> implementation</c><00:23:53.770><c> we're</c><00:23:54.430><c> going</c><00:23:54.610><c> to</c><00:23:54.730><c> send</c>

00:23:54.960 --> 00:23:54.970 align:start position:0%
this implementation we're going to send
 

00:23:54.970 --> 00:23:58.320 align:start position:0%
this implementation we're going to send
an<00:23:55.150><c> HTTP</c><00:23:56.080><c> request</c><00:23:56.280><c> to</c><00:23:57.280><c> this</c><00:23:57.370><c> endpoint</c><00:23:57.790><c> to</c><00:23:58.240><c> this</c>

00:23:58.320 --> 00:23:58.330 align:start position:0%
an HTTP request to this endpoint to this
 

00:23:58.330 --> 00:24:03.540 align:start position:0%
an HTTP request to this endpoint to this
URL<00:23:58.920><c> now</c><00:23:59.920><c> we</c><00:23:59.980><c> also</c><00:24:00.220><c> need</c><00:24:00.490><c> a</c><00:24:00.550><c> function</c><00:24:02.550><c> called</c>

00:24:03.540 --> 00:24:03.550 align:start position:0%
URL now we also need a function called
 

00:24:03.550 --> 00:24:07.740 align:start position:0%
URL now we also need a function called
log<00:24:03.790><c> that</c><00:24:04.780><c> takes</c><00:24:05.080><c> a</c><00:24:05.200><c> message</c><00:24:05.530><c> and</c><00:24:06.570><c> in</c><00:24:07.570><c> this</c>

00:24:07.740 --> 00:24:07.750 align:start position:0%
log that takes a message and in this
 

00:24:07.750 --> 00:24:10.110 align:start position:0%
log that takes a message and in this
function<00:24:08.080><c> we're</c><00:24:08.230><c> going</c><00:24:08.260><c> to</c><00:24:08.530><c> send</c><00:24:08.800><c> an</c><00:24:09.120><c> HTTP</c>

00:24:10.110 --> 00:24:10.120 align:start position:0%
function we're going to send an HTTP
 

00:24:10.120 --> 00:24:13.560 align:start position:0%
function we're going to send an HTTP
request<00:24:10.590><c> however</c><00:24:11.790><c> to</c><00:24:12.790><c> keep</c><00:24:12.940><c> things</c><00:24:13.180><c> simple</c>

00:24:13.560 --> 00:24:13.570 align:start position:0%
request however to keep things simple
 

00:24:13.570 --> 00:24:15.120 align:start position:0%
request however to keep things simple
here<00:24:13.600><c> we</c><00:24:14.110><c> just</c><00:24:14.290><c> want</c><00:24:14.410><c> to</c><00:24:14.470><c> focus</c><00:24:14.680><c> on</c><00:24:15.010><c> the</c>

00:24:15.120 --> 00:24:15.130 align:start position:0%
here we just want to focus on the
 

00:24:15.130 --> 00:24:16.530 align:start position:0%
here we just want to focus on the
modularity<00:24:15.580><c> we</c><00:24:16.120><c> don't</c><00:24:16.270><c> want</c><00:24:16.390><c> to</c><00:24:16.450><c> get</c>

00:24:16.530 --> 00:24:16.540 align:start position:0%
modularity we don't want to get
 

00:24:16.540 --> 00:24:18.420 align:start position:0%
modularity we don't want to get
distracted<00:24:16.990><c> with</c><00:24:17.320><c> all</c><00:24:17.590><c> the</c><00:24:17.740><c> details</c><00:24:18.190><c> of</c>

00:24:18.420 --> 00:24:18.430 align:start position:0%
distracted with all the details of
 

00:24:18.430 --> 00:24:21.630 align:start position:0%
distracted with all the details of
sending<00:24:19.060><c> HTTP</c><00:24:19.630><c> requests</c><00:24:20.230><c> so</c><00:24:20.800><c> for</c><00:24:21.130><c> now</c><00:24:21.310><c> I</c><00:24:21.400><c> just</c>

00:24:21.630 --> 00:24:21.640 align:start position:0%
sending HTTP requests so for now I just
 

00:24:21.640 --> 00:24:24.060 align:start position:0%
sending HTTP requests so for now I just
want<00:24:21.820><c> to</c><00:24:21.880><c> log</c><00:24:22.150><c> this</c><00:24:22.360><c> message</c><00:24:22.840><c> on</c><00:24:23.080><c> the</c><00:24:23.680><c> console</c>

00:24:24.060 --> 00:24:24.070 align:start position:0%
want to log this message on the console
 

00:24:24.070 --> 00:24:30.270 align:start position:0%
want to log this message on the console
so<00:24:24.880><c> console</c><00:24:25.380><c> that</c><00:24:26.380><c> log</c><00:24:27.000><c> message</c><00:24:29.100><c> okay</c>

00:24:30.270 --> 00:24:30.280 align:start position:0%
so console that log message okay
 

00:24:30.280 --> 00:24:34.620 align:start position:0%
so console that log message okay
now<00:24:31.320><c> this</c><00:24:32.320><c> variable</c><00:24:32.680><c> and</c><00:24:33.040><c> this</c><00:24:33.820><c> log</c><00:24:34.090><c> function</c>

00:24:34.620 --> 00:24:34.630 align:start position:0%
now this variable and this log function
 

00:24:34.630 --> 00:24:37.320 align:start position:0%
now this variable and this log function
they're<00:24:35.260><c> both</c><00:24:35.700><c> scoped</c><00:24:36.700><c> to</c><00:24:36.730><c> this</c><00:24:37.030><c> module</c>

00:24:37.320 --> 00:24:37.330 align:start position:0%
they're both scoped to this module
 

00:24:37.330 --> 00:24:39.900 align:start position:0%
they're both scoped to this module
they're<00:24:37.750><c> private</c><00:24:38.410><c> they're</c><00:24:38.980><c> not</c><00:24:39.190><c> visible</c><00:24:39.460><c> from</c>

00:24:39.900 --> 00:24:39.910 align:start position:0%
they're private they're not visible from
 

00:24:39.910 --> 00:24:40.700 align:start position:0%
they're private they're not visible from
the<00:24:40.000><c> outside</c>

00:24:40.700 --> 00:24:40.710 align:start position:0%
the outside
 

00:24:40.710 --> 00:24:44.910 align:start position:0%
the outside
however<00:24:41.710><c> in</c><00:24:42.070><c> after</c><00:24:43.060><c> j/s</c><00:24:43.510><c> which</c><00:24:44.380><c> is</c><00:24:44.500><c> our</c><00:24:44.650><c> main</c>

00:24:44.910 --> 00:24:44.920 align:start position:0%
however in after j/s which is our main
 

00:24:44.920 --> 00:24:47.550 align:start position:0%
however in after j/s which is our main
module<00:24:45.400><c> we</c><00:24:45.940><c> want</c><00:24:46.060><c> to</c><00:24:46.210><c> use</c><00:24:46.420><c> this</c><00:24:46.660><c> logger</c><00:24:46.990><c> module</c>

00:24:47.550 --> 00:24:47.560 align:start position:0%
module we want to use this logger module
 

00:24:47.560 --> 00:24:51.480 align:start position:0%
module we want to use this logger module
so<00:24:48.360><c> we</c><00:24:49.360><c> should</c><00:24:49.540><c> be</c><00:24:49.630><c> able</c><00:24:49.750><c> to</c><00:24:49.900><c> access</c><00:24:50.170><c> this</c><00:24:51.130><c> log</c>

00:24:51.480 --> 00:24:51.490 align:start position:0%
so we should be able to access this log
 

00:24:51.490 --> 00:24:53.580 align:start position:0%
so we should be able to access this log
function<00:24:51.850><c> we</c><00:24:52.510><c> should</c><00:24:52.540><c> be</c><00:24:52.780><c> able</c><00:24:52.930><c> to</c><00:24:53.080><c> call</c><00:24:53.470><c> it</c>

00:24:53.580 --> 00:24:53.590 align:start position:0%
function we should be able to call it
 

00:24:53.590 --> 00:24:55.770 align:start position:0%
function we should be able to call it
from<00:24:53.770><c> the</c><00:24:53.830><c> app</c><00:24:54.100><c> module</c><00:24:54.490><c> so</c><00:24:55.300><c> we</c><00:24:55.420><c> need</c><00:24:55.540><c> to</c><00:24:55.630><c> make</c>

00:24:55.770 --> 00:24:55.780 align:start position:0%
from the app module so we need to make
 

00:24:55.780 --> 00:24:57.660 align:start position:0%
from the app module so we need to make
this<00:24:55.930><c> public</c><00:24:56.410><c> we</c><00:24:56.890><c> need</c><00:24:56.920><c> to</c><00:24:57.130><c> make</c><00:24:57.280><c> it</c><00:24:57.430><c> visible</c>

00:24:57.660 --> 00:24:57.670 align:start position:0%
this public we need to make it visible
 

00:24:57.670 --> 00:24:59.640 align:start position:0%
this public we need to make it visible
from<00:24:58.090><c> the</c><00:24:58.210><c> outside</c>

00:24:59.640 --> 00:24:59.650 align:start position:0%
from the outside
 

00:24:59.650 --> 00:25:02.220 align:start position:0%
from the outside
now<00:25:00.340><c> in</c><00:25:00.520><c> the</c><00:25:00.610><c> last</c><00:25:00.730><c> lecture</c><00:25:00.910><c> you</c><00:25:01.480><c> saw</c><00:25:02.050><c> this</c>

00:25:02.220 --> 00:25:02.230 align:start position:0%
now in the last lecture you saw this
 

00:25:02.230 --> 00:25:04.799 align:start position:0%
now in the last lecture you saw this
module<00:25:02.740><c> object</c><00:25:02.940><c> one</c><00:25:03.940><c> of</c><00:25:04.059><c> the</c><00:25:04.150><c> properties</c><00:25:04.690><c> we</c>

00:25:04.799 --> 00:25:04.809 align:start position:0%
module object one of the properties we
 

00:25:04.809 --> 00:25:08.040 align:start position:0%
module object one of the properties we
have<00:25:04.960><c> here</c><00:25:05.290><c> is</c><00:25:05.790><c> exports</c><00:25:06.790><c> you</c><00:25:07.000><c> can</c><00:25:07.750><c> see</c><00:25:07.900><c> this</c>

00:25:08.040 --> 00:25:08.050 align:start position:0%
have here is exports you can see this
 

00:25:08.050 --> 00:25:10.940 align:start position:0%
have here is exports you can see this
property<00:25:08.559><c> is</c><00:25:08.800><c> set</c><00:25:09.040><c> to</c><00:25:09.490><c> an</c><00:25:09.580><c> empty</c><00:25:10.090><c> object</c>

00:25:10.940 --> 00:25:10.950 align:start position:0%
property is set to an empty object
 

00:25:10.950 --> 00:25:13.620 align:start position:0%
property is set to an empty object
anything<00:25:11.950><c> that</c><00:25:12.100><c> we</c><00:25:12.220><c> add</c><00:25:12.430><c> to</c><00:25:12.460><c> this</c><00:25:12.730><c> object</c><00:25:13.000><c> will</c>

00:25:13.620 --> 00:25:13.630 align:start position:0%
anything that we add to this object will
 

00:25:13.630 --> 00:25:16.440 align:start position:0%
anything that we add to this object will
be<00:25:13.780><c> exported</c><00:25:14.559><c> from</c><00:25:14.680><c> this</c><00:25:14.890><c> module</c><00:25:15.340><c> and</c><00:25:15.670><c> it</c><00:25:16.300><c> will</c>

00:25:16.440 --> 00:25:16.450 align:start position:0%
be exported from this module and it will
 

00:25:16.450 --> 00:25:19.860 align:start position:0%
be exported from this module and it will
be<00:25:16.570><c> available</c><00:25:17.140><c> outside</c><00:25:17.290><c> of</c><00:25:17.890><c> this</c><00:25:17.980><c> module</c><00:25:18.870><c> so</c>

00:25:19.860 --> 00:25:19.870 align:start position:0%
be available outside of this module so
 

00:25:19.870 --> 00:25:23.220 align:start position:0%
be available outside of this module so
back<00:25:20.080><c> in</c><00:25:20.200><c> our</c><00:25:20.260><c> lager</c><00:25:20.559><c> module</c><00:25:21.780><c> I'm</c><00:25:22.780><c> gonna</c><00:25:23.020><c> set</c>

00:25:23.220 --> 00:25:23.230 align:start position:0%
back in our lager module I'm gonna set
 

00:25:23.230 --> 00:25:28.230 align:start position:0%
back in our lager module I'm gonna set
module<00:25:23.760><c> dot</c><00:25:24.760><c> exports</c><00:25:25.500><c> dot</c><00:25:26.500><c> log</c><00:25:27.190><c> so</c><00:25:27.940><c> I'm</c><00:25:28.059><c> adding</c>

00:25:28.230 --> 00:25:28.240 align:start position:0%
module dot exports dot log so I'm adding
 

00:25:28.240 --> 00:25:31.680 align:start position:0%
module dot exports dot log so I'm adding
a<00:25:28.570><c> method</c><00:25:29.080><c> called</c><00:25:29.410><c> log</c><00:25:29.970><c> to</c><00:25:30.970><c> this</c><00:25:31.030><c> exports</c>

00:25:31.680 --> 00:25:31.690 align:start position:0%
a method called log to this exports
 

00:25:31.690 --> 00:25:35.700 align:start position:0%
a method called log to this exports
object<00:25:32.200><c> and</c><00:25:32.460><c> simply</c><00:25:33.460><c> setting</c><00:25:33.790><c> it</c><00:25:33.940><c> to</c><00:25:34.260><c> this</c><00:25:35.260><c> log</c>

00:25:35.700 --> 00:25:35.710 align:start position:0%
object and simply setting it to this log
 

00:25:35.710 --> 00:25:39.260 align:start position:0%
object and simply setting it to this log
function<00:25:35.980><c> we</c><00:25:36.340><c> have</c><00:25:36.490><c> defined</c><00:25:36.910><c> here</c><00:25:37.890><c> okay</c><00:25:38.890><c> in</c>

00:25:39.260 --> 00:25:39.270 align:start position:0%
function we have defined here okay in
 

00:25:39.270 --> 00:25:41.460 align:start position:0%
function we have defined here okay in
other<00:25:40.270><c> words</c><00:25:40.540><c> the</c><00:25:40.690><c> object</c><00:25:41.200><c> that</c><00:25:41.290><c> we're</c>

00:25:41.460 --> 00:25:41.470 align:start position:0%
other words the object that we're
 

00:25:41.470 --> 00:25:43.860 align:start position:0%
other words the object that we're
exporting<00:25:41.830><c> here</c><00:25:42.280><c> has</c><00:25:42.880><c> a</c><00:25:43.179><c> single</c><00:25:43.540><c> method</c>

00:25:43.860 --> 00:25:43.870 align:start position:0%
exporting here has a single method
 

00:25:43.870 --> 00:25:47.490 align:start position:0%
exporting here has a single method
called<00:25:44.140><c> lock</c><00:25:44.770><c> now</c><00:25:45.670><c> similarly</c><00:25:46.300><c> if</c><00:25:46.540><c> you</c><00:25:47.230><c> want</c><00:25:47.410><c> to</c>

00:25:47.490 --> 00:25:47.500 align:start position:0%
called lock now similarly if you want to
 

00:25:47.500 --> 00:25:49.919 align:start position:0%
called lock now similarly if you want to
export<00:25:47.890><c> this</c><00:25:48.640><c> URL</c><00:25:49.030><c> we</c><00:25:49.450><c> could</c><00:25:49.630><c> do</c><00:25:49.720><c> something</c>

00:25:49.919 --> 00:25:49.929 align:start position:0%
export this URL we could do something
 

00:25:49.929 --> 00:25:50.520 align:start position:0%
export this URL we could do something
like<00:25:50.080><c> this</c>

00:25:50.520 --> 00:25:50.530 align:start position:0%
like this
 

00:25:50.530 --> 00:25:55.890 align:start position:0%
like this
so<00:25:51.309><c> module</c><00:25:52.270><c> that</c><00:25:53.020><c> exports</c><00:25:53.590><c> that</c><00:25:54.460><c> URL</c><00:25:54.880><c> we</c><00:25:55.750><c> set</c>

00:25:55.890 --> 00:25:55.900 align:start position:0%
so module that exports that URL we set
 

00:25:55.900 --> 00:25:58.230 align:start position:0%
so module that exports that URL we set
it<00:25:55.990><c> to</c><00:25:56.020><c> URL</c><00:25:56.470><c> and</c><00:25:56.740><c> of</c><00:25:57.429><c> course</c><00:25:57.670><c> we</c><00:25:57.790><c> could</c><00:25:57.940><c> change</c>

00:25:58.230 --> 00:25:58.240 align:start position:0%
it to URL and of course we could change
 

00:25:58.240 --> 00:26:00.540 align:start position:0%
it to URL and of course we could change
the<00:25:58.510><c> name</c><00:25:58.540><c> that</c><00:25:59.230><c> is</c><00:25:59.380><c> exported</c><00:25:59.830><c> to</c><00:26:00.070><c> the</c><00:26:00.160><c> outside</c>

00:26:00.540 --> 00:26:00.550 align:start position:0%
the name that is exported to the outside
 

00:26:00.550 --> 00:26:03.390 align:start position:0%
the name that is exported to the outside
for<00:26:01.150><c> example</c><00:26:01.600><c> internally</c><00:26:02.410><c> we</c><00:26:02.860><c> may</c><00:26:03.010><c> call</c><00:26:03.220><c> this</c>

00:26:03.390 --> 00:26:03.400 align:start position:0%
for example internally we may call this
 

00:26:03.400 --> 00:26:06.450 align:start position:0%
for example internally we may call this
variable<00:26:03.610><c> URL</c><00:26:04.600><c> but</c><00:26:05.470><c> when</c><00:26:05.650><c> we</c><00:26:05.770><c> export</c><00:26:06.190><c> it</c><00:26:06.309><c> we</c>

00:26:06.450 --> 00:26:06.460 align:start position:0%
variable URL but when we export it we
 

00:26:06.460 --> 00:26:13.680 align:start position:0%
variable URL but when we export it we
may<00:26:06.580><c> call</c><00:26:06.760><c> it</c><00:26:07.800><c> endpoint</c><00:26:11.070><c> okay</c><00:26:12.070><c> now</c><00:26:13.030><c> in</c><00:26:13.450><c> this</c>

00:26:13.680 --> 00:26:13.690 align:start position:0%
may call it endpoint okay now in this
 

00:26:13.690 --> 00:26:16.200 align:start position:0%
may call it endpoint okay now in this
case<00:26:14.020><c> we</c><00:26:14.320><c> don't</c><00:26:14.410><c> need</c><00:26:14.590><c> to</c><00:26:14.710><c> export</c><00:26:15.160><c> this</c><00:26:15.700><c> URL</c>

00:26:16.200 --> 00:26:16.210 align:start position:0%
case we don't need to export this URL
 

00:26:16.210 --> 00:26:18.860 align:start position:0%
case we don't need to export this URL
variable<00:26:16.840><c> because</c><00:26:17.650><c> this</c><00:26:17.830><c> is</c><00:26:17.950><c> purely</c>

00:26:18.860 --> 00:26:18.870 align:start position:0%
variable because this is purely
 

00:26:18.870 --> 00:26:21.660 align:start position:0%
variable because this is purely
implementation<00:26:19.870><c> detail</c><00:26:20.350><c> so</c><00:26:21.100><c> in</c><00:26:21.340><c> real</c><00:26:21.520><c> world</c>

00:26:21.660 --> 00:26:21.670 align:start position:0%
implementation detail so in real world
 

00:26:21.670 --> 00:26:23.730 align:start position:0%
implementation detail so in real world
applications<00:26:22.300><c> every</c><00:26:22.960><c> module</c><00:26:23.350><c> might</c><00:26:23.530><c> have</c>

00:26:23.730 --> 00:26:23.740 align:start position:0%
applications every module might have
 

00:26:23.740 --> 00:26:26.669 align:start position:0%
applications every module might have
several<00:26:24.309><c> variables</c><00:26:25.030><c> and</c><00:26:25.420><c> functions</c><00:26:25.600><c> we</c><00:26:26.440><c> only</c>

00:26:26.669 --> 00:26:26.679 align:start position:0%
several variables and functions we only
 

00:26:26.679 --> 00:26:29.070 align:start position:0%
several variables and functions we only
want<00:26:27.010><c> to</c><00:26:27.070><c> export</c><00:26:27.429><c> a</c><00:26:27.610><c> subset</c><00:26:28.360><c> of</c><00:26:28.450><c> these</c><00:26:28.600><c> members</c>

00:26:29.070 --> 00:26:29.080 align:start position:0%
want to export a subset of these members
 

00:26:29.080 --> 00:26:30.840 align:start position:0%
want to export a subset of these members
to<00:26:29.260><c> the</c><00:26:29.350><c> outside</c><00:26:29.770><c> because</c><00:26:30.190><c> we</c><00:26:30.370><c> want</c><00:26:30.610><c> to</c><00:26:30.670><c> keep</c>

00:26:30.840 --> 00:26:30.850 align:start position:0%
to the outside because we want to keep
 

00:26:30.850 --> 00:26:33.990 align:start position:0%
to the outside because we want to keep
this<00:26:31.030><c> module</c><00:26:31.540><c> easy</c><00:26:31.960><c> to</c><00:26:32.440><c> use</c><00:26:32.679><c> let</c><00:26:33.640><c> me</c><00:26:33.760><c> give</c><00:26:33.910><c> you</c>

00:26:33.990 --> 00:26:34.000 align:start position:0%
this module easy to use let me give you
 

00:26:34.000 --> 00:26:37.799 align:start position:0%
this module easy to use let me give you
a<00:26:34.030><c> metaphor</c><00:26:34.530><c> think</c><00:26:35.530><c> of</c><00:26:35.650><c> a</c><00:26:35.710><c> DVD</c><00:26:36.250><c> player</c><00:26:36.490><c> a</c><00:26:36.809><c> DVD</c>

00:26:37.799 --> 00:26:37.809 align:start position:0%
a metaphor think of a DVD player a DVD
 

00:26:37.809 --> 00:26:39.630 align:start position:0%
a metaphor think of a DVD player a DVD
player<00:26:37.840><c> has</c><00:26:38.559><c> a</c><00:26:38.590><c> few</c><00:26:38.920><c> buttons</c><00:26:39.250><c> on</c><00:26:39.520><c> the</c><00:26:39.610><c> outside</c>

00:26:39.630 --> 00:26:39.640 align:start position:0%
player has a few buttons on the outside
 

00:26:39.640 --> 00:26:41.940 align:start position:0%
player has a few buttons on the outside
and<00:26:40.210><c> these</c><00:26:40.420><c> are</c><00:26:40.540><c> the</c><00:26:40.660><c> buttons</c><00:26:40.929><c> or</c><00:26:41.350><c> objects</c>

00:26:41.940 --> 00:26:41.950 align:start position:0%
and these are the buttons or objects
 

00:26:41.950 --> 00:26:44.520 align:start position:0%
and these are the buttons or objects
that<00:26:42.100><c> we</c><00:26:42.220><c> interact</c><00:26:42.610><c> with</c><00:26:42.790><c> so</c><00:26:43.660><c> these</c><00:26:43.929><c> objects</c>

00:26:44.520 --> 00:26:44.530 align:start position:0%
that we interact with so these objects
 

00:26:44.530 --> 00:26:48.030 align:start position:0%
that we interact with so these objects
represent<00:26:45.100><c> the</c><00:26:45.520><c> public</c><00:26:46.030><c> interface</c><00:26:46.570><c> of</c><00:26:47.140><c> a</c><00:26:47.620><c> DVD</c>

00:26:48.030 --> 00:26:48.040 align:start position:0%
represent the public interface of a DVD
 

00:26:48.040 --> 00:26:51.299 align:start position:0%
represent the public interface of a DVD
player<00:26:48.330><c> okay</c><00:26:49.330><c> but</c><00:26:50.020><c> inside</c><00:26:50.470><c> the</c><00:26:50.620><c> box</c><00:26:50.860><c> there</c><00:26:51.280><c> are</c>

00:26:51.299 --> 00:26:51.309 align:start position:0%
player okay but inside the box there are
 

00:26:51.309 --> 00:26:53.940 align:start position:0%
player okay but inside the box there are
lots<00:26:51.760><c> of</c><00:26:51.910><c> other</c><00:26:52.179><c> objects</c><00:26:52.809><c> or</c><00:26:52.900><c> complex</c><00:26:53.440><c> objects</c>

00:26:53.940 --> 00:26:53.950 align:start position:0%
lots of other objects or complex objects
 

00:26:53.950 --> 00:26:55.740 align:start position:0%
lots of other objects or complex objects
we<00:26:54.280><c> don't</c><00:26:54.490><c> need</c><00:26:54.670><c> to</c><00:26:54.820><c> know</c><00:26:54.940><c> anything</c><00:26:55.480><c> about</c>

00:26:55.740 --> 00:26:55.750 align:start position:0%
we don't need to know anything about
 

00:26:55.750 --> 00:26:58.080 align:start position:0%
we don't need to know anything about
these<00:26:56.020><c> objects</c><00:26:56.470><c> their</c><00:26:56.980><c> implementation</c><00:26:57.910><c> data</c>

00:26:58.080 --> 00:26:58.090 align:start position:0%
these objects their implementation data
 

00:26:58.090 --> 00:27:00.630 align:start position:0%
these objects their implementation data
and<00:26:58.450><c> they</c><00:26:58.929><c> can</c><00:26:59.080><c> change</c><00:26:59.290><c> significantly</c><00:26:59.650><c> from</c>

00:27:00.630 --> 00:27:00.640 align:start position:0%
and they can change significantly from
 

00:27:00.640 --> 00:27:03.150 align:start position:0%
and they can change significantly from
one<00:27:00.880><c> model</c><00:27:01.120><c> to</c><00:27:01.330><c> another</c><00:27:01.530><c> but</c><00:27:02.530><c> what</c><00:27:02.740><c> you</c><00:27:02.890><c> see</c><00:27:03.070><c> on</c>

00:27:03.150 --> 00:27:03.160 align:start position:0%
one model to another but what you see on
 

00:27:03.160 --> 00:27:06.240 align:start position:0%
one model to another but what you see on
the<00:27:03.309><c> outside</c><00:27:03.340><c> is</c><00:27:03.910><c> almost</c><00:27:04.570><c> stable</c><00:27:05.170><c> or</c><00:27:05.710><c> static</c>

00:27:06.240 --> 00:27:06.250 align:start position:0%
the outside is almost stable or static
 

00:27:06.250 --> 00:27:09.300 align:start position:0%
the outside is almost stable or static
across<00:27:06.850><c> different</c><00:27:07.630><c> models</c><00:27:08.080><c> so</c><00:27:08.710><c> in</c><00:27:08.920><c> our</c><00:27:09.010><c> lager</c>

00:27:09.300 --> 00:27:09.310 align:start position:0%
across different models so in our lager
 

00:27:09.310 --> 00:27:13.440 align:start position:0%
across different models so in our lager
module<00:27:09.880><c> this</c><00:27:10.480><c> URL</c><00:27:10.929><c> is</c><00:27:11.310><c> implementation</c><00:27:12.310><c> detail</c>

00:27:13.440 --> 00:27:13.450 align:start position:0%
module this URL is implementation detail
 

00:27:13.450 --> 00:27:15.299 align:start position:0%
module this URL is implementation detail
modules<00:27:13.990><c> don't</c><00:27:14.380><c> need</c><00:27:14.590><c> to</c><00:27:14.740><c> know</c><00:27:14.860><c> anything</c>

00:27:15.299 --> 00:27:15.309 align:start position:0%
modules don't need to know anything
 

00:27:15.309 --> 00:27:17.580 align:start position:0%
modules don't need to know anything
about<00:27:15.399><c> this</c><00:27:15.730><c> they</c><00:27:16.059><c> only</c><00:27:16.240><c> need</c><00:27:16.630><c> to</c><00:27:16.659><c> call</c><00:27:17.019><c> the</c>

00:27:17.580 --> 00:27:17.590 align:start position:0%
about this they only need to call the
 

00:27:17.590 --> 00:27:20.129 align:start position:0%
about this they only need to call the
log<00:27:17.799><c> function</c><00:27:18.070><c> so</c><00:27:18.940><c> we</c><00:27:19.090><c> export</c><00:27:19.480><c> these</c><00:27:19.630><c> make</c><00:27:20.110><c> it</c>

00:27:20.129 --> 00:27:20.139 align:start position:0%
log function so we export these make it
 

00:27:20.139 --> 00:27:23.490 align:start position:0%
log function so we export these make it
public<00:27:20.740><c> but</c><00:27:21.190><c> keep</c><00:27:21.399><c> the</c><00:27:21.549><c> URL</c><00:27:21.970><c> private</c><00:27:22.630><c> so</c><00:27:23.230><c> I'm</c>

00:27:23.490 --> 00:27:23.500 align:start position:0%
public but keep the URL private so I'm
 

00:27:23.500 --> 00:27:26.310 align:start position:0%
public but keep the URL private so I'm
gonna<00:27:23.649><c> delete</c><00:27:23.980><c> this</c><00:27:24.519><c> last</c><00:27:24.820><c> line</c><00:27:25.139><c> okay</c><00:27:26.139><c> so</c>

00:27:26.310 --> 00:27:26.320 align:start position:0%
gonna delete this last line okay so
 

00:27:26.320 --> 00:27:28.919 align:start position:0%
gonna delete this last line okay so
we're<00:27:26.889><c> done</c><00:27:27.070><c> with</c><00:27:27.279><c> our</c><00:27:27.309><c> logger</c><00:27:27.580><c> module</c><00:27:28.120><c> now</c><00:27:28.870><c> we</c>

00:27:28.919 --> 00:27:28.929 align:start position:0%
we're done with our logger module now we
 

00:27:28.929 --> 00:27:30.990 align:start position:0%
we're done with our logger module now we
need<00:27:29.200><c> to</c><00:27:29.350><c> load</c><00:27:29.500><c> this</c><00:27:29.679><c> module</c><00:27:30.190><c> and</c><00:27:30.370><c> use</c><00:27:30.820><c> it</c>

00:27:30.990 --> 00:27:31.000 align:start position:0%
need to load this module and use it
 

00:27:31.000 --> 00:27:38.960 align:start position:0%
need to load this module and use it
inside<00:27:31.809><c> app</c><00:27:32.429><c> j/s</c>

00:27:38.960 --> 00:27:38.970 align:start position:0%
 
 

00:27:38.970 --> 00:27:41.840 align:start position:0%
 
to<00:27:39.780><c> load</c><00:27:39.960><c> the</c><00:27:40.080><c> module</c><00:27:40.260><c> we</c><00:27:41.130><c> use</c><00:27:41.310><c> the</c><00:27:41.490><c> require</c>

00:27:41.840 --> 00:27:41.850 align:start position:0%
to load the module we use the require
 

00:27:41.850 --> 00:27:44.510 align:start position:0%
to load the module we use the require
function<00:27:42.440><c> this</c><00:27:43.440><c> is</c><00:27:43.620><c> one</c><00:27:43.740><c> of</c><00:27:43.830><c> the</c><00:27:43.920><c> functions</c><00:27:44.340><c> in</c>

00:27:44.510 --> 00:27:44.520 align:start position:0%
function this is one of the functions in
 

00:27:44.520 --> 00:27:46.940 align:start position:0%
function this is one of the functions in
node<00:27:44.730><c> we</c><00:27:45.030><c> don't</c><00:27:45.210><c> have</c><00:27:45.390><c> this</c><00:27:45.540><c> in</c><00:27:45.780><c> browsers</c><00:27:46.260><c> this</c>

00:27:46.940 --> 00:27:46.950 align:start position:0%
node we don't have this in browsers this
 

00:27:46.950 --> 00:27:49.340 align:start position:0%
node we don't have this in browsers this
function<00:27:47.370><c> takes</c><00:27:47.700><c> one</c><00:27:47.970><c> argument</c><00:27:48.300><c> and</c><00:27:48.930><c> that's</c>

00:27:49.340 --> 00:27:49.350 align:start position:0%
function takes one argument and that's
 

00:27:49.350 --> 00:27:52.040 align:start position:0%
function takes one argument and that's
the<00:27:49.470><c> name</c><00:27:49.710><c> or</c><00:27:49.950><c> path</c><00:27:50.610><c> of</c><00:27:50.910><c> the</c><00:27:51.150><c> target</c><00:27:51.540><c> module</c><00:27:51.720><c> we</c>

00:27:52.040 --> 00:27:52.050 align:start position:0%
the name or path of the target module we
 

00:27:52.050 --> 00:27:55.160 align:start position:0%
the name or path of the target module we
want<00:27:52.230><c> to</c><00:27:52.290><c> load</c><00:27:52.470><c> so</c><00:27:53.340><c> here</c><00:27:54.330><c> we</c><00:27:54.420><c> want</c><00:27:54.570><c> to</c><00:27:54.600><c> load</c><00:27:54.810><c> the</c>

00:27:55.160 --> 00:27:55.170 align:start position:0%
want to load so here we want to load the
 

00:27:55.170 --> 00:27:58.370 align:start position:0%
want to load so here we want to load the
logger<00:27:55.380><c> module</c><00:27:55.920><c> now</c><00:27:56.850><c> you</c><00:27:56.910><c> can</c><00:27:57.090><c> see</c><00:27:57.270><c> both</c><00:27:57.540><c> the</c>

00:27:58.370 --> 00:27:58.380 align:start position:0%
logger module now you can see both the
 

00:27:58.380 --> 00:28:00.380 align:start position:0%
logger module now you can see both the
app<00:27:58.560><c> module</c><00:27:58.860><c> and</c><00:27:59.190><c> longer</c><00:27:59.580><c> module</c><00:27:59.970><c> are</c><00:28:00.150><c> in</c><00:28:00.300><c> the</c>

00:28:00.380 --> 00:28:00.390 align:start position:0%
app module and longer module are in the
 

00:28:00.390 --> 00:28:05.660 align:start position:0%
app module and longer module are in the
same<00:28:00.690><c> folder</c><00:28:01.220><c> so</c><00:28:02.840><c> we</c><00:28:03.840><c> use</c><00:28:04.020><c> period</c><00:28:04.770><c> slash</c><00:28:05.370><c> to</c>

00:28:05.660 --> 00:28:05.670 align:start position:0%
same folder so we use period slash to
 

00:28:05.670 --> 00:28:08.390 align:start position:0%
same folder so we use period slash to
indicate<00:28:06.240><c> the</c><00:28:06.720><c> current</c><00:28:07.050><c> folder</c><00:28:07.260><c> and</c><00:28:07.620><c> then</c><00:28:08.280><c> we</c>

00:28:08.390 --> 00:28:08.400 align:start position:0%
indicate the current folder and then we
 

00:28:08.400 --> 00:28:10.070 align:start position:0%
indicate the current folder and then we
add<00:28:08.550><c> the</c><00:28:08.730><c> name</c><00:28:08.880><c> of</c><00:28:08.970><c> our</c><00:28:09.060><c> module</c><00:28:09.450><c> that</c><00:28:09.930><c> is</c>

00:28:10.070 --> 00:28:10.080 align:start position:0%
add the name of our module that is
 

00:28:10.080 --> 00:28:13.940 align:start position:0%
add the name of our module that is
logger<00:28:10.580><c> ojs</c><00:28:11.580><c> or</c><00:28:12.480><c> we</c><00:28:12.930><c> can</c><00:28:13.050><c> make</c><00:28:13.200><c> it</c><00:28:13.350><c> shorter</c><00:28:13.740><c> and</c>

00:28:13.940 --> 00:28:13.950 align:start position:0%
logger ojs or we can make it shorter and
 

00:28:13.950 --> 00:28:16.700 align:start position:0%
logger ojs or we can make it shorter and
just<00:28:14.190><c> use</c><00:28:14.400><c> logger</c><00:28:14.970><c> because</c><00:28:15.900><c> node</c><00:28:16.200><c> assumes</c>

00:28:16.700 --> 00:28:16.710 align:start position:0%
just use logger because node assumes
 

00:28:16.710 --> 00:28:18.740 align:start position:0%
just use logger because node assumes
this<00:28:17.040><c> is</c><00:28:17.220><c> a</c><00:28:17.250><c> JavaScript</c><00:28:17.910><c> file</c><00:28:18.090><c> and</c><00:28:18.510><c> it</c>

00:28:18.740 --> 00:28:18.750 align:start position:0%
this is a JavaScript file and it
 

00:28:18.750 --> 00:28:22.460 align:start position:0%
this is a JavaScript file and it
automatically<00:28:19.320><c> asked</c><00:28:19.560><c> the</c><00:28:19.980><c> GS</c><00:28:20.540><c> extension</c><00:28:21.540><c> now</c>

00:28:22.460 --> 00:28:22.470 align:start position:0%
automatically asked the GS extension now
 

00:28:22.470 --> 00:28:24.620 align:start position:0%
automatically asked the GS extension now
if<00:28:22.590><c> this</c><00:28:22.680><c> logger</c><00:28:23.010><c> was</c><00:28:23.430><c> in</c><00:28:23.670><c> a</c><00:28:23.790><c> subfolder</c><00:28:24.180><c> we</c>

00:28:24.620 --> 00:28:24.630 align:start position:0%
if this logger was in a subfolder we
 

00:28:24.630 --> 00:28:27.830 align:start position:0%
if this logger was in a subfolder we
could<00:28:24.810><c> add</c><00:28:25.200><c> that</c><00:28:25.230><c> soft</c><00:28:25.620><c> folder</c><00:28:25.890><c> here</c><00:28:26.190><c> or</c><00:28:26.940><c> if</c><00:28:27.480><c> it</c>

00:28:27.830 --> 00:28:27.840 align:start position:0%
could add that soft folder here or if it
 

00:28:27.840 --> 00:28:29.510 align:start position:0%
could add that soft folder here or if it
was<00:28:28.050><c> in</c><00:28:28.260><c> the</c><00:28:28.320><c> parent</c><00:28:28.710><c> folder</c><00:28:28.860><c> we</c><00:28:29.130><c> could</c><00:28:29.310><c> use</c>

00:28:29.510 --> 00:28:29.520 align:start position:0%
was in the parent folder we could use
 

00:28:29.520 --> 00:28:32.840 align:start position:0%
was in the parent folder we could use
dot<00:28:30.210><c> dot</c><00:28:30.510><c> slash</c><00:28:31.100><c> so</c><00:28:32.100><c> here</c><00:28:32.310><c> we</c><00:28:32.400><c> are</c><00:28:32.460><c> using</c><00:28:32.610><c> the</c>

00:28:32.840 --> 00:28:32.850 align:start position:0%
dot dot slash so here we are using the
 

00:28:32.850 --> 00:28:35.540 align:start position:0%
dot dot slash so here we are using the
relative<00:28:33.180><c> path</c><00:28:33.630><c> to</c><00:28:34.230><c> the</c><00:28:34.350><c> target</c><00:28:34.680><c> module</c><00:28:34.860><c> in</c>

00:28:35.540 --> 00:28:35.550 align:start position:0%
relative path to the target module in
 

00:28:35.550 --> 00:28:37.520 align:start position:0%
relative path to the target module in
this<00:28:35.790><c> case</c><00:28:36.000><c> that</c><00:28:36.270><c> module</c><00:28:36.780><c> is</c><00:28:36.930><c> in</c><00:28:37.200><c> the</c><00:28:37.290><c> same</c>

00:28:37.520 --> 00:28:37.530 align:start position:0%
this case that module is in the same
 

00:28:37.530 --> 00:28:41.060 align:start position:0%
this case that module is in the same
folder<00:28:38.240><c> now</c><00:28:39.240><c> this</c><00:28:40.200><c> required</c><00:28:40.680><c> function</c>

00:28:41.060 --> 00:28:41.070 align:start position:0%
folder now this required function
 

00:28:41.070 --> 00:28:43.940 align:start position:0%
folder now this required function
returns<00:28:41.520><c> the</c><00:28:41.850><c> object</c><00:28:42.660><c> that</c><00:28:42.810><c> is</c><00:28:42.930><c> exported</c><00:28:43.740><c> from</c>

00:28:43.940 --> 00:28:43.950 align:start position:0%
returns the object that is exported from
 

00:28:43.950 --> 00:28:45.790 align:start position:0%
returns the object that is exported from
this<00:28:44.220><c> target</c><00:28:44.730><c> module</c>

00:28:45.790 --> 00:28:45.800 align:start position:0%
this target module
 

00:28:45.800 --> 00:28:49.910 align:start position:0%
this target module
so<00:28:46.800><c> this</c><00:28:47.130><c> exports</c><00:28:47.670><c> object</c><00:28:48.120><c> here</c><00:28:48.590><c> this</c><00:28:49.590><c> is</c><00:28:49.740><c> what</c>

00:28:49.910 --> 00:28:49.920 align:start position:0%
so this exports object here this is what
 

00:28:49.920 --> 00:28:51.740 align:start position:0%
so this exports object here this is what
we<00:28:50.040><c> get</c><00:28:50.220><c> when</c><00:28:50.490><c> we</c><00:28:50.970><c> call</c><00:28:51.270><c> the</c><00:28:51.420><c> require</c><00:28:51.720><c> function</c>

00:28:51.740 --> 00:28:51.750 align:start position:0%
we get when we call the require function
 

00:28:51.750 --> 00:28:55.040 align:start position:0%
we get when we call the require function
let<00:28:52.620><c> me</c><00:28:52.740><c> show</c><00:28:52.920><c> you</c><00:28:53.300><c> so</c><00:28:54.300><c> I'm</c><00:28:54.510><c> gonna</c><00:28:54.630><c> declare</c><00:28:54.990><c> a</c>

00:28:55.040 --> 00:28:55.050 align:start position:0%
let me show you so I'm gonna declare a
 

00:28:55.050 --> 00:28:58.580 align:start position:0%
let me show you so I'm gonna declare a
variable<00:28:55.850><c> call</c><00:28:56.850><c> it</c><00:28:56.970><c> lager</c><00:28:57.260><c> the</c><00:28:58.260><c> name</c><00:28:58.380><c> of</c><00:28:58.500><c> the</c>

00:28:58.580 --> 00:28:58.590 align:start position:0%
variable call it lager the name of the
 

00:28:58.590 --> 00:29:01.460 align:start position:0%
variable call it lager the name of the
module<00:28:58.740><c> and</c><00:28:59.070><c> set</c><00:29:00.000><c> it</c><00:29:00.090><c> to</c><00:29:00.210><c> the</c><00:29:00.330><c> return</c><00:29:00.990><c> value</c><00:29:01.410><c> of</c>

00:29:01.460 --> 00:29:01.470 align:start position:0%
module and set it to the return value of
 

00:29:01.470 --> 00:29:05.870 align:start position:0%
module and set it to the return value of
the<00:29:01.740><c> require</c><00:29:02.070><c> function</c><00:29:02.150><c> now</c><00:29:03.150><c> let's</c><00:29:03.420><c> log</c><00:29:04.880><c> this</c>

00:29:05.870 --> 00:29:05.880 align:start position:0%
the require function now let's log this
 

00:29:05.880 --> 00:29:12.620 align:start position:0%
the require function now let's log this
logger<00:29:06.330><c> and</c><00:29:06.980><c> see</c><00:29:07.980><c> what</c><00:29:08.370><c> we</c><00:29:08.520><c> get</c><00:29:11.150><c> so</c><00:29:12.150><c> node</c>

00:29:12.620 --> 00:29:12.630 align:start position:0%
logger and see what we get so node
 

00:29:12.630 --> 00:29:17.900 align:start position:0%
logger and see what we get so node
object<00:29:13.470><c> s</c><00:29:14.000><c> look</c><00:29:15.000><c> we</c><00:29:15.780><c> get</c><00:29:15.990><c> an</c><00:29:16.230><c> object</c><00:29:17.190><c> this</c>

00:29:17.900 --> 00:29:17.910 align:start position:0%
object s look we get an object this
 

00:29:17.910 --> 00:29:20.390 align:start position:0%
object s look we get an object this
object<00:29:18.150><c> has</c><00:29:18.570><c> a</c><00:29:18.840><c> single</c><00:29:19.530><c> method</c><00:29:19.740><c> called</c><00:29:20.130><c> log</c>

00:29:20.390 --> 00:29:20.400 align:start position:0%
object has a single method called log
 

00:29:20.400 --> 00:29:24.140 align:start position:0%
object has a single method called log
can<00:29:21.360><c> see</c><00:29:21.600><c> that's</c><00:29:21.840><c> a</c><00:29:22.080><c> function</c><00:29:22.610><c> so</c><00:29:23.610><c> we</c><00:29:23.760><c> can</c><00:29:23.880><c> call</c>

00:29:24.140 --> 00:29:24.150 align:start position:0%
can see that's a function so we can call
 

00:29:24.150 --> 00:29:27.220 align:start position:0%
can see that's a function so we can call
this<00:29:24.330><c> function</c><00:29:24.570><c> or</c><00:29:24.960><c> this</c><00:29:25.230><c> method</c><00:29:25.500><c> in</c><00:29:25.860><c> app</c><00:29:26.340><c> J</c><00:29:26.610><c> s</c>

00:29:27.220 --> 00:29:27.230 align:start position:0%
this function or this method in app J s
 

00:29:27.230 --> 00:29:31.400 align:start position:0%
this function or this method in app J s
so<00:29:28.230><c> back</c><00:29:28.410><c> here</c><00:29:28.440><c> we</c><00:29:28.890><c> call</c><00:29:29.070><c> logger</c><00:29:29.720><c> dot</c><00:29:30.720><c> and</c><00:29:30.990><c> look</c>

00:29:31.400 --> 00:29:31.410 align:start position:0%
so back here we call logger dot and look
 

00:29:31.410 --> 00:29:34.460 align:start position:0%
so back here we call logger dot and look
here<00:29:31.650><c> we</c><00:29:31.740><c> have</c><00:29:31.940><c> intelligence</c><00:29:32.940><c> in</c><00:29:33.150><c> BS</c><00:29:33.510><c> code</c><00:29:33.720><c> so</c>

00:29:34.460 --> 00:29:34.470 align:start position:0%
here we have intelligence in BS code so
 

00:29:34.470 --> 00:29:41.720 align:start position:0%
here we have intelligence in BS code so
we<00:29:34.590><c> call</c><00:29:34.800><c> log</c><00:29:35.220><c> and</c><00:29:35.540><c> pass</c><00:29:36.540><c> a</c><00:29:36.900><c> message</c><00:29:39.590><c> now</c><00:29:40.590><c> I</c><00:29:40.890><c> can</c>

00:29:41.720 --> 00:29:41.730 align:start position:0%
we call log and pass a message now I can
 

00:29:41.730 --> 00:29:47.060 align:start position:0%
we call log and pass a message now I can
terminal<00:29:42.830><c> let's</c><00:29:43.830><c> run</c><00:29:44.010><c> this</c><00:29:44.130><c> app</c><00:29:44.340><c> and</c><00:29:45.920><c> we</c><00:29:46.920><c> get</c>

00:29:47.060 --> 00:29:47.070 align:start position:0%
terminal let's run this app and we get
 

00:29:47.070 --> 00:29:50.540 align:start position:0%
terminal let's run this app and we get
message<00:29:47.400><c> on</c><00:29:47.550><c> the</c><00:29:47.790><c> console</c><00:29:49.070><c> so</c><00:29:50.070><c> this</c><00:29:50.250><c> is</c><00:29:50.370><c> how</c><00:29:50.490><c> we</c>

00:29:50.540 --> 00:29:50.550 align:start position:0%
message on the console so this is how we
 

00:29:50.550 --> 00:29:52.880 align:start position:0%
message on the console so this is how we
work<00:29:50.820><c> with</c><00:29:50.970><c> modules</c><00:29:51.450><c> in</c><00:29:51.630><c> node</c>

00:29:52.880 --> 00:29:52.890 align:start position:0%
work with modules in node
 

00:29:52.890 --> 00:29:55.610 align:start position:0%
work with modules in node
when<00:29:53.070><c> we</c><00:29:53.190><c> define</c><00:29:53.309><c> a</c><00:29:53.460><c> module</c><00:29:53.670><c> we</c><00:29:54.270><c> export</c><00:29:54.720><c> one</c><00:29:55.380><c> or</c>

00:29:55.610 --> 00:29:55.620 align:start position:0%
when we define a module we export one or
 

00:29:55.620 --> 00:29:58.250 align:start position:0%
when we define a module we export one or
more<00:29:55.799><c> members</c><00:29:56.010><c> and</c><00:29:56.460><c> then</c><00:29:57.299><c> to</c><00:29:57.750><c> load</c><00:29:57.960><c> the</c><00:29:58.110><c> module</c>

00:29:58.250 --> 00:29:58.260 align:start position:0%
more members and then to load the module
 

00:29:58.260 --> 00:30:02.180 align:start position:0%
more members and then to load the module
we<00:29:59.160><c> use</c><00:29:59.280><c> the</c><00:29:59.460><c> require</c><00:29:59.790><c> function</c><00:30:00.500><c> now</c><00:30:01.500><c> in</c><00:30:01.980><c> the</c>

00:30:02.180 --> 00:30:02.190 align:start position:0%
we use the require function now in the
 

00:30:02.190 --> 00:30:04.970 align:start position:0%
we use the require function now in the
recent<00:30:02.400><c> versions</c><00:30:03.059><c> of</c><00:30:03.200><c> JavaScript</c><00:30:04.200><c> we</c><00:30:04.799><c> have</c>

00:30:04.970 --> 00:30:04.980 align:start position:0%
recent versions of JavaScript we have
 

00:30:04.980 --> 00:30:08.780 align:start position:0%
recent versions of JavaScript we have
the<00:30:05.130><c> ability</c><00:30:05.700><c> to</c><00:30:06.030><c> define</c><00:30:06.840><c> constants</c><00:30:07.830><c> so</c><00:30:08.580><c> as</c><00:30:08.760><c> a</c>

00:30:08.780 --> 00:30:08.790 align:start position:0%
the ability to define constants so as a
 

00:30:08.790 --> 00:30:11.000 align:start position:0%
the ability to define constants so as a
best<00:30:09.090><c> practice</c><00:30:09.179><c> when</c><00:30:10.170><c> loading</c><00:30:10.559><c> a</c><00:30:10.650><c> module</c>

00:30:11.000 --> 00:30:11.010 align:start position:0%
best practice when loading a module
 

00:30:11.010 --> 00:30:13.690 align:start position:0%
best practice when loading a module
using<00:30:11.700><c> the</c><00:30:11.790><c> required</c><00:30:12.030><c> function</c><00:30:12.510><c> it's</c><00:30:13.110><c> better</c>

00:30:13.690 --> 00:30:13.700 align:start position:0%
using the required function it's better
 

00:30:13.700 --> 00:30:17.840 align:start position:0%
using the required function it's better
to<00:30:14.700><c> store</c><00:30:15.030><c> the</c><00:30:15.150><c> result</c><00:30:15.510><c> in</c><00:30:15.750><c> a</c><00:30:16.140><c> constant</c><00:30:16.850><c> like</c>

00:30:17.840 --> 00:30:17.850 align:start position:0%
to store the result in a constant like
 

00:30:17.850 --> 00:30:20.630 align:start position:0%
to store the result in a constant like
this<00:30:18.230><c> the</c><00:30:19.230><c> reason</c><00:30:19.410><c> for</c><00:30:19.710><c> this</c><00:30:19.860><c> is</c><00:30:19.920><c> because</c><00:30:20.429><c> we</c>

00:30:20.630 --> 00:30:20.640 align:start position:0%
this the reason for this is because we
 

00:30:20.640 --> 00:30:23.930 align:start position:0%
this the reason for this is because we
don't<00:30:20.880><c> want</c><00:30:21.120><c> to</c><00:30:21.210><c> accidentally</c><00:30:22.429><c> overwrite</c><00:30:23.429><c> the</c>

00:30:23.930 --> 00:30:23.940 align:start position:0%
don't want to accidentally overwrite the
 

00:30:23.940 --> 00:30:27.350 align:start position:0%
don't want to accidentally overwrite the
value<00:30:23.970><c> of</c><00:30:24.390><c> logger</c><00:30:24.770><c> like</c><00:30:25.770><c> this</c><00:30:25.950><c> here</c><00:30:26.250><c> if</c><00:30:26.970><c> we</c><00:30:27.150><c> set</c>

00:30:27.350 --> 00:30:27.360 align:start position:0%
value of logger like this here if we set
 

00:30:27.360 --> 00:30:30.020 align:start position:0%
value of logger like this here if we set
this<00:30:27.540><c> to</c><00:30:27.750><c> one</c><00:30:27.960><c> then</c><00:30:28.679><c> when</c><00:30:29.010><c> we</c><00:30:29.130><c> call</c><00:30:29.370><c> the</c><00:30:29.820><c> log</c>

00:30:30.020 --> 00:30:30.030 align:start position:0%
this to one then when we call the log
 

00:30:30.030 --> 00:30:31.640 align:start position:0%
this to one then when we call the log
method<00:30:30.450><c> we're</c><00:30:30.600><c> going</c><00:30:30.630><c> to</c><00:30:30.840><c> get</c><00:30:31.080><c> an</c><00:30:31.260><c> exception</c>

00:30:31.640 --> 00:30:31.650 align:start position:0%
method we're going to get an exception
 

00:30:31.650 --> 00:30:36.159 align:start position:0%
method we're going to get an exception
let<00:30:32.610><c> me</c><00:30:32.790><c> show</c><00:30:32.940><c> you</c><00:30:33.950><c> so</c><00:30:34.950><c> one</c><00:30:35.130><c> more</c><00:30:35.250><c> time</c>

00:30:36.159 --> 00:30:36.169 align:start position:0%
let me show you so one more time
 

00:30:36.169 --> 00:30:39.860 align:start position:0%
let me show you so one more time
look<00:30:37.190><c> you</c><00:30:38.190><c> got</c><00:30:38.370><c> logger</c><00:30:38.760><c> that</c><00:30:39.059><c> log</c><00:30:39.240><c> is</c><00:30:39.480><c> not</c><00:30:39.840><c> a</c>

00:30:39.860 --> 00:30:39.870 align:start position:0%
look you got logger that log is not a
 

00:30:39.870 --> 00:30:43.760 align:start position:0%
look you got logger that log is not a
function<00:30:40.880><c> now</c><00:30:41.880><c> in</c><00:30:42.120><c> contrast</c><00:30:42.720><c> if</c><00:30:43.260><c> we</c><00:30:43.290><c> define</c>

00:30:43.760 --> 00:30:43.770 align:start position:0%
function now in contrast if we define
 

00:30:43.770 --> 00:30:47.870 align:start position:0%
function now in contrast if we define
this<00:30:43.950><c> as</c><00:30:44.190><c> a</c><00:30:45.000><c> constant</c><00:30:46.370><c> now</c><00:30:47.370><c> back</c><00:30:47.669><c> in</c><00:30:47.790><c> the</c>

00:30:47.870 --> 00:30:47.880 align:start position:0%
this as a constant now back in the
 

00:30:47.880 --> 00:30:50.690 align:start position:0%
this as a constant now back in the
terminal<00:30:48.770><c> let's</c><00:30:49.770><c> run</c><00:30:49.919><c> this</c><00:30:50.040><c> program</c><00:30:50.130><c> one</c><00:30:50.549><c> more</c>

00:30:50.690 --> 00:30:50.700 align:start position:0%
terminal let's run this program one more
 

00:30:50.700 --> 00:30:53.780 align:start position:0%
terminal let's run this program one more
time<00:30:51.740><c> look</c><00:30:52.740><c> we</c><00:30:52.980><c> got</c><00:30:53.100><c> a</c><00:30:53.130><c> different</c><00:30:53.400><c> kind</c><00:30:53.580><c> of</c>

00:30:53.780 --> 00:30:53.790 align:start position:0%
time look we got a different kind of
 

00:30:53.790 --> 00:30:56.810 align:start position:0%
time look we got a different kind of
error<00:30:54.169><c> assignment</c><00:30:55.169><c> two</c><00:30:55.679><c> constant</c><00:30:56.309><c> variable</c>

00:30:56.810 --> 00:30:56.820 align:start position:0%
error assignment two constant variable
 

00:30:56.820 --> 00:30:59.480 align:start position:0%
error assignment two constant variable
now<00:30:57.600><c> there</c><00:30:57.809><c> are</c><00:30:57.870><c> tools</c><00:30:58.169><c> out</c><00:30:58.380><c> there</c><00:30:58.440><c> that</c><00:30:58.919><c> check</c>

00:30:59.480 --> 00:30:59.490 align:start position:0%
now there are tools out there that check
 

00:30:59.490 --> 00:31:01.610 align:start position:0%
now there are tools out there that check
our<00:30:59.669><c> JavaScript</c><00:31:00.270><c> code</c><00:31:00.480><c> for</c><00:31:00.870><c> errors</c><00:31:01.230><c> like</c><00:31:01.410><c> that</c>

00:31:01.610 --> 00:31:01.620 align:start position:0%
our JavaScript code for errors like that
 

00:31:01.620 --> 00:31:04.640 align:start position:0%
our JavaScript code for errors like that
so<00:31:02.250><c> by</c><00:31:02.400><c> using</c><00:31:02.549><c> this</c><00:31:02.790><c> constructs</c><00:31:03.419><c> properly</c><00:31:04.080><c> we</c>

00:31:04.640 --> 00:31:04.650 align:start position:0%
so by using this constructs properly we
 

00:31:04.650 --> 00:31:06.409 align:start position:0%
so by using this constructs properly we
can<00:31:04.679><c> prevent</c><00:31:05.220><c> these</c><00:31:05.400><c> errors</c><00:31:05.760><c> from</c><00:31:05.910><c> happening</c>

00:31:06.409 --> 00:31:06.419 align:start position:0%
can prevent these errors from happening
 

00:31:06.419 --> 00:31:07.010 align:start position:0%
can prevent these errors from happening
at<00:31:06.570><c> runtime</c>

00:31:07.010 --> 00:31:07.020 align:start position:0%
at runtime
 

00:31:07.020 --> 00:31:09.770 align:start position:0%
at runtime
so<00:31:07.890><c> one</c><00:31:08.040><c> of</c><00:31:08.070><c> these</c><00:31:08.250><c> popular</c><00:31:08.730><c> tools</c><00:31:08.970><c> is</c><00:31:09.179><c> J's</c>

00:31:09.770 --> 00:31:09.780 align:start position:0%
so one of these popular tools is J's
 

00:31:09.780 --> 00:31:11.720 align:start position:0%
so one of these popular tools is J's
hint<00:31:10.169><c> if</c><00:31:10.770><c> you</c><00:31:10.980><c> have</c><00:31:11.070><c> never</c><00:31:11.250><c> used</c><00:31:11.460><c> it</c><00:31:11.610><c> before</c>

00:31:11.720 --> 00:31:11.730 align:start position:0%
hint if you have never used it before
 

00:31:11.730 --> 00:31:13.490 align:start position:0%
hint if you have never used it before
don't<00:31:12.240><c> worry</c><00:31:12.510><c> I'm</c><00:31:12.660><c> just</c><00:31:12.720><c> gonna</c><00:31:12.990><c> show</c><00:31:13.200><c> you</c><00:31:13.260><c> a</c>

00:31:13.490 --> 00:31:13.500 align:start position:0%
don't worry I'm just gonna show you a
 

00:31:13.500 --> 00:31:17.200 align:start position:0%
don't worry I'm just gonna show you a
quick<00:31:13.710><c> demo</c><00:31:14.450><c> so</c><00:31:15.450><c> if</c><00:31:15.540><c> you're</c><00:31:15.660><c> on</c><00:31:15.780><c> J's</c><00:31:16.169><c> hint</c><00:31:16.530><c> 1/2</c>

00:31:17.200 --> 00:31:17.210 align:start position:0%
quick demo so if you're on J's hint 1/2
 

00:31:17.210 --> 00:31:21.230 align:start position:0%
quick demo so if you're on J's hint 1/2
Jas<00:31:18.919><c> we</c><00:31:19.919><c> get</c><00:31:20.070><c> this</c><00:31:20.160><c> error</c><00:31:20.400><c> attempting</c><00:31:21.059><c> to</c>

00:31:21.230 --> 00:31:21.240 align:start position:0%
Jas we get this error attempting to
 

00:31:21.240 --> 00:31:24.110 align:start position:0%
Jas we get this error attempting to
overwrite<00:31:21.809><c> logger</c><00:31:22.110><c> which</c><00:31:22.740><c> is</c><00:31:22.890><c> a</c><00:31:22.919><c> constant</c><00:31:23.460><c> so</c>

00:31:24.110 --> 00:31:24.120 align:start position:0%
overwrite logger which is a constant so
 

00:31:24.120 --> 00:31:26.299 align:start position:0%
overwrite logger which is a constant so
with<00:31:24.270><c> tools</c><00:31:24.510><c> like</c><00:31:24.600><c> jeaious</c><00:31:24.990><c> hint</c><00:31:25.260><c> we</c><00:31:25.799><c> can</c><00:31:25.980><c> scan</c>

00:31:26.299 --> 00:31:26.309 align:start position:0%
with tools like jeaious hint we can scan
 

00:31:26.309 --> 00:31:28.700 align:start position:0%
with tools like jeaious hint we can scan
all<00:31:26.490><c> our</c><00:31:26.820><c> JavaScript</c><00:31:27.480><c> code</c><00:31:27.690><c> for</c><00:31:28.169><c> errors</c><00:31:28.559><c> like</c>

00:31:28.700 --> 00:31:28.710 align:start position:0%
all our JavaScript code for errors like
 

00:31:28.710 --> 00:31:31.400 align:start position:0%
all our JavaScript code for errors like
that<00:31:28.980><c> so</c><00:31:29.760><c> that's</c><00:31:29.940><c> the</c><00:31:30.059><c> benefit</c><00:31:30.600><c> of</c><00:31:30.660><c> using</c><00:31:31.049><c> a</c>

00:31:31.400 --> 00:31:31.410 align:start position:0%
that so that's the benefit of using a
 

00:31:31.410 --> 00:31:33.590 align:start position:0%
that so that's the benefit of using a
constant<00:31:31.890><c> as</c><00:31:32.250><c> opposed</c><00:31:32.640><c> to</c><00:31:32.700><c> a</c><00:31:32.790><c> variable</c><00:31:33.179><c> here</c>

00:31:33.590 --> 00:31:33.600 align:start position:0%
constant as opposed to a variable here
 

00:31:33.600 --> 00:31:36.680 align:start position:0%
constant as opposed to a variable here
if<00:31:34.200><c> you</c><00:31:34.500><c> accidentally</c><00:31:35.070><c> reset</c><00:31:35.970><c> this</c><00:31:36.120><c> object</c>

00:31:36.680 --> 00:31:36.690 align:start position:0%
if you accidentally reset this object
 

00:31:36.690 --> 00:31:39.049 align:start position:0%
if you accidentally reset this object
then<00:31:37.140><c> we're</c><00:31:37.290><c> gonna</c><00:31:37.410><c> get</c><00:31:37.650><c> an</c><00:31:37.799><c> error</c><00:31:38.100><c> at</c><00:31:38.370><c> compile</c>

00:31:39.049 --> 00:31:39.059 align:start position:0%
then we're gonna get an error at compile
 

00:31:39.059 --> 00:31:40.490 align:start position:0%
then we're gonna get an error at compile
time<00:31:39.090><c> instead</c><00:31:39.840><c> of</c><00:31:39.900><c> at</c><00:31:40.049><c> run</c><00:31:40.230><c> time</c>

00:31:40.490 --> 00:31:40.500 align:start position:0%
time instead of at run time
 

00:31:40.500 --> 00:31:43.940 align:start position:0%
time instead of at run time
okay<00:31:41.010><c> and</c><00:31:41.960><c> one</c><00:31:42.960><c> last</c><00:31:42.990><c> thing</c><00:31:43.260><c> before</c><00:31:43.440><c> we</c><00:31:43.650><c> finish</c>

00:31:43.940 --> 00:31:43.950 align:start position:0%
okay and one last thing before we finish
 

00:31:43.950 --> 00:31:46.640 align:start position:0%
okay and one last thing before we finish
this<00:31:44.070><c> lecture</c><00:31:44.750><c> sometimes</c><00:31:45.750><c> instead</c><00:31:46.590><c> of</c>

00:31:46.640 --> 00:31:46.650 align:start position:0%
this lecture sometimes instead of
 

00:31:46.650 --> 00:31:49.760 align:start position:0%
this lecture sometimes instead of
exporting<00:31:47.250><c> an</c><00:31:47.610><c> object</c><00:31:48.419><c> from</c><00:31:48.570><c> a</c><00:31:48.720><c> module</c><00:31:49.140><c> you</c>

00:31:49.760 --> 00:31:49.770 align:start position:0%
exporting an object from a module you
 

00:31:49.770 --> 00:31:51.380 align:start position:0%
exporting an object from a module you
may<00:31:49.890><c> want</c><00:31:50.040><c> to</c><00:31:50.130><c> export</c><00:31:50.490><c> only</c><00:31:50.910><c> a</c><00:31:50.940><c> single</c>

00:31:51.380 --> 00:31:51.390 align:start position:0%
may want to export only a single
 

00:31:51.390 --> 00:31:54.740 align:start position:0%
may want to export only a single
function<00:31:52.020><c> for</c><00:31:52.860><c> example</c><00:31:53.330><c> here</c><00:31:54.330><c> in</c><00:31:54.390><c> our</c><00:31:54.510><c> lager</c>

00:31:54.740 --> 00:31:54.750 align:start position:0%
function for example here in our lager
 

00:31:54.750 --> 00:31:56.870 align:start position:0%
function for example here in our lager
module<00:31:55.290><c> we</c><00:31:55.620><c> don't</c><00:31:55.799><c> necessarily</c><00:31:55.950><c> need</c><00:31:56.640><c> an</c>

00:31:56.870 --> 00:31:56.880 align:start position:0%
module we don't necessarily need an
 

00:31:56.880 --> 00:31:59.299 align:start position:0%
module we don't necessarily need an
object<00:31:57.570><c> because</c><00:31:57.720><c> we</c><00:31:57.960><c> have</c><00:31:58.169><c> a</c><00:31:58.440><c> single</c><00:31:59.100><c> method</c>

00:31:59.299 --> 00:31:59.309 align:start position:0%
object because we have a single method
 

00:31:59.309 --> 00:32:01.490 align:start position:0%
object because we have a single method
an<00:31:59.610><c> object</c><00:32:00.450><c> would</c><00:32:00.510><c> be</c><00:32:00.570><c> useful</c><00:32:01.050><c> if</c><00:32:01.169><c> we</c><00:32:01.320><c> had</c>

00:32:01.490 --> 00:32:01.500 align:start position:0%
an object would be useful if we had
 

00:32:01.500 --> 00:32:05.060 align:start position:0%
an object would be useful if we had
multiple<00:32:02.340><c> methods</c><00:32:02.760><c> or</c><00:32:03.020><c> properties</c><00:32:04.020><c> here</c><00:32:04.230><c> but</c>

00:32:05.060 --> 00:32:05.070 align:start position:0%
multiple methods or properties here but
 

00:32:05.070 --> 00:32:06.649 align:start position:0%
multiple methods or properties here but
in<00:32:05.220><c> this</c><00:32:05.340><c> case</c><00:32:05.520><c> instead</c><00:32:06.179><c> of</c>

00:32:06.649 --> 00:32:06.659 align:start position:0%
in this case instead of
 

00:32:06.659 --> 00:32:08.719 align:start position:0%
in this case instead of
sporting<00:32:07.019><c> an</c><00:32:07.109><c> object</c><00:32:07.559><c> we</c><00:32:08.099><c> can</c><00:32:08.220><c> export</c><00:32:08.549><c> a</c>

00:32:08.719 --> 00:32:08.729 align:start position:0%
sporting an object we can export a
 

00:32:08.729 --> 00:32:10.999 align:start position:0%
sporting an object we can export a
single<00:32:09.239><c> function</c><00:32:09.419><c> so</c><00:32:10.109><c> we</c><00:32:10.259><c> can</c><00:32:10.289><c> reset</c><00:32:10.830><c> this</c>

00:32:10.999 --> 00:32:11.009 align:start position:0%
single function so we can reset this
 

00:32:11.009 --> 00:32:16.279 align:start position:0%
single function so we can reset this
exports<00:32:11.700><c> to</c><00:32:13.429><c> the</c><00:32:14.429><c> log</c><00:32:14.669><c> function</c><00:32:14.940><c> so</c><00:32:15.809><c> initially</c>

00:32:16.279 --> 00:32:16.289 align:start position:0%
exports to the log function so initially
 

00:32:16.289 --> 00:32:19.070 align:start position:0%
exports to the log function so initially
it<00:32:16.379><c> was</c><00:32:16.559><c> an</c><00:32:16.799><c> empty</c><00:32:17.190><c> object</c><00:32:17.489><c> but</c><00:32:18.389><c> we</c><00:32:18.509><c> reset</c><00:32:18.929><c> it</c>

00:32:19.070 --> 00:32:19.080 align:start position:0%
it was an empty object but we reset it
 

00:32:19.080 --> 00:32:23.810 align:start position:0%
it was an empty object but we reset it
to<00:32:19.159><c> just</c><00:32:20.159><c> a</c><00:32:20.249><c> function</c><00:32:21.019><c> with</c><00:32:22.019><c> that</c><00:32:22.259><c> I</c><00:32:22.590><c> can</c><00:32:23.429><c> op</c><00:32:23.609><c> j</c>

00:32:23.810 --> 00:32:23.820 align:start position:0%
to just a function with that I can op j
 

00:32:23.820 --> 00:32:27.200 align:start position:0%
to just a function with that I can op j
s<00:32:24.349><c> the</c><00:32:25.349><c> logger</c><00:32:25.590><c> is</c><00:32:25.769><c> no</c><00:32:26.009><c> longer</c><00:32:26.220><c> an</c><00:32:26.399><c> object</c><00:32:26.879><c> it's</c>

00:32:27.200 --> 00:32:27.210 align:start position:0%
s the logger is no longer an object it's
 

00:32:27.210 --> 00:32:29.379 align:start position:0%
s the logger is no longer an object it's
a<00:32:27.359><c> function</c><00:32:27.779><c> that</c><00:32:27.809><c> we</c><00:32:28.049><c> can</c><00:32:28.229><c> call</c><00:32:28.499><c> directly</c>

00:32:29.379 --> 00:32:29.389 align:start position:0%
a function that we can call directly
 

00:32:29.389 --> 00:32:35.509 align:start position:0%
a function that we can call directly
like<00:32:30.389><c> this</c><00:32:31.549><c> so</c><00:32:32.549><c> logger</c><00:32:33.830><c> we</c><00:32:34.830><c> call</c><00:32:35.070><c> it</c><00:32:35.190><c> and</c><00:32:35.369><c> give</c>

00:32:35.509 --> 00:32:35.519 align:start position:0%
like this so logger we call it and give
 

00:32:35.519 --> 00:32:37.549 align:start position:0%
like this so logger we call it and give
it<00:32:35.609><c> an</c><00:32:35.700><c> argument</c><00:32:35.899><c> now</c><00:32:36.899><c> a</c><00:32:36.929><c> better</c><00:32:37.320><c> name</c><00:32:37.529><c> for</c>

00:32:37.549 --> 00:32:37.559 align:start position:0%
it an argument now a better name for
 

00:32:37.559 --> 00:32:40.580 align:start position:0%
it an argument now a better name for
this<00:32:37.859><c> function</c><00:32:38.279><c> is</c><00:32:38.789><c> LOC</c><00:32:39.450><c> so</c><00:32:40.049><c> I'm</c><00:32:40.139><c> gonna</c><00:32:40.259><c> press</c>

00:32:40.580 --> 00:32:40.590 align:start position:0%
this function is LOC so I'm gonna press
 

00:32:40.590 --> 00:32:45.109 align:start position:0%
this function is LOC so I'm gonna press
f2<00:32:41.190><c> to</c><00:32:41.220><c> rename</c><00:32:41.549><c> these</c><00:32:42.080><c> log</c><00:32:43.080><c> like</c><00:32:43.830><c> this</c><00:32:44.119><c> now</c>

00:32:45.109 --> 00:32:45.119 align:start position:0%
f2 to rename these log like this now
 

00:32:45.119 --> 00:32:49.759 align:start position:0%
f2 to rename these log like this now
back<00:32:45.809><c> in</c><00:32:45.960><c> terminal</c><00:32:46.909><c> let's</c><00:32:47.909><c> run</c><00:32:48.090><c> node</c><00:32:48.330><c> FJ</c><00:32:49.229><c> s</c><00:32:49.409><c> and</c>

00:32:49.759 --> 00:32:49.769 align:start position:0%
back in terminal let's run node FJ s and
 

00:32:49.769 --> 00:32:53.570 align:start position:0%
back in terminal let's run node FJ s and
we<00:32:50.700><c> get</c><00:32:50.820><c> the</c><00:32:50.940><c> same</c><00:32:51.149><c> result</c><00:32:51.539><c> so</c><00:32:52.399><c> in</c><00:32:53.399><c> your</c>

00:32:53.570 --> 00:32:53.580 align:start position:0%
we get the same result so in your
 

00:32:53.580 --> 00:32:55.969 align:start position:0%
we get the same result so in your
modules<00:32:54.029><c> you</c><00:32:54.570><c> can</c><00:32:54.599><c> export</c><00:32:55.109><c> a</c><00:32:55.289><c> single</c><00:32:55.649><c> function</c>

00:32:55.969 --> 00:32:55.979 align:start position:0%
modules you can export a single function
 

00:32:55.979 --> 00:33:02.640 align:start position:0%
modules you can export a single function
or<00:32:56.369><c> an</c><00:32:56.879><c> object</c>

00:33:02.640 --> 00:33:02.650 align:start position:0%
 
 

00:33:02.650 --> 00:33:05.010 align:start position:0%
 
so<00:33:03.250><c> now</c><00:33:03.400><c> you</c><00:33:03.460><c> know</c><00:33:03.700><c> the</c><00:33:04.210><c> variables</c><00:33:04.809><c> and</c>

00:33:05.010 --> 00:33:05.020 align:start position:0%
so now you know the variables and
 

00:33:05.020 --> 00:33:07.380 align:start position:0%
so now you know the variables and
functions<00:33:05.320><c> we</c><00:33:05.740><c> define</c><00:33:06.160><c> in</c><00:33:06.370><c> a</c><00:33:06.460><c> module</c><00:33:06.880><c> are</c>

00:33:07.380 --> 00:33:07.390 align:start position:0%
functions we define in a module are
 

00:33:07.390 --> 00:33:09.840 align:start position:0%
functions we define in a module are
scoped<00:33:08.110><c> to</c><00:33:08.350><c> that</c><00:33:08.500><c> module</c><00:33:08.740><c> they're</c><00:33:09.280><c> private</c>

00:33:09.840 --> 00:33:09.850 align:start position:0%
scoped to that module they're private
 

00:33:09.850 --> 00:33:12.480 align:start position:0%
scoped to that module they're private
and<00:33:10.000><c> not</c><00:33:10.330><c> visible</c><00:33:10.600><c> from</c><00:33:10.990><c> the</c><00:33:11.080><c> outside</c><00:33:11.370><c> but</c><00:33:12.370><c> you</c>

00:33:12.480 --> 00:33:12.490 align:start position:0%
and not visible from the outside but you
 

00:33:12.490 --> 00:33:15.600 align:start position:0%
and not visible from the outside but you
might<00:33:12.610><c> be</c><00:33:12.640><c> wondering</c><00:33:12.790><c> how</c><00:33:13.390><c> node</c><00:33:14.200><c> does</c><00:33:14.620><c> this</c><00:33:14.890><c> so</c>

00:33:15.600 --> 00:33:15.610 align:start position:0%
might be wondering how node does this so
 

00:33:15.610 --> 00:33:17.850 align:start position:0%
might be wondering how node does this so
let<00:33:15.730><c> me</c><00:33:15.850><c> show</c><00:33:16.000><c> you</c><00:33:16.059><c> on</c><00:33:16.330><c> the</c><00:33:17.110><c> very</c><00:33:17.350><c> first</c><00:33:17.620><c> line</c>

00:33:17.850 --> 00:33:17.860 align:start position:0%
let me show you on the very first line
 

00:33:17.860 --> 00:33:20.400 align:start position:0%
let me show you on the very first line
of<00:33:17.920><c> the</c><00:33:18.460><c> logger</c><00:33:18.730><c> jeaious</c><00:33:19.270><c> module</c><00:33:19.780><c> I'm</c><00:33:20.140><c> going</c>

00:33:20.400 --> 00:33:20.410 align:start position:0%
of the logger jeaious module I'm going
 

00:33:20.410 --> 00:33:23.580 align:start position:0%
of the logger jeaious module I'm going
to<00:33:20.470><c> create</c><00:33:20.650><c> a</c><00:33:20.860><c> syntactical</c><00:33:21.760><c> error</c><00:33:21.910><c> so</c><00:33:22.590><c> define</c>

00:33:23.580 --> 00:33:23.590 align:start position:0%
to create a syntactical error so define
 

00:33:23.590 --> 00:33:26.940 align:start position:0%
to create a syntactical error so define
a<00:33:23.620><c> variable</c><00:33:23.920><c> X</c><00:33:24.250><c> and</c><00:33:24.720><c> set</c><00:33:25.720><c> it</c><00:33:25.840><c> to</c><00:33:26.020><c> nothing</c><00:33:26.559><c> like</c>

00:33:26.940 --> 00:33:26.950 align:start position:0%
a variable X and set it to nothing like
 

00:33:26.950 --> 00:33:29.820 align:start position:0%
a variable X and set it to nothing like
this<00:33:27.130><c> so</c><00:33:27.850><c> make</c><00:33:28.059><c> sure</c><00:33:28.110><c> to</c><00:33:29.110><c> write</c><00:33:29.260><c> this</c><00:33:29.410><c> code</c><00:33:29.680><c> on</c>

00:33:29.820 --> 00:33:29.830 align:start position:0%
this so make sure to write this code on
 

00:33:29.830 --> 00:33:31.650 align:start position:0%
this so make sure to write this code on
the<00:33:30.010><c> very</c><00:33:30.309><c> first</c><00:33:30.580><c> line</c><00:33:30.790><c> in</c><00:33:31.000><c> other</c><00:33:31.210><c> words</c><00:33:31.300><c> if</c>

00:33:31.650 --> 00:33:31.660 align:start position:0%
the very first line in other words if
 

00:33:31.660 --> 00:33:34.260 align:start position:0%
the very first line in other words if
you<00:33:32.080><c> have</c><00:33:32.290><c> a</c><00:33:32.500><c> line</c><00:33:32.890><c> break</c><00:33:33.130><c> here</c><00:33:33.160><c> and</c><00:33:33.640><c> do</c><00:33:34.120><c> this</c>

00:33:34.260 --> 00:33:34.270 align:start position:0%
you have a line break here and do this
 

00:33:34.270 --> 00:33:36.150 align:start position:0%
you have a line break here and do this
on<00:33:34.390><c> a</c><00:33:34.450><c> second</c><00:33:34.840><c> line</c><00:33:34.960><c> you're</c><00:33:35.410><c> not</c><00:33:35.620><c> going</c><00:33:35.860><c> to</c><00:33:35.980><c> see</c>

00:33:36.150 --> 00:33:36.160 align:start position:0%
on a second line you're not going to see
 

00:33:36.160 --> 00:33:38.910 align:start position:0%
on a second line you're not going to see
what<00:33:36.340><c> I'm</c><00:33:36.429><c> gonna</c><00:33:36.580><c> show</c><00:33:36.820><c> you</c><00:33:36.880><c> now</c><00:33:37.150><c> so</c><00:33:37.900><c> put</c><00:33:38.830><c> this</c>

00:33:38.910 --> 00:33:38.920 align:start position:0%
what I'm gonna show you now so put this
 

00:33:38.920 --> 00:33:41.580 align:start position:0%
what I'm gonna show you now so put this
back<00:33:39.160><c> on</c><00:33:39.340><c> the</c><00:33:39.370><c> first</c><00:33:39.610><c> line</c><00:33:39.880><c> here</c><00:33:40.230><c> we</c><00:33:41.230><c> have</c><00:33:41.410><c> a</c>

00:33:41.580 --> 00:33:41.590 align:start position:0%
back on the first line here we have a
 

00:33:41.590 --> 00:33:44.100 align:start position:0%
back on the first line here we have a
syntactical<00:33:42.220><c> error</c><00:33:42.490><c> now</c><00:33:43.330><c> back</c><00:33:43.870><c> in</c><00:33:44.020><c> the</c>

00:33:44.100 --> 00:33:44.110 align:start position:0%
syntactical error now back in the
 

00:33:44.110 --> 00:33:48.670 align:start position:0%
syntactical error now back in the
terminal<00:33:45.120><c> let's</c><00:33:46.120><c> run</c><00:33:46.300><c> the</c><00:33:46.420><c> application</c><00:33:46.540><c> again</c>

00:33:48.670 --> 00:33:48.680 align:start position:0%
terminal let's run the application again
 

00:33:48.680 --> 00:33:50.710 align:start position:0%
terminal let's run the application again
okay<00:33:49.040><c> we</c><00:33:49.190><c> got</c><00:33:49.370><c> on</c>

00:33:50.710 --> 00:33:50.720 align:start position:0%
okay we got on
 

00:33:50.720 --> 00:33:53.740 align:start position:0%
okay we got on
touken<00:33:51.159><c> semicolon</c><00:33:52.159><c> right</c><00:33:52.400><c> but</c><00:33:53.150><c> look</c><00:33:53.330><c> above</c>

00:33:53.740 --> 00:33:53.750 align:start position:0%
touken semicolon right but look above
 

00:33:53.750 --> 00:33:56.710 align:start position:0%
touken semicolon right but look above
this<00:33:53.990><c> line</c><00:33:54.580><c> you</c><00:33:55.580><c> see</c><00:33:55.789><c> this</c><00:33:56.000><c> function</c>

00:33:56.710 --> 00:33:56.720 align:start position:0%
this line you see this function
 

00:33:56.720 --> 00:34:00.190 align:start position:0%
this line you see this function
declaration<00:33:57.580><c> so</c><00:33:58.580><c> this</c><00:33:58.730><c> function</c><00:33:59.090><c> has</c><00:33:59.120><c> a</c><00:33:59.600><c> few</c>

00:34:00.190 --> 00:34:00.200 align:start position:0%
declaration so this function has a few
 

00:34:00.200 --> 00:34:05.289 align:start position:0%
declaration so this function has a few
parameters<00:34:00.909><c> exports</c><00:34:01.909><c> require</c><00:34:03.010><c> module</c><00:34:04.299><c> file</c>

00:34:05.289 --> 00:34:05.299 align:start position:0%
parameters exports require module file
 

00:34:05.299 --> 00:34:10.960 align:start position:0%
parameters exports require module file
name<00:34:05.510><c> and</c><00:34:06.130><c> surname</c><00:34:07.240><c> so</c><00:34:08.240><c> let</c><00:34:08.960><c> me</c><00:34:09.139><c> copy</c><00:34:09.970><c> this</c>

00:34:10.960 --> 00:34:10.970 align:start position:0%
name and surname so let me copy this
 

00:34:10.970 --> 00:34:12.800 align:start position:0%
name and surname so let me copy this
code<00:34:11.270><c> here</c>

00:34:12.800 --> 00:34:12.810 align:start position:0%
code here
 

00:34:12.810 --> 00:34:14.659 align:start position:0%
code here
now<00:34:13.200><c> basically</c><00:34:13.409><c> what</c><00:34:13.770><c> happens</c><00:34:14.220><c> under</c><00:34:14.370><c> the</c>

00:34:14.659 --> 00:34:14.669 align:start position:0%
now basically what happens under the
 

00:34:14.669 --> 00:34:17.540 align:start position:0%
now basically what happens under the
hood<00:34:14.850><c> is</c><00:34:15.030><c> that</c><00:34:15.840><c> note</c><00:34:16.080><c> does</c><00:34:16.409><c> not</c><00:34:16.650><c> execute</c><00:34:17.159><c> this</c>

00:34:17.540 --> 00:34:17.550 align:start position:0%
hood is that note does not execute this
 

00:34:17.550 --> 00:34:21.620 align:start position:0%
hood is that note does not execute this
code<00:34:17.960><c> directly</c><00:34:18.960><c> it</c><00:34:19.290><c> wraps</c><00:34:19.980><c> it</c><00:34:20.250><c> inside</c><00:34:21.120><c> of</c><00:34:21.390><c> a</c>

00:34:21.620 --> 00:34:21.630 align:start position:0%
code directly it wraps it inside of a
 

00:34:21.630 --> 00:34:23.419 align:start position:0%
code directly it wraps it inside of a
function<00:34:21.840><c> and</c><00:34:22.260><c> that's</c><00:34:22.560><c> the</c><00:34:22.679><c> function</c><00:34:22.770><c> you</c><00:34:23.250><c> saw</c>

00:34:23.419 --> 00:34:23.429 align:start position:0%
function and that's the function you saw
 

00:34:23.429 --> 00:34:26.600 align:start position:0%
function and that's the function you saw
so<00:34:24.030><c> at</c><00:34:24.300><c> runtime</c><00:34:24.720><c> our</c><00:34:25.230><c> code</c><00:34:25.710><c> is</c><00:34:26.159><c> going</c><00:34:26.400><c> to</c><00:34:26.460><c> be</c>

00:34:26.600 --> 00:34:26.610 align:start position:0%
so at runtime our code is going to be
 

00:34:26.610 --> 00:34:30.140 align:start position:0%
so at runtime our code is going to be
converted<00:34:26.880><c> to</c><00:34:27.300><c> something</c><00:34:27.810><c> like</c><00:34:27.960><c> this</c><00:34:28.820><c> so</c><00:34:29.820><c> we</c>

00:34:30.140 --> 00:34:30.150 align:start position:0%
converted to something like this so we
 

00:34:30.150 --> 00:34:33.020 align:start position:0%
converted to something like this so we
have<00:34:30.270><c> this</c><00:34:30.419><c> function</c><00:34:30.630><c> declaration</c><00:34:31.940><c> here</c><00:34:32.940><c> is</c>

00:34:33.020 --> 00:34:33.030 align:start position:0%
have this function declaration here is
 

00:34:33.030 --> 00:34:35.419 align:start position:0%
have this function declaration here is
the<00:34:33.179><c> body</c><00:34:33.390><c> of</c><00:34:33.570><c> that</c><00:34:33.659><c> function</c><00:34:34.159><c> now</c><00:34:35.159><c> for</c><00:34:35.340><c> now</c>

00:34:35.419 --> 00:34:35.429 align:start position:0%
the body of that function now for now
 

00:34:35.429 --> 00:34:39.440 align:start position:0%
the body of that function now for now
I'm<00:34:35.610><c> gonna</c><00:34:35.730><c> remove</c><00:34:36.140><c> this</c><00:34:37.140><c> error</c><00:34:37.409><c> here</c><00:34:38.330><c> so</c><00:34:39.330><c> this</c>

00:34:39.440 --> 00:34:39.450 align:start position:0%
I'm gonna remove this error here so this
 

00:34:39.450 --> 00:34:42.710 align:start position:0%
I'm gonna remove this error here so this
is<00:34:39.570><c> our</c><00:34:39.690><c> code</c><00:34:39.990><c> and</c><00:34:40.520><c> then</c><00:34:41.520><c> we</c><00:34:41.640><c> have</c><00:34:41.820><c> the</c><00:34:42.390><c> end</c><00:34:42.570><c> of</c>

00:34:42.710 --> 00:34:42.720 align:start position:0%
is our code and then we have the end of
 

00:34:42.720 --> 00:34:44.960 align:start position:0%
is our code and then we have the end of
this<00:34:42.840><c> function</c><00:34:43.230><c> now</c><00:34:43.380><c> the</c><00:34:44.100><c> actual</c><00:34:44.550><c> code</c><00:34:44.730><c> is</c>

00:34:44.960 --> 00:34:44.970 align:start position:0%
this function now the actual code is
 

00:34:44.970 --> 00:34:47.270 align:start position:0%
this function now the actual code is
slightly<00:34:45.540><c> more</c><00:34:45.840><c> complicated</c><00:34:46.260><c> than</c><00:34:46.650><c> this</c><00:34:46.860><c> but</c>

00:34:47.270 --> 00:34:47.280 align:start position:0%
slightly more complicated than this but
 

00:34:47.280 --> 00:34:48.500 align:start position:0%
slightly more complicated than this but
we<00:34:47.429><c> don't</c><00:34:47.550><c> want</c><00:34:47.669><c> to</c><00:34:47.730><c> get</c><00:34:47.790><c> distracted</c><00:34:48.030><c> with</c>

00:34:48.500 --> 00:34:48.510 align:start position:0%
we don't want to get distracted with
 

00:34:48.510 --> 00:34:50.570 align:start position:0%
we don't want to get distracted with
that<00:34:48.659><c> complexity</c><00:34:49.260><c> if</c><00:34:49.770><c> you're</c><00:34:50.159><c> a</c><00:34:50.190><c> more</c>

00:34:50.570 --> 00:34:50.580 align:start position:0%
that complexity if you're a more
 

00:34:50.580 --> 00:34:52.820 align:start position:0%
that complexity if you're a more
advanced<00:34:51.090><c> JavaScript</c><00:34:51.510><c> developer</c><00:34:52.290><c> you</c>

00:34:52.820 --> 00:34:52.830 align:start position:0%
advanced JavaScript developer you
 

00:34:52.830 --> 00:34:54.710 align:start position:0%
advanced JavaScript developer you
probably<00:34:53.159><c> know</c><00:34:53.310><c> this</c><00:34:53.610><c> is</c><00:34:53.790><c> an</c><00:34:53.970><c> immediately</c>

00:34:54.710 --> 00:34:54.720 align:start position:0%
probably know this is an immediately
 

00:34:54.720 --> 00:34:58.160 align:start position:0%
probably know this is an immediately
invoked<00:34:55.140><c> function</c><00:34:55.800><c> expression</c><00:34:56.640><c> or</c><00:34:56.850><c> if</c><00:34:57.360><c> you</c><00:34:57.540><c> if</c>

00:34:58.160 --> 00:34:58.170 align:start position:0%
invoked function expression or if you if
 

00:34:58.170 --> 00:34:59.960 align:start position:0%
invoked function expression or if you if
you<00:34:58.350><c> don't</c><00:34:58.620><c> know</c><00:34:58.740><c> that</c><00:34:58.950><c> don't</c><00:34:59.460><c> worry</c><00:34:59.670><c> that's</c>

00:34:59.960 --> 00:34:59.970 align:start position:0%
you don't know that don't worry that's
 

00:34:59.970 --> 00:35:02.240 align:start position:0%
you don't know that don't worry that's
not<00:35:00.210><c> really</c><00:35:00.480><c> the</c><00:35:00.600><c> scope</c><00:35:00.870><c> of</c><00:35:01.020><c> note</c><00:35:01.230><c> what</c><00:35:02.010><c> I</c><00:35:02.040><c> want</c>

00:35:02.240 --> 00:35:02.250 align:start position:0%
not really the scope of note what I want
 

00:35:02.250 --> 00:35:04.730 align:start position:0%
not really the scope of note what I want
you<00:35:02.340><c> to</c><00:35:02.370><c> take</c><00:35:02.670><c> away</c><00:35:02.970><c> here</c><00:35:03.240><c> is</c><00:35:03.420><c> that</c><00:35:04.140><c> note</c><00:35:04.410><c> does</c>

00:35:04.730 --> 00:35:04.740 align:start position:0%
you to take away here is that note does
 

00:35:04.740 --> 00:35:08.060 align:start position:0%
you to take away here is that note does
not<00:35:05.040><c> execute</c><00:35:05.550><c> our</c><00:35:05.880><c> code</c><00:35:06.200><c> directly</c><00:35:07.200><c> it</c><00:35:07.770><c> always</c>

00:35:08.060 --> 00:35:08.070 align:start position:0%
not execute our code directly it always
 

00:35:08.070 --> 00:35:10.910 align:start position:0%
not execute our code directly it always
wraps<00:35:08.640><c> the</c><00:35:09.150><c> code</c><00:35:09.390><c> inside</c><00:35:09.930><c> each</c><00:35:10.080><c> module</c><00:35:10.590><c> and</c>

00:35:10.910 --> 00:35:10.920 align:start position:0%
wraps the code inside each module and
 

00:35:10.920 --> 00:35:12.890 align:start position:0%
wraps the code inside each module and
something<00:35:11.730><c> like</c><00:35:11.880><c> this</c><00:35:12.060><c> inside</c><00:35:12.540><c> of</c><00:35:12.630><c> a</c><00:35:12.690><c> function</c>

00:35:12.890 --> 00:35:12.900 align:start position:0%
something like this inside of a function
 

00:35:12.900 --> 00:35:15.410 align:start position:0%
something like this inside of a function
now<00:35:13.830><c> look</c><00:35:13.980><c> at</c><00:35:14.100><c> these</c><00:35:14.220><c> arguments</c><00:35:14.700><c> to</c><00:35:15.300><c> this</c>

00:35:15.410 --> 00:35:15.420 align:start position:0%
now look at these arguments to this
 

00:35:15.420 --> 00:35:18.140 align:start position:0%
now look at these arguments to this
function<00:35:15.480><c> so</c><00:35:16.050><c> you</c><00:35:16.740><c> have</c><00:35:16.920><c> seen</c><00:35:17.160><c> the</c><00:35:17.370><c> required</c>

00:35:18.140 --> 00:35:18.150 align:start position:0%
function so you have seen the required
 

00:35:18.150 --> 00:35:20.630 align:start position:0%
function so you have seen the required
function<00:35:18.600><c> I</c><00:35:18.780><c> told</c><00:35:19.710><c> you</c><00:35:19.860><c> that</c><00:35:20.010><c> this</c><00:35:20.130><c> required</c>

00:35:20.630 --> 00:35:20.640 align:start position:0%
function I told you that this required
 

00:35:20.640 --> 00:35:22.940 align:start position:0%
function I told you that this required
function<00:35:21.060><c> appears</c><00:35:21.960><c> to</c><00:35:22.110><c> be</c><00:35:22.230><c> global</c><00:35:22.680><c> but</c>

00:35:22.940 --> 00:35:22.950 align:start position:0%
function appears to be global but
 

00:35:22.950 --> 00:35:25.460 align:start position:0%
function appears to be global but
actually<00:35:23.430><c> it's</c><00:35:23.610><c> not</c><00:35:23.760><c> global</c><00:35:24.570><c> in</c><00:35:24.930><c> fact</c><00:35:25.230><c> it's</c>

00:35:25.460 --> 00:35:25.470 align:start position:0%
actually it's not global in fact it's
 

00:35:25.470 --> 00:35:27.980 align:start position:0%
actually it's not global in fact it's
local<00:35:26.070><c> to</c><00:35:26.250><c> each</c><00:35:26.430><c> module</c><00:35:26.970><c> so</c><00:35:27.270><c> in</c><00:35:27.390><c> every</c><00:35:27.810><c> module</c>

00:35:27.980 --> 00:35:27.990 align:start position:0%
local to each module so in every module
 

00:35:27.990 --> 00:35:30.590 align:start position:0%
local to each module so in every module
require<00:35:28.950><c> is</c><00:35:29.250><c> one</c><00:35:29.460><c> of</c><00:35:29.550><c> the</c><00:35:29.640><c> arguments</c><00:35:30.330><c> that</c><00:35:30.390><c> is</c>

00:35:30.590 --> 00:35:30.600 align:start position:0%
require is one of the arguments that is
 

00:35:30.600 --> 00:35:33.350 align:start position:0%
require is one of the arguments that is
passed<00:35:30.900><c> to</c><00:35:31.290><c> this</c><00:35:31.740><c> function</c><00:35:32.030><c> we</c><00:35:33.030><c> call</c><00:35:33.180><c> this</c>

00:35:33.350 --> 00:35:33.360 align:start position:0%
passed to this function we call this
 

00:35:33.360 --> 00:35:36.130 align:start position:0%
passed to this function we call this
function<00:35:33.570><c> the</c><00:35:34.470><c> module</c><00:35:35.010><c> wrapper</c><00:35:35.490><c> function</c>

00:35:36.130 --> 00:35:36.140 align:start position:0%
function the module wrapper function
 

00:35:36.140 --> 00:35:39.590 align:start position:0%
function the module wrapper function
okay<00:35:37.250><c> so</c><00:35:38.250><c> you</c><00:35:38.460><c> have</c><00:35:38.580><c> seen</c><00:35:38.820><c> the</c><00:35:39.000><c> require</c>

00:35:39.590 --> 00:35:39.600 align:start position:0%
okay so you have seen the require
 

00:35:39.600 --> 00:35:42.380 align:start position:0%
okay so you have seen the require
function<00:35:39.630><c> you</c><00:35:40.320><c> have</c><00:35:40.350><c> also</c><00:35:40.680><c> seen</c><00:35:41.060><c> module</c><00:35:42.060><c> that</c>

00:35:42.380 --> 00:35:42.390 align:start position:0%
function you have also seen module that
 

00:35:42.390 --> 00:35:44.690 align:start position:0%
function you have also seen module that
is<00:35:42.540><c> what</c><00:35:42.690><c> we're</c><00:35:42.870><c> using</c><00:35:43.050><c> here</c><00:35:43.490><c> so</c><00:35:44.490><c> we</c><00:35:44.610><c> have</c>

00:35:44.690 --> 00:35:44.700 align:start position:0%
is what we're using here so we have
 

00:35:44.700 --> 00:35:48.080 align:start position:0%
is what we're using here so we have
module<00:35:45.090><c> that</c><00:35:45.240><c> exports</c><00:35:45.720><c> we</c><00:35:46.380><c> also</c><00:35:46.650><c> have</c><00:35:47.090><c> exports</c>

00:35:48.080 --> 00:35:48.090 align:start position:0%
module that exports we also have exports
 

00:35:48.090 --> 00:35:51.050 align:start position:0%
module that exports we also have exports
which<00:35:48.690><c> is</c><00:35:48.870><c> a</c><00:35:48.900><c> shortcut</c><00:35:49.350><c> to</c><00:35:49.950><c> module</c><00:35:50.430><c> dot</c><00:35:50.610><c> export</c>

00:35:51.050 --> 00:35:51.060 align:start position:0%
which is a shortcut to module dot export
 

00:35:51.060 --> 00:35:53.660 align:start position:0%
which is a shortcut to module dot export
so<00:35:51.960><c> if</c><00:35:52.230><c> you</c><00:35:52.320><c> want</c><00:35:52.470><c> to</c><00:35:52.530><c> add</c><00:35:52.620><c> a</c><00:35:52.830><c> function</c><00:35:53.460><c> to</c>

00:35:53.660 --> 00:35:53.670 align:start position:0%
so if you want to add a function to
 

00:35:53.670 --> 00:35:55.310 align:start position:0%
so if you want to add a function to
module<00:35:54.030><c> that</c><00:35:54.150><c> exports</c><00:35:54.690><c> object</c><00:35:55.110><c> you</c><00:35:55.200><c> can</c>

00:35:55.310 --> 00:35:55.320 align:start position:0%
module that exports object you can
 

00:35:55.320 --> 00:35:58.460 align:start position:0%
module that exports object you can
either<00:35:55.500><c> write</c><00:35:55.710><c> module</c><00:35:56.520><c> that</c><00:35:56.970><c> exports</c><00:35:57.510><c> dot</c><00:35:58.170><c> log</c>

00:35:58.460 --> 00:35:58.470 align:start position:0%
either write module that exports dot log
 

00:35:58.470 --> 00:36:02.420 align:start position:0%
either write module that exports dot log
equals<00:35:59.340><c> log</c><00:35:59.580><c> or</c><00:36:00.090><c> you</c><00:36:00.480><c> can</c><00:36:00.660><c> write</c><00:36:00.840><c> exports</c><00:36:01.680><c> that</c>

00:36:02.420 --> 00:36:02.430 align:start position:0%
equals log or you can write exports that
 

00:36:02.430 --> 00:36:07.160 align:start position:0%
equals log or you can write exports that
log<00:36:02.700><c> equals</c><00:36:03.600><c> log</c><00:36:04.430><c> but</c><00:36:05.430><c> you</c><00:36:05.580><c> cannot</c><00:36:06.030><c> reset</c><00:36:06.660><c> this</c>

00:36:07.160 --> 00:36:07.170 align:start position:0%
log equals log but you cannot reset this
 

00:36:07.170 --> 00:36:09.410 align:start position:0%
log equals log but you cannot reset this
export

00:36:09.410 --> 00:36:09.420 align:start position:0%
export
 

00:36:09.420 --> 00:36:11.809 align:start position:0%
export
like<00:36:09.569><c> what</c><00:36:09.750><c> we</c><00:36:09.900><c> did</c><00:36:10.049><c> earlier</c><00:36:10.349><c> in</c><00:36:11.160><c> other</c><00:36:11.549><c> words</c>

00:36:11.809 --> 00:36:11.819 align:start position:0%
like what we did earlier in other words
 

00:36:11.819 --> 00:36:15.559 align:start position:0%
like what we did earlier in other words
you<00:36:12.329><c> cannot</c><00:36:12.690><c> write</c><00:36:12.990><c> export</c><00:36:13.940><c> equals</c><00:36:14.940><c> lock</c>

00:36:15.559 --> 00:36:15.569 align:start position:0%
you cannot write export equals lock
 

00:36:15.569 --> 00:36:19.329 align:start position:0%
you cannot write export equals lock
because<00:36:16.530><c> this</c><00:36:16.859><c> export</c><00:36:17.369><c> is</c><00:36:17.549><c> a</c><00:36:18.000><c> reference</c><00:36:18.599><c> to</c>

00:36:19.329 --> 00:36:19.339 align:start position:0%
because this export is a reference to
 

00:36:19.339 --> 00:36:22.860 align:start position:0%
because this export is a reference to
module<00:36:20.339><c> and</c><00:36:20.880><c> exports</c><00:36:21.470><c> we</c><00:36:22.470><c> can</c>

00:36:22.860 --> 00:36:22.870 align:start position:0%
module and exports we can
 

00:36:22.870 --> 00:36:27.630 align:start position:0%
module and exports we can
change<00:36:23.050><c> that</c><00:36:23.260><c> reference</c><00:36:23.680><c> okay</c><00:36:24.060><c> so</c><00:36:26.580><c> these</c><00:36:27.580><c> are</c>

00:36:27.630 --> 00:36:27.640 align:start position:0%
change that reference okay so these are
 

00:36:27.640 --> 00:36:30.390 align:start position:0%
change that reference okay so these are
the<00:36:28.270><c> first</c><00:36:28.570><c> three</c><00:36:28.750><c> arguments</c><00:36:29.380><c> we</c><00:36:29.920><c> also</c><00:36:30.100><c> have</c>

00:36:30.390 --> 00:36:30.400 align:start position:0%
the first three arguments we also have
 

00:36:30.400 --> 00:36:33.030 align:start position:0%
the first three arguments we also have
filename<00:36:30.940><c> and</c><00:36:31.150><c> Durning</c><00:36:31.960><c> which</c><00:36:32.260><c> represent</c><00:36:32.860><c> the</c>

00:36:33.030 --> 00:36:33.040 align:start position:0%
filename and Durning which represent the
 

00:36:33.040 --> 00:36:37.710 align:start position:0%
filename and Durning which represent the
name<00:36:33.610><c> of</c><00:36:33.760><c> this</c><00:36:33.880><c> file</c><00:36:34.180><c> and</c><00:36:34.470><c> the</c><00:36:35.470><c> pass</c><00:36:35.710><c> so</c><00:36:36.720><c> let's</c>

00:36:37.710 --> 00:36:37.720 align:start position:0%
name of this file and the pass so let's
 

00:36:37.720 --> 00:36:39.720 align:start position:0%
name of this file and the pass so let's
have<00:36:37.840><c> a</c><00:36:37.900><c> quick</c><00:36:38.200><c> look</c><00:36:38.230><c> at</c><00:36:38.680><c> this</c><00:36:39.010><c> argument</c><00:36:39.550><c> on</c>

00:36:39.720 --> 00:36:39.730 align:start position:0%
have a quick look at this argument on
 

00:36:39.730 --> 00:36:42.900 align:start position:0%
have a quick look at this argument on
the<00:36:39.880><c> top</c><00:36:40.090><c> I'm</c><00:36:40.300><c> gonna</c><00:36:40.540><c> do</c><00:36:40.720><c> a</c><00:36:40.990><c> console</c><00:36:41.890><c> that</c><00:36:42.610><c> log</c>

00:36:42.900 --> 00:36:42.910 align:start position:0%
the top I'm gonna do a console that log
 

00:36:42.910 --> 00:36:47.270 align:start position:0%
the top I'm gonna do a console that log
of<00:36:44.040><c> underline</c><00:36:45.040><c> underline</c><00:36:45.520><c> file</c><00:36:46.030><c> name</c><00:36:46.240><c> and</c>

00:36:47.270 --> 00:36:47.280 align:start position:0%
of underline underline file name and
 

00:36:47.280 --> 00:36:49.590 align:start position:0%
of underline underline file name and
also

00:36:49.590 --> 00:36:49.600 align:start position:0%
also
 

00:36:49.600 --> 00:36:53.190 align:start position:0%
also
underline<00:36:50.200><c> underline</c><00:36:50.620><c> Durning</c><00:36:51.390><c> now</c><00:36:52.390><c> we're</c>

00:36:53.190 --> 00:36:53.200 align:start position:0%
underline underline Durning now we're
 

00:36:53.200 --> 00:36:54.600 align:start position:0%
underline underline Durning now we're
not<00:36:53.350><c> going</c><00:36:53.560><c> to</c><00:36:53.590><c> have</c><00:36:53.710><c> this</c><00:36:53.890><c> function</c><00:36:54.370><c> this</c>

00:36:54.600 --> 00:36:54.610 align:start position:0%
not going to have this function this
 

00:36:54.610 --> 00:36:56.880 align:start position:0%
not going to have this function this
module<00:36:55.300><c> wrapper</c><00:36:55.510><c> function</c><00:36:55.840><c> this</c><00:36:56.290><c> was</c><00:36:56.500><c> purely</c>

00:36:56.880 --> 00:36:56.890 align:start position:0%
module wrapper function this was purely
 

00:36:56.890 --> 00:36:59.490 align:start position:0%
module wrapper function this was purely
for<00:36:57.100><c> demonstration</c><00:36:57.600><c> so</c><00:36:58.600><c> I'm</c><00:36:58.900><c> gonna</c><00:36:59.170><c> revert</c>

00:36:59.490 --> 00:36:59.500 align:start position:0%
for demonstration so I'm gonna revert
 

00:36:59.500 --> 00:37:01.880 align:start position:0%
for demonstration so I'm gonna revert
the<00:36:59.620><c> code</c><00:36:59.830><c> back</c><00:37:00.100><c> to</c><00:37:00.160><c> what</c><00:37:00.520><c> we</c><00:37:00.700><c> had</c><00:37:00.910><c> before</c>

00:37:01.880 --> 00:37:01.890 align:start position:0%
the code back to what we had before
 

00:37:01.890 --> 00:37:05.400 align:start position:0%
the code back to what we had before
okay<00:37:03.150><c> so</c><00:37:04.150><c> now</c><00:37:04.270><c> we</c><00:37:04.420><c> don't</c><00:37:04.510><c> have</c><00:37:04.630><c> any</c><00:37:04.870><c> errors</c><00:37:05.230><c> in</c>

00:37:05.400 --> 00:37:05.410 align:start position:0%
okay so now we don't have any errors in
 

00:37:05.410 --> 00:37:07.500 align:start position:0%
okay so now we don't have any errors in
this<00:37:05.830><c> module</c><00:37:06.070><c> let's</c><00:37:06.970><c> go</c><00:37:07.120><c> back</c><00:37:07.270><c> to</c><00:37:07.420><c> the</c>

00:37:07.500 --> 00:37:07.510 align:start position:0%
this module let's go back to the
 

00:37:07.510 --> 00:37:10.240 align:start position:0%
this module let's go back to the
terminal<00:37:07.720><c> and</c><00:37:08.080><c> run</c><00:37:08.410><c> this</c><00:37:08.530><c> program</c>

00:37:10.240 --> 00:37:10.250 align:start position:0%
terminal and run this program
 

00:37:10.250 --> 00:37:14.349 align:start position:0%
terminal and run this program
so<00:37:11.060><c> note</c><00:37:11.300><c> op</c><00:37:11.720><c> j</c><00:37:12.020><c> s</c><00:37:12.550><c> so</c><00:37:13.550><c> here</c><00:37:13.670><c> on</c><00:37:13.849><c> the</c><00:37:13.940><c> first</c><00:37:14.150><c> line</c>

00:37:14.349 --> 00:37:14.359 align:start position:0%
so note op j s so here on the first line
 

00:37:14.359 --> 00:37:16.060 align:start position:0%
so note op j s so here on the first line
we<00:37:14.390><c> have</c><00:37:14.660><c> file</c><00:37:14.960><c> name</c><00:37:15.140><c> which</c><00:37:15.349><c> is</c><00:37:15.470><c> the</c><00:37:15.590><c> complete</c>

00:37:16.060 --> 00:37:16.070 align:start position:0%
we have file name which is the complete
 

00:37:16.070 --> 00:37:18.609 align:start position:0%
we have file name which is the complete
path<00:37:16.369><c> to</c><00:37:16.580><c> that</c><00:37:16.730><c> file</c><00:37:16.970><c> that</c><00:37:17.270><c> is</c><00:37:17.359><c> lager</c><00:37:17.630><c> a</c><00:37:17.780><c> s</c><00:37:18.320><c> and</c>

00:37:18.609 --> 00:37:18.619 align:start position:0%
path to that file that is lager a s and
 

00:37:18.619 --> 00:37:22.359 align:start position:0%
path to that file that is lager a s and
on<00:37:19.430><c> the</c><00:37:19.520><c> second</c><00:37:19.820><c> line</c><00:37:19.940><c> we</c><00:37:20.090><c> have</c><00:37:20.890><c> the</c><00:37:21.890><c> path</c><00:37:22.160><c> to</c>

00:37:22.359 --> 00:37:22.369 align:start position:0%
on the second line we have the path to
 

00:37:22.369 --> 00:37:24.820 align:start position:0%
on the second line we have the path to
the<00:37:22.490><c> directory</c><00:37:23.000><c> that</c><00:37:23.090><c> contains</c><00:37:23.510><c> and</c><00:37:24.440><c> module</c>

00:37:24.820 --> 00:37:24.830 align:start position:0%
the directory that contains and module
 

00:37:24.830 --> 00:37:27.550 align:start position:0%
the directory that contains and module
so<00:37:25.609><c> now</c><00:37:25.730><c> you</c><00:37:25.790><c> have</c><00:37:26.000><c> a</c><00:37:26.030><c> basic</c><00:37:26.480><c> idea</c><00:37:26.599><c> about</c><00:37:26.840><c> node</c>

00:37:27.550 --> 00:37:27.560 align:start position:0%
so now you have a basic idea about node
 

00:37:27.560 --> 00:37:29.440 align:start position:0%
so now you have a basic idea about node
modules<00:37:28.040><c> and</c><00:37:28.250><c> how</c><00:37:28.340><c> they</c><00:37:28.520><c> work</c><00:37:28.760><c> you</c><00:37:29.180><c> know</c><00:37:29.300><c> how</c>

00:37:29.440 --> 00:37:29.450 align:start position:0%
modules and how they work you know how
 

00:37:29.450 --> 00:37:31.690 align:start position:0%
modules and how they work you know how
to<00:37:29.510><c> create</c><00:37:29.869><c> them</c><00:37:30.170><c> how</c><00:37:30.320><c> to</c><00:37:30.349><c> load</c><00:37:30.770><c> them</c><00:37:30.980><c> but</c>

00:37:31.690 --> 00:37:31.700 align:start position:0%
to create them how to load them but
 

00:37:31.700 --> 00:37:33.670 align:start position:0%
to create them how to load them but
knowing<00:37:31.970><c> itself</c><00:37:32.330><c> comes</c><00:37:32.720><c> with</c><00:37:33.230><c> a</c><00:37:33.260><c> bunch</c><00:37:33.470><c> of</c>

00:37:33.670 --> 00:37:33.680 align:start position:0%
knowing itself comes with a bunch of
 

00:37:33.680 --> 00:37:36.070 align:start position:0%
knowing itself comes with a bunch of
useful<00:37:33.980><c> modules</c><00:37:34.730><c> that</c><00:37:35.180><c> we</c><00:37:35.359><c> can</c><00:37:35.510><c> use</c><00:37:35.690><c> in</c><00:37:35.900><c> a</c><00:37:35.990><c> lot</c>

00:37:36.070 --> 00:37:36.080 align:start position:0%
useful modules that we can use in a lot
 

00:37:36.080 --> 00:37:37.690 align:start position:0%
useful modules that we can use in a lot
of<00:37:36.140><c> applications</c><00:37:36.320><c> and</c><00:37:36.980><c> that's</c><00:37:37.369><c> what</c><00:37:37.580><c> we're</c>

00:37:37.690 --> 00:37:37.700 align:start position:0%
of applications and that's what we're
 

00:37:37.700 --> 00:37:42.940 align:start position:0%
of applications and that's what we're
going<00:37:37.820><c> to</c><00:37:37.940><c> look</c><00:37:38.090><c> at</c><00:37:38.270><c> in</c><00:37:38.450><c> the</c><00:37:38.570><c> next</c><00:37:38.599><c> lecture</c>

00:37:42.940 --> 00:37:42.950 align:start position:0%
 
 

00:37:42.950 --> 00:37:45.620 align:start position:0%
 
hi<00:37:43.950><c> guys</c><00:37:44.160><c> thank</c><00:37:44.640><c> you</c><00:37:44.700><c> for</c><00:37:44.760><c> watching</c><00:37:45.330><c> my</c><00:37:45.420><c> Noah</c>

00:37:45.620 --> 00:37:45.630 align:start position:0%
hi guys thank you for watching my Noah
 

00:37:45.630 --> 00:37:47.780 align:start position:0%
hi guys thank you for watching my Noah
tutorial<00:37:46.200><c> I</c><00:37:46.380><c> wanted</c><00:37:47.040><c> to</c><00:37:47.100><c> let</c><00:37:47.250><c> you</c><00:37:47.280><c> know</c><00:37:47.400><c> that</c>

00:37:47.780 --> 00:37:47.790 align:start position:0%
tutorial I wanted to let you know that
 

00:37:47.790 --> 00:37:50.330 align:start position:0%
tutorial I wanted to let you know that
this<00:37:47.910><c> tutorial</c><00:37:48.510><c> is</c><00:37:48.750><c> the</c><00:37:48.810><c> first</c><00:37:48.990><c> hour</c><00:37:49.590><c> of</c><00:37:50.040><c> my</c>

00:37:50.330 --> 00:37:50.340 align:start position:0%
this tutorial is the first hour of my
 

00:37:50.340 --> 00:37:52.490 align:start position:0%
this tutorial is the first hour of my
complete<00:37:50.970><c> note</c><00:37:51.240><c> course</c><00:37:51.600><c> where</c><00:37:52.200><c> you</c><00:37:52.350><c> will</c>

00:37:52.490 --> 00:37:52.500 align:start position:0%
complete note course where you will
 

00:37:52.500 --> 00:37:55.340 align:start position:0%
complete note course where you will
learn<00:37:52.620><c> how</c><00:37:52.950><c> to</c><00:37:52.980><c> build</c><00:37:53.430><c> a</c><00:37:53.670><c> real</c><00:37:54.150><c> restful</c><00:37:55.050><c> api</c>

00:37:55.340 --> 00:37:55.350 align:start position:0%
learn how to build a real restful api
 

00:37:55.350 --> 00:37:59.300 align:start position:0%
learn how to build a real restful api
using<00:37:55.920><c> node</c><00:37:56.330><c> Express</c><00:37:57.330><c> and</c><00:37:57.680><c> MongoDB</c><00:37:58.680><c> all</c><00:37:58.920><c> of</c>

00:37:59.300 --> 00:37:59.310 align:start position:0%
using node Express and MongoDB all of
 

00:37:59.310 --> 00:38:01.130 align:start position:0%
using node Express and MongoDB all of
that<00:37:59.490><c> recorded</c><00:38:00.030><c> with</c><00:38:00.180><c> the</c><00:38:00.270><c> latest</c><00:38:00.690><c> version</c><00:38:01.080><c> of</c>

00:38:01.130 --> 00:38:01.140 align:start position:0%
that recorded with the latest version of
 

00:38:01.140 --> 00:38:04.040 align:start position:0%
that recorded with the latest version of
node<00:38:01.380><c> and</c><00:38:01.590><c> modern</c><00:38:02.340><c> JavaScript</c><00:38:02.790><c> so</c><00:38:03.780><c> you</c><00:38:03.840><c> will</c>

00:38:04.040 --> 00:38:04.050 align:start position:0%
node and modern JavaScript so you will
 

00:38:04.050 --> 00:38:06.470 align:start position:0%
node and modern JavaScript so you will
learn<00:38:04.170><c> new</c><00:38:04.440><c> and</c><00:38:05.070><c> modern</c><00:38:05.700><c> ways</c><00:38:05.910><c> of</c><00:38:05.940><c> building</c>

00:38:06.470 --> 00:38:06.480 align:start position:0%
learn new and modern ways of building
 

00:38:06.480 --> 00:38:07.850 align:start position:0%
learn new and modern ways of building
applications<00:38:07.260><c> with</c><00:38:07.440><c> node</c>

00:38:07.850 --> 00:38:07.860 align:start position:0%
applications with node
 

00:38:07.860 --> 00:38:10.250 align:start position:0%
applications with node
unlike<00:38:08.670><c> other</c><00:38:08.910><c> courses</c><00:38:09.420><c> that</c><00:38:09.540><c> only</c><00:38:09.840><c> show</c><00:38:10.200><c> you</c>

00:38:10.250 --> 00:38:10.260 align:start position:0%
unlike other courses that only show you
 

00:38:10.260 --> 00:38:12.770 align:start position:0%
unlike other courses that only show you
simple<00:38:10.890><c> the</c><00:38:11.340><c> only</c><00:38:11.370><c> examples</c><00:38:12.120><c> like</c><00:38:12.360><c> how</c><00:38:12.720><c> to</c>

00:38:12.770 --> 00:38:12.780 align:start position:0%
simple the only examples like how to
 

00:38:12.780 --> 00:38:15.170 align:start position:0%
simple the only examples like how to
build<00:38:13.110><c> a</c><00:38:13.260><c> to-do</c><00:38:13.710><c> app</c><00:38:13.890><c> we're</c><00:38:14.520><c> gonna</c><00:38:14.670><c> work</c><00:38:14.910><c> on</c><00:38:15.120><c> a</c>

00:38:15.170 --> 00:38:15.180 align:start position:0%
build a to-do app we're gonna work on a
 

00:38:15.180 --> 00:38:18.350 align:start position:0%
build a to-do app we're gonna work on a
real-world<00:38:15.630><c> project</c><00:38:16.470><c> a</c><00:38:16.590><c> restful</c><00:38:17.400><c> api</c><00:38:17.670><c> for</c><00:38:18.300><c> a</c>

00:38:18.350 --> 00:38:18.360 align:start position:0%
real-world project a restful api for a
 

00:38:18.360 --> 00:38:20.690 align:start position:0%
real-world project a restful api for a
video<00:38:18.810><c> rental</c><00:38:18.990><c> application</c><00:38:19.800><c> if</c><00:38:20.490><c> you</c><00:38:20.550><c> have</c>

00:38:20.690 --> 00:38:20.700 align:start position:0%
video rental application if you have
 

00:38:20.700 --> 00:38:22.910 align:start position:0%
video rental application if you have
taken<00:38:21.000><c> any</c><00:38:21.180><c> of</c><00:38:21.270><c> my</c><00:38:21.420><c> courses</c><00:38:21.780><c> you</c><00:38:22.320><c> know</c><00:38:22.440><c> I</c><00:38:22.680><c> don't</c>

00:38:22.910 --> 00:38:22.920 align:start position:0%
taken any of my courses you know I don't
 

00:38:22.920 --> 00:38:24.410 align:start position:0%
taken any of my courses you know I don't
waste<00:38:23.100><c> your</c><00:38:23.220><c> time</c><00:38:23.280><c> by</c><00:38:23.670><c> explaining</c><00:38:24.180><c> the</c>

00:38:24.410 --> 00:38:24.420 align:start position:0%
waste your time by explaining the
 

00:38:24.420 --> 00:38:26.660 align:start position:0%
waste your time by explaining the
obvious<00:38:24.960><c> like</c><00:38:25.260><c> what</c><00:38:25.680><c> a</c><00:38:25.710><c> code</c><00:38:26.010><c> editor</c><00:38:26.220><c> or</c>

00:38:26.660 --> 00:38:26.670 align:start position:0%
obvious like what a code editor or
 

00:38:26.670 --> 00:38:28.910 align:start position:0%
obvious like what a code editor or
command<00:38:27.180><c> prompt</c><00:38:27.510><c> is</c><00:38:27.750><c> we're</c><00:38:28.530><c> gonna</c><00:38:28.650><c> get</c>

00:38:28.910 --> 00:38:28.920 align:start position:0%
command prompt is we're gonna get
 

00:38:28.920 --> 00:38:31.010 align:start position:0%
command prompt is we're gonna get
straight<00:38:29.280><c> to</c><00:38:29.400><c> the</c><00:38:29.490><c> business</c><00:38:29.670><c> and</c><00:38:30.540><c> as</c><00:38:30.660><c> part</c><00:38:30.960><c> of</c>

00:38:31.010 --> 00:38:31.020 align:start position:0%
straight to the business and as part of
 

00:38:31.020 --> 00:38:32.780 align:start position:0%
straight to the business and as part of
this<00:38:31.200><c> I'll</c><00:38:31.530><c> be</c><00:38:31.680><c> touching</c><00:38:31.920><c> on</c><00:38:32.250><c> various</c>

00:38:32.780 --> 00:38:32.790 align:start position:0%
this I'll be touching on various
 

00:38:32.790 --> 00:38:34.850 align:start position:0%
this I'll be touching on various
important<00:38:33.480><c> topics</c><00:38:34.020><c> that</c><00:38:34.500><c> you</c><00:38:34.650><c> need</c><00:38:34.770><c> to</c>

00:38:34.850 --> 00:38:34.860 align:start position:0%
important topics that you need to
 

00:38:34.860 --> 00:38:37.520 align:start position:0%
important topics that you need to
understand<00:38:35.310><c> really</c><00:38:35.730><c> well</c><00:38:36.060><c> including</c><00:38:36.900><c> working</c>

00:38:37.520 --> 00:38:37.530 align:start position:0%
understand really well including working
 

00:38:37.530 --> 00:38:40.210 align:start position:0%
understand really well including working
with<00:38:37.710><c> node</c><00:38:38.100><c> package</c><00:38:38.430><c> manager</c><00:38:38.640><c> or</c><00:38:39.270><c> NPM</c>

00:38:40.210 --> 00:38:40.220 align:start position:0%
with node package manager or NPM
 

00:38:40.220 --> 00:38:42.560 align:start position:0%
with node package manager or NPM
asynchronous<00:38:41.220><c> JavaScript</c><00:38:42.000><c> including</c>

00:38:42.560 --> 00:38:42.570 align:start position:0%
asynchronous JavaScript including
 

00:38:42.570 --> 00:38:45.400 align:start position:0%
asynchronous JavaScript including
callbacks<00:38:43.050><c> promises</c><00:38:44.010><c> async</c><00:38:44.760><c> and</c><00:38:44.880><c> await</c>

00:38:45.400 --> 00:38:45.410 align:start position:0%
callbacks promises async and await
 

00:38:45.410 --> 00:38:48.110 align:start position:0%
callbacks promises async and await
implementing<00:38:46.410><c> crud</c><00:38:46.740><c> operations</c><00:38:47.120><c> data</c>

00:38:48.110 --> 00:38:48.120 align:start position:0%
implementing crud operations data
 

00:38:48.120 --> 00:38:50.210 align:start position:0%
implementing crud operations data
validations<00:38:49.070><c> authentication</c><00:38:50.070><c> and</c>

00:38:50.210 --> 00:38:50.220 align:start position:0%
validations authentication and
 

00:38:50.220 --> 00:38:52.510 align:start position:0%
validations authentication and
authorization<00:38:50.400><c> using</c><00:38:51.390><c> JSON</c><00:38:51.840><c> web</c><00:38:51.990><c> tokens</c>

00:38:52.510 --> 00:38:52.520 align:start position:0%
authorization using JSON web tokens
 

00:38:52.520 --> 00:38:55.490 align:start position:0%
authorization using JSON web tokens
including<00:38:53.520><c> role</c><00:38:53.760><c> management</c><00:38:54.320><c> handling</c><00:38:55.320><c> and</c>

00:38:55.490 --> 00:38:55.500 align:start position:0%
including role management handling and
 

00:38:55.500 --> 00:38:57.740 align:start position:0%
including role management handling and
login<00:38:55.980><c> errors</c><00:38:56.310><c> unit</c><00:38:57.240><c> and</c><00:38:57.450><c> integration</c>

00:38:57.740 --> 00:38:57.750 align:start position:0%
login errors unit and integration
 

00:38:57.750 --> 00:39:00.950 align:start position:0%
login errors unit and integration
testing<00:38:58.670><c> test-driven</c><00:38:59.670><c> development</c><00:39:00.030><c> so</c><00:39:00.900><c> you</c>

00:39:00.950 --> 00:39:00.960 align:start position:0%
testing test-driven development so you
 

00:39:00.960 --> 00:39:02.960 align:start position:0%
testing test-driven development so you
will<00:39:01.140><c> see</c><00:39:01.320><c> I</c><00:39:01.470><c> will</c><00:39:01.650><c> build</c><00:39:01.860><c> a</c><00:39:02.040><c> feature</c><00:39:02.250><c> from</c><00:39:02.850><c> A</c>

00:39:02.960 --> 00:39:02.970 align:start position:0%
will see I will build a feature from A
 

00:39:02.970 --> 00:39:05.300 align:start position:0%
will see I will build a feature from A
to<00:39:03.090><c> Z</c><00:39:03.300><c> using</c><00:39:03.780><c> test-driven</c><00:39:04.500><c> development</c><00:39:04.800><c> or</c>

00:39:05.300 --> 00:39:05.310 align:start position:0%
to Z using test-driven development or
 

00:39:05.310 --> 00:39:07.760 align:start position:0%
to Z using test-driven development or
TDD<00:39:05.910><c> and</c><00:39:06.270><c> finally</c><00:39:07.050><c> we'll</c><00:39:07.200><c> deploy</c><00:39:07.620><c> this</c>

00:39:07.760 --> 00:39:07.770 align:start position:0%
TDD and finally we'll deploy this
 

00:39:07.770 --> 00:39:10.070 align:start position:0%
TDD and finally we'll deploy this
application<00:39:07.830><c> to</c><00:39:08.490><c> the</c><00:39:08.670><c> cloud</c><00:39:08.930><c> throughout</c><00:39:09.930><c> the</c>

00:39:10.070 --> 00:39:10.080 align:start position:0%
application to the cloud throughout the
 

00:39:10.080 --> 00:39:12.110 align:start position:0%
application to the cloud throughout the
course<00:39:10.320><c> I</c><00:39:10.500><c> will</c><00:39:10.620><c> share</c><00:39:10.980><c> with</c><00:39:11.100><c> you</c><00:39:11.160><c> lots</c><00:39:11.910><c> of</c>

00:39:12.110 --> 00:39:12.120 align:start position:0%
course I will share with you lots of
 

00:39:12.120 --> 00:39:14.500 align:start position:0%
course I will share with you lots of
clean<00:39:12.450><c> coding</c><00:39:12.900><c> and</c><00:39:13.050><c> refactoring</c><00:39:13.770><c> techniques</c>

00:39:14.500 --> 00:39:14.510 align:start position:0%
clean coding and refactoring techniques
 

00:39:14.510 --> 00:39:17.750 align:start position:0%
clean coding and refactoring techniques
security<00:39:15.510><c> best</c><00:39:15.720><c> practices</c><00:39:16.350><c> useful</c><00:39:17.280><c> libraries</c>

00:39:17.750 --> 00:39:17.760 align:start position:0%
security best practices useful libraries
 

00:39:17.760 --> 00:39:19.270 align:start position:0%
security best practices useful libraries
to<00:39:17.910><c> use</c><00:39:18.060><c> as</c><00:39:18.270><c> part</c><00:39:18.720><c> of</c><00:39:18.780><c> your</c><00:39:18.900><c> development</c>

00:39:19.270 --> 00:39:19.280 align:start position:0%
to use as part of your development
 

00:39:19.280 --> 00:39:21.440 align:start position:0%
to use as part of your development
common<00:39:20.280><c> mistakes</c><00:39:20.670><c> that</c><00:39:20.820><c> many</c><00:39:21.150><c> node</c>

00:39:21.440 --> 00:39:21.450 align:start position:0%
common mistakes that many node
 

00:39:21.450 --> 00:39:23.660 align:start position:0%
common mistakes that many node
developers<00:39:22.080><c> make</c><00:39:22.350><c> and</c><00:39:22.590><c> much</c><00:39:23.100><c> much</c><00:39:23.340><c> more</c>

00:39:23.660 --> 00:39:23.670 align:start position:0%
developers make and much much more
 

00:39:23.670 --> 00:39:26.390 align:start position:0%
developers make and much much more
the<00:39:24.270><c> course</c><00:39:24.510><c> is</c><00:39:24.690><c> currently</c><00:39:24.990><c> 14</c><00:39:25.770><c> hours</c><00:39:26.130><c> long</c>

00:39:26.390 --> 00:39:26.400 align:start position:0%
the course is currently 14 hours long
 

00:39:26.400 --> 00:39:28.520 align:start position:0%
the course is currently 14 hours long
and<00:39:26.670><c> I'm</c><00:39:27.030><c> planning</c><00:39:27.270><c> to</c><00:39:27.420><c> add</c><00:39:27.600><c> more</c><00:39:27.840><c> content</c><00:39:28.440><c> to</c>

00:39:28.520 --> 00:39:28.530 align:start position:0%
and I'm planning to add more content to
 

00:39:28.530 --> 00:39:30.530 align:start position:0%
and I'm planning to add more content to
it<00:39:28.680><c> in</c><00:39:28.830><c> the</c><00:39:28.890><c> future</c><00:39:29.130><c> you</c><00:39:29.940><c> can</c><00:39:30.090><c> watch</c><00:39:30.300><c> this</c>

00:39:30.530 --> 00:39:30.540 align:start position:0%
it in the future you can watch this
 

00:39:30.540 --> 00:39:32.960 align:start position:0%
it in the future you can watch this
course<00:39:30.840><c> as</c><00:39:30.990><c> many</c><00:39:31.530><c> times</c><00:39:31.770><c> as</c><00:39:31.890><c> you</c><00:39:32.040><c> want</c><00:39:32.190><c> and</c><00:39:32.490><c> if</c>

00:39:32.960 --> 00:39:32.970 align:start position:0%
course as many times as you want and if
 

00:39:32.970 --> 00:39:34.760 align:start position:0%
course as many times as you want and if
you<00:39:33.090><c> watch</c><00:39:33.300><c> it</c><00:39:33.480><c> to</c><00:39:33.570><c> the</c><00:39:33.660><c> end</c><00:39:33.810><c> you</c><00:39:34.290><c> will</c><00:39:34.440><c> get</c><00:39:34.590><c> a</c>

00:39:34.760 --> 00:39:34.770 align:start position:0%
you watch it to the end you will get a
 

00:39:34.770 --> 00:39:36.830 align:start position:0%
you watch it to the end you will get a
certificate<00:39:35.250><c> of</c><00:39:35.700><c> completion</c><00:39:36.210><c> that</c><00:39:36.600><c> we</c><00:39:36.720><c> can</c>

00:39:36.830 --> 00:39:36.840 align:start position:0%
certificate of completion that we can
 

00:39:36.840 --> 00:39:39.740 align:start position:0%
certificate of completion that we can
add<00:39:37.110><c> to</c><00:39:37.290><c> your</c><00:39:37.320><c> resume</c><00:39:37.610><c> so</c><00:39:38.610><c> if</c><00:39:39.000><c> you're</c><00:39:39.450><c> serious</c>

00:39:39.740 --> 00:39:39.750 align:start position:0%
add to your resume so if you're serious
 

00:39:39.750 --> 00:39:42.560 align:start position:0%
add to your resume so if you're serious
about<00:39:39.990><c> adding</c><00:39:40.530><c> no</c><00:39:40.740><c> to</c><00:39:40.800><c> your</c><00:39:41.040><c> resume</c><00:39:41.460><c> I</c><00:39:41.790><c> highly</c>

00:39:42.560 --> 00:39:42.570 align:start position:0%
about adding no to your resume I highly
 

00:39:42.570 --> 00:39:44.090 align:start position:0%
about adding no to your resume I highly
encourage<00:39:42.720><c> you</c><00:39:43.080><c> to</c><00:39:43.230><c> enroll</c><00:39:43.410><c> in</c><00:39:43.740><c> the</c><00:39:43.830><c> course</c>

00:39:44.090 --> 00:39:44.100 align:start position:0%
encourage you to enroll in the course
 

00:39:44.100 --> 00:39:46.520 align:start position:0%
encourage you to enroll in the course
and<00:39:44.580><c> don't</c><00:39:44.850><c> waste</c><00:39:45.090><c> your</c><00:39:45.270><c> time</c><00:39:45.330><c> jumping</c><00:39:46.320><c> from</c>

00:39:46.520 --> 00:39:46.530 align:start position:0%
and don't waste your time jumping from
 

00:39:46.530 --> 00:39:49.610 align:start position:0%
and don't waste your time jumping from
one<00:39:46.770><c> tutorial</c><00:39:47.340><c> to</c><00:39:47.460><c> another</c><00:39:47.760><c> so</c><00:39:48.510><c> click</c><00:39:49.380><c> on</c><00:39:49.500><c> the</c>

00:39:49.610 --> 00:39:49.620 align:start position:0%
one tutorial to another so click on the
 

00:39:49.620 --> 00:39:51.530 align:start position:0%
one tutorial to another so click on the
link<00:39:49.800><c> in</c><00:39:50.010><c> the</c><00:39:50.160><c> video</c><00:39:50.280><c> description</c><00:39:50.430><c> to</c><00:39:51.030><c> enrol</c><00:39:51.300><c> I</c>

00:39:51.530 --> 00:39:51.540 align:start position:0%
link in the video description to enrol I
 

00:39:51.540 --> 00:39:53.360 align:start position:0%
link in the video description to enrol I
hope<00:39:51.960><c> to</c><00:39:52.110><c> see</c><00:39:52.170><c> you</c><00:39:52.260><c> in</c><00:39:52.320><c> the</c><00:39:52.410><c> course</c>

00:39:53.360 --> 00:39:53.370 align:start position:0%
hope to see you in the course
 

00:39:53.370 --> 00:39:57.910 align:start position:0%
hope to see you in the course
you

00:39:57.910 --> 00:39:57.920 align:start position:0%
 
 

00:39:57.920 --> 00:39:59.890 align:start position:0%
 
so<00:39:58.520><c> in</c><00:39:58.640><c> the</c><00:39:58.730><c> last</c><00:39:58.880><c> lecture</c><00:39:59.180><c> I</c><00:39:59.360><c> told</c><00:39:59.600><c> you</c><00:39:59.750><c> that</c>

00:39:59.890 --> 00:39:59.900 align:start position:0%
so in the last lecture I told you that
 

00:39:59.900 --> 00:40:02.410 align:start position:0%
so in the last lecture I told you that
in<00:40:00.050><c> node</c><00:40:00.290><c> we</c><00:40:00.560><c> have</c><00:40:00.590><c> a</c><00:40:01.070><c> few</c><00:40:01.700><c> useful</c><00:40:01.970><c> modules</c>

00:40:02.410 --> 00:40:02.420 align:start position:0%
in node we have a few useful modules
 

00:40:02.420 --> 00:40:04.750 align:start position:0%
in node we have a few useful modules
that<00:40:02.930><c> are</c><00:40:02.990><c> built</c><00:40:03.410><c> into</c><00:40:04.100><c> the</c><00:40:04.190><c> core</c><00:40:04.430><c> of</c><00:40:04.550><c> node</c>

00:40:04.750 --> 00:40:04.760 align:start position:0%
that are built into the core of node
 

00:40:04.760 --> 00:40:07.210 align:start position:0%
that are built into the core of node
with<00:40:05.600><c> these</c><00:40:05.750><c> modules</c><00:40:06.200><c> we</c><00:40:06.710><c> can</c><00:40:06.860><c> work</c><00:40:07.040><c> with</c>

00:40:07.210 --> 00:40:07.220 align:start position:0%
with these modules we can work with
 

00:40:07.220 --> 00:40:09.490 align:start position:0%
with these modules we can work with
files<00:40:07.490><c> with</c><00:40:08.180><c> the</c><00:40:08.210><c> operating</c><00:40:08.750><c> system</c><00:40:09.140><c> with</c><00:40:09.470><c> a</c>

00:40:09.490 --> 00:40:09.500 align:start position:0%
files with the operating system with a
 

00:40:09.500 --> 00:40:12.010 align:start position:0%
files with the operating system with a
network<00:40:09.770><c> and</c><00:40:10.190><c> so</c><00:40:10.370><c> on</c><00:40:10.490><c> so</c><00:40:11.300><c> let's</c><00:40:11.570><c> have</c><00:40:11.660><c> a</c><00:40:11.720><c> quick</c>

00:40:12.010 --> 00:40:12.020 align:start position:0%
network and so on so let's have a quick
 

00:40:12.020 --> 00:40:14.590 align:start position:0%
network and so on so let's have a quick
look<00:40:12.050><c> at</c><00:40:12.440><c> this</c><00:40:12.740><c> built</c><00:40:13.040><c> in</c><00:40:13.220><c> modules</c><00:40:13.390><c> head</c><00:40:14.390><c> over</c>

00:40:14.590 --> 00:40:14.600 align:start position:0%
look at this built in modules head over
 

00:40:14.600 --> 00:40:15.760 align:start position:0%
look at this built in modules head over
to<00:40:14.750><c> node</c><00:40:14.990><c> J</c><00:40:15.020><c> s</c>

00:40:15.760 --> 00:40:15.770 align:start position:0%
to node J s
 

00:40:15.770 --> 00:40:21.190 align:start position:0%
to node J s
org<00:40:16.570><c> then</c><00:40:17.570><c> go</c><00:40:18.440><c> to</c><00:40:18.500><c> Docs</c><00:40:18.830><c> on</c><00:40:19.160><c> the</c><00:40:19.790><c> left</c><00:40:19.970><c> side</c><00:40:20.200><c> go</c>

00:40:21.190 --> 00:40:21.200 align:start position:0%
org then go to Docs on the left side go
 

00:40:21.200 --> 00:40:23.410 align:start position:0%
org then go to Docs on the left side go
to<00:40:21.230><c> version</c><00:40:21.770><c> eight</c><00:40:22.220><c> point</c><00:40:22.850><c> nine</c><00:40:22.940><c> point</c><00:40:23.360><c> three</c>

00:40:23.410 --> 00:40:23.420 align:start position:0%
to version eight point nine point three
 

00:40:23.420 --> 00:40:25.240 align:start position:0%
to version eight point nine point three
that's<00:40:23.840><c> the</c><00:40:24.050><c> current</c><00:40:24.380><c> stable</c><00:40:24.920><c> release</c>

00:40:25.240 --> 00:40:25.250 align:start position:0%
that's the current stable release
 

00:40:25.250 --> 00:40:27.010 align:start position:0%
that's the current stable release
chances<00:40:26.180><c> are</c><00:40:26.300><c> by</c><00:40:26.450><c> the</c><00:40:26.510><c> time</c><00:40:26.720><c> you're</c><00:40:26.870><c> watching</c>

00:40:27.010 --> 00:40:27.020 align:start position:0%
chances are by the time you're watching
 

00:40:27.020 --> 00:40:28.420 align:start position:0%
chances are by the time you're watching
this<00:40:27.260><c> video</c><00:40:27.470><c> this</c><00:40:27.740><c> version</c><00:40:28.010><c> might</c><00:40:28.310><c> be</c>

00:40:28.420 --> 00:40:28.430 align:start position:0%
this video this version might be
 

00:40:28.430 --> 00:40:30.460 align:start position:0%
this video this version might be
different<00:40:28.880><c> so</c><00:40:29.480><c> that</c><00:40:29.780><c> doesn't</c><00:40:29.990><c> really</c><00:40:30.140><c> matter</c>

00:40:30.460 --> 00:40:30.470 align:start position:0%
different so that doesn't really matter
 

00:40:30.470 --> 00:40:33.040 align:start position:0%
different so that doesn't really matter
just<00:40:30.560><c> pick</c><00:40:30.950><c> that</c><00:40:31.100><c> version</c><00:40:31.690><c> now</c><00:40:32.690><c> hearing</c><00:40:32.960><c> the</c>

00:40:33.040 --> 00:40:33.050 align:start position:0%
just pick that version now hearing the
 

00:40:33.050 --> 00:40:36.280 align:start position:0%
just pick that version now hearing the
table<00:40:33.410><c> of</c><00:40:33.500><c> contents</c><00:40:34.190><c> we</c><00:40:35.090><c> can</c><00:40:35.270><c> see</c><00:40:35.480><c> the</c><00:40:36.020><c> built</c>

00:40:36.280 --> 00:40:36.290 align:start position:0%
table of contents we can see the built
 

00:40:36.290 --> 00:40:38.170 align:start position:0%
table of contents we can see the built
in<00:40:36.440><c> modules</c><00:40:36.620><c> of</c><00:40:37.070><c> course</c><00:40:37.730><c> not</c>

00:40:38.170 --> 00:40:38.180 align:start position:0%
in modules of course not
 

00:40:38.180 --> 00:40:39.940 align:start position:0%
in modules of course not
everything<00:40:38.600><c> you</c><00:40:38.690><c> see</c><00:40:38.840><c> here</c><00:40:39.050><c> is</c><00:40:39.200><c> a</c><00:40:39.230><c> module</c><00:40:39.710><c> for</c>

00:40:39.940 --> 00:40:39.950 align:start position:0%
everything you see here is a module for
 

00:40:39.950 --> 00:40:41.500 align:start position:0%
everything you see here is a module for
example<00:40:40.280><c> we</c><00:40:40.370><c> have</c><00:40:40.490><c> console</c><00:40:41.030><c> which</c><00:40:41.240><c> is</c><00:40:41.270><c> our</c>

00:40:41.500 --> 00:40:41.510 align:start position:0%
example we have console which is our
 

00:40:41.510 --> 00:40:43.990 align:start position:0%
example we have console which is our
console<00:40:41.990><c> object</c><00:40:42.470><c> we</c><00:40:43.100><c> have</c><00:40:43.130><c> buffer</c><00:40:43.730><c> which</c>

00:40:43.990 --> 00:40:44.000 align:start position:0%
console object we have buffer which
 

00:40:44.000 --> 00:40:45.850 align:start position:0%
console object we have buffer which
we're<00:40:44.180><c> going</c><00:40:44.360><c> to</c><00:40:44.480><c> learn</c><00:40:44.630><c> about</c><00:40:44.810><c> in</c><00:40:45.140><c> the</c><00:40:45.500><c> future</c>

00:40:45.850 --> 00:40:45.860 align:start position:0%
we're going to learn about in the future
 

00:40:45.860 --> 00:40:47.710 align:start position:0%
we're going to learn about in the future
in<00:40:45.980><c> this</c><00:40:46.130><c> course</c><00:40:46.430><c> again</c><00:40:46.970><c> that's</c><00:40:47.180><c> a</c><00:40:47.270><c> global</c>

00:40:47.710 --> 00:40:47.720 align:start position:0%
in this course again that's a global
 

00:40:47.720 --> 00:40:49.600 align:start position:0%
in this course again that's a global
object<00:40:48.230><c> but</c><00:40:48.830><c> you</c><00:40:48.920><c> can</c><00:40:49.040><c> see</c><00:40:49.160><c> that</c><00:40:49.340><c> this</c><00:40:49.430><c> is</c><00:40:49.580><c> a</c>

00:40:49.600 --> 00:40:49.610 align:start position:0%
object but you can see that this is a
 

00:40:49.610 --> 00:40:52.900 align:start position:0%
object but you can see that this is a
fairly<00:40:50.060><c> short</c><00:40:50.930><c> list</c><00:40:51.590><c> and</c><00:40:51.890><c> some</c><00:40:52.490><c> of</c><00:40:52.580><c> the</c><00:40:52.700><c> items</c>

00:40:52.900 --> 00:40:52.910 align:start position:0%
fairly short list and some of the items
 

00:40:52.910 --> 00:40:55.930 align:start position:0%
fairly short list and some of the items
in<00:40:53.330><c> this</c><00:40:53.420><c> list</c><00:40:53.480><c> are</c><00:40:53.900><c> built</c><00:40:54.740><c> in</c><00:40:54.890><c> modules</c><00:40:55.070><c> in</c><00:40:55.550><c> no</c>

00:40:55.930 --> 00:40:55.940 align:start position:0%
in this list are built in modules in no
 

00:40:55.940 --> 00:40:58.060 align:start position:0%
in this list are built in modules in no
so<00:40:56.390><c> just</c><00:40:56.840><c> that</c><00:40:57.170><c> you</c><00:40:57.440><c> can</c><00:40:57.560><c> see</c><00:40:57.740><c> there</c><00:40:57.920><c> are</c><00:40:57.980><c> not</c>

00:40:58.060 --> 00:40:58.070 align:start position:0%
so just that you can see there are not
 

00:40:58.070 --> 00:41:01.600 align:start position:0%
so just that you can see there are not
many<00:40:58.280><c> modules</c><00:40:59.110><c> built</c><00:41:00.110><c> into</c><00:41:00.530><c> note</c><00:41:00.710><c> I'm</c><00:41:01.370><c> gonna</c>

00:41:01.600 --> 00:41:01.610 align:start position:0%
many modules built into note I'm gonna
 

00:41:01.610 --> 00:41:04.120 align:start position:0%
many modules built into note I'm gonna
highlight<00:41:01.880><c> a</c><00:41:02.150><c> few</c><00:41:02.660><c> very</c><00:41:02.960><c> useful</c><00:41:03.350><c> modules</c><00:41:03.560><c> that</c>

00:41:04.120 --> 00:41:04.130 align:start position:0%
highlight a few very useful modules that
 

00:41:04.130 --> 00:41:06.220 align:start position:0%
highlight a few very useful modules that
you<00:41:04.250><c> should</c><00:41:04.430><c> be</c><00:41:04.550><c> aware</c><00:41:04.730><c> of</c><00:41:04.910><c> for</c><00:41:05.720><c> example</c><00:41:05.810><c> we</c>

00:41:06.220 --> 00:41:06.230 align:start position:0%
you should be aware of for example we
 

00:41:06.230 --> 00:41:09.550 align:start position:0%
you should be aware of for example we
have<00:41:06.470><c> file</c><00:41:07.190><c> system</c><00:41:07.640><c> to</c><00:41:08.240><c> work</c><00:41:08.390><c> with</c><00:41:08.570><c> files</c><00:41:08.810><c> we</c>

00:41:09.550 --> 00:41:09.560 align:start position:0%
have file system to work with files we
 

00:41:09.560 --> 00:41:11.170 align:start position:0%
have file system to work with files we
have<00:41:09.590><c> HTTP</c><00:41:10.490><c> that</c><00:41:10.670><c> you're</c><00:41:10.790><c> going</c><00:41:10.940><c> to</c><00:41:10.970><c> learn</c>

00:41:11.170 --> 00:41:11.180 align:start position:0%
have HTTP that you're going to learn
 

00:41:11.180 --> 00:41:13.630 align:start position:0%
have HTTP that you're going to learn
about<00:41:11.240><c> later</c><00:41:12.140><c> in</c><00:41:12.320><c> this</c><00:41:12.410><c> section</c><00:41:12.650><c> so</c><00:41:13.340><c> with</c><00:41:13.490><c> this</c>

00:41:13.630 --> 00:41:13.640 align:start position:0%
about later in this section so with this
 

00:41:13.640 --> 00:41:15.880 align:start position:0%
about later in this section so with this
we<00:41:13.880><c> can</c><00:41:14.060><c> create</c><00:41:14.270><c> web</c><00:41:14.810><c> servers</c><00:41:15.230><c> that</c><00:41:15.410><c> listen</c>

00:41:15.880 --> 00:41:15.890 align:start position:0%
we can create web servers that listen
 

00:41:15.890 --> 00:41:19.870 align:start position:0%
we can create web servers that listen
for<00:41:16.070><c> HTTP</c><00:41:16.700><c> requests</c><00:41:17.300><c> we</c><00:41:17.900><c> have</c><00:41:18.110><c> OS</c><00:41:18.830><c> to</c><00:41:19.730><c> work</c>

00:41:19.870 --> 00:41:19.880 align:start position:0%
for HTTP requests we have OS to work
 

00:41:19.880 --> 00:41:22.120 align:start position:0%
for HTTP requests we have OS to work
with<00:41:20.090><c> the</c><00:41:20.180><c> operating</c><00:41:20.690><c> system</c><00:41:21.080><c> we</c><00:41:21.710><c> have</c><00:41:21.830><c> path</c>

00:41:22.120 --> 00:41:22.130 align:start position:0%
with the operating system we have path
 

00:41:22.130 --> 00:41:24.310 align:start position:0%
with the operating system we have path
which<00:41:22.760><c> gives</c><00:41:23.000><c> us</c><00:41:23.120><c> a</c><00:41:23.270><c> bunch</c><00:41:23.540><c> of</c><00:41:23.660><c> utility</c>

00:41:24.310 --> 00:41:24.320 align:start position:0%
which gives us a bunch of utility
 

00:41:24.320 --> 00:41:27.400 align:start position:0%
which gives us a bunch of utility
functions<00:41:24.800><c> for</c><00:41:25.310><c> working</c><00:41:25.640><c> with</c><00:41:25.820><c> paths</c><00:41:26.290><c> we</c><00:41:27.290><c> have</c>

00:41:27.400 --> 00:41:27.410 align:start position:0%
functions for working with paths we have
 

00:41:27.410 --> 00:41:29.380 align:start position:0%
functions for working with paths we have
process<00:41:28.010><c> that</c><00:41:28.310><c> gives</c><00:41:28.460><c> us</c><00:41:28.670><c> information</c><00:41:28.880><c> about</c>

00:41:29.380 --> 00:41:29.390 align:start position:0%
process that gives us information about
 

00:41:29.390 --> 00:41:31.480 align:start position:0%
process that gives us information about
the<00:41:29.630><c> current</c><00:41:29.930><c> process</c><00:41:30.140><c> we</c><00:41:30.980><c> have</c><00:41:31.100><c> query</c>

00:41:31.480 --> 00:41:31.490 align:start position:0%
the current process we have query
 

00:41:31.490 --> 00:41:33.570 align:start position:0%
the current process we have query
strings<00:41:31.850><c> which</c><00:41:32.210><c> is</c><00:41:32.360><c> very</c><00:41:32.660><c> useful</c><00:41:32.840><c> in</c><00:41:33.260><c> building</c>

00:41:33.570 --> 00:41:33.580 align:start position:0%
strings which is very useful in building
 

00:41:33.580 --> 00:41:37.060 align:start position:0%
strings which is very useful in building
HTTP<00:41:34.580><c> services</c><00:41:35.060><c> we</c><00:41:35.930><c> have</c><00:41:36.050><c> a</c><00:41:36.080><c> stream</c><00:41:36.590><c> which</c>

00:41:37.060 --> 00:41:37.070 align:start position:0%
HTTP services we have a stream which
 

00:41:37.070 --> 00:41:38.860 align:start position:0%
HTTP services we have a stream which
allows<00:41:37.370><c> us</c><00:41:37.580><c> to</c><00:41:37.820><c> work</c><00:41:37.970><c> with</c><00:41:38.210><c> streams</c><00:41:38.660><c> of</c><00:41:38.840><c> data</c>

00:41:38.860 --> 00:41:38.870 align:start position:0%
allows us to work with streams of data
 

00:41:38.870 --> 00:41:40.750 align:start position:0%
allows us to work with streams of data
again<00:41:39.830><c> you're</c><00:41:39.980><c> going</c><00:41:40.130><c> to</c><00:41:40.220><c> learn</c><00:41:40.340><c> about</c><00:41:40.520><c> this</c>

00:41:40.750 --> 00:41:40.760 align:start position:0%
again you're going to learn about this
 

00:41:40.760 --> 00:41:42.490 align:start position:0%
again you're going to learn about this
in<00:41:40.820><c> the</c><00:41:41.030><c> future</c><00:41:41.360><c> and</c><00:41:41.570><c> a</c><00:41:42.020><c> bunch</c><00:41:42.200><c> of</c><00:41:42.260><c> other</c>

00:41:42.490 --> 00:41:42.500 align:start position:0%
in the future and a bunch of other
 

00:41:42.500 --> 00:41:44.800 align:start position:0%
in the future and a bunch of other
modules<00:41:43.010><c> now</c><00:41:43.190><c> in</c><00:41:44.120><c> this</c><00:41:44.240><c> lecture</c><00:41:44.540><c> we're</c><00:41:44.720><c> going</c>

00:41:44.800 --> 00:41:44.810 align:start position:0%
modules now in this lecture we're going
 

00:41:44.810 --> 00:41:48.940 align:start position:0%
modules now in this lecture we're going
to<00:41:44.900><c> look</c><00:41:45.080><c> at</c><00:41:45.260><c> is</c><00:41:45.920><c> passed</c><00:41:46.280><c> module</c><00:41:47.080><c> so</c><00:41:48.080><c> on</c><00:41:48.680><c> the</c>

00:41:48.940 --> 00:41:48.950 align:start position:0%
to look at is passed module so on the
 

00:41:48.950 --> 00:41:51.130 align:start position:0%
to look at is passed module so on the
documentation<00:41:49.460><c> you</c><00:41:49.700><c> can</c><00:41:49.820><c> see</c><00:41:50.000><c> all</c><00:41:50.240><c> the</c>

00:41:51.130 --> 00:41:51.140 align:start position:0%
documentation you can see all the
 

00:41:51.140 --> 00:41:53.980 align:start position:0%
documentation you can see all the
functions<00:41:51.560><c> defined</c><00:41:51.980><c> in</c><00:41:52.160><c> this</c><00:41:52.490><c> module</c><00:41:52.700><c> in</c><00:41:53.030><c> this</c>

00:41:53.980 --> 00:41:53.990 align:start position:0%
functions defined in this module in this
 

00:41:53.990 --> 00:41:55.990 align:start position:0%
functions defined in this module in this
lecture<00:41:54.260><c> we're</c><00:41:54.410><c> going</c><00:41:54.560><c> to</c><00:41:54.650><c> use</c><00:41:54.830><c> the</c><00:41:55.670><c> parse</c>

00:41:55.990 --> 00:41:56.000 align:start position:0%
lecture we're going to use the parse
 

00:41:56.000 --> 00:41:58.470 align:start position:0%
lecture we're going to use the parse
method<00:41:56.590><c> now</c><00:41:57.590><c> if</c><00:41:58.220><c> you</c>

00:41:58.470 --> 00:41:58.480 align:start position:0%
method now if you
 

00:41:58.480 --> 00:42:01.470 align:start position:0%
method now if you
scroll<00:41:58.720><c> down</c><00:41:59.340><c> you</c><00:42:00.340><c> can</c><00:42:00.369><c> see</c><00:42:00.520><c> how</c><00:42:00.700><c> you</c><00:42:01.000><c> can</c><00:42:01.270><c> use</c>

00:42:01.470 --> 00:42:01.480 align:start position:0%
scroll down you can see how you can use
 

00:42:01.480 --> 00:42:04.470 align:start position:0%
scroll down you can see how you can use
this<00:42:01.660><c> module</c><00:42:02.140><c> so</c><00:42:02.820><c> I've</c><00:42:03.820><c> seen</c><00:42:04.030><c> the</c><00:42:04.150><c> required</c>

00:42:04.470 --> 00:42:04.480 align:start position:0%
this module so I've seen the required
 

00:42:04.480 --> 00:42:07.200 align:start position:0%
this module so I've seen the required
function<00:42:04.840><c> before</c><00:42:05.170><c> we</c><00:42:05.800><c> call</c><00:42:06.070><c> the</c><00:42:06.220><c> module</c><00:42:06.640><c> using</c>

00:42:07.200 --> 00:42:07.210 align:start position:0%
function before we call the module using
 

00:42:07.210 --> 00:42:09.180 align:start position:0%
function before we call the module using
the<00:42:07.300><c> required</c><00:42:07.540><c> function</c><00:42:08.050><c> get</c><00:42:08.710><c> the</c><00:42:08.830><c> result</c>

00:42:09.180 --> 00:42:09.190 align:start position:0%
the required function get the result
 

00:42:09.190 --> 00:42:12.330 align:start position:0%
the required function get the result
which<00:42:09.609><c> is</c><00:42:09.730><c> an</c><00:42:09.850><c> object</c><00:42:10.480><c> and</c><00:42:10.630><c> store</c><00:42:11.530><c> it</c><00:42:11.680><c> in</c><00:42:11.920><c> a</c>

00:42:12.330 --> 00:42:12.340 align:start position:0%
which is an object and store it in a
 

00:42:12.340 --> 00:42:16.500 align:start position:0%
which is an object and store it in a
constant<00:42:13.500><c> so</c><00:42:14.500><c> back</c><00:42:14.680><c> in</c><00:42:14.800><c> vs</c><00:42:15.040><c> code</c><00:42:15.250><c> in</c><00:42:15.460><c> app</c><00:42:15.850><c> Jas</c>

00:42:16.500 --> 00:42:16.510 align:start position:0%
constant so back in vs code in app Jas
 

00:42:16.510 --> 00:42:19.940 align:start position:0%
constant so back in vs code in app Jas
let's<00:42:17.050><c> call</c><00:42:17.290><c> require</c><00:42:17.950><c> and</c><00:42:18.250><c> as</c><00:42:19.150><c> the</c><00:42:19.359><c> argument</c>

00:42:19.940 --> 00:42:19.950 align:start position:0%
let's call require and as the argument
 

00:42:19.950 --> 00:42:24.030 align:start position:0%
let's call require and as the argument
use<00:42:20.950><c> half</c><00:42:21.690><c> now</c><00:42:22.690><c> the</c><00:42:22.930><c> argument</c><00:42:23.619><c> that</c><00:42:23.650><c> we</c><00:42:23.859><c> gave</c>

00:42:24.030 --> 00:42:24.040 align:start position:0%
use half now the argument that we gave
 

00:42:24.040 --> 00:42:26.700 align:start position:0%
use half now the argument that we gave
to<00:42:24.070><c> this</c><00:42:24.340><c> require</c><00:42:24.730><c> function</c><00:42:25.050><c> no</c><00:42:26.050><c> it</c><00:42:26.200><c> assumes</c>

00:42:26.700 --> 00:42:26.710 align:start position:0%
to this require function no it assumes
 

00:42:26.710 --> 00:42:30.090 align:start position:0%
to this require function no it assumes
that<00:42:27.010><c> this</c><00:42:27.490><c> is</c><00:42:27.700><c> a</c><00:42:27.850><c> built</c><00:42:28.210><c> in</c><00:42:28.420><c> module</c><00:42:28.840><c> if</c><00:42:29.770><c> there</c>

00:42:30.090 --> 00:42:30.100 align:start position:0%
that this is a built in module if there
 

00:42:30.100 --> 00:42:32.040 align:start position:0%
that this is a built in module if there
is<00:42:30.190><c> no</c><00:42:30.460><c> built</c><00:42:30.730><c> in</c><00:42:30.880><c> module</c><00:42:31.330><c> by</c><00:42:31.720><c> the</c><00:42:31.780><c> name</c>

00:42:32.040 --> 00:42:32.050 align:start position:0%
is no built in module by the name
 

00:42:32.050 --> 00:42:35.070 align:start position:0%
is no built in module by the name
specified<00:42:32.650><c> here</c><00:42:32.980><c> then</c><00:42:33.700><c> node</c><00:42:34.510><c> looks</c><00:42:34.750><c> for</c><00:42:34.990><c> the</c>

00:42:35.070 --> 00:42:35.080 align:start position:0%
specified here then node looks for the
 

00:42:35.080 --> 00:42:37.710 align:start position:0%
specified here then node looks for the
existence<00:42:35.619><c> of</c><00:42:35.800><c> a</c><00:42:35.980><c> relative</c><00:42:36.430><c> path</c><00:42:36.670><c> to</c><00:42:37.300><c> a</c><00:42:37.330><c> file</c>

00:42:37.710 --> 00:42:37.720 align:start position:0%
existence of a relative path to a file
 

00:42:37.720 --> 00:42:40.890 align:start position:0%
existence of a relative path to a file
in<00:42:38.020><c> this</c><00:42:38.440><c> application</c><00:42:39.100><c> so</c><00:42:39.340><c> if</c><00:42:39.640><c> we</c><00:42:39.940><c> have</c><00:42:40.119><c> period</c>

00:42:40.890 --> 00:42:40.900 align:start position:0%
in this application so if we have period
 

00:42:40.900 --> 00:42:44.730 align:start position:0%
in this application so if we have period
/<00:42:41.410><c> or</c><00:42:41.680><c> period</c><00:42:42.640><c> period</c><00:42:42.880><c> /</c><00:42:43.390><c> whatever</c><00:42:44.109><c> then</c>

00:42:44.730 --> 00:42:44.740 align:start position:0%
/ or period period / whatever then
 

00:42:44.740 --> 00:42:47.250 align:start position:0%
/ or period period / whatever then
notice<00:42:45.190><c> oome</c><00:42:45.369><c> this</c><00:42:45.940><c> is</c><00:42:46.090><c> a</c><00:42:46.119><c> file</c><00:42:46.450><c> in</c><00:42:46.660><c> this</c>

00:42:47.250 --> 00:42:47.260 align:start position:0%
notice oome this is a file in this
 

00:42:47.260 --> 00:42:49.530 align:start position:0%
notice oome this is a file in this
application<00:42:47.830><c> now</c><00:42:48.640><c> in</c><00:42:48.820><c> this</c><00:42:48.940><c> case</c><00:42:49.150><c> we're</c><00:42:49.420><c> going</c>

00:42:49.530 --> 00:42:49.540 align:start position:0%
application now in this case we're going
 

00:42:49.540 --> 00:42:51.590 align:start position:0%
application now in this case we're going
to<00:42:49.630><c> load</c><00:42:49.780><c> the</c><00:42:50.290><c> building</c><00:42:50.740><c> path</c><00:42:50.920><c> module</c><00:42:51.369><c> and</c>

00:42:51.590 --> 00:42:51.600 align:start position:0%
to load the building path module and
 

00:42:51.600 --> 00:42:55.290 align:start position:0%
to load the building path module and
store<00:42:52.600><c> it</c><00:42:52.690><c> in</c><00:42:52.840><c> a</c><00:42:52.900><c> constant</c><00:42:53.380><c> called</c><00:42:53.680><c> pass</c><00:42:54.300><c> so</c>

00:42:55.290 --> 00:42:55.300 align:start position:0%
store it in a constant called pass so
 

00:42:55.300 --> 00:42:57.599 align:start position:0%
store it in a constant called pass so
this<00:42:55.450><c> is</c><00:42:55.540><c> an</c><00:42:55.630><c> object</c><00:42:55.840><c> with</c><00:42:56.740><c> a</c><00:42:56.770><c> bunch</c><00:42:57.040><c> of</c><00:42:57.190><c> useful</c>

00:42:57.599 --> 00:42:57.609 align:start position:0%
this is an object with a bunch of useful
 

00:42:57.609 --> 00:43:01.020 align:start position:0%
this is an object with a bunch of useful
methods<00:42:58.859><c> the</c><00:42:59.859><c> method</c><00:43:00.190><c> we're</c><00:43:00.310><c> going</c><00:43:00.340><c> to</c><00:43:00.550><c> use</c><00:43:00.760><c> is</c>

00:43:01.020 --> 00:43:01.030 align:start position:0%
methods the method we're going to use is
 

00:43:01.030 --> 00:43:04.200 align:start position:0%
methods the method we're going to use is
the<00:43:01.900><c> parse</c><00:43:02.230><c> method</c><00:43:02.730><c> so</c><00:43:03.730><c> I'm</c><00:43:03.850><c> gonna</c><00:43:03.970><c> give</c><00:43:04.180><c> it</c>

00:43:04.200 --> 00:43:04.210 align:start position:0%
the parse method so I'm gonna give it
 

00:43:04.210 --> 00:43:07.950 align:start position:0%
the parse method so I'm gonna give it
this<00:43:04.750><c> underline</c><00:43:05.500><c> underline</c><00:43:05.950><c> file</c><00:43:06.820><c> name</c><00:43:07.090><c> which</c>

00:43:07.950 --> 00:43:07.960 align:start position:0%
this underline underline file name which
 

00:43:07.960 --> 00:43:10.230 align:start position:0%
this underline underline file name which
is<00:43:08.109><c> one</c><00:43:08.290><c> of</c><00:43:08.380><c> the</c><00:43:08.470><c> arguments</c><00:43:08.920><c> and</c><00:43:09.250><c> the</c><00:43:09.820><c> module</c>

00:43:10.230 --> 00:43:10.240 align:start position:0%
is one of the arguments and the module
 

00:43:10.240 --> 00:43:11.760 align:start position:0%
is one of the arguments and the module
wrapper<00:43:10.510><c> function</c><00:43:10.840><c> that</c><00:43:11.200><c> you</c><00:43:11.320><c> saw</c><00:43:11.500><c> in</c><00:43:11.740><c> the</c>

00:43:11.760 --> 00:43:11.770 align:start position:0%
wrapper function that you saw in the
 

00:43:11.770 --> 00:43:14.750 align:start position:0%
wrapper function that you saw in the
last<00:43:11.950><c> lecture</c><00:43:12.100><c> so</c><00:43:12.720><c> let's</c><00:43:13.720><c> call</c><00:43:13.960><c> this</c><00:43:14.200><c> and</c>

00:43:14.750 --> 00:43:14.760 align:start position:0%
last lecture so let's call this and
 

00:43:14.760 --> 00:43:20.130 align:start position:0%
last lecture so let's call this and
store<00:43:15.760><c> the</c><00:43:15.880><c> result</c><00:43:16.270><c> in</c><00:43:16.560><c> pass</c><00:43:17.700><c> object</c><00:43:18.700><c> and</c><00:43:19.140><c> then</c>

00:43:20.130 --> 00:43:20.140 align:start position:0%
store the result in pass object and then
 

00:43:20.140 --> 00:43:25.430 align:start position:0%
store the result in pass object and then
finally<00:43:20.590><c> log</c><00:43:21.490><c> it</c><00:43:21.640><c> on</c><00:43:21.790><c> the</c><00:43:21.940><c> console</c><00:43:22.680><c> has</c><00:43:23.760><c> object</c>

00:43:25.430 --> 00:43:25.440 align:start position:0%
finally log it on the console has object
 

00:43:25.440 --> 00:43:29.070 align:start position:0%
finally log it on the console has object
now<00:43:26.440><c> back</c><00:43:26.710><c> in</c><00:43:26.859><c> the</c><00:43:26.950><c> terminal</c><00:43:27.810><c> let's</c><00:43:28.810><c> run</c><00:43:28.990><c> this</c>

00:43:29.070 --> 00:43:29.080 align:start position:0%
now back in the terminal let's run this
 

00:43:29.080 --> 00:43:31.800 align:start position:0%
now back in the terminal let's run this
application<00:43:29.910><c> so</c><00:43:30.910><c> this</c><00:43:31.090><c> is</c><00:43:31.210><c> the</c><00:43:31.300><c> path</c><00:43:31.510><c> object</c>

00:43:31.800 --> 00:43:31.810 align:start position:0%
application so this is the path object
 

00:43:31.810 --> 00:43:34.260 align:start position:0%
application so this is the path object
it<00:43:32.200><c> has</c><00:43:32.350><c> a</c><00:43:32.380><c> few</c><00:43:32.710><c> useful</c><00:43:33.190><c> properties</c><00:43:33.970><c> we</c><00:43:34.119><c> have</c>

00:43:34.260 --> 00:43:34.270 align:start position:0%
it has a few useful properties we have
 

00:43:34.270 --> 00:43:37.740 align:start position:0%
it has a few useful properties we have
root<00:43:34.810><c> we</c><00:43:35.680><c> have</c><00:43:35.710><c> dur</c><00:43:36.369><c> which</c><00:43:37.030><c> specifies</c><00:43:37.720><c> the</c>

00:43:37.740 --> 00:43:37.750 align:start position:0%
root we have dur which specifies the
 

00:43:37.750 --> 00:43:41.930 align:start position:0%
root we have dur which specifies the
path<00:43:38.619><c> to</c><00:43:38.890><c> the</c><00:43:38.980><c> folder</c><00:43:39.250><c> containing</c><00:43:40.230><c> this</c><00:43:41.230><c> file</c>

00:43:41.930 --> 00:43:41.940 align:start position:0%
path to the folder containing this file
 

00:43:41.940 --> 00:43:44.760 align:start position:0%
path to the folder containing this file
here's<00:43:42.940><c> the</c><00:43:43.090><c> name</c><00:43:43.210><c> of</c><00:43:43.240><c> the</c><00:43:43.450><c> file</c><00:43:43.660><c> after</c><00:43:44.080><c> jas</c>

00:43:44.760 --> 00:43:44.770 align:start position:0%
here's the name of the file after jas
 

00:43:44.770 --> 00:43:47.460 align:start position:0%
here's the name of the file after jas
here's<00:43:45.700><c> the</c><00:43:45.880><c> extension</c>

00:43:47.460 --> 00:43:47.470 align:start position:0%
here's the extension
 

00:43:47.470 --> 00:43:49.109 align:start position:0%
here's the extension
the<00:43:47.650><c> name</c><00:43:47.770><c> of</c><00:43:47.890><c> the</c><00:43:47.980><c> file</c><00:43:48.220><c> without</c><00:43:48.970><c> the</c>

00:43:49.109 --> 00:43:49.119 align:start position:0%
the name of the file without the
 

00:43:49.119 --> 00:43:50.910 align:start position:0%
the name of the file without the
extension<00:43:49.450><c> so</c><00:43:50.380><c> if</c><00:43:50.500><c> you</c><00:43:50.590><c> want</c><00:43:50.710><c> to</c><00:43:50.740><c> work</c><00:43:50.890><c> with</c>

00:43:50.910 --> 00:43:50.920 align:start position:0%
extension so if you want to work with
 

00:43:50.920 --> 00:43:53.339 align:start position:0%
extension so if you want to work with
pads<00:43:51.340><c> it's</c><00:43:51.910><c> much</c><00:43:52.119><c> easier</c><00:43:52.510><c> to</c><00:43:52.720><c> use</c><00:43:52.869><c> the</c><00:43:53.080><c> past</c>

00:43:53.339 --> 00:43:53.349 align:start position:0%
pads it's much easier to use the past
 

00:43:53.349 --> 00:43:55.500 align:start position:0%
pads it's much easier to use the past
module<00:43:53.800><c> as</c><00:43:53.980><c> opposed</c><00:43:54.400><c> to</c><00:43:54.520><c> working</c><00:43:55.359><c> with</c>

00:43:55.500 --> 00:43:55.510 align:start position:0%
module as opposed to working with
 

00:43:55.510 --> 00:43:57.780 align:start position:0%
module as opposed to working with
strings<00:43:55.840><c> in</c><00:43:56.800><c> the</c><00:43:56.950><c> next</c><00:43:57.190><c> lecture</c><00:43:57.430><c> we're</c><00:43:57.670><c> going</c>

00:43:57.780 --> 00:43:57.790 align:start position:0%
strings in the next lecture we're going
 

00:43:57.790 --> 00:44:00.089 align:start position:0%
strings in the next lecture we're going
to<00:43:57.880><c> look</c><00:43:57.970><c> at</c><00:43:58.210><c> another</c><00:43:58.630><c> built-in</c><00:43:59.020><c> module</c><00:43:59.619><c> that</c>

00:44:00.089 --> 00:44:00.099 align:start position:0%
to look at another built-in module that
 

00:44:00.099 --> 00:44:02.370 align:start position:0%
to look at another built-in module that
gives<00:44:00.340><c> us</c><00:44:00.490><c> information</c><00:44:00.700><c> about</c><00:44:01.300><c> the</c><00:44:01.660><c> operating</c>

00:44:02.370 --> 00:44:02.380 align:start position:0%
gives us information about the operating
 

00:44:02.380 --> 00:44:07.750 align:start position:0%
gives us information about the operating
system

00:44:07.750 --> 00:44:07.760 align:start position:0%
 
 

00:44:07.760 --> 00:44:09.280 align:start position:0%
 
in<00:44:07.820><c> this</c><00:44:08.420><c> lecture</c><00:44:08.600><c> I'm</c><00:44:08.900><c> going</c><00:44:08.930><c> to</c><00:44:09.080><c> show</c><00:44:09.260><c> you</c>

00:44:09.280 --> 00:44:09.290 align:start position:0%
in this lecture I'm going to show you
 

00:44:09.290 --> 00:44:11.440 align:start position:0%
in this lecture I'm going to show you
how<00:44:09.619><c> to</c><00:44:09.680><c> get</c><00:44:10.010><c> information</c><00:44:10.430><c> about</c><00:44:10.970><c> the</c><00:44:11.270><c> current</c>

00:44:11.440 --> 00:44:11.450 align:start position:0%
how to get information about the current
 

00:44:11.450 --> 00:44:13.870 align:start position:0%
how to get information about the current
operating<00:44:12.290><c> system</c><00:44:12.650><c> so</c><00:44:13.340><c> if</c><00:44:13.400><c> I</c><00:44:13.550><c> can</c><00:44:13.730><c> no</c>

00:44:13.870 --> 00:44:13.880 align:start position:0%
operating system so if I can no
 

00:44:13.880 --> 00:44:17.020 align:start position:0%
operating system so if I can no
documentation<00:44:14.600><c> in</c><00:44:14.990><c> the</c><00:44:15.260><c> list</c><00:44:15.440><c> of</c><00:44:15.590><c> modules</c><00:44:16.030><c> if</c>

00:44:17.020 --> 00:44:17.030 align:start position:0%
documentation in the list of modules if
 

00:44:17.030 --> 00:44:19.720 align:start position:0%
documentation in the list of modules if
you<00:44:17.180><c> scroll</c><00:44:17.450><c> down</c><00:44:17.510><c> you</c><00:44:17.869><c> can</c><00:44:17.930><c> see</c><00:44:18.050><c> this</c><00:44:18.950><c> OS</c>

00:44:19.720 --> 00:44:19.730 align:start position:0%
you scroll down you can see this OS
 

00:44:19.730 --> 00:44:22.810 align:start position:0%
you scroll down you can see this OS
module<00:44:20.660><c> let's</c><00:44:21.050><c> have</c><00:44:21.170><c> a</c><00:44:21.230><c> quick</c><00:44:21.440><c> look</c><00:44:21.470><c> here</c><00:44:21.820><c> so</c>

00:44:22.810 --> 00:44:22.820 align:start position:0%
module let's have a quick look here so
 

00:44:22.820 --> 00:44:24.340 align:start position:0%
module let's have a quick look here so
these<00:44:23.119><c> are</c><00:44:23.300><c> the</c><00:44:23.420><c> methods</c><00:44:23.960><c> that</c><00:44:24.050><c> are</c><00:44:24.140><c> available</c>

00:44:24.340 --> 00:44:24.350 align:start position:0%
these are the methods that are available
 

00:44:24.350 --> 00:44:27.880 align:start position:0%
these are the methods that are available
in<00:44:25.100><c> this</c><00:44:25.640><c> module</c><00:44:26.090><c> for</c><00:44:26.690><c> example</c><00:44:27.080><c> we</c><00:44:27.170><c> have</c><00:44:27.320><c> free</c>

00:44:27.880 --> 00:44:27.890 align:start position:0%
in this module for example we have free
 

00:44:27.890 --> 00:44:30.099 align:start position:0%
in this module for example we have free
mem<00:44:28.130><c> which</c><00:44:28.580><c> returns</c><00:44:28.970><c> the</c><00:44:29.420><c> amount</c><00:44:29.660><c> of</c><00:44:29.810><c> free</c>

00:44:30.099 --> 00:44:30.109 align:start position:0%
mem which returns the amount of free
 

00:44:30.109 --> 00:44:31.150 align:start position:0%
mem which returns the amount of free
memory<00:44:30.380><c> on</c><00:44:30.680><c> this</c><00:44:30.770><c> machine</c>

00:44:31.150 --> 00:44:31.160 align:start position:0%
memory on this machine
 

00:44:31.160 --> 00:44:33.670 align:start position:0%
memory on this machine
you<00:44:31.670><c> also</c><00:44:31.850><c> have</c><00:44:32.210><c> total</c><00:44:33.050><c> mem</c><00:44:33.230><c> which</c><00:44:33.470><c> is</c><00:44:33.560><c> the</c>

00:44:33.670 --> 00:44:33.680 align:start position:0%
you also have total mem which is the
 

00:44:33.680 --> 00:44:35.650 align:start position:0%
you also have total mem which is the
total<00:44:34.010><c> memory</c><00:44:34.220><c> we</c><00:44:34.970><c> can</c><00:44:35.030><c> get</c><00:44:35.300><c> information</c>

00:44:35.650 --> 00:44:35.660 align:start position:0%
total memory we can get information
 

00:44:35.660 --> 00:44:38.050 align:start position:0%
total memory we can get information
about<00:44:36.140><c> the</c><00:44:36.500><c> current</c><00:44:36.740><c> user</c><00:44:37.070><c> we</c><00:44:37.609><c> can</c><00:44:37.790><c> get</c><00:44:37.940><c> the</c>

00:44:38.050 --> 00:44:38.060 align:start position:0%
about the current user we can get the
 

00:44:38.060 --> 00:44:41.109 align:start position:0%
about the current user we can get the
uptime<00:44:38.600><c> of</c><00:44:38.810><c> this</c><00:44:38.990><c> machine</c><00:44:39.350><c> and</c><00:44:39.530><c> so</c><00:44:40.100><c> on</c><00:44:40.220><c> so</c>

00:44:41.109 --> 00:44:41.119 align:start position:0%
uptime of this machine and so on so
 

00:44:41.119 --> 00:44:42.730 align:start position:0%
uptime of this machine and so on so
let's<00:44:41.300><c> use</c><00:44:41.420><c> a</c><00:44:41.600><c> couple</c><00:44:41.810><c> of</c><00:44:41.960><c> these</c><00:44:42.080><c> methods</c><00:44:42.530><c> here</c>

00:44:42.730 --> 00:44:42.740 align:start position:0%
let's use a couple of these methods here
 

00:44:42.740 --> 00:44:45.700 align:start position:0%
let's use a couple of these methods here
so<00:44:43.730><c> if</c><00:44:44.210><c> you</c><00:44:44.630><c> scroll</c><00:44:44.930><c> down</c><00:44:44.960><c> you</c><00:44:45.320><c> can</c><00:44:45.380><c> see</c><00:44:45.590><c> this</c>

00:44:45.700 --> 00:44:45.710 align:start position:0%
so if you scroll down you can see this
 

00:44:45.710 --> 00:44:49.030 align:start position:0%
so if you scroll down you can see this
is<00:44:45.830><c> how</c><00:44:46.040><c> we</c><00:44:46.100><c> load</c><00:44:46.430><c> this</c><00:44:47.150><c> OS</c><00:44:47.660><c> module</c><00:44:48.470><c> just</c><00:44:48.890><c> like</c>

00:44:49.030 --> 00:44:49.040 align:start position:0%
is how we load this OS module just like
 

00:44:49.040 --> 00:44:50.980 align:start position:0%
is how we load this OS module just like
loading<00:44:49.490><c> other</c><00:44:49.700><c> modules</c><00:44:50.270><c> we</c><00:44:50.660><c> call</c><00:44:50.869><c> the</c>

00:44:50.980 --> 00:44:50.990 align:start position:0%
loading other modules we call the
 

00:44:50.990 --> 00:44:52.750 align:start position:0%
loading other modules we call the
required<00:44:51.350><c> function</c><00:44:51.770><c> and</c><00:44:51.920><c> store</c><00:44:52.280><c> the</c><00:44:52.400><c> result</c>

00:44:52.750 --> 00:44:52.760 align:start position:0%
required function and store the result
 

00:44:52.760 --> 00:44:56.920 align:start position:0%
required function and store the result
in<00:44:52.970><c> a</c><00:44:53.300><c> constant</c><00:44:53.810><c> called</c><00:44:54.140><c> OS</c><00:44:54.740><c> or</c><00:44:55.040><c> anything</c><00:44:55.930><c> so</c>

00:44:56.920 --> 00:44:56.930 align:start position:0%
in a constant called OS or anything so
 

00:44:56.930 --> 00:44:58.450 align:start position:0%
in a constant called OS or anything so
my<00:44:57.050><c> can</c><00:44:57.200><c> be</c><00:44:57.320><c> a</c><00:44:57.350><c> scone</c><00:44:57.619><c> I'm</c><00:44:57.770><c> gonna</c><00:44:57.950><c> delete</c><00:44:58.160><c> all</c>

00:44:58.450 --> 00:44:58.460 align:start position:0%
my can be a scone I'm gonna delete all
 

00:44:58.460 --> 00:45:01.690 align:start position:0%
my can be a scone I'm gonna delete all
the<00:44:58.640><c> code</c><00:44:58.820><c> here</c><00:44:59.119><c> and</c><00:45:00.010><c> define</c><00:45:01.010><c> a</c><00:45:01.040><c> new</c><00:45:01.160><c> constant</c>

00:45:01.690 --> 00:45:01.700 align:start position:0%
the code here and define a new constant
 

00:45:01.700 --> 00:45:07.780 align:start position:0%
the code here and define a new constant
OS<00:45:02.150><c> and</c><00:45:02.800><c> study</c><00:45:03.800><c> to</c><00:45:03.950><c> require</c><00:45:04.340><c> OS</c><00:45:06.460><c> now</c><00:45:07.460><c> we</c><00:45:07.520><c> can</c>

00:45:07.780 --> 00:45:07.790 align:start position:0%
OS and study to require OS now we can
 

00:45:07.790 --> 00:45:11.740 align:start position:0%
OS and study to require OS now we can
call<00:45:08.500><c> total</c><00:45:09.500><c> mem</c><00:45:09.800><c> method</c>

00:45:11.740 --> 00:45:11.750 align:start position:0%
call total mem method
 

00:45:11.750 --> 00:45:16.330 align:start position:0%
call total mem method
or<00:45:12.430><c> free</c><00:45:13.430><c> mem</c><00:45:13.640><c> or</c><00:45:13.990><c> other</c><00:45:14.990><c> methods</c><00:45:15.410><c> so</c><00:45:16.099><c> let</c><00:45:16.220><c> me</c>

00:45:16.330 --> 00:45:16.340 align:start position:0%
or free mem or other methods so let me
 

00:45:16.340 --> 00:45:19.930 align:start position:0%
or free mem or other methods so let me
declare<00:45:16.460><c> a</c><00:45:16.640><c> variable</c><00:45:16.820><c> and</c><00:45:17.330><c> store</c><00:45:18.760><c> the</c><00:45:19.760><c> result</c>

00:45:19.930 --> 00:45:19.940 align:start position:0%
declare a variable and store the result
 

00:45:19.940 --> 00:45:22.420 align:start position:0%
declare a variable and store the result
here

00:45:22.420 --> 00:45:22.430 align:start position:0%
here
 

00:45:22.430 --> 00:45:25.990 align:start position:0%
 
and<00:45:22.599><c> similarly</c><00:45:23.599><c> for</c><00:45:23.990><c> the</c><00:45:24.140><c> free</c><00:45:24.440><c> memory</c><00:45:25.000><c> free</c>

00:45:25.990 --> 00:45:26.000 align:start position:0%
and similarly for the free memory free
 

00:45:26.000 --> 00:45:28.750 align:start position:0%
and similarly for the free memory free
memory<00:45:26.300><c> and</c><00:45:27.010><c> finally</c><00:45:28.010><c> let's</c><00:45:28.220><c> lock</c><00:45:28.490><c> these</c>

00:45:28.750 --> 00:45:28.760 align:start position:0%
memory and finally let's lock these
 

00:45:28.760 --> 00:45:33.450 align:start position:0%
memory and finally let's lock these
values<00:45:29.150><c> on</c><00:45:29.390><c> the</c><00:45:29.510><c> console</c><00:45:29.930><c> so</c><00:45:30.680><c> console</c><00:45:31.480><c> dot</c><00:45:32.480><c> log</c>

00:45:33.450 --> 00:45:33.460 align:start position:0%
values on the console so console dot log
 

00:45:33.460 --> 00:45:39.370 align:start position:0%
values on the console so console dot log
single<00:45:34.460><c> code</c><00:45:34.670><c> we</c><00:45:35.510><c> add</c><00:45:35.770><c> total</c><00:45:36.770><c> memory</c><00:45:37.609><c> and</c><00:45:38.380><c> app</c>

00:45:39.370 --> 00:45:39.380 align:start position:0%
single code we add total memory and app
 

00:45:39.380 --> 00:45:44.049 align:start position:0%
single code we add total memory and app
and<00:45:39.940><c> this</c><00:45:40.940><c> total</c><00:45:41.420><c> memory</c><00:45:42.319><c> here</c><00:45:42.880><c> now</c><00:45:43.880><c> we</c><00:45:43.940><c> can</c>

00:45:44.049 --> 00:45:44.059 align:start position:0%
and this total memory here now we can
 

00:45:44.059 --> 00:45:46.420 align:start position:0%
and this total memory here now we can
simplify<00:45:44.540><c> this</c><00:45:44.720><c> expression</c><00:45:45.020><c> by</c><00:45:46.010><c> using</c><00:45:46.040><c> a</c>

00:45:46.420 --> 00:45:46.430 align:start position:0%
simplify this expression by using a
 

00:45:46.430 --> 00:45:49.540 align:start position:0%
simplify this expression by using a
template<00:45:47.000><c> string</c><00:45:47.650><c> which</c><00:45:48.650><c> is</c><00:45:48.800><c> available</c><00:45:49.010><c> in</c>

00:45:49.540 --> 00:45:49.550 align:start position:0%
template string which is available in
 

00:45:49.550 --> 00:45:52.510 align:start position:0%
template string which is available in
more<00:45:50.390><c> recent</c><00:45:50.839><c> versions</c><00:45:51.290><c> of</c><00:45:51.410><c> JavaScript</c><00:45:52.190><c> that</c>

00:45:52.510 --> 00:45:52.520 align:start position:0%
more recent versions of JavaScript that
 

00:45:52.520 --> 00:45:58.870 align:start position:0%
more recent versions of JavaScript that
we<00:45:52.670><c> refer</c><00:45:52.970><c> to</c><00:45:53.000><c> as</c><00:45:53.920><c> es6</c><00:45:54.920><c> or</c><00:45:55.930><c> ES</c><00:45:56.950><c> 2015</c><00:45:57.950><c> which</c><00:45:58.700><c> is</c>

00:45:58.870 --> 00:45:58.880 align:start position:0%
we refer to as es6 or ES 2015 which is
 

00:45:58.880 --> 00:46:03.130 align:start position:0%
we refer to as es6 or ES 2015 which is
short<00:45:59.180><c> for</c><00:45:59.210><c> ACMA</c><00:45:59.930><c> script</c><00:46:00.800><c> 6</c><00:46:01.609><c> or</c><00:46:01.990><c> 2015</c>

00:46:03.130 --> 00:46:03.140 align:start position:0%
short for ACMA script 6 or 2015
 

00:46:03.140 --> 00:46:04.809 align:start position:0%
short for ACMA script 6 or 2015
that's<00:46:03.650><c> the</c><00:46:03.800><c> specification</c><00:46:04.430><c> that</c><00:46:04.760><c> defines</c>

00:46:04.809 --> 00:46:04.819 align:start position:0%
that's the specification that defines
 

00:46:04.819 --> 00:46:07.210 align:start position:0%
that's the specification that defines
what<00:46:05.750><c> features</c><00:46:06.200><c> are</c><00:46:06.410><c> available</c><00:46:07.010><c> in</c>

00:46:07.210 --> 00:46:07.220 align:start position:0%
what features are available in
 

00:46:07.220 --> 00:46:10.210 align:start position:0%
what features are available in
JavaScript<00:46:07.910><c> so</c><00:46:08.089><c> every</c><00:46:08.990><c> year</c><00:46:09.230><c> Ahmed</c><00:46:09.859><c> defines</c>

00:46:10.210 --> 00:46:10.220 align:start position:0%
JavaScript so every year Ahmed defines
 

00:46:10.220 --> 00:46:11.980 align:start position:0%
JavaScript so every year Ahmed defines
new<00:46:10.670><c> features</c><00:46:11.089><c> that</c><00:46:11.300><c> should</c><00:46:11.450><c> be</c><00:46:11.599><c> added</c><00:46:11.900><c> to</c>

00:46:11.980 --> 00:46:11.990 align:start position:0%
new features that should be added to
 

00:46:11.990 --> 00:46:14.290 align:start position:0%
new features that should be added to
JavaScript<00:46:12.680><c> and</c><00:46:12.890><c> as</c><00:46:13.430><c> you</c><00:46:13.640><c> know</c><00:46:13.790><c> different</c>

00:46:14.290 --> 00:46:14.300 align:start position:0%
JavaScript and as you know different
 

00:46:14.300 --> 00:46:16.720 align:start position:0%
JavaScript and as you know different
browsers<00:46:14.990><c> implement</c><00:46:15.430><c> different</c><00:46:16.430><c> set</c><00:46:16.609><c> of</c>

00:46:16.720 --> 00:46:16.730 align:start position:0%
browsers implement different set of
 

00:46:16.730 --> 00:46:19.270 align:start position:0%
browsers implement different set of
these<00:46:16.910><c> features</c><00:46:17.329><c> but</c><00:46:17.930><c> the</c><00:46:18.050><c> v8</c><00:46:18.440><c> engine</c><00:46:19.010><c> that</c><00:46:19.040><c> we</c>

00:46:19.270 --> 00:46:19.280 align:start position:0%
these features but the v8 engine that we
 

00:46:19.280 --> 00:46:21.549 align:start position:0%
these features but the v8 engine that we
have<00:46:19.490><c> inside</c><00:46:20.119><c> of</c><00:46:20.270><c> node</c><00:46:20.480><c> that's</c><00:46:21.109><c> pretty</c>

00:46:21.549 --> 00:46:21.559 align:start position:0%
have inside of node that's pretty
 

00:46:21.559 --> 00:46:23.920 align:start position:0%
have inside of node that's pretty
up-to-date<00:46:21.800><c> and</c><00:46:22.369><c> it</c><00:46:22.700><c> implements</c><00:46:23.300><c> a</c><00:46:23.510><c> lot</c><00:46:23.809><c> of</c>

00:46:23.920 --> 00:46:23.930 align:start position:0%
up-to-date and it implements a lot of
 

00:46:23.930 --> 00:46:25.900 align:start position:0%
up-to-date and it implements a lot of
new<00:46:24.200><c> features</c><00:46:24.440><c> of</c><00:46:24.770><c> JavaScript</c><00:46:25.430><c> that</c><00:46:25.790><c> is</c>

00:46:25.900 --> 00:46:25.910 align:start position:0%
new features of JavaScript that is
 

00:46:25.910 --> 00:46:29.049 align:start position:0%
new features of JavaScript that is
defined<00:46:26.450><c> in</c><00:46:26.690><c> Eggman</c><00:46:27.290><c> script</c><00:46:27.589><c> so</c><00:46:28.309><c> in</c><00:46:28.609><c> Eggman</c>

00:46:29.049 --> 00:46:29.059 align:start position:0%
defined in Eggman script so in Eggman
 

00:46:29.059 --> 00:46:32.380 align:start position:0%
defined in Eggman script so in Eggman
script<00:46:29.390><c> six</c><00:46:29.660><c> or</c><00:46:29.869><c> eight</c><00:46:30.410><c> most</c><00:46:30.740><c> script</c><00:46:31.040><c> 2015</c><00:46:31.730><c> we</c>

00:46:32.380 --> 00:46:32.390 align:start position:0%
script six or eight most script 2015 we
 

00:46:32.390 --> 00:46:34.569 align:start position:0%
script six or eight most script 2015 we
have<00:46:32.540><c> a</c><00:46:32.569><c> feature</c><00:46:32.900><c> called</c><00:46:33.220><c> template</c><00:46:34.220><c> string</c>

00:46:34.569 --> 00:46:34.579 align:start position:0%
have a feature called template string
 

00:46:34.579 --> 00:46:37.950 align:start position:0%
have a feature called template string
which<00:46:35.270><c> helps</c><00:46:35.630><c> us</c><00:46:35.720><c> build</c><00:46:36.079><c> a</c><00:46:36.200><c> string</c><00:46:36.619><c> without</c>

00:46:37.950 --> 00:46:37.960 align:start position:0%
which helps us build a string without
 

00:46:37.960 --> 00:46:40.270 align:start position:0%
which helps us build a string without
concatenations<00:46:38.960><c> let</c><00:46:39.650><c> me</c><00:46:39.770><c> show</c><00:46:39.920><c> you</c><00:46:40.010><c> how</c><00:46:40.220><c> that</c>

00:46:40.270 --> 00:46:40.280 align:start position:0%
concatenations let me show you how that
 

00:46:40.280 --> 00:46:45.819 align:start position:0%
concatenations let me show you how that
works<00:46:40.640><c> so</c><00:46:41.920><c> console</c><00:46:43.089><c> dot</c><00:46:44.089><c> log</c><00:46:44.470><c> now</c><00:46:45.470><c> instead</c><00:46:45.770><c> of</c>

00:46:45.819 --> 00:46:45.829 align:start position:0%
works so console dot log now instead of
 

00:46:45.829 --> 00:46:48.760 align:start position:0%
works so console dot log now instead of
a<00:46:45.980><c> single</c><00:46:46.190><c> quote</c><00:46:46.609><c> we</c><00:46:47.329><c> use</c><00:46:47.480><c> the</c><00:46:48.049><c> backtick</c>

00:46:48.760 --> 00:46:48.770 align:start position:0%
a single quote we use the backtick
 

00:46:48.770 --> 00:46:51.400 align:start position:0%
a single quote we use the backtick
character<00:46:49.630><c> backtick</c><00:46:50.630><c> is</c><00:46:50.809><c> the</c><00:46:50.960><c> character</c>

00:46:51.400 --> 00:46:51.410 align:start position:0%
character backtick is the character
 

00:46:51.410 --> 00:46:54.339 align:start position:0%
character backtick is the character
before<00:46:51.650><c> number</c><00:46:52.280><c> 1</c><00:46:52.520><c> on</c><00:46:52.730><c> your</c><00:46:52.880><c> keyboard</c><00:46:53.140><c> so</c><00:46:54.140><c> here</c>

00:46:54.339 --> 00:46:54.349 align:start position:0%
before number 1 on your keyboard so here
 

00:46:54.349 --> 00:46:57.370 align:start position:0%
before number 1 on your keyboard so here
we<00:46:54.470><c> add</c><00:46:54.619><c> some</c><00:46:55.130><c> static</c><00:46:55.609><c> text</c><00:46:56.000><c> like</c><00:46:56.900><c> total</c>

00:46:57.370 --> 00:46:57.380 align:start position:0%
we add some static text like total
 

00:46:57.380 --> 00:47:01.200 align:start position:0%
we add some static text like total
memory<00:46:58.839><c> now</c><00:46:59.839><c> we</c><00:46:59.900><c> want</c><00:47:00.170><c> to</c><00:47:00.230><c> add</c><00:47:00.349><c> something</c><00:47:00.770><c> here</c>

00:47:01.200 --> 00:47:01.210 align:start position:0%
memory now we want to add something here
 

00:47:01.210 --> 00:47:04.480 align:start position:0%
memory now we want to add something here
dynamically<00:47:02.210><c> so</c><00:47:03.020><c> we</c><00:47:03.349><c> use</c><00:47:03.470><c> dollar</c><00:47:03.829><c> sign</c><00:47:03.980><c> and</c>

00:47:04.480 --> 00:47:04.490 align:start position:0%
dynamically so we use dollar sign and
 

00:47:04.490 --> 00:47:08.829 align:start position:0%
dynamically so we use dollar sign and
curly<00:47:05.390><c> braces</c><00:47:05.650><c> to</c><00:47:06.650><c> add</c><00:47:06.799><c> a</c><00:47:07.280><c> placeholder</c><00:47:07.849><c> for</c><00:47:08.750><c> an</c>

00:47:08.829 --> 00:47:08.839 align:start position:0%
curly braces to add a placeholder for an
 

00:47:08.839 --> 00:47:11.740 align:start position:0%
curly braces to add a placeholder for an
argument<00:47:09.140><c> in</c><00:47:10.130><c> this</c><00:47:10.369><c> case</c><00:47:10.549><c> our</c><00:47:10.760><c> argument</c><00:47:11.599><c> is</c>

00:47:11.740 --> 00:47:11.750 align:start position:0%
argument in this case our argument is
 

00:47:11.750 --> 00:47:15.670 align:start position:0%
argument in this case our argument is
this<00:47:12.020><c> total</c><00:47:12.589><c> memory</c><00:47:12.970><c> variable</c><00:47:14.319><c> so</c><00:47:15.319><c> we</c><00:47:15.410><c> can</c><00:47:15.530><c> see</c>

00:47:15.670 --> 00:47:15.680 align:start position:0%
this total memory variable so we can see
 

00:47:15.680 --> 00:47:17.460 align:start position:0%
this total memory variable so we can see
with<00:47:15.859><c> a</c><00:47:15.890><c> template</c><00:47:16.339><c> string</c><00:47:16.670><c> we</c><00:47:16.819><c> don't</c><00:47:17.000><c> have</c>

00:47:17.460 --> 00:47:17.470 align:start position:0%
with a template string we don't have
 

00:47:17.470 --> 00:47:20.680 align:start position:0%
with a template string we don't have
concatenation<00:47:18.549><c> okay</c><00:47:19.549><c> now</c><00:47:20.299><c> I'm</c><00:47:20.569><c> gonna</c>

00:47:20.680 --> 00:47:20.690 align:start position:0%
concatenation okay now I'm gonna
 

00:47:20.690 --> 00:47:24.640 align:start position:0%
concatenation okay now I'm gonna
duplicate<00:47:21.260><c> this</c><00:47:21.440><c> line</c><00:47:21.650><c> and</c><00:47:22.960><c> change</c><00:47:23.960><c> total</c><00:47:24.470><c> to</c>

00:47:24.640 --> 00:47:24.650 align:start position:0%
duplicate this line and change total to
 

00:47:24.650 --> 00:47:29.890 align:start position:0%
duplicate this line and change total to
free<00:47:24.950><c> and</c><00:47:25.220><c> here</c><00:47:26.089><c> let's</c><00:47:26.299><c> add</c><00:47:26.480><c> free</c><00:47:27.380><c> memory</c><00:47:28.900><c> okay</c>

00:47:29.890 --> 00:47:29.900 align:start position:0%
free and here let's add free memory okay
 

00:47:29.900 --> 00:47:32.559 align:start position:0%
free and here let's add free memory okay
now<00:47:30.650><c> we</c><00:47:30.710><c> don't</c><00:47:30.859><c> need</c><00:47:31.010><c> this</c><00:47:31.190><c> first</c><00:47:31.549><c> console</c><00:47:32.390><c> log</c>

00:47:32.559 --> 00:47:32.569 align:start position:0%
now we don't need this first console log
 

00:47:32.569 --> 00:47:34.930 align:start position:0%
now we don't need this first console log
we're<00:47:33.260><c> done</c><00:47:33.470><c> with</c><00:47:33.650><c> this</c><00:47:33.799><c> let's</c><00:47:34.490><c> go</c><00:47:34.640><c> back</c><00:47:34.819><c> to</c>

00:47:34.930 --> 00:47:34.940 align:start position:0%
we're done with this let's go back to
 

00:47:34.940 --> 00:47:36.250 align:start position:0%
we're done with this let's go back to
the<00:47:35.030><c> terminal</c><00:47:35.210><c> and</c><00:47:35.599><c> run</c><00:47:35.839><c> this</c><00:47:35.990><c> app</c>

00:47:36.250 --> 00:47:36.260 align:start position:0%
the terminal and run this app
 

00:47:36.260 --> 00:47:41.410 align:start position:0%
the terminal and run this app
occasion<00:47:37.570><c> so</c><00:47:38.570><c> note</c><00:47:38.810><c> app</c><00:47:39.140><c> but</c><00:47:39.830><c> Jas</c><00:47:40.250><c> and</c><00:47:40.580><c> you</c><00:47:41.270><c> can</c>

00:47:41.410 --> 00:47:41.420 align:start position:0%
occasion so note app but Jas and you can
 

00:47:41.420 --> 00:47:43.270 align:start position:0%
occasion so note app but Jas and you can
see<00:47:41.600><c> the</c><00:47:41.780><c> total</c><00:47:42.020><c> and</c><00:47:42.380><c> free</c><00:47:42.680><c> memory</c><00:47:43.040><c> on</c><00:47:43.250><c> my</c>

00:47:43.270 --> 00:47:43.280 align:start position:0%
see the total and free memory on my
 

00:47:43.280 --> 00:47:45.880 align:start position:0%
see the total and free memory on my
machine<00:47:43.640><c> now</c><00:47:44.540><c> what</c><00:47:44.720><c> is</c><00:47:44.810><c> interesting</c><00:47:45.260><c> here</c><00:47:45.470><c> is</c>

00:47:45.880 --> 00:47:45.890 align:start position:0%
machine now what is interesting here is
 

00:47:45.890 --> 00:47:48.640 align:start position:0%
machine now what is interesting here is
that<00:47:46.430><c> before</c><00:47:46.790><c> node</c><00:47:47.300><c> we</c><00:47:47.870><c> could</c><00:47:48.080><c> not</c><00:47:48.260><c> get</c><00:47:48.440><c> this</c>

00:47:48.640 --> 00:47:48.650 align:start position:0%
that before node we could not get this
 

00:47:48.650 --> 00:47:50.320 align:start position:0%
that before node we could not get this
kind<00:47:48.920><c> of</c><00:47:48.950><c> information</c><00:47:49.280><c> using</c><00:47:49.940><c> javascript</c>

00:47:50.320 --> 00:47:50.330 align:start position:0%
kind of information using javascript
 

00:47:50.330 --> 00:47:53.200 align:start position:0%
kind of information using javascript
javascript<00:47:51.290><c> used</c><00:47:51.860><c> to</c><00:47:51.980><c> run</c><00:47:52.130><c> only</c><00:47:52.640><c> inside</c><00:47:53.030><c> of</c><00:47:53.150><c> a</c>

00:47:53.200 --> 00:47:53.210 align:start position:0%
javascript used to run only inside of a
 

00:47:53.210 --> 00:47:55.330 align:start position:0%
javascript used to run only inside of a
browser<00:47:53.450><c> and</c><00:47:53.870><c> we</c><00:47:54.290><c> could</c><00:47:54.440><c> only</c><00:47:54.680><c> work</c><00:47:54.980><c> with</c><00:47:55.220><c> the</c>

00:47:55.330 --> 00:47:55.340 align:start position:0%
browser and we could only work with the
 

00:47:55.340 --> 00:47:57.940 align:start position:0%
browser and we could only work with the
window<00:47:55.700><c> or</c><00:47:55.940><c> document</c><00:47:56.600><c> objects</c><00:47:57.140><c> we</c><00:47:57.680><c> couldn't</c>

00:47:57.940 --> 00:47:57.950 align:start position:0%
window or document objects we couldn't
 

00:47:57.950 --> 00:47:59.740 align:start position:0%
window or document objects we couldn't
get<00:47:58.040><c> information</c><00:47:58.430><c> about</c><00:47:58.880><c> the</c><00:47:59.180><c> operating</c>

00:47:59.740 --> 00:47:59.750 align:start position:0%
get information about the operating
 

00:47:59.750 --> 00:48:01.720 align:start position:0%
get information about the operating
system<00:48:00.110><c> but</c><00:48:00.860><c> when</c><00:48:01.040><c> using</c><00:48:01.220><c> node</c><00:48:01.520><c> our</c>

00:48:01.720 --> 00:48:01.730 align:start position:0%
system but when using node our
 

00:48:01.730 --> 00:48:04.540 align:start position:0%
system but when using node our
JavaScript<00:48:02.720><c> code</c><00:48:02.900><c> is</c><00:48:03.080><c> executed</c><00:48:03.920><c> outside</c><00:48:04.070><c> of</c><00:48:04.490><c> a</c>

00:48:04.540 --> 00:48:04.550 align:start position:0%
JavaScript code is executed outside of a
 

00:48:04.550 --> 00:48:07.450 align:start position:0%
JavaScript code is executed outside of a
browser<00:48:04.820><c> or</c><00:48:05.210><c> as</c><00:48:05.870><c> some</c><00:48:06.230><c> people</c><00:48:06.260><c> say</c><00:48:06.740><c> on</c><00:48:06.950><c> the</c>

00:48:07.450 --> 00:48:07.460 align:start position:0%
browser or as some people say on the
 

00:48:07.460 --> 00:48:09.550 align:start position:0%
browser or as some people say on the
server<00:48:07.790><c> with</c><00:48:08.570><c> this</c><00:48:08.780><c> we</c><00:48:09.020><c> can</c><00:48:09.140><c> get</c><00:48:09.290><c> information</c>

00:48:09.550 --> 00:48:09.560 align:start position:0%
server with this we can get information
 

00:48:09.560 --> 00:48:11.980 align:start position:0%
server with this we can get information
about<00:48:09.950><c> the</c><00:48:10.250><c> operating</c><00:48:10.760><c> system</c><00:48:11.150><c> we</c><00:48:11.630><c> can</c><00:48:11.810><c> work</c>

00:48:11.980 --> 00:48:11.990 align:start position:0%
about the operating system we can work
 

00:48:11.990 --> 00:48:14.020 align:start position:0%
about the operating system we can work
with<00:48:12.200><c> files</c><00:48:12.470><c> we</c><00:48:12.920><c> can</c><00:48:13.070><c> work</c><00:48:13.250><c> with</c><00:48:13.430><c> the</c><00:48:13.550><c> network</c>

00:48:14.020 --> 00:48:14.030 align:start position:0%
with files we can work with the network
 

00:48:14.030 --> 00:48:16.360 align:start position:0%
with files we can work with the network
for<00:48:14.690><c> example</c><00:48:14.720><c> we</c><00:48:15.140><c> can</c><00:48:15.320><c> build</c><00:48:15.800><c> a</c><00:48:15.920><c> web</c><00:48:16.100><c> server</c>

00:48:16.360 --> 00:48:16.370 align:start position:0%
for example we can build a web server
 

00:48:16.370 --> 00:48:18.940 align:start position:0%
for example we can build a web server
that<00:48:16.820><c> listens</c><00:48:17.240><c> for</c><00:48:17.300><c> HTTP</c><00:48:18.140><c> requests</c><00:48:18.740><c> on</c><00:48:18.890><c> a</c>

00:48:18.940 --> 00:48:18.950 align:start position:0%
that listens for HTTP requests on a
 

00:48:18.950 --> 00:48:20.740 align:start position:0%
that listens for HTTP requests on a
given<00:48:19.310><c> port</c><00:48:19.550><c> and</c><00:48:19.850><c> I'm</c><00:48:20.060><c> going</c><00:48:20.180><c> to</c><00:48:20.240><c> show</c><00:48:20.390><c> you</c><00:48:20.450><c> all</c>

00:48:20.740 --> 00:48:20.750 align:start position:0%
given port and I'm going to show you all
 

00:48:20.750 --> 00:48:28.480 align:start position:0%
given port and I'm going to show you all
this<00:48:20.960><c> later</c><00:48:21.470><c> in</c><00:48:21.650><c> this</c><00:48:21.740><c> section</c>

00:48:28.480 --> 00:48:28.490 align:start position:0%
 
 

00:48:28.490 --> 00:48:30.580 align:start position:0%
 
and<00:48:28.580><c> it's</c><00:48:29.270><c> lecture</c><00:48:29.510><c> I'm</c><00:48:29.690><c> gonna</c><00:48:29.900><c> show</c><00:48:30.110><c> you</c><00:48:30.200><c> how</c>

00:48:30.580 --> 00:48:30.590 align:start position:0%
and it's lecture I'm gonna show you how
 

00:48:30.590 --> 00:48:33.609 align:start position:0%
and it's lecture I'm gonna show you how
to<00:48:30.619><c> work</c><00:48:30.980><c> with</c><00:48:31.160><c> files</c><00:48:31.460><c> in</c><00:48:31.790><c> node</c><00:48:32.210><c> so</c><00:48:33.110><c> I</c><00:48:33.140><c> can</c><00:48:33.440><c> no</c>

00:48:33.609 --> 00:48:33.619 align:start position:0%
to work with files in node so I can no
 

00:48:33.619 --> 00:48:36.150 align:start position:0%
to work with files in node so I can no
documentation<00:48:34.550><c> and</c><00:48:34.760><c> the</c><00:48:35.300><c> list</c><00:48:35.480><c> of</c><00:48:35.600><c> modules</c>

00:48:36.150 --> 00:48:36.160 align:start position:0%
documentation and the list of modules
 

00:48:36.160 --> 00:48:39.730 align:start position:0%
documentation and the list of modules
here<00:48:37.160><c> we</c><00:48:37.280><c> have</c><00:48:37.430><c> a</c><00:48:37.460><c> module</c><00:48:37.730><c> called</c><00:48:38.180><c> file</c><00:48:39.170><c> system</c>

00:48:39.730 --> 00:48:39.740 align:start position:0%
here we have a module called file system
 

00:48:39.740 --> 00:48:42.550 align:start position:0%
here we have a module called file system
in<00:48:39.920><c> this</c><00:48:40.760><c> module</c><00:48:40.970><c> we</c><00:48:41.810><c> have</c><00:48:41.960><c> a</c><00:48:41.990><c> comprehensive</c>

00:48:42.550 --> 00:48:42.560 align:start position:0%
in this module we have a comprehensive
 

00:48:42.560 --> 00:48:45.040 align:start position:0%
in this module we have a comprehensive
set<00:48:43.130><c> of</c><00:48:43.220><c> methods</c><00:48:43.640><c> for</c><00:48:43.820><c> working</c><00:48:44.540><c> with</c><00:48:44.720><c> files</c>

00:48:45.040 --> 00:48:45.050 align:start position:0%
set of methods for working with files
 

00:48:45.050 --> 00:48:47.710 align:start position:0%
set of methods for working with files
and<00:48:45.380><c> directories</c><00:48:46.000><c> now</c><00:48:47.000><c> in</c><00:48:47.180><c> this</c><00:48:47.300><c> course</c><00:48:47.540><c> I'm</c>

00:48:47.710 --> 00:48:47.720 align:start position:0%
and directories now in this course I'm
 

00:48:47.720 --> 00:48:49.630 align:start position:0%
and directories now in this course I'm
not<00:48:48.020><c> gonna</c><00:48:48.200><c> waste</c><00:48:48.500><c> your</c><00:48:48.710><c> time</c><00:48:48.950><c> showing</c><00:48:49.550><c> you</c>

00:48:49.630 --> 00:48:49.640 align:start position:0%
not gonna waste your time showing you
 

00:48:49.640 --> 00:48:51.640 align:start position:0%
not gonna waste your time showing you
every<00:48:50.119><c> single</c><00:48:50.480><c> method</c><00:48:50.690><c> here</c><00:48:51.110><c> because</c><00:48:51.530><c> that</c>

00:48:51.640 --> 00:48:51.650 align:start position:0%
every single method here because that
 

00:48:51.650 --> 00:48:53.980 align:start position:0%
every single method here because that
would<00:48:51.830><c> be</c><00:48:51.950><c> very</c><00:48:52.160><c> repetitive</c><00:48:52.640><c> but</c><00:48:53.600><c> let</c><00:48:53.780><c> me</c><00:48:53.869><c> show</c>

00:48:53.980 --> 00:48:53.990 align:start position:0%
would be very repetitive but let me show
 

00:48:53.990 --> 00:48:56.350 align:start position:0%
would be very repetitive but let me show
you<00:48:54.050><c> an</c><00:48:54.230><c> example</c><00:48:54.590><c> so</c><00:48:55.250><c> you</c><00:48:55.310><c> see</c><00:48:55.580><c> how</c><00:48:55.970><c> to</c><00:48:56.030><c> work</c>

00:48:56.350 --> 00:48:56.360 align:start position:0%
you an example so you see how to work
 

00:48:56.360 --> 00:48:58.339 align:start position:0%
you an example so you see how to work
with<00:48:56.570><c> files</c><00:48:56.840><c> in</c><00:48:57.080><c> node</c>

00:48:58.339 --> 00:48:58.349 align:start position:0%
with files in node
 

00:48:58.349 --> 00:49:01.609 align:start position:0%
with files in node
so<00:48:59.069><c> back</c><00:48:59.279><c> in</c><00:48:59.309><c> vs</c><00:48:59.640><c> code</c><00:48:59.880><c> first</c><00:49:00.869><c> we</c><00:49:01.380><c> need</c><00:49:01.499><c> to</c>

00:49:01.609 --> 00:49:01.619 align:start position:0%
so back in vs code first we need to
 

00:49:01.619 --> 00:49:06.229 align:start position:0%
so back in vs code first we need to
require<00:49:02.420><c> the</c><00:49:03.420><c> FS</c><00:49:03.900><c> module</c><00:49:04.640><c> we</c><00:49:05.640><c> get</c><00:49:05.789><c> the</c><00:49:05.880><c> result</c>

00:49:06.229 --> 00:49:06.239 align:start position:0%
require the FS module we get the result
 

00:49:06.239 --> 00:49:10.549 align:start position:0%
require the FS module we get the result
and<00:49:06.479><c> store</c><00:49:06.839><c> it</c><00:49:07.019><c> in</c><00:49:07.259><c> this</c><00:49:08.039><c> constant</c><00:49:08.839><c> now</c><00:49:09.839><c> FS</c><00:49:10.259><c> dot</c>

00:49:10.549 --> 00:49:10.559 align:start position:0%
and store it in this constant now FS dot
 

00:49:10.559 --> 00:49:14.209 align:start position:0%
and store it in this constant now FS dot
look<00:49:11.459><c> almost</c><00:49:12.359><c> every</c><00:49:12.839><c> operation</c><00:49:13.469><c> defined</c><00:49:13.890><c> here</c>

00:49:14.209 --> 00:49:14.219 align:start position:0%
look almost every operation defined here
 

00:49:14.219 --> 00:49:17.059 align:start position:0%
look almost every operation defined here
comes<00:49:14.849><c> in</c><00:49:15.089><c> two</c><00:49:15.269><c> forms</c><00:49:15.920><c> synchronous</c><00:49:16.920><c> or</c>

00:49:17.059 --> 00:49:17.069 align:start position:0%
comes in two forms synchronous or
 

00:49:17.069 --> 00:49:19.939 align:start position:0%
comes in two forms synchronous or
blocking<00:49:17.729><c> and</c><00:49:18.229><c> asynchronous</c><00:49:19.229><c> or</c><00:49:19.440><c> non</c>

00:49:19.939 --> 00:49:19.949 align:start position:0%
blocking and asynchronous or non
 

00:49:19.949 --> 00:49:22.759 align:start position:0%
blocking and asynchronous or non
blocking<00:49:20.309><c> for</c><00:49:21.150><c> example</c><00:49:21.539><c> look</c><00:49:21.719><c> we</c><00:49:21.930><c> have</c><00:49:22.140><c> access</c>

00:49:22.759 --> 00:49:22.769 align:start position:0%
blocking for example look we have access
 

00:49:22.769 --> 00:49:25.699 align:start position:0%
blocking for example look we have access
which<00:49:23.339><c> is</c><00:49:23.369><c> an</c><00:49:23.609><c> asynchronous</c><00:49:24.119><c> method</c><00:49:24.779><c> we</c><00:49:25.529><c> also</c>

00:49:25.699 --> 00:49:25.709 align:start position:0%
which is an asynchronous method we also
 

00:49:25.709 --> 00:49:27.890 align:start position:0%
which is an asynchronous method we also
have<00:49:25.979><c> access</c><00:49:26.249><c> sync</c><00:49:26.849><c> which</c><00:49:27.119><c> is</c><00:49:27.239><c> a</c><00:49:27.269><c> synchronous</c>

00:49:27.890 --> 00:49:27.900 align:start position:0%
have access sync which is a synchronous
 

00:49:27.900 --> 00:49:29.930 align:start position:0%
have access sync which is a synchronous
method<00:49:28.289><c> now</c><00:49:29.069><c> even</c><00:49:29.369><c> though</c><00:49:29.459><c> we</c><00:49:29.609><c> have</c><00:49:29.789><c> these</c>

00:49:29.930 --> 00:49:29.940 align:start position:0%
method now even though we have these
 

00:49:29.940 --> 00:49:32.180 align:start position:0%
method now even though we have these
synchronous<00:49:30.900><c> methods</c><00:49:31.289><c> here</c><00:49:31.559><c> you</c><00:49:32.009><c> should</c>

00:49:32.180 --> 00:49:32.190 align:start position:0%
synchronous methods here you should
 

00:49:32.190 --> 00:49:34.339 align:start position:0%
synchronous methods here you should
avoid<00:49:32.549><c> using</c><00:49:32.969><c> them</c><00:49:33.089><c> these</c><00:49:33.599><c> are</c><00:49:33.779><c> there</c><00:49:33.989><c> purely</c>

00:49:34.339 --> 00:49:34.349 align:start position:0%
avoid using them these are there purely
 

00:49:34.349 --> 00:49:36.439 align:start position:0%
avoid using them these are there purely
for<00:49:34.499><c> simplicity</c><00:49:35.099><c> in</c><00:49:35.699><c> a</c><00:49:36.029><c> real</c><00:49:36.269><c> world</c>

00:49:36.439 --> 00:49:36.449 align:start position:0%
for simplicity in a real world
 

00:49:36.449 --> 00:49:38.749 align:start position:0%
for simplicity in a real world
application<00:49:36.539><c> you</c><00:49:37.440><c> should</c><00:49:37.469><c> use</c><00:49:37.859><c> asynchronous</c>

00:49:38.749 --> 00:49:38.759 align:start position:0%
application you should use asynchronous
 

00:49:38.759 --> 00:49:41.269 align:start position:0%
application you should use asynchronous
methods<00:49:39.329><c> because</c><00:49:39.930><c> these</c><00:49:40.140><c> are</c><00:49:40.380><c> non</c><00:49:40.890><c> blocking</c>

00:49:41.269 --> 00:49:41.279 align:start position:0%
methods because these are non blocking
 

00:49:41.279 --> 00:49:43.609 align:start position:0%
methods because these are non blocking
so<00:49:42.119><c> as</c><00:49:42.239><c> I</c><00:49:42.359><c> told</c><00:49:42.539><c> you</c><00:49:42.660><c> in</c><00:49:42.749><c> the</c><00:49:42.779><c> last</c><00:49:43.019><c> section</c><00:49:43.289><c> a</c>

00:49:43.609 --> 00:49:43.619 align:start position:0%
so as I told you in the last section a
 

00:49:43.619 --> 00:49:46.609 align:start position:0%
so as I told you in the last section a
node<00:49:44.219><c> process</c><00:49:44.819><c> has</c><00:49:45.089><c> a</c><00:49:45.119><c> single</c><00:49:45.630><c> thread</c><00:49:45.959><c> if</c>

00:49:46.609 --> 00:49:46.619 align:start position:0%
node process has a single thread if
 

00:49:46.619 --> 00:49:48.920 align:start position:0%
node process has a single thread if
you're<00:49:46.949><c> using</c><00:49:47.130><c> node</c><00:49:47.489><c> to</c><00:49:47.910><c> build</c><00:49:48.180><c> the</c><00:49:48.390><c> backend</c>

00:49:48.920 --> 00:49:48.930 align:start position:0%
you're using node to build the backend
 

00:49:48.930 --> 00:49:50.599 align:start position:0%
you're using node to build the backend
for<00:49:49.049><c> your</c><00:49:49.170><c> application</c><00:49:49.769><c> you</c><00:49:49.979><c> might</c><00:49:50.430><c> have</c>

00:49:50.599 --> 00:49:50.609 align:start position:0%
for your application you might have
 

00:49:50.609 --> 00:49:52.699 align:start position:0%
for your application you might have
several<00:49:51.059><c> hundreds</c><00:49:51.539><c> or</c><00:49:51.690><c> thousands</c><00:49:52.289><c> of</c><00:49:52.440><c> clients</c>

00:49:52.699 --> 00:49:52.709 align:start position:0%
several hundreds or thousands of clients
 

00:49:52.709 --> 00:49:55.430 align:start position:0%
several hundreds or thousands of clients
connecting<00:49:53.699><c> to</c><00:49:53.819><c> that</c><00:49:53.969><c> back-end</c><00:49:54.239><c> if</c><00:49:55.109><c> you</c><00:49:55.259><c> keep</c>

00:49:55.430 --> 00:49:55.440 align:start position:0%
connecting to that back-end if you keep
 

00:49:55.440 --> 00:49:57.259 align:start position:0%
connecting to that back-end if you keep
that<00:49:55.650><c> single</c><00:49:56.009><c> thread</c><00:49:56.249><c> busy</c><00:49:56.699><c> you</c><00:49:56.969><c> won't</c><00:49:57.089><c> be</c>

00:49:57.259 --> 00:49:57.269 align:start position:0%
that single thread busy you won't be
 

00:49:57.269 --> 00:50:00.859 align:start position:0%
that single thread busy you won't be
able<00:49:57.449><c> to</c><00:49:57.630><c> serve</c><00:49:58.049><c> many</c><00:49:58.589><c> clients</c><00:49:58.920><c> so</c><00:49:59.759><c> always</c><00:49:59.999><c> use</c>

00:50:00.859 --> 00:50:00.869 align:start position:0%
able to serve many clients so always use
 

00:50:00.869 --> 00:50:03.439 align:start position:0%
able to serve many clients so always use
asynchronous<00:50:01.619><c> methods</c><00:50:02.160><c> now</c><00:50:02.940><c> that</c><00:50:03.150><c> aside</c>

00:50:03.439 --> 00:50:03.449 align:start position:0%
asynchronous methods now that aside
 

00:50:03.449 --> 00:50:05.870 align:start position:0%
asynchronous methods now that aside
let's<00:50:03.959><c> take</c><00:50:04.140><c> a</c><00:50:04.170><c> look</c><00:50:04.380><c> at</c><00:50:04.529><c> an</c><00:50:04.650><c> example</c><00:50:04.949><c> we're</c>

00:50:05.870 --> 00:50:05.880 align:start position:0%
let's take a look at an example we're
 

00:50:05.880 --> 00:50:09.349 align:start position:0%
let's take a look at an example we're
going<00:50:05.999><c> to</c><00:50:06.089><c> look</c><00:50:06.180><c> at</c><00:50:06.449><c> rate</c><00:50:07.279><c> dir</c><00:50:08.279><c> or</c><00:50:08.609><c> directory</c>

00:50:09.349 --> 00:50:09.359 align:start position:0%
going to look at rate dir or directory
 

00:50:09.359 --> 00:50:11.749 align:start position:0%
going to look at rate dir or directory
method<00:50:09.809><c> first</c><00:50:10.619><c> I'm</c><00:50:10.859><c> going</c><00:50:10.949><c> to</c><00:50:11.039><c> show</c><00:50:11.219><c> you</c><00:50:11.279><c> the</c>

00:50:11.749 --> 00:50:11.759 align:start position:0%
method first I'm going to show you the
 

00:50:11.759 --> 00:50:13.549 align:start position:0%
method first I'm going to show you the
synchronous<00:50:12.329><c> form</c><00:50:12.630><c> because</c><00:50:12.959><c> that's</c><00:50:13.079><c> easier</c>

00:50:13.549 --> 00:50:13.559 align:start position:0%
synchronous form because that's easier
 

00:50:13.559 --> 00:50:17.150 align:start position:0%
synchronous form because that's easier
to<00:50:13.619><c> understand</c><00:50:14.209><c> so</c><00:50:15.209><c> as</c><00:50:15.589><c> the</c><00:50:16.589><c> first</c><00:50:16.769><c> argument</c>

00:50:17.150 --> 00:50:17.160 align:start position:0%
to understand so as the first argument
 

00:50:17.160 --> 00:50:20.420 align:start position:0%
to understand so as the first argument
we<00:50:17.519><c> specify</c><00:50:17.969><c> the</c><00:50:18.029><c> path</c><00:50:19.069><c> period</c><00:50:20.069><c> slash</c>

00:50:20.420 --> 00:50:20.430 align:start position:0%
we specify the path period slash
 

00:50:20.430 --> 00:50:23.059 align:start position:0%
we specify the path period slash
represents<00:50:21.150><c> the</c><00:50:21.449><c> current</c><00:50:21.660><c> folder</c><00:50:21.989><c> and</c><00:50:22.380><c> this</c>

00:50:23.059 --> 00:50:23.069 align:start position:0%
represents the current folder and this
 

00:50:23.069 --> 00:50:25.670 align:start position:0%
represents the current folder and this
will<00:50:23.249><c> return</c><00:50:23.430><c> all</c><00:50:23.789><c> the</c><00:50:24.180><c> files</c><00:50:24.539><c> and</c><00:50:24.749><c> folders</c><00:50:24.900><c> in</c>

00:50:25.670 --> 00:50:25.680 align:start position:0%
will return all the files and folders in
 

00:50:25.680 --> 00:50:30.410 align:start position:0%
will return all the files and folders in
the<00:50:25.859><c> current</c><00:50:25.890><c> folder</c><00:50:26.309><c> so</c><00:50:28.999><c> files</c><00:50:29.999><c> will</c><00:50:30.269><c> be</c><00:50:30.299><c> a</c>

00:50:30.410 --> 00:50:30.420 align:start position:0%
the current folder so files will be a
 

00:50:30.420 --> 00:50:33.650 align:start position:0%
the current folder so files will be a
string<00:50:30.930><c> array</c><00:50:31.670><c> now</c><00:50:32.670><c> we</c><00:50:32.729><c> can</c><00:50:32.999><c> display</c><00:50:33.299><c> that</c><00:50:33.329><c> on</c>

00:50:33.650 --> 00:50:33.660 align:start position:0%
string array now we can display that on
 

00:50:33.660 --> 00:50:38.450 align:start position:0%
string array now we can display that on
the<00:50:33.869><c> console</c><00:50:35.329><c> very</c><00:50:36.329><c> simple</c>

00:50:38.450 --> 00:50:38.460 align:start position:0%
the console very simple
 

00:50:38.460 --> 00:50:42.559 align:start position:0%
the console very simple
so<00:50:38.910><c> note</c><00:50:39.349><c> fjs</c><00:50:40.579><c> so</c><00:50:41.579><c> we</c><00:50:41.730><c> can</c><00:50:41.880><c> see</c><00:50:42.030><c> we</c><00:50:42.180><c> get</c><00:50:42.329><c> an</c>

00:50:42.559 --> 00:50:42.569 align:start position:0%
so note fjs so we can see we get an
 

00:50:42.569 --> 00:50:44.990 align:start position:0%
so note fjs so we can see we get an
array<00:50:43.230><c> of</c><00:50:43.440><c> strings</c><00:50:43.980><c> and</c><00:50:44.220><c> these</c><00:50:44.490><c> are</c><00:50:44.609><c> the</c><00:50:44.730><c> files</c>

00:50:44.990 --> 00:50:45.000 align:start position:0%
array of strings and these are the files
 

00:50:45.000 --> 00:50:48.589 align:start position:0%
array of strings and these are the files
in<00:50:45.300><c> this</c><00:50:45.809><c> folder</c><00:50:45.869><c> on</c><00:50:46.440><c> my</c><00:50:46.500><c> machine</c><00:50:47.359><c> now</c><00:50:48.359><c> let's</c>

00:50:48.589 --> 00:50:48.599 align:start position:0%
in this folder on my machine now let's
 

00:50:48.599 --> 00:50:50.630 align:start position:0%
in this folder on my machine now let's
take<00:50:48.750><c> a</c><00:50:48.780><c> look</c><00:50:48.960><c> at</c><00:50:49.170><c> the</c><00:50:49.349><c> asynchronous</c><00:50:49.980><c> form</c><00:50:50.460><c> of</c>

00:50:50.630 --> 00:50:50.640 align:start position:0%
take a look at the asynchronous form of
 

00:50:50.640 --> 00:50:55.309 align:start position:0%
take a look at the asynchronous form of
this<00:50:50.970><c> method</c><00:50:51.380><c> so</c><00:50:52.380><c> FS</c><00:50:52.980><c> dot</c><00:50:53.400><c> read</c><00:50:54.359><c> directory</c>

00:50:55.309 --> 00:50:55.319 align:start position:0%
this method so FS dot read directory
 

00:50:55.319 --> 00:50:59.180 align:start position:0%
this method so FS dot read directory
just<00:50:56.210><c> like</c><00:50:57.210><c> before</c><00:50:57.569><c> the</c><00:50:58.200><c> first</c><00:50:58.559><c> argument</c><00:50:58.890><c> is</c>

00:50:59.180 --> 00:50:59.190 align:start position:0%
just like before the first argument is
 

00:50:59.190 --> 00:51:02.690 align:start position:0%
just like before the first argument is
the<00:50:59.400><c> path</c><00:50:59.609><c> so</c><00:51:00.420><c> the</c><00:51:01.020><c> current</c><00:51:01.319><c> folder</c><00:51:01.520><c> now</c><00:51:02.520><c> all</c>

00:51:02.690 --> 00:51:02.700 align:start position:0%
the path so the current folder now all
 

00:51:02.700 --> 00:51:04.790 align:start position:0%
the path so the current folder now all
these<00:51:03.030><c> asynchronous</c><00:51:03.569><c> methods</c><00:51:04.260><c> take</c><00:51:04.530><c> a</c>

00:51:04.790 --> 00:51:04.800 align:start position:0%
these asynchronous methods take a
 

00:51:04.800 --> 00:51:08.510 align:start position:0%
these asynchronous methods take a
function<00:51:05.520><c> as</c><00:51:05.700><c> their</c><00:51:06.180><c> last</c><00:51:06.540><c> argument</c><00:51:07.400><c> no</c><00:51:08.400><c> it</c>

00:51:08.510 --> 00:51:08.520 align:start position:0%
function as their last argument no it
 

00:51:08.520 --> 00:51:10.460 align:start position:0%
function as their last argument no it
will<00:51:08.640><c> call</c><00:51:09.000><c> this</c><00:51:09.210><c> function</c><00:51:09.690><c> when</c><00:51:10.290><c> that</c>

00:51:10.460 --> 00:51:10.470 align:start position:0%
will call this function when that
 

00:51:10.470 --> 00:51:13.609 align:start position:0%
will call this function when that
asynchronous<00:51:11.190><c> operation</c><00:51:11.849><c> completes</c><00:51:12.480><c> we</c><00:51:13.349><c> call</c>

00:51:13.609 --> 00:51:13.619 align:start position:0%
asynchronous operation completes we call
 

00:51:13.619 --> 00:51:17.359 align:start position:0%
asynchronous operation completes we call
this<00:51:13.800><c> function</c><00:51:13.980><c> a</c><00:51:14.460><c> callback</c><00:51:15.650><c> so</c><00:51:16.650><c> here</c><00:51:16.890><c> look</c><00:51:17.130><c> in</c>

00:51:17.359 --> 00:51:17.369 align:start position:0%
this function a callback so here look in
 

00:51:17.369 --> 00:51:19.970 align:start position:0%
this function a callback so here look in
the<00:51:17.819><c> intellisense</c><00:51:18.240><c> the</c><00:51:18.960><c> second</c><00:51:19.319><c> parameter</c><00:51:19.559><c> is</c>

00:51:19.970 --> 00:51:19.980 align:start position:0%
the intellisense the second parameter is
 

00:51:19.980 --> 00:51:22.790 align:start position:0%
the intellisense the second parameter is
a<00:51:20.520><c> callback</c><00:51:21.089><c> and</c><00:51:21.329><c> this</c><00:51:21.930><c> is</c><00:51:22.050><c> a</c><00:51:22.079><c> function</c><00:51:22.589><c> with</c>

00:51:22.790 --> 00:51:22.800 align:start position:0%
a callback and this is a function with
 

00:51:22.800 --> 00:51:26.809 align:start position:0%
a callback and this is a function with
two<00:51:22.829><c> parameters</c><00:51:23.369><c> an</c><00:51:23.880><c> error</c><00:51:24.660><c> and</c><00:51:25.609><c> result</c><00:51:26.609><c> which</c>

00:51:26.809 --> 00:51:26.819 align:start position:0%
two parameters an error and result which
 

00:51:26.819 --> 00:51:30.230 align:start position:0%
two parameters an error and result which
is<00:51:26.970><c> in</c><00:51:27.119><c> this</c><00:51:27.240><c> case</c><00:51:27.300><c> a</c><00:51:27.720><c> string</c><00:51:28.200><c> array</c><00:51:28.730><c> so</c><00:51:29.730><c> here</c>

00:51:30.230 --> 00:51:30.240 align:start position:0%
is in this case a string array so here
 

00:51:30.240 --> 00:51:33.230 align:start position:0%
is in this case a string array so here
we<00:51:30.359><c> need</c><00:51:30.450><c> to</c><00:51:30.569><c> pass</c><00:51:30.780><c> a</c><00:51:31.109><c> function</c><00:51:31.829><c> or</c><00:51:32.790><c> a</c><00:51:32.849><c> callback</c>

00:51:33.230 --> 00:51:33.240 align:start position:0%
we need to pass a function or a callback
 

00:51:33.240 --> 00:51:36.980 align:start position:0%
we need to pass a function or a callback
function<00:51:33.680><c> with</c><00:51:34.680><c> an</c><00:51:34.770><c> error</c><00:51:35.099><c> and</c><00:51:35.599><c> the</c><00:51:36.599><c> result</c>

00:51:36.980 --> 00:51:36.990 align:start position:0%
function with an error and the result
 

00:51:36.990 --> 00:51:39.230 align:start position:0%
function with an error and the result
which<00:51:37.200><c> is</c><00:51:37.349><c> a</c><00:51:37.380><c> string</c><00:51:37.890><c> array</c><00:51:38.130><c> we</c><00:51:38.849><c> can</c><00:51:38.880><c> call</c><00:51:39.210><c> that</c>

00:51:39.230 --> 00:51:39.240 align:start position:0%
which is a string array we can call that
 

00:51:39.240 --> 00:51:42.710 align:start position:0%
which is a string array we can call that
files<00:51:40.640><c> so</c><00:51:41.640><c> here</c><00:51:41.819><c> we</c><00:51:41.910><c> need</c><00:51:42.030><c> to</c><00:51:42.150><c> check</c><00:51:42.359><c> if</c><00:51:42.569><c> we</c>

00:51:42.710 --> 00:51:42.720 align:start position:0%
files so here we need to check if we
 

00:51:42.720 --> 00:51:45.410 align:start position:0%
files so here we need to check if we
have<00:51:42.869><c> an</c><00:51:42.990><c> error</c><00:51:43.319><c> or</c><00:51:43.650><c> the</c><00:51:43.710><c> result</c><00:51:44.490><c> only</c><00:51:44.700><c> one</c><00:51:45.299><c> of</c>

00:51:45.410 --> 00:51:45.420 align:start position:0%
have an error or the result only one of
 

00:51:45.420 --> 00:51:47.299 align:start position:0%
have an error or the result only one of
these<00:51:45.569><c> arguments</c><00:51:45.960><c> will</c><00:51:46.290><c> have</c><00:51:46.500><c> a</c><00:51:46.530><c> value</c><00:51:46.950><c> and</c>

00:51:47.299 --> 00:51:47.309 align:start position:0%
these arguments will have a value and
 

00:51:47.309 --> 00:51:49.940 align:start position:0%
these arguments will have a value and
the<00:51:47.670><c> other</c><00:51:47.849><c> will</c><00:51:48.150><c> be</c><00:51:48.180><c> not</c><00:51:48.569><c> so</c><00:51:49.380><c> if</c><00:51:49.589><c> we</c><00:51:49.740><c> have</c>

00:51:49.940 --> 00:51:49.950 align:start position:0%
the other will be not so if we have
 

00:51:49.950 --> 00:51:50.870 align:start position:0%
the other will be not so if we have
error

00:51:50.870 --> 00:51:50.880 align:start position:0%
error
 

00:51:50.880 --> 00:51:54.099 align:start position:0%
error
we're<00:51:51.599><c> going</c><00:51:51.720><c> to</c><00:51:51.780><c> display</c><00:51:52.020><c> it</c><00:51:52.230><c> on</c><00:51:52.349><c> the</c><00:51:52.440><c> console</c>

00:51:54.099 --> 00:51:54.109 align:start position:0%
we're going to display it on the console
 

00:51:54.109 --> 00:51:57.680 align:start position:0%
we're going to display it on the console
error<00:51:55.109><c> error</c><00:51:56.059><c> now</c><00:51:57.059><c> this</c><00:51:57.240><c> is</c><00:51:57.359><c> not</c><00:51:57.480><c> how</c><00:51:57.630><c> we</c>

00:51:57.680 --> 00:51:57.690 align:start position:0%
error error now this is not how we
 

00:51:57.690 --> 00:51:59.270 align:start position:0%
error error now this is not how we
handle<00:51:58.170><c> errors</c><00:51:58.500><c> in</c><00:51:58.740><c> a</c><00:51:58.890><c> real</c><00:51:59.099><c> world</c>

00:51:59.270 --> 00:51:59.280 align:start position:0%
handle errors in a real world
 

00:51:59.280 --> 00:52:01.190 align:start position:0%
handle errors in a real world
application<00:51:59.420><c> but</c><00:52:00.420><c> don't</c><00:52:00.630><c> worry</c><00:52:00.780><c> about</c><00:52:00.869><c> this</c>

00:52:01.190 --> 00:52:01.200 align:start position:0%
application but don't worry about this
 

00:52:01.200 --> 00:52:03.319 align:start position:0%
application but don't worry about this
later<00:52:01.710><c> in</c><00:52:01.829><c> the</c><00:52:01.920><c> course</c><00:52:02.010><c> we</c><00:52:02.609><c> have</c><00:52:02.640><c> a</c><00:52:02.790><c> complete</c>

00:52:03.319 --> 00:52:03.329 align:start position:0%
later in the course we have a complete
 

00:52:03.329 --> 00:52:05.750 align:start position:0%
later in the course we have a complete
section<00:52:03.750><c> about</c><00:52:04.020><c> error</c><00:52:04.290><c> handling</c><00:52:04.650><c> in</c><00:52:04.890><c> note</c><00:52:05.130><c> for</c>

00:52:05.750 --> 00:52:05.760 align:start position:0%
section about error handling in note for
 

00:52:05.760 --> 00:52:07.160 align:start position:0%
section about error handling in note for
now<00:52:05.880><c> we</c><00:52:05.940><c> just</c><00:52:06.089><c> want</c><00:52:06.270><c> to</c><00:52:06.420><c> display</c><00:52:06.750><c> this</c><00:52:06.930><c> error</c>

00:52:07.160 --> 00:52:07.170 align:start position:0%
now we just want to display this error
 

00:52:07.170 --> 00:52:09.620 align:start position:0%
now we just want to display this error
on<00:52:07.349><c> the</c><00:52:07.470><c> console</c><00:52:08.000><c> so</c><00:52:09.000><c> if</c><00:52:09.150><c> you</c><00:52:09.240><c> have</c><00:52:09.359><c> an</c><00:52:09.450><c> error</c>

00:52:09.620 --> 00:52:09.630 align:start position:0%
on the console so if you have an error
 

00:52:09.630 --> 00:52:12.230 align:start position:0%
on the console so if you have an error
we<00:52:09.809><c> display</c><00:52:10.250><c> otherwise</c><00:52:11.250><c> we</c><00:52:11.430><c> display</c><00:52:11.819><c> the</c>

00:52:12.230 --> 00:52:12.240 align:start position:0%
we display otherwise we display the
 

00:52:12.240 --> 00:52:17.210 align:start position:0%
we display otherwise we display the
result<00:52:12.630><c> so</c><00:52:12.960><c> console</c><00:52:13.619><c> dot</c><00:52:13.770><c> log</c><00:52:14.839><c> result</c><00:52:15.839><c> and</c><00:52:16.220><c> we</c>

00:52:17.210 --> 00:52:17.220 align:start position:0%
result so console dot log result and we
 

00:52:17.220 --> 00:52:21.049 align:start position:0%
result so console dot log result and we
can<00:52:17.369><c> display</c><00:52:17.809><c> this</c><00:52:18.809><c> string</c><00:52:19.410><c> array</c><00:52:19.790><c> so</c><00:52:20.790><c> I'm</c>

00:52:21.049 --> 00:52:21.059 align:start position:0%
can display this string array so I'm
 

00:52:21.059 --> 00:52:24.319 align:start position:0%
can display this string array so I'm
gonna<00:52:21.240><c> comment</c><00:52:21.599><c> out</c><00:52:22.160><c> these</c><00:52:23.160><c> two</c><00:52:23.400><c> lines</c><00:52:23.670><c> so</c><00:52:24.210><c> we</c>

00:52:24.319 --> 00:52:24.329 align:start position:0%
gonna comment out these two lines so we
 

00:52:24.329 --> 00:52:26.180 align:start position:0%
gonna comment out these two lines so we
can<00:52:24.450><c> only</c><00:52:24.599><c> look</c><00:52:24.809><c> at</c><00:52:24.930><c> the</c><00:52:25.079><c> result</c><00:52:25.410><c> of</c><00:52:25.650><c> this</c>

00:52:26.180 --> 00:52:26.190 align:start position:0%
can only look at the result of this
 

00:52:26.190 --> 00:52:30.799 align:start position:0%
can only look at the result of this
asynchronous<00:52:26.730><c> read</c><00:52:27.599><c> directory</c><00:52:28.670><c> now</c><00:52:29.670><c> note</c><00:52:29.970><c> up</c>

00:52:30.799 --> 00:52:30.809 align:start position:0%
asynchronous read directory now note up
 

00:52:30.809 --> 00:52:33.920 align:start position:0%
asynchronous read directory now note up
j/s<00:52:31.549><c> so</c><00:52:32.549><c> we</c><00:52:32.700><c> got</c><00:52:32.849><c> resolved</c><00:52:33.390><c> and</c><00:52:33.540><c> this</c><00:52:33.809><c> is</c>

00:52:33.920 --> 00:52:33.930 align:start position:0%
j/s so we got resolved and this is
 

00:52:33.930 --> 00:52:36.410 align:start position:0%
j/s so we got resolved and this is
exactly<00:52:34.140><c> the</c><00:52:34.799><c> string</c><00:52:35.670><c> array</c><00:52:35.940><c> that</c><00:52:36.150><c> we</c><00:52:36.270><c> had</c>

00:52:36.410 --> 00:52:36.420 align:start position:0%
exactly the string array that we had
 

00:52:36.420 --> 00:52:36.950 align:start position:0%
exactly the string array that we had
before

00:52:36.950 --> 00:52:36.960 align:start position:0%
before
 

00:52:36.960 --> 00:52:40.280 align:start position:0%
before
now<00:52:37.740><c> let's</c><00:52:38.040><c> simulate</c><00:52:38.280><c> an</c><00:52:38.670><c> error</c><00:52:38.970><c> so</c><00:52:39.869><c> I'm</c><00:52:40.109><c> going</c>

00:52:40.280 --> 00:52:40.290 align:start position:0%
now let's simulate an error so I'm going
 

00:52:40.290 --> 00:52:42.799 align:start position:0%
now let's simulate an error so I'm going
to<00:52:40.349><c> go</c><00:52:40.440><c> back</c><00:52:40.650><c> in</c><00:52:40.799><c> the</c><00:52:40.890><c> code</c><00:52:41.130><c> and</c><00:52:41.599><c> change</c><00:52:42.599><c> this</c>

00:52:42.799 --> 00:52:42.809 align:start position:0%
to go back in the code and change this
 

00:52:42.809 --> 00:52:47.049 align:start position:0%
to go back in the code and change this
argument<00:52:43.140><c> to</c><00:52:43.589><c> let's</c><00:52:44.069><c> say</c><00:52:44.250><c> a</c><00:52:44.280><c> dollar</c><00:52:44.670><c> sign</c><00:52:45.980><c> save</c>

00:52:47.049 --> 00:52:47.059 align:start position:0%
argument to let's say a dollar sign save
 

00:52:47.059 --> 00:52:51.740 align:start position:0%
argument to let's say a dollar sign save
back<00:52:48.059><c> in</c><00:52:48.240><c> the</c><00:52:48.299><c> terminal</c><00:52:49.069><c> node</c><00:52:50.069><c> fjs</c><00:52:50.849><c> this</c><00:52:51.510><c> time</c>

00:52:51.740 --> 00:52:51.750 align:start position:0%
back in the terminal node fjs this time
 

00:52:51.750 --> 00:52:52.130 align:start position:0%
back in the terminal node fjs this time
we<00:52:51.900><c> go</c>

00:52:52.130 --> 00:52:52.140 align:start position:0%
we go
 

00:52:52.140 --> 00:52:56.230 align:start position:0%
we go
and<00:52:52.290><c> error</c><00:52:53.120><c> no</c><00:52:54.120><c> such</c><00:52:54.150><c> file</c><00:52:54.690><c> or</c><00:52:54.960><c> directory</c>

00:52:56.230 --> 00:52:56.240 align:start position:0%
and error no such file or directory
 

00:52:56.240 --> 00:52:59.750 align:start position:0%
and error no such file or directory
so<00:52:57.240><c> to</c><00:52:57.300><c> recap</c><00:52:57.690><c> in</c><00:52:58.170><c> order</c><00:52:58.920><c> to</c><00:52:59.040><c> work</c><00:52:59.220><c> with</c><00:52:59.460><c> files</c>

00:52:59.750 --> 00:52:59.760 align:start position:0%
so to recap in order to work with files
 

00:52:59.760 --> 00:53:01.880 align:start position:0%
so to recap in order to work with files
and<00:53:00.000><c> directories</c><00:53:00.240><c> in</c><00:53:00.810><c> node</c><00:53:00.990><c> first</c><00:53:01.620><c> you</c><00:53:01.770><c> need</c>

00:53:01.880 --> 00:53:01.890 align:start position:0%
and directories in node first you need
 

00:53:01.890 --> 00:53:04.490 align:start position:0%
and directories in node first you need
to<00:53:01.980><c> require</c><00:53:02.340><c> the</c><00:53:02.790><c> FS</c><00:53:03.120><c> module</c><00:53:03.570><c> and</c><00:53:03.750><c> then</c><00:53:04.290><c> use</c>

00:53:04.490 --> 00:53:04.500 align:start position:0%
to require the FS module and then use
 

00:53:04.500 --> 00:53:06.920 align:start position:0%
to require the FS module and then use
one<00:53:04.950><c> or</c><00:53:05.130><c> more</c><00:53:05.220><c> of</c><00:53:05.550><c> the</c><00:53:05.670><c> methods</c><00:53:06.120><c> defined</c><00:53:06.780><c> in</c>

00:53:06.920 --> 00:53:06.930 align:start position:0%
one or more of the methods defined in
 

00:53:06.930 --> 00:53:09.020 align:start position:0%
one or more of the methods defined in
this<00:53:07.050><c> module</c><00:53:07.290><c> all</c><00:53:07.980><c> these</c><00:53:08.310><c> methods</c><00:53:08.670><c> come</c><00:53:08.850><c> in</c>

00:53:09.020 --> 00:53:09.030 align:start position:0%
this module all these methods come in
 

00:53:09.030 --> 00:53:11.080 align:start position:0%
this module all these methods come in
pairs<00:53:09.440><c> asynchronous</c><00:53:10.440><c> and</c><00:53:10.590><c> synchronous</c>

00:53:11.080 --> 00:53:11.090 align:start position:0%
pairs asynchronous and synchronous
 

00:53:11.090 --> 00:53:13.790 align:start position:0%
pairs asynchronous and synchronous
always<00:53:12.090><c> prefer</c><00:53:12.480><c> to</c><00:53:12.510><c> use</c><00:53:12.810><c> asynchronous</c>

00:53:13.790 --> 00:53:13.800 align:start position:0%
always prefer to use asynchronous
 

00:53:13.800 --> 00:53:19.360 align:start position:0%
always prefer to use asynchronous
methods

00:53:19.360 --> 00:53:19.370 align:start position:0%
 
 

00:53:19.370 --> 00:53:21.850 align:start position:0%
 
one<00:53:19.910><c> of</c><00:53:20.030><c> the</c><00:53:20.120><c> core</c><00:53:20.420><c> concepts</c><00:53:21.050><c> in</c><00:53:21.230><c> node</c><00:53:21.470><c> is</c><00:53:21.800><c> the</c>

00:53:21.850 --> 00:53:21.860 align:start position:0%
one of the core concepts in node is the
 

00:53:21.860 --> 00:53:25.180 align:start position:0%
one of the core concepts in node is the
concept<00:53:22.610><c> of</c><00:53:22.700><c> events</c><00:53:23.540><c> in</c><00:53:24.230><c> fact</c><00:53:24.500><c> a</c><00:53:24.620><c> lot</c><00:53:24.740><c> of</c><00:53:24.860><c> nodes</c>

00:53:25.180 --> 00:53:25.190 align:start position:0%
concept of events in fact a lot of nodes
 

00:53:25.190 --> 00:53:28.000 align:start position:0%
concept of events in fact a lot of nodes
core<00:53:25.730><c> functionality</c><00:53:26.510><c> is</c><00:53:26.690><c> based</c><00:53:27.200><c> on</c><00:53:27.560><c> this</c>

00:53:28.000 --> 00:53:28.010 align:start position:0%
core functionality is based on this
 

00:53:28.010 --> 00:53:30.910 align:start position:0%
core functionality is based on this
concept<00:53:28.580><c> of</c><00:53:28.760><c> events</c><00:53:29.270><c> an</c><00:53:29.690><c> event</c><00:53:30.470><c> is</c><00:53:30.680><c> basically</c>

00:53:30.910 --> 00:53:30.920 align:start position:0%
concept of events an event is basically
 

00:53:30.920 --> 00:53:34.120 align:start position:0%
concept of events an event is basically
a<00:53:31.280><c> signal</c><00:53:31.850><c> that</c><00:53:32.450><c> indicates</c><00:53:33.260><c> that</c><00:53:33.530><c> something</c>

00:53:34.120 --> 00:53:34.130 align:start position:0%
a signal that indicates that something
 

00:53:34.130 --> 00:53:37.090 align:start position:0%
a signal that indicates that something
has<00:53:34.520><c> happened</c><00:53:34.820><c> in</c><00:53:35.420><c> our</c><00:53:35.750><c> application</c><00:53:36.380><c> for</c>

00:53:37.090 --> 00:53:37.100 align:start position:0%
has happened in our application for
 

00:53:37.100 --> 00:53:39.060 align:start position:0%
has happened in our application for
example<00:53:37.340><c> in</c><00:53:37.670><c> node</c><00:53:37.910><c> we</c><00:53:38.420><c> have</c><00:53:38.450><c> a</c><00:53:38.570><c> class</c><00:53:38.870><c> called</c>

00:53:39.060 --> 00:53:39.070 align:start position:0%
example in node we have a class called
 

00:53:39.070 --> 00:53:42.280 align:start position:0%
example in node we have a class called
HTTP<00:53:40.070><c> that</c><00:53:40.250><c> we</c><00:53:40.820><c> can</c><00:53:40.970><c> use</c><00:53:41.120><c> to</c><00:53:41.360><c> build</c><00:53:41.570><c> a</c><00:53:41.930><c> web</c>

00:53:42.280 --> 00:53:42.290 align:start position:0%
HTTP that we can use to build a web
 

00:53:42.290 --> 00:53:45.190 align:start position:0%
HTTP that we can use to build a web
server<00:53:42.590><c> so</c><00:53:43.490><c> we</c><00:53:43.520><c> listen</c><00:53:44.060><c> on</c><00:53:44.240><c> a</c><00:53:44.300><c> given</c><00:53:44.690><c> port</c><00:53:44.960><c> and</c>

00:53:45.190 --> 00:53:45.200 align:start position:0%
server so we listen on a given port and
 

00:53:45.200 --> 00:53:47.860 align:start position:0%
server so we listen on a given port and
every<00:53:46.130><c> time</c><00:53:46.340><c> we</c><00:53:46.520><c> receive</c><00:53:46.880><c> a</c><00:53:46.970><c> request</c><00:53:47.540><c> on</c><00:53:47.720><c> that</c>

00:53:47.860 --> 00:53:47.870 align:start position:0%
every time we receive a request on that
 

00:53:47.870 --> 00:53:51.970 align:start position:0%
every time we receive a request on that
port<00:53:48.170><c> that</c><00:53:48.770><c> HTTP</c><00:53:49.580><c> class</c><00:53:49.820><c> raises</c><00:53:50.750><c> an</c><00:53:50.870><c> event</c><00:53:51.170><c> now</c>

00:53:51.970 --> 00:53:51.980 align:start position:0%
port that HTTP class raises an event now
 

00:53:51.980 --> 00:53:54.040 align:start position:0%
port that HTTP class raises an event now
our<00:53:52.220><c> job</c><00:53:52.580><c> is</c><00:53:52.790><c> to</c><00:53:52.880><c> respond</c><00:53:53.480><c> to</c><00:53:53.600><c> that</c><00:53:53.720><c> event</c>

00:53:54.040 --> 00:53:54.050 align:start position:0%
our job is to respond to that event
 

00:53:54.050 --> 00:53:56.200 align:start position:0%
our job is to respond to that event
which<00:53:54.350><c> basically</c><00:53:54.770><c> involves</c><00:53:55.100><c> reading</c><00:53:56.060><c> that</c>

00:53:56.200 --> 00:53:56.210 align:start position:0%
which basically involves reading that
 

00:53:56.210 --> 00:53:58.930 align:start position:0%
which basically involves reading that
request<00:53:56.690><c> and</c><00:53:56.960><c> returning</c><00:53:57.800><c> the</c><00:53:58.040><c> right</c><00:53:58.280><c> response</c>

00:53:58.930 --> 00:53:58.940 align:start position:0%
request and returning the right response
 

00:53:58.940 --> 00:54:01.690 align:start position:0%
request and returning the right response
so<00:53:59.750><c> as</c><00:53:59.930><c> you</c><00:54:00.080><c> go</c><00:54:00.230><c> through</c><00:54:00.260><c> note</c><00:54:00.740><c> documentation</c>

00:54:01.690 --> 00:54:01.700 align:start position:0%
so as you go through note documentation
 

00:54:01.700 --> 00:54:04.450 align:start position:0%
so as you go through note documentation
you<00:54:02.270><c> can</c><00:54:02.420><c> see</c><00:54:02.660><c> that</c><00:54:02.930><c> several</c><00:54:03.410><c> classes</c><00:54:04.010><c> in</c><00:54:04.190><c> node</c>

00:54:04.450 --> 00:54:04.460 align:start position:0%
you can see that several classes in node
 

00:54:04.460 --> 00:54:07.600 align:start position:0%
you can see that several classes in node
raises<00:54:05.360><c> different</c><00:54:05.660><c> kinds</c><00:54:06.230><c> of</c><00:54:06.290><c> events</c><00:54:06.620><c> and</c><00:54:06.920><c> in</c>

00:54:07.600 --> 00:54:07.610 align:start position:0%
raises different kinds of events and in
 

00:54:07.610 --> 00:54:09.820 align:start position:0%
raises different kinds of events and in
your<00:54:07.880><c> code</c><00:54:08.150><c> you</c><00:54:08.390><c> might</c><00:54:08.720><c> be</c><00:54:08.870><c> interested</c><00:54:09.620><c> to</c>

00:54:09.820 --> 00:54:09.830 align:start position:0%
your code you might be interested to
 

00:54:09.830 --> 00:54:12.280 align:start position:0%
your code you might be interested to
respond<00:54:10.490><c> to</c><00:54:10.640><c> those</c><00:54:10.760><c> events</c><00:54:11.080><c> so</c><00:54:12.080><c> in</c><00:54:12.200><c> this</c>

00:54:12.280 --> 00:54:12.290 align:start position:0%
respond to those events so in this
 

00:54:12.290 --> 00:54:14.290 align:start position:0%
respond to those events so in this
lecture<00:54:12.500><c> I'm</c><00:54:12.830><c> gonna</c><00:54:13.070><c> show</c><00:54:13.280><c> you</c><00:54:13.340><c> how</c><00:54:13.850><c> to</c><00:54:13.910><c> work</c>

00:54:14.290 --> 00:54:14.300 align:start position:0%
lecture I'm gonna show you how to work
 

00:54:14.300 --> 00:54:18.430 align:start position:0%
lecture I'm gonna show you how to work
with<00:54:14.750><c> the</c><00:54:14.900><c> events</c><00:54:15.440><c> module</c><00:54:16.840><c> now</c><00:54:17.840><c> back</c><00:54:18.080><c> in</c><00:54:18.200><c> notes</c>

00:54:18.430 --> 00:54:18.440 align:start position:0%
with the events module now back in notes
 

00:54:18.440 --> 00:54:20.890 align:start position:0%
with the events module now back in notes
documentation<00:54:19.280><c> once</c><00:54:20.030><c> again</c><00:54:20.330><c> in</c><00:54:20.480><c> the</c><00:54:20.600><c> list</c><00:54:20.780><c> of</c>

00:54:20.890 --> 00:54:20.900 align:start position:0%
documentation once again in the list of
 

00:54:20.900 --> 00:54:24.070 align:start position:0%
documentation once again in the list of
modules<00:54:21.140><c> you</c><00:54:21.500><c> can</c><00:54:21.650><c> see</c><00:54:21.860><c> here</c><00:54:22.730><c> we</c><00:54:22.910><c> have</c><00:54:23.120><c> this</c>

00:54:24.070 --> 00:54:24.080 align:start position:0%
modules you can see here we have this
 

00:54:24.080 --> 00:54:28.120 align:start position:0%
modules you can see here we have this
events<00:54:24.590><c> module</c><00:54:25.480><c> so</c><00:54:26.480><c> in</c><00:54:26.600><c> this</c><00:54:26.720><c> module</c><00:54:26.900><c> we</c><00:54:27.890><c> have</c>

00:54:28.120 --> 00:54:28.130 align:start position:0%
events module so in this module we have
 

00:54:28.130 --> 00:54:31.480 align:start position:0%
events module so in this module we have
one<00:54:28.610><c> class</c><00:54:28.970><c> that</c><00:54:29.300><c> is</c><00:54:29.630><c> called</c><00:54:29.930><c> event</c><00:54:30.530><c> emitter</c>

00:54:31.480 --> 00:54:31.490 align:start position:0%
one class that is called event emitter
 

00:54:31.490 --> 00:54:33.910 align:start position:0%
one class that is called event emitter
it's<00:54:32.210><c> one</c><00:54:32.390><c> of</c><00:54:32.480><c> the</c><00:54:32.600><c> core</c><00:54:32.900><c> building</c><00:54:33.440><c> blocks</c><00:54:33.710><c> of</c>

00:54:33.910 --> 00:54:33.920 align:start position:0%
it's one of the core building blocks of
 

00:54:33.920 --> 00:54:36.550 align:start position:0%
it's one of the core building blocks of
node<00:54:34.130><c> and</c><00:54:34.400><c> a</c><00:54:34.820><c> lot</c><00:54:34.970><c> of</c><00:54:35.060><c> classes</c><00:54:35.570><c> are</c><00:54:35.690><c> based</c><00:54:36.080><c> on</c>

00:54:36.550 --> 00:54:36.560 align:start position:0%
node and a lot of classes are based on
 

00:54:36.560 --> 00:54:39.430 align:start position:0%
node and a lot of classes are based on
this<00:54:36.830><c> event</c><00:54:37.340><c> emitter</c><00:54:38.090><c> so</c><00:54:38.870><c> let's</c><00:54:39.080><c> see</c><00:54:39.170><c> how</c><00:54:39.380><c> we</c>

00:54:39.430 --> 00:54:39.440 align:start position:0%
this event emitter so let's see how we
 

00:54:39.440 --> 00:54:42.100 align:start position:0%
this event emitter so let's see how we
can<00:54:39.650><c> work</c><00:54:39.890><c> with</c><00:54:39.950><c> this</c><00:54:40.250><c> event</c><00:54:40.400><c> emitter</c>

00:54:42.100 --> 00:54:42.110 align:start position:0%
can work with this event emitter
 

00:54:42.110 --> 00:54:45.940 align:start position:0%
can work with this event emitter
I<00:54:42.140><c> can</c><00:54:42.710><c> be</c><00:54:42.830><c> ESCO</c><00:54:43.130><c> first</c><00:54:44.120><c> let's</c><00:54:44.720><c> load</c><00:54:45.050><c> the</c>

00:54:45.940 --> 00:54:45.950 align:start position:0%
I can be ESCO first let's load the
 

00:54:45.950 --> 00:54:50.710 align:start position:0%
I can be ESCO first let's load the
events<00:54:46.700><c> module</c><00:54:47.360><c> so</c><00:54:48.110><c> require</c><00:54:48.530><c> events</c><00:54:49.720><c> here</c>

00:54:50.710 --> 00:54:50.720 align:start position:0%
events module so require events here
 

00:54:50.720 --> 00:54:53.080 align:start position:0%
events module so require events here
when<00:54:50.930><c> we</c><00:54:51.050><c> call</c><00:54:51.230><c> the</c><00:54:51.380><c> require</c><00:54:51.650><c> function</c><00:54:51.910><c> we</c><00:54:52.910><c> get</c>

00:54:53.080 --> 00:54:53.090 align:start position:0%
when we call the require function we get
 

00:54:53.090 --> 00:54:56.400 align:start position:0%
when we call the require function we get
the<00:54:53.240><c> event</c><00:54:53.750><c> emitter</c><00:54:54.500><c> class</c><00:54:54.860><c> so</c><00:54:55.520><c> constant</c>

00:54:56.400 --> 00:54:56.410 align:start position:0%
the event emitter class so constant
 

00:54:56.410 --> 00:55:01.270 align:start position:0%
the event emitter class so constant
event<00:54:57.610><c> emitter</c><00:54:58.810><c> note</c><00:54:59.810><c> that</c><00:54:59.990><c> here</c><00:55:00.350><c> in</c><00:55:00.500><c> terms</c><00:55:01.160><c> of</c>

00:55:01.270 --> 00:55:01.280 align:start position:0%
event emitter note that here in terms of
 

00:55:01.280 --> 00:55:03.850 align:start position:0%
event emitter note that here in terms of
the<00:55:01.400><c> naming</c><00:55:01.670><c> the</c><00:55:02.510><c> first</c><00:55:02.900><c> letter</c><00:55:03.200><c> of</c><00:55:03.470><c> every</c>

00:55:03.850 --> 00:55:03.860 align:start position:0%
the naming the first letter of every
 

00:55:03.860 --> 00:55:07.390 align:start position:0%
the naming the first letter of every
word<00:55:04.130><c> is</c><00:55:04.670><c> uppercase</c><00:55:05.570><c> this</c><00:55:06.530><c> is</c><00:55:06.680><c> the</c><00:55:06.770><c> convention</c>

00:55:07.390 --> 00:55:07.400 align:start position:0%
word is uppercase this is the convention
 

00:55:07.400 --> 00:55:10.270 align:start position:0%
word is uppercase this is the convention
that<00:55:07.940><c> indicates</c><00:55:08.630><c> that</c><00:55:08.840><c> this</c><00:55:09.260><c> event</c><00:55:09.710><c> emitter</c>

00:55:10.270 --> 00:55:10.280 align:start position:0%
that indicates that this event emitter
 

00:55:10.280 --> 00:55:13.180 align:start position:0%
that indicates that this event emitter
is<00:55:10.520><c> a</c><00:55:10.730><c> class</c><00:55:11.210><c> it's</c><00:55:11.720><c> not</c><00:55:11.990><c> a</c><00:55:12.020><c> function</c><00:55:12.320><c> it's</c><00:55:12.950><c> not</c>

00:55:13.180 --> 00:55:13.190 align:start position:0%
is a class it's not a function it's not
 

00:55:13.190 --> 00:55:16.330 align:start position:0%
is a class it's not a function it's not
a<00:55:13.220><c> simple</c><00:55:13.640><c> value</c><00:55:13.880><c> it's</c><00:55:14.240><c> a</c><00:55:14.420><c> class</c><00:55:14.750><c> a</c><00:55:15.080><c> class</c><00:55:16.040><c> is</c>

00:55:16.330 --> 00:55:16.340 align:start position:0%
a simple value it's a class a class is
 

00:55:16.340 --> 00:55:19.090 align:start position:0%
a simple value it's a class a class is
container<00:55:16.850><c> for</c><00:55:17.240><c> properties</c><00:55:17.990><c> and</c><00:55:18.350><c> functions</c>

00:55:19.090 --> 00:55:19.100 align:start position:0%
container for properties and functions
 

00:55:19.100 --> 00:55:21.820 align:start position:0%
container for properties and functions
which<00:55:19.310><c> we</c><00:55:19.490><c> call</c><00:55:19.700><c> methods</c><00:55:20.480><c> so</c><00:55:21.260><c> in</c><00:55:21.380><c> this</c><00:55:21.530><c> event</c>

00:55:21.820 --> 00:55:21.830 align:start position:0%
which we call methods so in this event
 

00:55:21.830 --> 00:55:23.990 align:start position:0%
which we call methods so in this event
emitter<00:55:22.250><c> class</c>

00:55:23.990 --> 00:55:24.000 align:start position:0%
emitter class
 

00:55:24.000 --> 00:55:26.060 align:start position:0%
emitter class
we<00:55:24.270><c> have</c><00:55:24.420><c> these</c><00:55:24.570><c> metals</c><00:55:25.080><c> that</c><00:55:25.200><c> you</c><00:55:25.260><c> see</c><00:55:25.500><c> here</c>

00:55:26.060 --> 00:55:26.070 align:start position:0%
we have these metals that you see here
 

00:55:26.070 --> 00:55:28.580 align:start position:0%
we have these metals that you see here
in<00:55:26.369><c> the</c><00:55:26.640><c> documentation</c><00:55:27.180><c> so</c><00:55:27.960><c> a</c><00:55:27.990><c> class</c><00:55:28.320><c> is</c><00:55:28.530><c> a</c>

00:55:28.580 --> 00:55:28.590 align:start position:0%
in the documentation so a class is a
 

00:55:28.590 --> 00:55:31.370 align:start position:0%
in the documentation so a class is a
container<00:55:29.190><c> for</c><00:55:29.490><c> a</c><00:55:29.880><c> bunch</c><00:55:30.090><c> of</c><00:55:30.270><c> related</c><00:55:30.660><c> methods</c>

00:55:31.370 --> 00:55:31.380 align:start position:0%
container for a bunch of related methods
 

00:55:31.380 --> 00:55:35.180 align:start position:0%
container for a bunch of related methods
and<00:55:31.590><c> properties</c><00:55:32.930><c> now</c><00:55:33.930><c> here</c><00:55:34.230><c> in</c><00:55:34.470><c> order</c><00:55:34.800><c> to</c><00:55:34.950><c> use</c>

00:55:35.180 --> 00:55:35.190 align:start position:0%
and properties now here in order to use
 

00:55:35.190 --> 00:55:37.220 align:start position:0%
and properties now here in order to use
this<00:55:35.369><c> event</c><00:55:35.580><c> emitter</c><00:55:36.150><c> first</c><00:55:36.869><c> we</c><00:55:37.020><c> need</c><00:55:37.140><c> to</c>

00:55:37.220 --> 00:55:37.230 align:start position:0%
this event emitter first we need to
 

00:55:37.230 --> 00:55:40.310 align:start position:0%
this event emitter first we need to
create<00:55:37.530><c> an</c><00:55:37.710><c> instance</c><00:55:38.609><c> of</c><00:55:38.790><c> this</c><00:55:39.060><c> class</c><00:55:39.320><c> so</c>

00:55:40.310 --> 00:55:40.320 align:start position:0%
create an instance of this class so
 

00:55:40.320 --> 00:55:44.140 align:start position:0%
create an instance of this class so
constant<00:55:41.030><c> emitter</c><00:55:42.320><c> we</c><00:55:43.320><c> set</c><00:55:43.560><c> this</c><00:55:43.680><c> to</c><00:55:43.740><c> new</c>

00:55:44.140 --> 00:55:44.150 align:start position:0%
constant emitter we set this to new
 

00:55:44.150 --> 00:55:48.710 align:start position:0%
constant emitter we set this to new
event<00:55:45.150><c> emitter</c><00:55:46.099><c> so</c><00:55:47.099><c> here</c><00:55:47.369><c> this</c><00:55:47.580><c> emitter</c><00:55:48.150><c> is</c><00:55:48.359><c> an</c>

00:55:48.710 --> 00:55:48.720 align:start position:0%
event emitter so here this emitter is an
 

00:55:48.720 --> 00:55:50.900 align:start position:0%
event emitter so here this emitter is an
object<00:55:49.410><c> in</c><00:55:50.130><c> case</c><00:55:50.369><c> you</c><00:55:50.490><c> don't</c><00:55:50.609><c> know</c><00:55:50.730><c> the</c>

00:55:50.900 --> 00:55:50.910 align:start position:0%
object in case you don't know the
 

00:55:50.910 --> 00:55:52.790 align:start position:0%
object in case you don't know the
difference<00:55:51.270><c> between</c><00:55:51.420><c> a</c><00:55:51.599><c> class</c><00:55:51.869><c> and</c><00:55:52.230><c> an</c><00:55:52.349><c> object</c>

00:55:52.790 --> 00:55:52.800 align:start position:0%
difference between a class and an object
 

00:55:52.800 --> 00:55:55.460 align:start position:0%
difference between a class and an object
let<00:55:52.980><c> me</c><00:55:53.130><c> give</c><00:55:53.310><c> you</c><00:55:53.400><c> a</c><00:55:53.430><c> metaphor</c><00:55:53.730><c> a</c><00:55:54.270><c> class</c><00:55:55.230><c> is</c>

00:55:55.460 --> 00:55:55.470 align:start position:0%
let me give you a metaphor a class is
 

00:55:55.470 --> 00:55:57.800 align:start position:0%
let me give you a metaphor a class is
like<00:55:55.680><c> human</c><00:55:56.160><c> and</c><00:55:56.400><c> an</c><00:55:56.820><c> object</c><00:55:57.090><c> is</c><00:55:57.480><c> like</c><00:55:57.660><c> an</c>

00:55:57.800 --> 00:55:57.810 align:start position:0%
like human and an object is like an
 

00:55:57.810 --> 00:56:01.580 align:start position:0%
like human and an object is like an
actual<00:55:58.109><c> person</c><00:55:58.609><c> like</c><00:55:59.609><c> John</c><00:55:59.940><c> Mary</c><00:56:00.840><c> and</c><00:56:01.170><c> so</c><00:56:01.440><c> on</c>

00:56:01.580 --> 00:56:01.590 align:start position:0%
actual person like John Mary and so on
 

00:56:01.590 --> 00:56:04.430 align:start position:0%
actual person like John Mary and so on
so<00:56:02.490><c> a</c><00:56:02.520><c> class</c><00:56:02.849><c> defines</c><00:56:03.359><c> the</c><00:56:03.570><c> properties</c><00:56:04.260><c> and</c>

00:56:04.430 --> 00:56:04.440 align:start position:0%
so a class defines the properties and
 

00:56:04.440 --> 00:56:07.849 align:start position:0%
so a class defines the properties and
behavior<00:56:04.980><c> of</c><00:56:05.609><c> a</c><00:56:05.760><c> concept</c><00:56:06.270><c> like</c><00:56:06.630><c> a</c><00:56:06.660><c> human</c><00:56:07.140><c> but</c>

00:56:07.849 --> 00:56:07.859 align:start position:0%
behavior of a concept like a human but
 

00:56:07.859 --> 00:56:11.000 align:start position:0%
behavior of a concept like a human but
an<00:56:07.980><c> object</c><00:56:08.310><c> is</c><00:56:08.849><c> an</c><00:56:09.300><c> actual</c><00:56:09.930><c> instance</c><00:56:10.500><c> of</c><00:56:10.950><c> that</c>

00:56:11.000 --> 00:56:11.010 align:start position:0%
an object is an actual instance of that
 

00:56:11.010 --> 00:56:15.260 align:start position:0%
an object is an actual instance of that
class<00:56:11.510><c> okay</c><00:56:12.510><c> so</c><00:56:13.380><c> here</c><00:56:13.710><c> this</c><00:56:14.520><c> first</c><00:56:14.849><c> event</c>

00:56:15.260 --> 00:56:15.270 align:start position:0%
class okay so here this first event
 

00:56:15.270 --> 00:56:18.080 align:start position:0%
class okay so here this first event
emitter<00:56:16.080><c> is</c><00:56:16.260><c> a</c><00:56:16.470><c> class</c><00:56:16.830><c> it's</c><00:56:17.220><c> a</c><00:56:17.369><c> blueprint</c><00:56:17.880><c> it</c>

00:56:18.080 --> 00:56:18.090 align:start position:0%
emitter is a class it's a blueprint it
 

00:56:18.090 --> 00:56:21.500 align:start position:0%
emitter is a class it's a blueprint it
defines<00:56:18.540><c> what</c><00:56:19.109><c> an</c><00:56:19.349><c> event</c><00:56:19.770><c> emitter</c><00:56:20.160><c> can</c><00:56:20.460><c> do</c><00:56:20.640><c> but</c>

00:56:21.500 --> 00:56:21.510 align:start position:0%
defines what an event emitter can do but
 

00:56:21.510 --> 00:56:23.570 align:start position:0%
defines what an event emitter can do but
this<00:56:21.630><c> second</c><00:56:22.080><c> emitter</c><00:56:22.500><c> is</c><00:56:22.710><c> an</c><00:56:22.920><c> actual</c><00:56:23.400><c> object</c>

00:56:23.570 --> 00:56:23.580 align:start position:0%
this second emitter is an actual object
 

00:56:23.580 --> 00:56:25.760 align:start position:0%
this second emitter is an actual object
this<00:56:24.180><c> is</c><00:56:24.300><c> the</c><00:56:24.420><c> one</c><00:56:24.630><c> that</c><00:56:25.109><c> we're</c><00:56:25.260><c> going</c><00:56:25.380><c> to</c><00:56:25.530><c> use</c>

00:56:25.760 --> 00:56:25.770 align:start position:0%
this is the one that we're going to use
 

00:56:25.770 --> 00:56:30.530 align:start position:0%
this is the one that we're going to use
in<00:56:25.980><c> our</c><00:56:26.040><c> application</c><00:56:26.099><c> so</c><00:56:27.920><c> this</c><00:56:28.920><c> emitter</c><00:56:29.460><c> has</c><00:56:30.180><c> a</c>

00:56:30.530 --> 00:56:30.540 align:start position:0%
in our application so this emitter has a
 

00:56:30.540 --> 00:56:33.950 align:start position:0%
in our application so this emitter has a
bunch<00:56:30.930><c> of</c><00:56:31.080><c> methods</c><00:56:31.670><c> look</c><00:56:32.670><c> these</c><00:56:33.420><c> are</c><00:56:33.630><c> all</c><00:56:33.780><c> the</c>

00:56:33.950 --> 00:56:33.960 align:start position:0%
bunch of methods look these are all the
 

00:56:33.960 --> 00:56:36.109 align:start position:0%
bunch of methods look these are all the
metals<00:56:34.320><c> that</c><00:56:34.380><c> you</c><00:56:34.560><c> saw</c><00:56:34.770><c> in</c><00:56:35.010><c> the</c><00:56:35.339><c> documentation</c>

00:56:36.109 --> 00:56:36.119 align:start position:0%
metals that you saw in the documentation
 

00:56:36.119 --> 00:56:38.329 align:start position:0%
metals that you saw in the documentation
now<00:56:36.780><c> even</c><00:56:37.050><c> though</c><00:56:37.140><c> here</c><00:56:37.349><c> we</c><00:56:37.470><c> have</c><00:56:37.680><c> more</c><00:56:38.190><c> than</c>

00:56:38.329 --> 00:56:38.339 align:start position:0%
now even though here we have more than
 

00:56:38.339 --> 00:56:40.820 align:start position:0%
now even though here we have more than
ten<00:56:38.550><c> metals</c><00:56:38.940><c> most</c><00:56:39.780><c> of</c><00:56:39.990><c> the</c><00:56:40.080><c> time</c><00:56:40.260><c> we</c><00:56:40.470><c> use</c><00:56:40.619><c> only</c>

00:56:40.820 --> 00:56:40.830 align:start position:0%
ten metals most of the time we use only
 

00:56:40.830 --> 00:56:44.570 align:start position:0%
ten metals most of the time we use only
two<00:56:41.160><c> of</c><00:56:41.280><c> these</c><00:56:41.430><c> methods</c><00:56:41.849><c> one</c><00:56:42.810><c> is</c><00:56:42.839><c> emit</c><00:56:43.430><c> that</c><00:56:44.430><c> we</c>

00:56:44.570 --> 00:56:44.580 align:start position:0%
two of these methods one is emit that we
 

00:56:44.580 --> 00:56:47.690 align:start position:0%
two of these methods one is emit that we
use<00:56:44.760><c> to</c><00:56:45.240><c> raise</c><00:56:45.480><c> an</c><00:56:45.780><c> event</c><00:56:46.260><c> the</c><00:56:47.220><c> first</c><00:56:47.460><c> time</c><00:56:47.640><c> I</c>

00:56:47.690 --> 00:56:47.700 align:start position:0%
use to raise an event the first time I
 

00:56:47.700 --> 00:56:49.400 align:start position:0%
use to raise an event the first time I
saw<00:56:47.940><c> this</c><00:56:48.089><c> method</c><00:56:48.450><c> it</c><00:56:48.570><c> didn't</c><00:56:48.839><c> make</c><00:56:48.960><c> sense</c><00:56:49.020><c> to</c>

00:56:49.400 --> 00:56:49.410 align:start position:0%
saw this method it didn't make sense to
 

00:56:49.410 --> 00:56:51.560 align:start position:0%
saw this method it didn't make sense to
me<00:56:49.500><c> because</c><00:56:50.280><c> English</c><00:56:50.849><c> is</c><00:56:51.000><c> my</c><00:56:51.119><c> second</c><00:56:51.540><c> language</c>

00:56:51.560 --> 00:56:51.570 align:start position:0%
me because English is my second language
 

00:56:51.570 --> 00:56:55.190 align:start position:0%
me because English is my second language
and<00:56:52.140><c> I</c><00:56:52.200><c> didn't</c><00:56:52.500><c> know</c><00:56:52.680><c> what</c><00:56:53.190><c> emit</c><00:56:53.700><c> means</c><00:56:54.240><c> so</c><00:56:54.960><c> if</c>

00:56:55.190 --> 00:56:55.200 align:start position:0%
and I didn't know what emit means so if
 

00:56:55.200 --> 00:56:57.170 align:start position:0%
and I didn't know what emit means so if
you're<00:56:55.349><c> in</c><00:56:55.470><c> the</c><00:56:55.560><c> same</c><00:56:55.740><c> boat</c><00:56:55.800><c> ma</c><00:56:56.700><c> it</c><00:56:56.760><c> basically</c>

00:56:57.170 --> 00:56:57.180 align:start position:0%
you're in the same boat ma it basically
 

00:56:57.180 --> 00:56:59.780 align:start position:0%
you're in the same boat ma it basically
means<00:56:57.450><c> making</c><00:56:58.290><c> a</c><00:56:58.470><c> noise</c><00:56:58.680><c> or</c><00:56:59.099><c> produce</c>

00:56:59.780 --> 00:56:59.790 align:start position:0%
means making a noise or produce
 

00:56:59.790 --> 00:57:02.660 align:start position:0%
means making a noise or produce
something<00:57:00.270><c> in</c><00:57:00.630><c> this</c><00:57:01.290><c> case</c><00:57:01.530><c> you're</c><00:57:02.310><c> making</c><00:57:02.609><c> a</c>

00:57:02.660 --> 00:57:02.670 align:start position:0%
something in this case you're making a
 

00:57:02.670 --> 00:57:04.220 align:start position:0%
something in this case you're making a
noise<00:57:02.880><c> in</c><00:57:03.060><c> your</c><00:57:03.089><c> application</c><00:57:03.720><c> you're</c>

00:57:04.220 --> 00:57:04.230 align:start position:0%
noise in your application you're
 

00:57:04.230 --> 00:57:07.060 align:start position:0%
noise in your application you're
signaling<00:57:04.640><c> that</c><00:57:05.640><c> an</c><00:57:05.820><c> event</c><00:57:06.210><c> has</c><00:57:06.599><c> happened</c>

00:57:07.060 --> 00:57:07.070 align:start position:0%
signaling that an event has happened
 

00:57:07.070 --> 00:57:10.760 align:start position:0%
signaling that an event has happened
okay<00:57:08.070><c> so</c><00:57:08.790><c> that's</c><00:57:09.119><c> the</c><00:57:09.270><c> meaning</c><00:57:09.540><c> of</c><00:57:09.660><c> Emmet</c><00:57:10.050><c> and</c>

00:57:10.760 --> 00:57:10.770 align:start position:0%
okay so that's the meaning of Emmet and
 

00:57:10.770 --> 00:57:13.579 align:start position:0%
okay so that's the meaning of Emmet and
here<00:57:11.099><c> we</c><00:57:11.550><c> pass</c><00:57:11.730><c> an</c><00:57:11.940><c> argument</c><00:57:11.970><c> that</c><00:57:12.720><c> is</c><00:57:13.470><c> the</c>

00:57:13.579 --> 00:57:13.589 align:start position:0%
here we pass an argument that is the
 

00:57:13.589 --> 00:57:16.370 align:start position:0%
here we pass an argument that is the
name<00:57:13.830><c> of</c><00:57:13.859><c> the</c><00:57:14.130><c> event</c><00:57:14.460><c> let's</c><00:57:15.180><c> say</c><00:57:15.450><c> message</c>

00:57:16.370 --> 00:57:16.380 align:start position:0%
name of the event let's say message
 

00:57:16.380 --> 00:57:18.250 align:start position:0%
name of the event let's say message
locked

00:57:18.250 --> 00:57:18.260 align:start position:0%
locked
 

00:57:18.260 --> 00:57:20.650 align:start position:0%
locked
in<00:57:18.350><c> the</c><00:57:18.800><c> future</c><00:57:19.160><c> we're</c><00:57:19.640><c> going</c><00:57:19.790><c> to</c><00:57:19.940><c> extend</c><00:57:20.360><c> our</c>

00:57:20.650 --> 00:57:20.660 align:start position:0%
in the future we're going to extend our
 

00:57:20.660 --> 00:57:23.110 align:start position:0%
in the future we're going to extend our
lager<00:57:21.050><c> module</c><00:57:21.620><c> and</c><00:57:21.890><c> every</c><00:57:22.580><c> time</c><00:57:22.760><c> we</c><00:57:22.910><c> log</c><00:57:23.090><c> a</c>

00:57:23.110 --> 00:57:23.120 align:start position:0%
lager module and every time we log a
 

00:57:23.120 --> 00:57:25.210 align:start position:0%
lager module and every time we log a
message<00:57:23.600><c> we're</c><00:57:24.080><c> going</c><00:57:24.260><c> to</c><00:57:24.410><c> raise</c><00:57:24.680><c> an</c><00:57:24.920><c> event</c>

00:57:25.210 --> 00:57:25.220 align:start position:0%
message we're going to raise an event
 

00:57:25.220 --> 00:57:29.440 align:start position:0%
message we're going to raise an event
called<00:57:25.550><c> message</c><00:57:26.420><c> locked</c><00:57:26.900><c> okay</c><00:57:27.560><c> now</c><00:57:28.550><c> if</c><00:57:28.940><c> you</c>

00:57:29.440 --> 00:57:29.450 align:start position:0%
called message locked okay now if you
 

00:57:29.450 --> 00:57:31.240 align:start position:0%
called message locked okay now if you
run<00:57:29.570><c> this</c><00:57:29.720><c> application</c><00:57:29.930><c> nothing</c><00:57:30.920><c> is</c><00:57:31.010><c> going</c><00:57:31.160><c> to</c>

00:57:31.240 --> 00:57:31.250 align:start position:0%
run this application nothing is going to
 

00:57:31.250 --> 00:57:33.970 align:start position:0%
run this application nothing is going to
happen<00:57:31.310><c> let</c><00:57:32.180><c> me</c><00:57:32.300><c> show</c><00:57:32.420><c> you</c><00:57:32.740><c> back</c><00:57:33.740><c> in</c><00:57:33.890><c> the</c>

00:57:33.970 --> 00:57:33.980 align:start position:0%
happen let me show you back in the
 

00:57:33.980 --> 00:57:36.910 align:start position:0%
happen let me show you back in the
terminal<00:57:34.340><c> node</c><00:57:34.850><c> app</c><00:57:35.120><c> J</c><00:57:35.450><c> gasps</c><00:57:35.660><c> look</c><00:57:36.320><c> nothing</c>

00:57:36.910 --> 00:57:36.920 align:start position:0%
terminal node app J gasps look nothing
 

00:57:36.920 --> 00:57:39.850 align:start position:0%
terminal node app J gasps look nothing
happened<00:57:37.630><c> because</c><00:57:38.630><c> we</c><00:57:38.900><c> have</c><00:57:39.050><c> raised</c><00:57:39.380><c> an</c><00:57:39.620><c> event</c>

00:57:39.850 --> 00:57:39.860 align:start position:0%
happened because we have raised an event
 

00:57:39.860 --> 00:57:43.180 align:start position:0%
happened because we have raised an event
here<00:57:40.390><c> but</c><00:57:41.390><c> nowhere</c><00:57:41.870><c> in</c><00:57:42.020><c> our</c><00:57:42.110><c> application</c><00:57:42.740><c> we</c>

00:57:43.180 --> 00:57:43.190 align:start position:0%
here but nowhere in our application we
 

00:57:43.190 --> 00:57:45.400 align:start position:0%
here but nowhere in our application we
have<00:57:43.340><c> registered</c><00:57:43.550><c> a</c><00:57:44.060><c> listener</c><00:57:44.750><c> that</c><00:57:45.230><c> is</c>

00:57:45.400 --> 00:57:45.410 align:start position:0%
have registered a listener that is
 

00:57:45.410 --> 00:57:48.250 align:start position:0%
have registered a listener that is
interested<00:57:46.190><c> in</c><00:57:46.370><c> that</c><00:57:46.580><c> event</c><00:57:46.970><c> a</c><00:57:47.180><c> listener</c><00:57:48.050><c> is</c><00:57:48.230><c> a</c>

00:57:48.250 --> 00:57:48.260 align:start position:0%
interested in that event a listener is a
 

00:57:48.260 --> 00:57:50.830 align:start position:0%
interested in that event a listener is a
function<00:57:48.890><c> that</c><00:57:49.100><c> will</c><00:57:49.520><c> be</c><00:57:49.580><c> called</c><00:57:49.700><c> when</c><00:57:50.120><c> that</c>

00:57:50.830 --> 00:57:50.840 align:start position:0%
function that will be called when that
 

00:57:50.840 --> 00:57:52.300 align:start position:0%
function that will be called when that
event<00:57:51.350><c> is</c><00:57:51.620><c> raised</c>

00:57:52.300 --> 00:57:52.310 align:start position:0%
event is raised
 

00:57:52.310 --> 00:57:55.540 align:start position:0%
event is raised
okay<00:57:53.150><c> so</c><00:57:53.990><c> let's</c><00:57:54.230><c> register</c><00:57:54.410><c> a</c><00:57:54.680><c> listener</c><00:57:55.070><c> that</c>

00:57:55.540 --> 00:57:55.550 align:start position:0%
okay so let's register a listener that
 

00:57:55.550 --> 00:57:58.120 align:start position:0%
okay so let's register a listener that
will<00:57:56.180><c> be</c><00:57:56.300><c> called</c><00:57:56.570><c> when</c><00:57:57.470><c> the</c><00:57:57.500><c> message</c><00:57:57.950><c> log</c>

00:57:58.120 --> 00:57:58.130 align:start position:0%
will be called when the message log
 

00:57:58.130 --> 00:58:03.090 align:start position:0%
will be called when the message log
event<00:57:58.550><c> is</c><00:57:58.820><c> raised</c><00:57:59.240><c> so</c><00:58:00.520><c> register</c><00:58:01.520><c> a</c><00:58:01.940><c> listener</c>

00:58:03.090 --> 00:58:03.100 align:start position:0%
event is raised so register a listener
 

00:58:03.100 --> 00:58:07.090 align:start position:0%
event is raised so register a listener
so<00:58:04.100><c> emitter</c><00:58:04.520><c> dot</c><00:58:05.410><c> look</c><00:58:06.410><c> here</c><00:58:06.650><c> we</c><00:58:06.770><c> have</c><00:58:06.920><c> this</c>

00:58:07.090 --> 00:58:07.100 align:start position:0%
so emitter dot look here we have this
 

00:58:07.100 --> 00:58:09.910 align:start position:0%
so emitter dot look here we have this
method<00:58:07.340><c> add</c><00:58:07.610><c> listener</c><00:58:08.210><c> but</c><00:58:09.050><c> we</c><00:58:09.140><c> have</c><00:58:09.290><c> an</c><00:58:09.380><c> alias</c>

00:58:09.910 --> 00:58:09.920 align:start position:0%
method add listener but we have an alias
 

00:58:09.920 --> 00:58:12.250 align:start position:0%
method add listener but we have an alias
for<00:58:10.130><c> this</c><00:58:10.280><c> that</c><00:58:10.580><c> we</c><00:58:10.670><c> use</c><00:58:10.880><c> more</c><00:58:11.150><c> often</c><00:58:11.390><c> that</c><00:58:11.780><c> is</c>

00:58:12.250 --> 00:58:12.260 align:start position:0%
for this that we use more often that is
 

00:58:12.260 --> 00:58:14.950 align:start position:0%
for this that we use more often that is
on<00:58:12.470><c> if</c><00:58:12.890><c> you're</c><00:58:13.760><c> worked</c><00:58:13.970><c> with</c><00:58:14.150><c> jQuery</c><00:58:14.690><c> you</c><00:58:14.870><c> have</c>

00:58:14.950 --> 00:58:14.960 align:start position:0%
on if you're worked with jQuery you have
 

00:58:14.960 --> 00:58:15.970 align:start position:0%
on if you're worked with jQuery you have
seen<00:58:15.260><c> this</c><00:58:15.410><c> before</c>

00:58:15.970 --> 00:58:15.980 align:start position:0%
seen this before
 

00:58:15.980 --> 00:58:18.640 align:start position:0%
seen this before
so<00:58:16.730><c> on</c><00:58:16.910><c> or</c><00:58:17.300><c> add</c><00:58:17.510><c> listener</c><00:58:18.020><c> they're</c><00:58:18.200><c> exactly</c>

00:58:18.640 --> 00:58:18.650 align:start position:0%
so on or add listener they're exactly
 

00:58:18.650 --> 00:58:21.370 align:start position:0%
so on or add listener they're exactly
the<00:58:18.770><c> same</c><00:58:19.010><c> but</c><00:58:19.550><c> quit</c><00:58:19.820><c> often</c><00:58:20.210><c> reused</c><00:58:20.390><c> on</c><00:58:20.750><c> method</c>

00:58:21.370 --> 00:58:21.380 align:start position:0%
the same but quit often reused on method
 

00:58:21.380 --> 00:58:24.790 align:start position:0%
the same but quit often reused on method
now<00:58:22.220><c> this</c><00:58:22.400><c> method</c><00:58:22.580><c> takes</c><00:58:22.910><c> two</c><00:58:23.240><c> arguments</c><00:58:23.870><c> the</c>

00:58:24.790 --> 00:58:24.800 align:start position:0%
now this method takes two arguments the
 

00:58:24.800 --> 00:58:26.800 align:start position:0%
now this method takes two arguments the
first<00:58:25.100><c> one</c><00:58:25.310><c> is</c><00:58:25.460><c> the</c><00:58:25.670><c> name</c><00:58:25.910><c> of</c><00:58:26.120><c> the</c><00:58:26.270><c> event</c><00:58:26.420><c> in</c>

00:58:26.800 --> 00:58:26.810 align:start position:0%
first one is the name of the event in
 

00:58:26.810 --> 00:58:31.390 align:start position:0%
first one is the name of the event in
this<00:58:26.990><c> case</c><00:58:27.130><c> message</c><00:58:28.480><c> locked</c><00:58:29.480><c> and</c><00:58:30.100><c> the</c><00:58:31.100><c> second</c>

00:58:31.390 --> 00:58:31.400 align:start position:0%
this case message locked and the second
 

00:58:31.400 --> 00:58:34.000 align:start position:0%
this case message locked and the second
one<00:58:31.580><c> is</c><00:58:31.730><c> a</c><00:58:31.790><c> callback</c><00:58:32.180><c> function</c><00:58:32.510><c> or</c><00:58:32.900><c> the</c><00:58:33.710><c> actual</c>

00:58:34.000 --> 00:58:34.010 align:start position:0%
one is a callback function or the actual
 

00:58:34.010 --> 00:58:36.790 align:start position:0%
one is a callback function or the actual
listener<00:58:34.550><c> so</c><00:58:35.330><c> here</c><00:58:35.570><c> we</c><00:58:35.720><c> pass</c><00:58:35.900><c> a</c><00:58:35.930><c> function</c><00:58:36.590><c> and</c>

00:58:36.790 --> 00:58:36.800 align:start position:0%
listener so here we pass a function and
 

00:58:36.800 --> 00:58:39.700 align:start position:0%
listener so here we pass a function and
this<00:58:37.790><c> function</c><00:58:37.850><c> will</c><00:58:38.360><c> be</c><00:58:38.390><c> called</c><00:58:38.540><c> when</c><00:58:39.530><c> that</c>

00:58:39.700 --> 00:58:39.710 align:start position:0%
this function will be called when that
 

00:58:39.710 --> 00:58:43.540 align:start position:0%
this function will be called when that
event<00:58:39.860><c> is</c><00:58:40.340><c> raised</c><00:58:40.660><c> okay</c><00:58:42.070><c> now</c><00:58:43.070><c> for</c><00:58:43.130><c> now</c><00:58:43.370><c> I</c><00:58:43.490><c> just</c>

00:58:43.540 --> 00:58:43.550 align:start position:0%
event is raised okay now for now I just
 

00:58:43.550 --> 00:58:45.820 align:start position:0%
event is raised okay now for now I just
want<00:58:43.850><c> to</c><00:58:43.880><c> lock</c><00:58:44.150><c> a</c><00:58:44.360><c> message</c><00:58:44.780><c> in</c><00:58:44.960><c> the</c><00:58:45.170><c> console</c><00:58:45.590><c> so</c>

00:58:45.820 --> 00:58:45.830 align:start position:0%
want to lock a message in the console so
 

00:58:45.830 --> 00:58:51.520 align:start position:0%
want to lock a message in the console so
console<00:58:46.750><c> let's</c><00:58:47.750><c> say</c><00:58:48.040><c> listener</c><00:58:49.420><c> called</c><00:58:50.530><c> like</c>

00:58:51.520 --> 00:58:51.530 align:start position:0%
console let's say listener called like
 

00:58:51.530 --> 00:58:56.050 align:start position:0%
console let's say listener called like
this<00:58:51.970><c> now</c><00:58:52.970><c> let's</c><00:58:53.720><c> run</c><00:58:53.840><c> this</c><00:58:53.960><c> application</c><00:58:55.060><c> so</c>

00:58:56.050 --> 00:58:56.060 align:start position:0%
this now let's run this application so
 

00:58:56.060 --> 00:58:58.420 align:start position:0%
this now let's run this application so
node<00:58:56.270><c> FJ</c><00:58:56.810><c> guess</c><00:58:56.990><c> and</c><00:58:57.290><c> we</c><00:58:58.010><c> got</c><00:58:58.130><c> this</c><00:58:58.220><c> message</c>

00:58:58.420 --> 00:58:58.430 align:start position:0%
node FJ guess and we got this message
 

00:58:58.430 --> 00:59:02.910 align:start position:0%
node FJ guess and we got this message
listener<00:58:58.970><c> call</c><00:58:59.690><c> so</c><00:59:00.620><c> this</c><00:59:00.740><c> indicates</c><00:59:01.690><c> that</c>

00:59:02.910 --> 00:59:02.920 align:start position:0%
listener call so this indicates that
 

00:59:02.920 --> 00:59:06.260 align:start position:0%
listener call so this indicates that
when<00:59:03.920><c> we</c><00:59:04.040><c> raise</c><00:59:04.160><c> this</c><00:59:04.340><c> event</c>

00:59:06.260 --> 00:59:06.270 align:start position:0%
when we raise this event
 

00:59:06.270 --> 00:59:09.080 align:start position:0%
when we raise this event
function<00:59:06.630><c> or</c><00:59:06.840><c> listener</c><00:59:07.410><c> was</c><00:59:07.740><c> called</c><00:59:08.040><c> okay</c><00:59:08.850><c> and</c>

00:59:09.080 --> 00:59:09.090 align:start position:0%
function or listener was called okay and
 

00:59:09.090 --> 00:59:12.470 align:start position:0%
function or listener was called okay and
of<00:59:09.990><c> course</c><00:59:10.200><c> the</c><00:59:10.320><c> order</c><00:59:10.770><c> is</c><00:59:10.950><c> important</c><00:59:11.850><c> here</c><00:59:12.090><c> if</c>

00:59:12.470 --> 00:59:12.480 align:start position:0%
of course the order is important here if
 

00:59:12.480 --> 00:59:16.310 align:start position:0%
of course the order is important here if
you<00:59:12.930><c> register</c><00:59:13.500><c> this</c><00:59:13.800><c> listener</c><00:59:14.430><c> after</c><00:59:15.330><c> calling</c>

00:59:16.310 --> 00:59:16.320 align:start position:0%
you register this listener after calling
 

00:59:16.320 --> 00:59:17.900 align:start position:0%
you register this listener after calling
the<00:59:16.350><c> Amit</c><00:59:16.680><c> method</c><00:59:17.010><c> nothing</c><00:59:17.670><c> would</c><00:59:17.790><c> have</c>

00:59:17.900 --> 00:59:17.910 align:start position:0%
the Amit method nothing would have
 

00:59:17.910 --> 00:59:19.880 align:start position:0%
the Amit method nothing would have
happened<00:59:17.970><c> because</c><00:59:18.930><c> when</c><00:59:19.170><c> we</c><00:59:19.320><c> call</c><00:59:19.500><c> the</c><00:59:19.650><c> Amit</c>

00:59:19.880 --> 00:59:19.890 align:start position:0%
happened because when we call the Amit
 

00:59:19.890 --> 00:59:23.150 align:start position:0%
happened because when we call the Amit
method<00:59:20.220><c> this</c><00:59:20.730><c> eMeter</c><00:59:21.180><c> iterates</c><00:59:22.170><c> over</c><00:59:22.320><c> all</c><00:59:22.800><c> the</c>

00:59:23.150 --> 00:59:23.160 align:start position:0%
method this eMeter iterates over all the
 

00:59:23.160 --> 00:59:25.010 align:start position:0%
method this eMeter iterates over all the
registered<00:59:23.700><c> listeners</c><00:59:24.180><c> and</c><00:59:24.420><c> calls</c><00:59:24.750><c> them</c>

00:59:25.010 --> 00:59:25.020 align:start position:0%
registered listeners and calls them
 

00:59:25.020 --> 00:59:28.880 align:start position:0%
registered listeners and calls them
synchronously<00:59:25.980><c> okay</c><00:59:26.930><c> so</c><00:59:27.930><c> this</c><00:59:28.080><c> is</c><00:59:28.230><c> the</c><00:59:28.350><c> basic</c>

00:59:28.880 --> 00:59:28.890 align:start position:0%
synchronously okay so this is the basic
 

00:59:28.890 --> 00:59:31.100 align:start position:0%
synchronously okay so this is the basic
of<00:59:29.040><c> raising</c><00:59:29.520><c> events</c><00:59:30.000><c> and</c><00:59:30.150><c> handling</c><00:59:30.930><c> them</c>

00:59:31.100 --> 00:59:31.110 align:start position:0%
of raising events and handling them
 

00:59:31.110 --> 00:59:38.780 align:start position:0%
of raising events and handling them
using<00:59:31.770><c> the</c><00:59:31.860><c> eve</c><00:59:32.010><c> an</c><00:59:32.280><c> emitter</c><00:59:32.820><c> class</c>

00:59:38.780 --> 00:59:38.790 align:start position:0%
 
 

00:59:38.790 --> 00:59:41.180 align:start position:0%
 
now<00:59:39.270><c> quite</c><00:59:39.540><c> often</c><00:59:39.780><c> when</c><00:59:40.710><c> you</c><00:59:40.830><c> want</c><00:59:40.980><c> to</c><00:59:41.010><c> raise</c>

00:59:41.180 --> 00:59:41.190 align:start position:0%
now quite often when you want to raise
 

00:59:41.190 --> 00:59:43.790 align:start position:0%
now quite often when you want to raise
an<00:59:41.400><c> event</c><00:59:41.670><c> we</c><00:59:42.330><c> also</c><00:59:42.540><c> want</c><00:59:42.960><c> to</c><00:59:42.990><c> send</c><00:59:43.200><c> some</c><00:59:43.410><c> data</c>

00:59:43.790 --> 00:59:43.800 align:start position:0%
an event we also want to send some data
 

00:59:43.800 --> 00:59:47.300 align:start position:0%
an event we also want to send some data
about<00:59:44.610><c> that</c><00:59:45.120><c> event</c><00:59:45.330><c> for</c><00:59:46.320><c> example</c><00:59:46.800><c> in</c><00:59:47.070><c> our</c>

00:59:47.300 --> 00:59:47.310 align:start position:0%
about that event for example in our
 

00:59:47.310 --> 00:59:49.670 align:start position:0%
about that event for example in our
lager<00:59:47.610><c> module</c><00:59:48.150><c> when</c><00:59:48.780><c> we</c><00:59:48.900><c> log</c><00:59:49.170><c> a</c><00:59:49.200><c> message</c>

00:59:49.670 --> 00:59:49.680 align:start position:0%
lager module when we log a message
 

00:59:49.680 --> 00:59:52.790 align:start position:0%
lager module when we log a message
perhaps<00:59:49.980><c> our</c><00:59:50.430><c> remote</c><00:59:51.180><c> login</c><00:59:51.720><c> service</c><00:59:52.320><c> will</c>

00:59:52.790 --> 00:59:52.800 align:start position:0%
perhaps our remote login service will
 

00:59:52.800 --> 00:59:55.400 align:start position:0%
perhaps our remote login service will
generate<00:59:53.430><c> an</c><00:59:53.670><c> ID</c><00:59:54.090><c> for</c><00:59:54.660><c> that</c><00:59:54.690><c> message</c><00:59:55.200><c> perhaps</c>

00:59:55.400 --> 00:59:55.410 align:start position:0%
generate an ID for that message perhaps
 

00:59:55.410 --> 00:59:58.040 align:start position:0%
generate an ID for that message perhaps
we<00:59:55.710><c> want</c><00:59:55.860><c> to</c><00:59:55.920><c> return</c><00:59:56.280><c> that</c><00:59:56.490><c> ID</c><00:59:56.730><c> to</c><00:59:57.480><c> the</c><00:59:57.600><c> client</c>

00:59:58.040 --> 00:59:58.050 align:start position:0%
we want to return that ID to the client
 

00:59:58.050 --> 01:00:01.340 align:start position:0%
we want to return that ID to the client
or<00:59:58.590><c> it</c><00:59:59.070><c> may</c><00:59:59.250><c> give</c><00:59:59.400><c> us</c><00:59:59.520><c> a</c><00:59:59.670><c> URL</c><01:00:00.060><c> to</c><01:00:00.450><c> access</c><01:00:00.840><c> that</c>

01:00:01.340 --> 01:00:01.350 align:start position:0%
or it may give us a URL to access that
 

01:00:01.350 --> 01:00:04.460 align:start position:0%
or it may give us a URL to access that
log<01:00:01.590><c> message</c><01:00:02.130><c> directly</c><01:00:02.700><c> so</c><01:00:03.570><c> here</c><01:00:03.990><c> when</c>

01:00:04.460 --> 01:00:04.470 align:start position:0%
log message directly so here when
 

01:00:04.470 --> 01:00:06.820 align:start position:0%
log message directly so here when
raising<01:00:04.710><c> an</c><01:00:04.980><c> event</c><01:00:05.280><c> we</c><01:00:05.820><c> can</c><01:00:05.940><c> add</c><01:00:06.150><c> additional</c>

01:00:06.820 --> 01:00:06.830 align:start position:0%
raising an event we can add additional
 

01:00:06.830 --> 01:00:09.770 align:start position:0%
raising an event we can add additional
arguments<01:00:07.830><c> which</c><01:00:08.250><c> we</c><01:00:08.400><c> refer</c><01:00:08.670><c> to</c><01:00:08.700><c> as</c><01:00:09.030><c> event</c>

01:00:09.770 --> 01:00:09.780 align:start position:0%
arguments which we refer to as event
 

01:00:09.780 --> 01:00:13.760 align:start position:0%
arguments which we refer to as event
arguments<01:00:10.530><c> so</c><01:00:11.070><c> we</c><01:00:11.190><c> can</c><01:00:11.310><c> add</c><01:00:11.520><c> an</c><01:00:11.760><c> ID</c><01:00:12.630><c> like</c><01:00:13.560><c> one</c>

01:00:13.760 --> 01:00:13.770 align:start position:0%
arguments so we can add an ID like one
 

01:00:13.770 --> 01:00:18.230 align:start position:0%
arguments so we can add an ID like one
and<01:00:13.980><c> we</c><01:00:14.850><c> can</c><01:00:15.000><c> add</c><01:00:15.150><c> a</c><01:00:15.740><c> URL</c><01:00:16.740><c> but</c><01:00:17.040><c> as</c><01:00:17.790><c> you</c><01:00:17.880><c> can</c><01:00:18.030><c> see</c>

01:00:18.230 --> 01:00:18.240 align:start position:0%
and we can add a URL but as you can see
 

01:00:18.240 --> 01:00:20.750 align:start position:0%
and we can add a URL but as you can see
these<01:00:18.780><c> magic</c><01:00:19.380><c> values</c><01:00:19.800><c> here</c><01:00:20.100><c> are</c><01:00:20.280><c> a</c><01:00:20.310><c> little</c><01:00:20.640><c> bit</c>

01:00:20.750 --> 01:00:20.760 align:start position:0%
these magic values here are a little bit
 

01:00:20.760 --> 01:00:22.670 align:start position:0%
these magic values here are a little bit
confusing<01:00:21.210><c> if</c><01:00:21.600><c> you</c><01:00:21.930><c> want</c><01:00:22.200><c> to</c><01:00:22.260><c> send</c><01:00:22.440><c> multiple</c>

01:00:22.670 --> 01:00:22.680 align:start position:0%
confusing if you want to send multiple
 

01:00:22.680 --> 01:00:25.370 align:start position:0%
confusing if you want to send multiple
values<01:00:23.430><c> about</c><01:00:23.790><c> an</c><01:00:24.030><c> event</c><01:00:24.330><c> it's</c><01:00:24.930><c> a</c><01:00:25.080><c> better</c>

01:00:25.370 --> 01:00:25.380 align:start position:0%
values about an event it's a better
 

01:00:25.380 --> 01:00:28.010 align:start position:0%
values about an event it's a better
practice<01:00:25.980><c> to</c><01:00:26.190><c> encapsulate</c><01:00:27.030><c> those</c><01:00:27.540><c> values</c>

01:00:28.010 --> 01:00:28.020 align:start position:0%
practice to encapsulate those values
 

01:00:28.020 --> 01:00:32.090 align:start position:0%
practice to encapsulate those values
inside<01:00:28.890><c> an</c><01:00:29.070><c> object</c><01:00:29.270><c> so</c><01:00:30.270><c> here</c><01:00:30.860><c> we</c><01:00:31.860><c> have</c><01:00:31.950><c> an</c>

01:00:32.090 --> 01:00:32.100 align:start position:0%
inside an object so here we have an
 

01:00:32.100 --> 01:00:34.520 align:start position:0%
inside an object so here we have an
object<01:00:32.480><c> we</c><01:00:33.480><c> give</c><01:00:33.630><c> it</c><01:00:33.720><c> a</c><01:00:33.750><c> couple</c><01:00:33.960><c> of</c><01:00:34.080><c> properties</c>

01:00:34.520 --> 01:00:34.530 align:start position:0%
object we give it a couple of properties
 

01:00:34.530 --> 01:00:37.670 align:start position:0%
object we give it a couple of properties
like<01:00:34.920><c> ID</c><01:00:35.190><c> we</c><01:00:36.030><c> set</c><01:00:36.270><c> it</c><01:00:36.390><c> to</c><01:00:36.420><c> ID</c><01:00:36.660><c> of</c><01:00:37.020><c> this</c><01:00:37.170><c> message</c>

01:00:37.670 --> 01:00:37.680 align:start position:0%
like ID we set it to ID of this message
 

01:00:37.680 --> 01:00:41.600 align:start position:0%
like ID we set it to ID of this message
that<01:00:37.890><c> is</c><01:00:37.980><c> logged</c><01:00:38.250><c> and</c><01:00:39.590><c> another</c><01:00:40.590><c> property</c><01:00:40.860><c> URL</c>

01:00:41.600 --> 01:00:41.610 align:start position:0%
that is logged and another property URL
 

01:00:41.610 --> 01:00:44.930 align:start position:0%
that is logged and another property URL
like<01:00:42.390><c> this</c><01:00:42.630><c> okay</c><01:00:43.430><c> so</c><01:00:44.430><c> we're</c><01:00:44.640><c> referring</c><01:00:44.880><c> to</c>

01:00:44.930 --> 01:00:44.940 align:start position:0%
like this okay so we're referring to
 

01:00:44.940 --> 01:00:50.000 align:start position:0%
like this okay so we're referring to
this<01:00:45.090><c> object</c><01:00:45.390><c> as</c><01:00:46.370><c> event</c><01:00:47.370><c> argument</c><01:00:48.260><c> now</c><01:00:49.260><c> when</c>

01:00:50.000 --> 01:00:50.010 align:start position:0%
this object as event argument now when
 

01:00:50.010 --> 01:00:52.640 align:start position:0%
this object as event argument now when
registering<01:00:50.490><c> a</c><01:00:50.700><c> listener</c><01:00:51.120><c> here</c><01:00:51.650><c> this</c>

01:00:52.640 --> 01:00:52.650 align:start position:0%
registering a listener here this
 

01:00:52.650 --> 01:00:54.470 align:start position:0%
registering a listener here this
callback<01:00:53.070><c> function</c><01:00:53.430><c> this</c><01:00:53.640><c> actual</c><01:00:54.060><c> listener</c>

01:00:54.470 --> 01:00:54.480 align:start position:0%
callback function this actual listener
 

01:00:54.480 --> 01:00:58.880 align:start position:0%
callback function this actual listener
can<01:00:55.230><c> also</c><01:00:55.500><c> receive</c><01:00:56.070><c> this</c><01:00:56.970><c> event</c><01:00:57.450><c> argument</c><01:00:58.110><c> so</c>

01:00:58.880 --> 01:00:58.890 align:start position:0%
can also receive this event argument so
 

01:00:58.890 --> 01:01:02.660 align:start position:0%
can also receive this event argument so
here<01:00:59.070><c> we</c><01:00:59.160><c> add</c><01:00:59.310><c> a</c><01:00:59.580><c> parameter</c><01:01:00.540><c> called</c><01:01:00.750><c> arc</c><01:01:01.740><c> we</c>

01:01:02.660 --> 01:01:02.670 align:start position:0%
here we add a parameter called arc we
 

01:01:02.670 --> 01:01:04.520 align:start position:0%
here we add a parameter called arc we
can<01:01:02.820><c> call</c><01:01:03.000><c> it</c><01:01:03.120><c> anything</c><01:01:03.510><c> the</c><01:01:04.080><c> name</c><01:01:04.290><c> doesn't</c>

01:01:04.520 --> 01:01:04.530 align:start position:0%
can call it anything the name doesn't
 

01:01:04.530 --> 01:01:04.910 align:start position:0%
can call it anything the name doesn't
matter

01:01:04.910 --> 01:01:04.920 align:start position:0%
matter
 

01:01:04.920 --> 01:01:07.670 align:start position:0%
matter
but<01:01:05.430><c> by</c><01:01:05.550><c> convention</c><01:01:05.820><c> we</c><01:01:06.150><c> often</c><01:01:06.510><c> use</c><01:01:06.660><c> arc</c><01:01:06.990><c> or</c>

01:01:07.670 --> 01:01:07.680 align:start position:0%
but by convention we often use arc or
 

01:01:07.680 --> 01:01:10.610 align:start position:0%
but by convention we often use arc or
some<01:01:08.370><c> people</c><01:01:08.520><c> use</c><01:01:08.790><c> e</c><01:01:09.000><c> to</c><01:01:09.510><c> refer</c><01:01:10.020><c> to</c><01:01:10.140><c> the</c><01:01:10.260><c> event</c>

01:01:10.610 --> 01:01:10.620 align:start position:0%
some people use e to refer to the event
 

01:01:10.620 --> 01:01:14.060 align:start position:0%
some people use e to refer to the event
or<01:01:11.030><c> event</c><01:01:12.030><c> arc</c><01:01:12.450><c> whatever</c><01:01:13.410><c> you</c><01:01:13.560><c> prefer</c><01:01:13.740><c> is</c>

01:01:14.060 --> 01:01:14.070 align:start position:0%
or event arc whatever you prefer is
 

01:01:14.070 --> 01:01:17.590 align:start position:0%
or event arc whatever you prefer is
perfectly<01:01:14.520><c> fine</c><01:01:14.730><c> so</c><01:01:14.970><c> here</c><01:01:15.960><c> we</c><01:01:16.080><c> have</c><01:01:16.200><c> arc</c><01:01:16.530><c> now</c>

01:01:17.590 --> 01:01:17.600 align:start position:0%
perfectly fine so here we have arc now
 

01:01:17.600 --> 01:01:22.580 align:start position:0%
perfectly fine so here we have arc now
let's<01:01:18.600><c> log</c><01:01:19.260><c> in</c><01:01:19.470><c> on</c><01:01:19.590><c> the</c><01:01:19.620><c> console</c><01:01:21.110><c> very</c><01:01:22.110><c> simple</c>

01:01:22.580 --> 01:01:22.590 align:start position:0%
let's log in on the console very simple
 

01:01:22.590 --> 01:01:27.200 align:start position:0%
let's log in on the console very simple
let's<01:01:23.340><c> run</c><01:01:23.490><c> this</c><01:01:23.580><c> application</c><01:01:24.680><c> so</c><01:01:25.680><c> note</c><01:01:26.210><c> okay</c>

01:01:27.200 --> 01:01:27.210 align:start position:0%
let's run this application so note okay
 

01:01:27.210 --> 01:01:30.260 align:start position:0%
let's run this application so note okay
look<01:01:27.420><c> listen</c><01:01:28.230><c> are</c><01:01:28.500><c> called</c><01:01:28.740><c> and</c><01:01:29.090><c> here's</c><01:01:30.090><c> our</c>

01:01:30.260 --> 01:01:30.270 align:start position:0%
look listen are called and here's our
 

01:01:30.270 --> 01:01:33.170 align:start position:0%
look listen are called and here's our
event<01:01:30.780><c> arc</c><01:01:31.110><c> and</c><01:01:31.740><c> with</c><01:01:32.250><c> this</c><01:01:32.400><c> technique</c><01:01:32.880><c> we</c><01:01:33.030><c> can</c>

01:01:33.170 --> 01:01:33.180 align:start position:0%
event arc and with this technique we can
 

01:01:33.180 --> 01:01:35.630 align:start position:0%
event arc and with this technique we can
pass<01:01:33.450><c> data</c><01:01:33.900><c> about</c><01:01:34.800><c> the</c><01:01:34.980><c> event</c><01:01:35.400><c> that</c><01:01:35.580><c> just</c>

01:01:35.630 --> 01:01:35.640 align:start position:0%
pass data about the event that just
 

01:01:35.640 --> 01:01:37.230 align:start position:0%
pass data about the event that just
happened

01:01:37.230 --> 01:01:37.240 align:start position:0%
happened
 

01:01:37.240 --> 01:01:39.540 align:start position:0%
happened
now<01:01:37.540><c> one</c><01:01:37.840><c> last</c><01:01:38.050><c> thing</c><01:01:38.200><c> to</c><01:01:38.770><c> make</c><01:01:38.950><c> this</c><01:01:39.100><c> code</c><01:01:39.370><c> a</c>

01:01:39.540 --> 01:01:39.550 align:start position:0%
now one last thing to make this code a
 

01:01:39.550 --> 01:01:42.870 align:start position:0%
now one last thing to make this code a
little<01:01:39.820><c> bit</c><01:01:39.940><c> simpler</c><01:01:40.390><c> in</c><01:01:40.950><c> es6</c><01:01:41.950><c> or</c><01:01:42.160><c> equal</c>

01:01:42.870 --> 01:01:42.880 align:start position:0%
little bit simpler in es6 or equal
 

01:01:42.880 --> 01:01:44.760 align:start position:0%
little bit simpler in es6 or equal
script<01:01:43.180><c> six</c><01:01:43.420><c> we</c><01:01:44.050><c> have</c><01:01:44.230><c> this</c><01:01:44.380><c> feature</c><01:01:44.590><c> called</c>

01:01:44.760 --> 01:01:44.770 align:start position:0%
script six we have this feature called
 

01:01:44.770 --> 01:01:49.470 align:start position:0%
script six we have this feature called
arrow<01:01:45.660><c> function</c><01:01:46.660><c> with</c><01:01:47.500><c> an</c><01:01:47.620><c> arrow</c><01:01:47.920><c> function</c><01:01:48.480><c> we</c>

01:01:49.470 --> 01:01:49.480 align:start position:0%
arrow function with an arrow function we
 

01:01:49.480 --> 01:01:52.800 align:start position:0%
arrow function with an arrow function we
can<01:01:49.630><c> get</c><01:01:49.840><c> rid</c><01:01:49.990><c> of</c><01:01:50.020><c> this</c><01:01:50.200><c> function</c><01:01:50.710><c> keyword</c><01:01:51.810><c> so</c>

01:01:52.800 --> 01:01:52.810 align:start position:0%
can get rid of this function keyword so
 

01:01:52.810 --> 01:01:54.870 align:start position:0%
can get rid of this function keyword so
here<01:01:53.020><c> we</c><01:01:53.140><c> have</c><01:01:53.380><c> the</c><01:01:53.890><c> arguments</c><01:01:54.490><c> and</c><01:01:54.610><c> after</c>

01:01:54.870 --> 01:01:54.880 align:start position:0%
here we have the arguments and after
 

01:01:54.880 --> 01:01:56.570 align:start position:0%
here we have the arguments and after
that<01:01:55.000><c> we</c><01:01:55.180><c> have</c><01:01:55.360><c> the</c><01:01:55.540><c> body</c><01:01:55.930><c> of</c><01:01:56.110><c> that</c><01:01:56.500><c> function</c>

01:01:56.570 --> 01:01:56.580 align:start position:0%
that we have the body of that function
 

01:01:56.580 --> 01:02:00.870 align:start position:0%
that we have the body of that function
now<01:01:57.580><c> to</c><01:01:57.640><c> separate</c><01:01:58.210><c> the</c><01:01:58.360><c> two</c><01:01:58.570><c> we</c><01:01:59.500><c> use</c><01:01:59.710><c> an</c><01:02:00.010><c> arrow</c>

01:02:00.870 --> 01:02:00.880 align:start position:0%
now to separate the two we use an arrow
 

01:02:00.880 --> 01:02:02.520 align:start position:0%
now to separate the two we use an arrow
and<01:02:01.090><c> that's</c><01:02:01.420><c> why</c><01:02:01.660><c> we</c><01:02:01.870><c> call</c><01:02:02.110><c> this</c><01:02:02.260><c> arrow</c>

01:02:02.520 --> 01:02:02.530 align:start position:0%
and that's why we call this arrow
 

01:02:02.530 --> 01:02:04.770 align:start position:0%
and that's why we call this arrow
function<01:02:03.100><c> you</c><01:02:03.790><c> can</c><01:02:03.940><c> see</c><01:02:04.060><c> this</c><01:02:04.210><c> syntax</c><01:02:04.570><c> is</c><01:02:04.750><c> a</c>

01:02:04.770 --> 01:02:04.780 align:start position:0%
function you can see this syntax is a
 

01:02:04.780 --> 01:02:06.570 align:start position:0%
function you can see this syntax is a
little<01:02:05.080><c> bit</c><01:02:05.170><c> simpler</c><01:02:05.530><c> and</c><01:02:05.770><c> a</c><01:02:06.010><c> lot</c><01:02:06.160><c> of</c><01:02:06.190><c> people</c>

01:02:06.570 --> 01:02:06.580 align:start position:0%
little bit simpler and a lot of people
 

01:02:06.580 --> 01:02:10.290 align:start position:0%
little bit simpler and a lot of people
prefer<01:02:06.880><c> to</c><01:02:07.090><c> use</c><01:02:07.480><c> arrow</c><01:02:07.750><c> functions</c><01:02:08.350><c> in</c><01:02:08.560><c> es6</c><01:02:09.370><c> now</c>

01:02:10.290 --> 01:02:10.300 align:start position:0%
prefer to use arrow functions in es6 now
 

01:02:10.300 --> 01:02:12.720 align:start position:0%
prefer to use arrow functions in es6 now
here's<01:02:10.510><c> a</c><01:02:10.600><c> simple</c><01:02:10.990><c> exercise</c><01:02:11.380><c> for</c><01:02:11.800><c> you</c><01:02:11.860><c> let's</c>

01:02:12.720 --> 01:02:12.730 align:start position:0%
here's a simple exercise for you let's
 

01:02:12.730 --> 01:02:15.750 align:start position:0%
here's a simple exercise for you let's
imagine<01:02:12.940><c> in</c><01:02:13.330><c> our</c><01:02:13.600><c> lager</c><01:02:13.870><c> module</c><01:02:14.380><c> just</c><01:02:15.280><c> before</c>

01:02:15.750 --> 01:02:15.760 align:start position:0%
imagine in our lager module just before
 

01:02:15.760 --> 01:02:18.000 align:start position:0%
imagine in our lager module just before
calling<01:02:16.450><c> our</c><01:02:16.600><c> remote</c><01:02:16.960><c> service</c><01:02:17.440><c> to</c><01:02:17.590><c> log</c><01:02:17.830><c> the</c>

01:02:18.000 --> 01:02:18.010 align:start position:0%
calling our remote service to log the
 

01:02:18.010 --> 01:02:21.240 align:start position:0%
calling our remote service to log the
message<01:02:18.400><c> we're</c><01:02:19.090><c> going</c><01:02:19.270><c> to</c><01:02:19.420><c> raise</c><01:02:19.630><c> an</c><01:02:20.250><c> event</c>

01:02:21.240 --> 01:02:21.250 align:start position:0%
message we're going to raise an event
 

01:02:21.250 --> 01:02:25.770 align:start position:0%
message we're going to raise an event
called<01:02:21.960><c> logging</c><01:02:22.960><c> and</c><01:02:24.090><c> while</c><01:02:25.090><c> raising</c><01:02:25.480><c> this</c>

01:02:25.770 --> 01:02:25.780 align:start position:0%
called logging and while raising this
 

01:02:25.780 --> 01:02:28.770 align:start position:0%
called logging and while raising this
event<01:02:26.110><c> we</c><01:02:26.620><c> also</c><01:02:26.770><c> want</c><01:02:27.250><c> to</c><01:02:27.310><c> send</c><01:02:27.630><c> some</c><01:02:28.630><c> data</c>

01:02:28.770 --> 01:02:28.780 align:start position:0%
event we also want to send some data
 

01:02:28.780 --> 01:02:31.590 align:start position:0%
event we also want to send some data
that<01:02:29.620><c> is</c><01:02:29.740><c> the</c><01:02:29.860><c> message</c><01:02:30.340><c> that</c><01:02:31.120><c> we're</c><01:02:31.300><c> going</c><01:02:31.420><c> to</c>

01:02:31.590 --> 01:02:31.600 align:start position:0%
that is the message that we're going to
 

01:02:31.600 --> 01:02:34.740 align:start position:0%
that is the message that we're going to
lock<01:02:32.010><c> so</c><01:02:33.010><c> what</c><01:02:33.190><c> I</c><01:02:33.220><c> want</c><01:02:33.430><c> you</c><01:02:33.520><c> to</c><01:02:33.640><c> do</c><01:02:33.790><c> is</c><01:02:34.090><c> to</c><01:02:34.600><c> use</c>

01:02:34.740 --> 01:02:34.750 align:start position:0%
lock so what I want you to do is to use
 

01:02:34.750 --> 01:02:36.210 align:start position:0%
lock so what I want you to do is to use
what<01:02:35.020><c> you</c><01:02:35.110><c> have</c><01:02:35.170><c> learned</c><01:02:35.290><c> in</c><01:02:35.710><c> this</c><01:02:35.800><c> lecture</c>

01:02:36.210 --> 01:02:36.220 align:start position:0%
what you have learned in this lecture
 

01:02:36.220 --> 01:02:39.750 align:start position:0%
what you have learned in this lecture
and<01:02:36.430><c> raise</c><01:02:37.270><c> and</c><01:02:37.600><c> handle</c><01:02:38.170><c> is</c><01:02:38.410><c> logging</c><01:02:39.160><c> event</c>

01:02:39.750 --> 01:02:39.760 align:start position:0%
and raise and handle is logging event
 

01:02:39.760 --> 01:02:41.820 align:start position:0%
and raise and handle is logging event
it's<01:02:40.360><c> a</c><01:02:40.390><c> very</c><01:02:40.630><c> simple</c><01:02:40.840><c> exercise</c><01:02:40.990><c> I</c><01:02:41.470><c> just</c><01:02:41.650><c> want</c>

01:02:41.820 --> 01:02:41.830 align:start position:0%
it's a very simple exercise I just want
 

01:02:41.830 --> 01:02:48.650 align:start position:0%
it's a very simple exercise I just want
you<01:02:41.920><c> to</c><01:02:42.040><c> get</c><01:02:42.190><c> used</c><01:02:42.550><c> to</c><01:02:42.670><c> this</c><01:02:42.790><c> syntax</c>

01:02:48.650 --> 01:02:48.660 align:start position:0%
 
 

01:02:48.660 --> 01:02:51.980 align:start position:0%
 
now<01:02:49.290><c> in</c><01:02:49.590><c> the</c><01:02:49.770><c> real</c><01:02:49.950><c> world</c><01:02:50.190><c> is</c><01:02:50.460><c> quite</c><01:02:51.030><c> rare</c><01:02:51.420><c> that</c>

01:02:51.980 --> 01:02:51.990 align:start position:0%
now in the real world is quite rare that
 

01:02:51.990 --> 01:02:54.290 align:start position:0%
now in the real world is quite rare that
you<01:02:52.260><c> would</c><01:02:52.410><c> work</c><01:02:52.620><c> with</c><01:02:52.680><c> this</c><01:02:53.040><c> event</c><01:02:53.300><c> emitter</c>

01:02:54.290 --> 01:02:54.300 align:start position:0%
you would work with this event emitter
 

01:02:54.300 --> 01:02:57.800 align:start position:0%
you would work with this event emitter
object<01:02:54.980><c> directly</c><01:02:55.980><c> instead</c><01:02:56.880><c> you</c><01:02:57.570><c> want</c><01:02:57.750><c> to</c>

01:02:57.800 --> 01:02:57.810 align:start position:0%
object directly instead you want to
 

01:02:57.810 --> 01:02:59.780 align:start position:0%
object directly instead you want to
create<01:02:57.990><c> a</c><01:02:58.080><c> class</c><01:02:58.410><c> that</c><01:02:58.710><c> has</c><01:02:58.950><c> all</c><01:02:59.340><c> the</c>

01:02:59.780 --> 01:02:59.790 align:start position:0%
create a class that has all the
 

01:02:59.790 --> 01:03:02.120 align:start position:0%
create a class that has all the
capabilities<01:03:00.660><c> of</c><01:03:00.870><c> the</c><01:03:01.230><c> event</c><01:03:01.530><c> emitter</c><01:03:01.890><c> and</c>

01:03:02.120 --> 01:03:02.130 align:start position:0%
capabilities of the event emitter and
 

01:03:02.130 --> 01:03:04.160 align:start position:0%
capabilities of the event emitter and
then<01:03:02.370><c> you</c><01:03:02.460><c> will</c><01:03:02.580><c> use</c><01:03:02.730><c> that</c><01:03:02.970><c> class</c><01:03:03.510><c> in</c><01:03:03.870><c> your</c>

01:03:04.160 --> 01:03:04.170 align:start position:0%
then you will use that class in your
 

01:03:04.170 --> 01:03:06.620 align:start position:0%
then you will use that class in your
code<01:03:04.470><c> let</c><01:03:05.190><c> me</c><01:03:05.310><c> explain</c><01:03:05.610><c> what</c><01:03:06.210><c> I</c><01:03:06.240><c> mean</c><01:03:06.330><c> by</c><01:03:06.480><c> that</c>

01:03:06.620 --> 01:03:06.630 align:start position:0%
code let me explain what I mean by that
 

01:03:06.630 --> 01:03:10.310 align:start position:0%
code let me explain what I mean by that
and<01:03:07.050><c> why</c><01:03:07.350><c> so</c><01:03:08.250><c> let's</c><01:03:09.180><c> open</c><01:03:09.450><c> up</c><01:03:09.750><c> our</c><01:03:09.930><c> lager</c>

01:03:10.310 --> 01:03:10.320 align:start position:0%
and why so let's open up our lager
 

01:03:10.320 --> 01:03:13.310 align:start position:0%
and why so let's open up our lager
module<01:03:11.270><c> so</c><01:03:12.270><c> in</c><01:03:12.360><c> this</c><01:03:12.510><c> module</c><01:03:12.660><c> we're</c><01:03:12.990><c> exporting</c>

01:03:13.310 --> 01:03:13.320 align:start position:0%
module so in this module we're exporting
 

01:03:13.320 --> 01:03:17.360 align:start position:0%
module so in this module we're exporting
a<01:03:13.590><c> simple</c><01:03:13.950><c> function</c><01:03:14.370><c> log</c><01:03:14.820><c> right</c><01:03:15.510><c> and</c><01:03:15.810><c> here</c><01:03:16.740><c> we</c>

01:03:17.360 --> 01:03:17.370 align:start position:0%
a simple function log right and here we
 

01:03:17.370 --> 01:03:19.850 align:start position:0%
a simple function log right and here we
log<01:03:17.640><c> that</c><01:03:17.820><c> message</c><01:03:18.180><c> on</c><01:03:18.300><c> the</c><01:03:18.510><c> console</c><01:03:18.930><c> now</c>

01:03:19.850 --> 01:03:19.860 align:start position:0%
log that message on the console now
 

01:03:19.860 --> 01:03:23.060 align:start position:0%
log that message on the console now
after<01:03:20.460><c> this</c><01:03:20.700><c> we</c><01:03:21.540><c> want</c><01:03:21.690><c> to</c><01:03:21.780><c> raise</c><01:03:21.990><c> an</c><01:03:22.290><c> event</c><01:03:22.830><c> and</c>

01:03:23.060 --> 01:03:23.070 align:start position:0%
after this we want to raise an event and
 

01:03:23.070 --> 01:03:25.640 align:start position:0%
after this we want to raise an event and
then<01:03:23.730><c> later</c><01:03:23.910><c> in</c><01:03:24.270><c> app</c><01:03:24.510><c> module</c><01:03:24.720><c> we</c><01:03:25.320><c> will</c><01:03:25.440><c> listen</c>

01:03:25.640 --> 01:03:25.650 align:start position:0%
then later in app module we will listen
 

01:03:25.650 --> 01:03:28.340 align:start position:0%
then later in app module we will listen
for<01:03:25.800><c> that</c><01:03:26.040><c> event</c><01:03:26.310><c> and</c><01:03:26.550><c> do</c><01:03:26.790><c> something</c><01:03:27.210><c> so</c><01:03:28.020><c> let's</c>

01:03:28.340 --> 01:03:28.350 align:start position:0%
for that event and do something so let's
 

01:03:28.350 --> 01:03:31.370 align:start position:0%
for that event and do something so let's
go<01:03:28.470><c> back</c><01:03:28.500><c> to</c><01:03:28.650><c> our</c><01:03:28.770><c> app</c><01:03:29.010><c> module</c><01:03:29.610><c> and</c><01:03:30.260><c> copy</c><01:03:31.260><c> some</c>

01:03:31.370 --> 01:03:31.380 align:start position:0%
go back to our app module and copy some
 

01:03:31.380 --> 01:03:34.790 align:start position:0%
go back to our app module and copy some
code<01:03:31.670><c> into</c><01:03:32.670><c> the</c><01:03:32.820><c> lager</c><01:03:33.120><c> module</c><01:03:33.630><c> so</c><01:03:34.350><c> on</c><01:03:34.500><c> the</c><01:03:34.590><c> top</c>

01:03:34.790 --> 01:03:34.800 align:start position:0%
code into the lager module so on the top
 

01:03:34.800 --> 01:03:37.610 align:start position:0%
code into the lager module so on the top
I'm<01:03:35.010><c> gonna</c><01:03:35.250><c> copy</c><01:03:35.490><c> these</c><01:03:35.790><c> two</c><01:03:35.850><c> lines</c><01:03:36.320><c> to</c><01:03:37.320><c> bring</c>

01:03:37.610 --> 01:03:37.620 align:start position:0%
I'm gonna copy these two lines to bring
 

01:03:37.620 --> 01:03:41.270 align:start position:0%
I'm gonna copy these two lines to bring
the<01:03:38.490><c> event</c><01:03:38.640><c> emitter</c><01:03:39.330><c> in</c><01:03:39.510><c> this</c><01:03:39.810><c> module</c><01:03:40.280><c> okay</c>

01:03:41.270 --> 01:03:41.280 align:start position:0%
the event emitter in this module okay
 

01:03:41.280 --> 01:03:44.660 align:start position:0%
the event emitter in this module okay
now<01:03:41.820><c> back</c><01:03:42.000><c> in</c><01:03:42.180><c> app</c><01:03:42.300><c> module</c><01:03:42.890><c> I'm</c><01:03:43.890><c> also</c><01:03:44.400><c> gonna</c>

01:03:44.660 --> 01:03:44.670 align:start position:0%
now back in app module I'm also gonna
 

01:03:44.670 --> 01:03:47.480 align:start position:0%
now back in app module I'm also gonna
move<01:03:44.940><c> these</c><01:03:45.750><c> two</c><01:03:45.990><c> lines</c><01:03:46.260><c> for</c><01:03:46.950><c> raising</c><01:03:47.370><c> an</c>

01:03:47.480 --> 01:03:47.490 align:start position:0%
move these two lines for raising an
 

01:03:47.490 --> 01:03:49.940 align:start position:0%
move these two lines for raising an
event<01:03:47.760><c> into</c><01:03:48.600><c> the</c><01:03:48.720><c> lager</c><01:03:48.960><c> module</c><01:03:49.470><c> because</c><01:03:49.770><c> this</c>

01:03:49.940 --> 01:03:49.950 align:start position:0%
event into the lager module because this
 

01:03:49.950 --> 01:03:51.950 align:start position:0%
event into the lager module because this
code<01:03:50.190><c> should</c><01:03:50.460><c> not</c><01:03:50.640><c> be</c><01:03:50.820><c> here</c><01:03:51.150><c> it's</c><01:03:51.570><c> the</c><01:03:51.720><c> lager</c>

01:03:51.950 --> 01:03:51.960 align:start position:0%
code should not be here it's the lager
 

01:03:51.960 --> 01:03:55.370 align:start position:0%
code should not be here it's the lager
module<01:03:52.560><c> that</c><01:03:53.160><c> emits</c><01:03:53.610><c> or</c><01:03:53.820><c> signals</c><01:03:54.720><c> an</c><01:03:54.930><c> event</c>

01:03:55.370 --> 01:03:55.380 align:start position:0%
module that emits or signals an event
 

01:03:55.380 --> 01:03:59.900 align:start position:0%
module that emits or signals an event
saying<01:03:55.800><c> the</c><01:03:55.950><c> message</c><01:03:56.160><c> is</c><01:03:56.460><c> locked</c><01:03:56.850><c> so</c><01:03:57.690><c> cut</c><01:03:58.910><c> so</c>

01:03:59.900 --> 01:03:59.910 align:start position:0%
saying the message is locked so cut so
 

01:03:59.910 --> 01:04:02.780 align:start position:0%
saying the message is locked so cut so
here<01:04:00.150><c> after</c><01:04:00.360><c> we</c><01:04:00.840><c> log</c><01:04:01.410><c> the</c><01:04:01.440><c> message</c><01:04:01.950><c> you</c><01:04:02.580><c> raise</c>

01:04:02.780 --> 01:04:02.790 align:start position:0%
here after we log the message you raise
 

01:04:02.790 --> 01:04:05.360 align:start position:0%
here after we log the message you raise
an<01:04:03.060><c> event</c><01:04:03.330><c> like</c><01:04:04.020><c> this</c><01:04:04.230><c> okay</c>

01:04:05.360 --> 01:04:05.370 align:start position:0%
an event like this okay
 

01:04:05.370 --> 01:04:09.080 align:start position:0%
an event like this okay
now<01:04:06.300><c> back</c><01:04:06.510><c> in</c><01:04:06.630><c> app</c><01:04:06.750><c> module</c><01:04:07.850><c> we</c><01:04:08.850><c> don't</c><01:04:09.030><c> need</c>

01:04:09.080 --> 01:04:09.090 align:start position:0%
now back in app module we don't need
 

01:04:09.090 --> 01:04:11.450 align:start position:0%
now back in app module we don't need
this<01:04:09.210><c> comment</c><01:04:09.660><c> here</c><01:04:10.470><c> we</c><01:04:10.590><c> need</c><01:04:10.710><c> to</c><01:04:10.830><c> load</c><01:04:11.010><c> the</c>

01:04:11.450 --> 01:04:11.460 align:start position:0%
this comment here we need to load the
 

01:04:11.460 --> 01:04:14.080 align:start position:0%
this comment here we need to load the
lager<01:04:11.700><c> module</c><01:04:12.240><c> and</c><01:04:12.450><c> call</c><01:04:13.230><c> the</c><01:04:13.440><c> log</c><01:04:13.680><c> function</c>

01:04:14.080 --> 01:04:14.090 align:start position:0%
lager module and call the log function
 

01:04:14.090 --> 01:04:19.430 align:start position:0%
lager module and call the log function
so<01:04:15.170><c> constant</c><01:04:16.170><c> log</c><01:04:17.840><c> we</c><01:04:18.840><c> call</c><01:04:19.050><c> the</c><01:04:19.170><c> require</c>

01:04:19.430 --> 01:04:19.440 align:start position:0%
so constant log we call the require
 

01:04:19.440 --> 01:04:22.190 align:start position:0%
so constant log we call the require
function<01:04:19.710><c> and</c><01:04:20.130><c> set</c><01:04:21.030><c> the</c><01:04:21.150><c> path</c><01:04:21.360><c> to</c><01:04:21.630><c> the</c><01:04:21.750><c> lager</c>

01:04:22.190 --> 01:04:22.200 align:start position:0%
function and set the path to the lager
 

01:04:22.200 --> 01:04:26.870 align:start position:0%
function and set the path to the lager
module<01:04:23.040><c> and</c><01:04:24.020><c> here</c><01:04:25.020><c> we</c><01:04:25.140><c> simply</c><01:04:25.410><c> call</c><01:04:25.670><c> the</c><01:04:26.670><c> log</c>

01:04:26.870 --> 01:04:26.880 align:start position:0%
module and here we simply call the log
 

01:04:26.880 --> 01:04:31.160 align:start position:0%
module and here we simply call the log
function<01:04:27.090><c> with</c><01:04:27.510><c> a</c><01:04:27.720><c> message</c><01:04:28.310><c> okay</c><01:04:29.570><c> now</c><01:04:30.570><c> when</c><01:04:31.050><c> we</c>

01:04:31.160 --> 01:04:31.170 align:start position:0%
function with a message okay now when we
 

01:04:31.170 --> 01:04:33.560 align:start position:0%
function with a message okay now when we
run<01:04:31.320><c> this</c><01:04:31.440><c> application</c><01:04:32.000><c> we</c><01:04:33.000><c> are</c><01:04:33.030><c> only</c><01:04:33.300><c> going</c>

01:04:33.560 --> 01:04:33.570 align:start position:0%
run this application we are only going
 

01:04:33.570 --> 01:04:36.560 align:start position:0%
run this application we are only going
to<01:04:33.660><c> see</c><01:04:33.780><c> this</c><01:04:34.590><c> message</c><01:04:35.070><c> on</c><01:04:35.190><c> the</c><01:04:35.490><c> console</c><01:04:35.940><c> in</c>

01:04:36.560 --> 01:04:36.570 align:start position:0%
to see this message on the console in
 

01:04:36.570 --> 01:04:39.980 align:start position:0%
to see this message on the console in
other<01:04:36.900><c> words</c><01:04:37.380><c> this</c><01:04:37.920><c> event</c><01:04:38.550><c> listener</c><01:04:39.120><c> will</c><01:04:39.630><c> not</c>

01:04:39.980 --> 01:04:39.990 align:start position:0%
other words this event listener will not
 

01:04:39.990 --> 01:04:42.770 align:start position:0%
other words this event listener will not
be<01:04:40.260><c> caught</c><01:04:40.640><c> let's</c><01:04:41.640><c> verify</c><01:04:41.880><c> that</c><01:04:42.210><c> and</c><01:04:42.480><c> then</c><01:04:42.660><c> I</c>

01:04:42.770 --> 01:04:42.780 align:start position:0%
be caught let's verify that and then I
 

01:04:42.780 --> 01:04:44.300 align:start position:0%
be caught let's verify that and then I
will<01:04:42.900><c> explain</c><01:04:43.200><c> why</c><01:04:43.470><c> that</c><01:04:43.740><c> happens</c>

01:04:44.300 --> 01:04:44.310 align:start position:0%
will explain why that happens
 

01:04:44.310 --> 01:04:50.210 align:start position:0%
will explain why that happens
so<01:04:44.880><c> back</c><01:04:45.420><c> in</c><01:04:45.450><c> terminal</c><01:04:46.730><c> node</c><01:04:47.730><c> app</c><01:04:48.150><c> J</c><01:04:48.630><c> s</c><01:04:48.920><c> look</c><01:04:49.920><c> we</c>

01:04:50.210 --> 01:04:50.220 align:start position:0%
so back in terminal node app J s look we
 

01:04:50.220 --> 01:04:53.960 align:start position:0%
so back in terminal node app J s look we
only<01:04:50.430><c> got</c><01:04:50.760><c> the</c><01:04:51.060><c> message</c><01:04:51.660><c> on</c><01:04:51.840><c> the</c><01:04:51.900><c> console</c><01:04:52.970><c> so</c>

01:04:53.960 --> 01:04:53.970 align:start position:0%
only got the message on the console so
 

01:04:53.970 --> 01:04:56.870 align:start position:0%
only got the message on the console so
our<01:04:54.060><c> event</c><01:04:54.450><c> listener</c><01:04:54.810><c> was</c><01:04:55.170><c> not</c><01:04:55.350><c> caught</c><01:04:55.880><c> the</c>

01:04:56.870 --> 01:04:56.880 align:start position:0%
our event listener was not caught the
 

01:04:56.880 --> 01:04:59.030 align:start position:0%
our event listener was not caught the
reason<01:04:57.240><c> for</c><01:04:57.390><c> this</c><01:04:57.570><c> is</c><01:04:57.810><c> because</c><01:04:58.290><c> here</c><01:04:58.890><c> we're</c>

01:04:59.030 --> 01:04:59.040 align:start position:0%
reason for this is because here we're
 

01:04:59.040 --> 01:05:02.000 align:start position:0%
reason for this is because here we're
working<01:04:59.250><c> with</c><01:04:59.640><c> two</c><01:04:59.940><c> different</c><01:05:00.560><c> event</c>

01:05:02.000 --> 01:05:02.010 align:start position:0%
working with two different event
 

01:05:02.010 --> 01:05:05.660 align:start position:0%
working with two different event
emitters<01:05:02.370><c> in</c><01:05:02.610><c> app</c><01:05:03.390><c> j/s</c><01:05:03.900><c> we</c><01:05:04.110><c> have</c><01:05:04.350><c> this</c><01:05:05.190><c> even</c>

01:05:05.660 --> 01:05:05.670 align:start position:0%
emitters in app j/s we have this even
 

01:05:05.670 --> 01:05:09.740 align:start position:0%
emitters in app j/s we have this even
emitter<01:05:06.000><c> object</c><01:05:06.240><c> and</c><01:05:07.190><c> in</c><01:05:08.210><c> longer</c><01:05:09.210><c> module</c><01:05:09.600><c> we</c>

01:05:09.740 --> 01:05:09.750 align:start position:0%
emitter object and in longer module we
 

01:05:09.750 --> 01:05:13.430 align:start position:0%
emitter object and in longer module we
have<01:05:10.040><c> another</c><01:05:11.040><c> event</c><01:05:11.610><c> emitter</c><01:05:12.450><c> object</c><01:05:12.630><c> so</c>

01:05:13.430 --> 01:05:13.440 align:start position:0%
have another event emitter object so
 

01:05:13.440 --> 01:05:15.590 align:start position:0%
have another event emitter object so
earlier<01:05:13.860><c> I</c><01:05:14.070><c> told</c><01:05:14.130><c> you</c><01:05:14.520><c> that</c><01:05:14.880><c> a</c><01:05:14.910><c> class</c><01:05:15.210><c> is</c><01:05:15.450><c> like</c>

01:05:15.590 --> 01:05:15.600 align:start position:0%
earlier I told you that a class is like
 

01:05:15.600 --> 01:05:18.590 align:start position:0%
earlier I told you that a class is like
a<01:05:15.630><c> blueprint</c><01:05:16.260><c> and</c><01:05:16.560><c> an</c><01:05:17.160><c> object</c><01:05:17.760><c> is</c><01:05:17.910><c> an</c><01:05:18.120><c> actual</c>

01:05:18.590 --> 01:05:18.600 align:start position:0%
a blueprint and an object is an actual
 

01:05:18.600 --> 01:05:21.080 align:start position:0%
a blueprint and an object is an actual
instance<01:05:19.050><c> as</c><01:05:19.440><c> a</c><01:05:19.950><c> metaphor</c><01:05:20.460><c> I</c><01:05:20.520><c> said</c><01:05:20.850><c> we</c><01:05:20.940><c> could</c>

01:05:21.080 --> 01:05:21.090 align:start position:0%
instance as a metaphor I said we could
 

01:05:21.090 --> 01:05:22.250 align:start position:0%
instance as a metaphor I said we could
have<01:05:21.270><c> a</c><01:05:21.330><c> class</c><01:05:21.750><c> called</c>

01:05:22.250 --> 01:05:22.260 align:start position:0%
have a class called
 

01:05:22.260 --> 01:05:25.340 align:start position:0%
have a class called
human<01:05:22.890><c> or</c><01:05:23.100><c> person</c><01:05:23.670><c> but</c><01:05:24.510><c> the</c><01:05:24.600><c> objects</c><01:05:25.170><c> could</c><01:05:25.290><c> be</c>

01:05:25.340 --> 01:05:25.350 align:start position:0%
human or person but the objects could be
 

01:05:25.350 --> 01:05:28.850 align:start position:0%
human or person but the objects could be
Jack<01:05:26.010><c> John</c><01:05:26.490><c> Mary</c><01:05:26.940><c> Bob</c><01:05:27.300><c> whatever</c><01:05:27.690><c> so</c><01:05:28.680><c> in</c><01:05:28.770><c> this</c>

01:05:28.850 --> 01:05:28.860 align:start position:0%
Jack John Mary Bob whatever so in this
 

01:05:28.860 --> 01:05:30.980 align:start position:0%
Jack John Mary Bob whatever so in this
case<01:05:29.070><c> we</c><01:05:29.220><c> have</c><01:05:29.400><c> two</c><01:05:29.670><c> different</c><01:05:29.910><c> objects</c><01:05:30.690><c> in</c>

01:05:30.980 --> 01:05:30.990 align:start position:0%
case we have two different objects in
 

01:05:30.990 --> 01:05:33.620 align:start position:0%
case we have two different objects in
the<01:05:31.500><c> logger</c><01:05:31.740><c> module</c><01:05:32.280><c> you're</c><01:05:33.210><c> using</c><01:05:33.390><c> this</c>

01:05:33.620 --> 01:05:33.630 align:start position:0%
the logger module you're using this
 

01:05:33.630 --> 01:05:37.340 align:start position:0%
the logger module you're using this
emitter<01:05:34.080><c> object</c><01:05:34.260><c> to</c><01:05:35.190><c> emit</c><01:05:35.580><c> an</c><01:05:35.760><c> event</c><01:05:36.350><c> whereas</c>

01:05:37.340 --> 01:05:37.350 align:start position:0%
emitter object to emit an event whereas
 

01:05:37.350 --> 01:05:40.070 align:start position:0%
emitter object to emit an event whereas
in<01:05:37.530><c> app</c><01:05:37.770><c> module</c><01:05:38.010><c> we're</c><01:05:38.340><c> using</c><01:05:38.490><c> another</c><01:05:39.090><c> event</c>

01:05:40.070 --> 01:05:40.080 align:start position:0%
in app module we're using another event
 

01:05:40.080 --> 01:05:43.160 align:start position:0%
in app module we're using another event
emitter<01:05:40.530><c> object</c><01:05:40.790><c> to</c><01:05:41.790><c> handle</c><01:05:42.330><c> that</c><01:05:42.870><c> event</c>

01:05:43.160 --> 01:05:43.170 align:start position:0%
emitter object to handle that event
 

01:05:43.170 --> 01:05:46.010 align:start position:0%
emitter object to handle that event
these<01:05:44.070><c> are</c><01:05:44.280><c> completely</c><01:05:44.700><c> different</c><01:05:44.940><c> so</c><01:05:45.810><c> when</c>

01:05:46.010 --> 01:05:46.020 align:start position:0%
these are completely different so when
 

01:05:46.020 --> 01:05:49.010 align:start position:0%
these are completely different so when
we<01:05:46.140><c> register</c><01:05:46.770><c> a</c><01:05:46.920><c> listener</c><01:05:47.280><c> here</c><01:05:48.020><c> that</c>

01:05:49.010 --> 01:05:49.020 align:start position:0%
we register a listener here that
 

01:05:49.020 --> 01:05:51.560 align:start position:0%
we register a listener here that
listener<01:05:49.530><c> is</c><01:05:49.740><c> only</c><01:05:50.070><c> registered</c><01:05:50.820><c> with</c><01:05:51.330><c> this</c>

01:05:51.560 --> 01:05:51.570 align:start position:0%
listener is only registered with this
 

01:05:51.570 --> 01:05:53.300 align:start position:0%
listener is only registered with this
event<01:05:52.020><c> emitter</c><01:05:52.380><c> which</c><01:05:52.710><c> is</c><01:05:52.830><c> completely</c>

01:05:53.300 --> 01:05:53.310 align:start position:0%
event emitter which is completely
 

01:05:53.310 --> 01:05:56.090 align:start position:0%
event emitter which is completely
different<01:05:53.450><c> from</c><01:05:54.450><c> the</c><01:05:54.630><c> other</c><01:05:54.840><c> event</c><01:05:55.680><c> emitter</c>

01:05:56.090 --> 01:05:56.100 align:start position:0%
different from the other event emitter
 

01:05:56.100 --> 01:05:59.270 align:start position:0%
different from the other event emitter
so<01:05:56.910><c> that's</c><01:05:57.900><c> why</c><01:05:58.110><c> I</c><01:05:58.140><c> told</c><01:05:58.380><c> you</c><01:05:58.650><c> in</c><01:05:58.890><c> your</c>

01:05:59.270 --> 01:05:59.280 align:start position:0%
so that's why I told you in your
 

01:05:59.280 --> 01:06:01.010 align:start position:0%
so that's why I told you in your
applications<01:05:59.940><c> it's</c><01:06:00.180><c> very</c><01:06:00.420><c> rare</c><01:06:00.720><c> that</c><01:06:00.750><c> you</c>

01:06:01.010 --> 01:06:01.020 align:start position:0%
applications it's very rare that you
 

01:06:01.020 --> 01:06:02.390 align:start position:0%
applications it's very rare that you
would<01:06:01.200><c> want</c><01:06:01.380><c> to</c><01:06:01.440><c> work</c><01:06:01.560><c> with</c><01:06:01.620><c> this</c><01:06:01.920><c> event</c>

01:06:02.390 --> 01:06:02.400 align:start position:0%
would want to work with this event
 

01:06:02.400 --> 01:06:04.670 align:start position:0%
would want to work with this event
emitter<01:06:02.790><c> directly</c><01:06:03.350><c> instead</c><01:06:04.350><c> you</c><01:06:04.470><c> want</c><01:06:04.620><c> to</c>

01:06:04.670 --> 01:06:04.680 align:start position:0%
emitter directly instead you want to
 

01:06:04.680 --> 01:06:06.800 align:start position:0%
emitter directly instead you want to
create<01:06:04.830><c> a</c><01:06:04.920><c> class</c><01:06:05.280><c> that</c><01:06:05.610><c> has</c><01:06:05.970><c> all</c><01:06:06.390><c> the</c>

01:06:06.800 --> 01:06:06.810 align:start position:0%
create a class that has all the
 

01:06:06.810 --> 01:06:09.560 align:start position:0%
create a class that has all the
capabilities<01:06:07.020><c> of</c><01:06:07.770><c> this</c><01:06:08.130><c> event</c><01:06:08.550><c> emitter</c><01:06:08.970><c> but</c>

01:06:09.560 --> 01:06:09.570 align:start position:0%
capabilities of this event emitter but
 

01:06:09.570 --> 01:06:12.590 align:start position:0%
capabilities of this event emitter but
it<01:06:09.690><c> has</c><01:06:09.950><c> additional</c><01:06:10.950><c> capabilities</c><01:06:11.730><c> in</c><01:06:12.150><c> this</c>

01:06:12.590 --> 01:06:12.600 align:start position:0%
it has additional capabilities in this
 

01:06:12.600 --> 01:06:14.150 align:start position:0%
it has additional capabilities in this
case<01:06:12.810><c> we</c><01:06:12.990><c> want</c><01:06:13.140><c> to</c><01:06:13.170><c> create</c><01:06:13.230><c> a</c><01:06:13.410><c> class</c><01:06:13.650><c> called</c>

01:06:14.150 --> 01:06:14.160 align:start position:0%
case we want to create a class called
 

01:06:14.160 --> 01:06:17.150 align:start position:0%
case we want to create a class called
logger<01:06:14.630><c> that</c><01:06:15.630><c> has</c><01:06:15.870><c> this</c><01:06:16.080><c> additional</c><01:06:16.770><c> method</c>

01:06:17.150 --> 01:06:17.160 align:start position:0%
logger that has this additional method
 

01:06:17.160 --> 01:06:20.990 align:start position:0%
logger that has this additional method
lock<01:06:17.670><c> okay</c><01:06:18.660><c> so</c><01:06:19.340><c> the</c><01:06:20.340><c> first</c><01:06:20.550><c> thing</c><01:06:20.700><c> you</c><01:06:20.850><c> want</c><01:06:20.970><c> to</c>

01:06:20.990 --> 01:06:21.000 align:start position:0%
lock okay so the first thing you want to
 

01:06:21.000 --> 01:06:24.410 align:start position:0%
lock okay so the first thing you want to
do<01:06:21.120><c> here</c><01:06:21.420><c> is</c><01:06:21.600><c> to</c><01:06:22.050><c> define</c><01:06:22.350><c> a</c><01:06:22.380><c> class</c><01:06:22.680><c> in</c><01:06:23.040><c> es6</c><01:06:23.940><c> we</c>

01:06:24.410 --> 01:06:24.420 align:start position:0%
do here is to define a class in es6 we
 

01:06:24.420 --> 01:06:26.960 align:start position:0%
do here is to define a class in es6 we
have<01:06:24.630><c> this</c><01:06:25.140><c> keyword</c><01:06:25.590><c> class</c><01:06:25.950><c> which</c><01:06:26.790><c> is</c><01:06:26.940><c> a</c>

01:06:26.960 --> 01:06:26.970 align:start position:0%
have this keyword class which is a
 

01:06:26.970 --> 01:06:29.000 align:start position:0%
have this keyword class which is a
syntactical<01:06:27.690><c> sugar</c><01:06:27.750><c> for</c><01:06:28.350><c> creating</c><01:06:28.830><c> a</c>

01:06:29.000 --> 01:06:29.010 align:start position:0%
syntactical sugar for creating a
 

01:06:29.010 --> 01:06:31.910 align:start position:0%
syntactical sugar for creating a
constructor<01:06:30.000><c> function</c><01:06:30.560><c> with</c><01:06:31.560><c> this</c><01:06:31.680><c> we</c><01:06:31.830><c> can</c>

01:06:31.910 --> 01:06:31.920 align:start position:0%
constructor function with this we can
 

01:06:31.920 --> 01:06:34.790 align:start position:0%
constructor function with this we can
define<01:06:32.190><c> a</c><01:06:32.220><c> class</c><01:06:32.460><c> logger</c><01:06:33.500><c> note</c><01:06:34.500><c> that</c><01:06:34.680><c> the</c>

01:06:34.790 --> 01:06:34.800 align:start position:0%
define a class logger note that the
 

01:06:34.800 --> 01:06:37.220 align:start position:0%
define a class logger note that the
first<01:06:35.100><c> letter</c><01:06:35.340><c> of</c><01:06:35.610><c> every</c><01:06:36.300><c> word</c><01:06:36.600><c> in</c><01:06:36.930><c> a</c><01:06:37.020><c> class</c>

01:06:37.220 --> 01:06:37.230 align:start position:0%
first letter of every word in a class
 

01:06:37.230 --> 01:06:39.770 align:start position:0%
first letter of every word in a class
should<01:06:37.530><c> be</c><01:06:37.590><c> uppercase</c><01:06:38.430><c> this</c><01:06:38.910><c> is</c><01:06:39.120><c> the</c><01:06:39.240><c> Pascal</c>

01:06:39.770 --> 01:06:39.780 align:start position:0%
should be uppercase this is the Pascal
 

01:06:39.780 --> 01:06:42.140 align:start position:0%
should be uppercase this is the Pascal
case<01:06:40.020><c> convention</c><01:06:40.710><c> that</c><01:06:40.920><c> we</c><01:06:41.100><c> use</c><01:06:41.280><c> for</c><01:06:41.850><c> naming</c>

01:06:42.140 --> 01:06:42.150 align:start position:0%
case convention that we use for naming
 

01:06:42.150 --> 01:06:46.430 align:start position:0%
case convention that we use for naming
classes<01:06:42.870><c> so</c><01:06:43.770><c> class</c><01:06:44.010><c> logger</c><01:06:45.080><c> we</c><01:06:46.080><c> have</c><01:06:46.170><c> a</c><01:06:46.200><c> code</c>

01:06:46.430 --> 01:06:46.440 align:start position:0%
classes so class logger we have a code
 

01:06:46.440 --> 01:06:49.400 align:start position:0%
classes so class logger we have a code
block<01:06:46.680><c> now</c><01:06:47.520><c> we</c><01:06:48.450><c> need</c><01:06:48.570><c> to</c><01:06:48.660><c> move</c><01:06:48.840><c> this</c><01:06:49.110><c> log</c>

01:06:49.400 --> 01:06:49.410 align:start position:0%
block now we need to move this log
 

01:06:49.410 --> 01:06:53.080 align:start position:0%
block now we need to move this log
function<01:06:50.120><c> inside</c><01:06:51.120><c> this</c><01:06:51.390><c> logger</c><01:06:51.690><c> class</c><01:06:52.080><c> so</c><01:06:52.770><c> cut</c>

01:06:53.080 --> 01:06:53.090 align:start position:0%
function inside this logger class so cut
 

01:06:53.090 --> 01:06:56.030 align:start position:0%
function inside this logger class so cut
paste<01:06:54.090><c> it</c><01:06:54.270><c> here</c><01:06:54.440><c> now</c><01:06:55.440><c> we</c><01:06:55.500><c> have</c><01:06:55.710><c> an</c><01:06:55.800><c> error</c>

01:06:56.030 --> 01:06:56.040 align:start position:0%
paste it here now we have an error
 

01:06:56.040 --> 01:06:58.670 align:start position:0%
paste it here now we have an error
because<01:06:56.330><c> when</c><01:06:57.330><c> we</c><01:06:57.450><c> define</c><01:06:57.810><c> a</c><01:06:57.840><c> function</c><01:06:58.140><c> inside</c>

01:06:58.670 --> 01:06:58.680 align:start position:0%
because when we define a function inside
 

01:06:58.680 --> 01:07:00.290 align:start position:0%
because when we define a function inside
a<01:06:58.740><c> class</c><01:06:59.010><c> we</c><01:06:59.250><c> don't</c><01:06:59.370><c> need</c><01:06:59.550><c> this</c><01:06:59.760><c> function</c>

01:07:00.290 --> 01:07:00.300 align:start position:0%
a class we don't need this function
 

01:07:00.300 --> 01:07:03.740 align:start position:0%
a class we don't need this function
keyword<01:07:00.600><c> and</c><01:07:01.070><c> from</c><01:07:02.070><c> now</c><01:07:02.250><c> on</c><01:07:02.280><c> we</c><01:07:03.090><c> refer</c><01:07:03.480><c> to</c><01:07:03.510><c> this</c>

01:07:03.740 --> 01:07:03.750 align:start position:0%
keyword and from now on we refer to this
 

01:07:03.750 --> 01:07:06.320 align:start position:0%
keyword and from now on we refer to this
function<01:07:04.020><c> as</c><01:07:04.350><c> a</c><01:07:04.710><c> method</c><01:07:05.490><c> so</c><01:07:05.940><c> when</c><01:07:06.090><c> a</c><01:07:06.120><c> function</c>

01:07:06.320 --> 01:07:06.330 align:start position:0%
function as a method so when a function
 

01:07:06.330 --> 01:07:09.320 align:start position:0%
function as a method so when a function
is<01:07:06.630><c> inside</c><01:07:07.230><c> a</c><01:07:07.260><c> class</c><01:07:07.590><c> we</c><01:07:08.340><c> say</c><01:07:08.520><c> that's</c><01:07:08.700><c> a</c><01:07:08.880><c> method</c>

01:07:09.320 --> 01:07:09.330 align:start position:0%
is inside a class we say that's a method
 

01:07:09.330 --> 01:07:11.870 align:start position:0%
is inside a class we say that's a method
in<01:07:09.510><c> that</c><01:07:09.540><c> class</c><01:07:09.960><c> okay</c><01:07:10.680><c> so</c><01:07:11.400><c> here</c><01:07:11.550><c> we</c><01:07:11.580><c> have</c><01:07:11.670><c> this</c>

01:07:11.870 --> 01:07:11.880 align:start position:0%
in that class okay so here we have this
 

01:07:11.880 --> 01:07:15.980 align:start position:0%
in that class okay so here we have this
logger<01:07:12.180><c> class</c><01:07:12.540><c> now</c><01:07:13.470><c> at</c><01:07:13.950><c> the</c><01:07:14.640><c> end</c>

01:07:15.980 --> 01:07:15.990 align:start position:0%
logger class now at the end
 

01:07:15.990 --> 01:07:17.660 align:start position:0%
logger class now at the end
I'm<01:07:16.080><c> exporting</c><01:07:16.470><c> the</c><01:07:16.740><c> log</c><01:07:16.980><c> function</c><01:07:17.220><c> we're</c>

01:07:17.660 --> 01:07:17.670 align:start position:0%
I'm exporting the log function we're
 

01:07:17.670 --> 01:07:21.710 align:start position:0%
I'm exporting the log function we're
going<01:07:17.700><c> to</c><01:07:17.880><c> export</c><01:07:18.470><c> the</c><01:07:19.470><c> logger</c><01:07:19.770><c> class</c><01:07:20.720><c> okay</c>

01:07:21.710 --> 01:07:21.720 align:start position:0%
going to export the logger class okay
 

01:07:21.720 --> 01:07:23.930 align:start position:0%
going to export the logger class okay
now<01:07:22.410><c> we</c><01:07:22.470><c> want</c><01:07:22.619><c> this</c><01:07:22.770><c> logger</c><01:07:23.160><c> class</c><01:07:23.520><c> to</c><01:07:23.790><c> have</c>

01:07:23.930 --> 01:07:23.940 align:start position:0%
now we want this logger class to have
 

01:07:23.940 --> 01:07:26.660 align:start position:0%
now we want this logger class to have
all<01:07:24.180><c> the</c><01:07:24.540><c> capabilities</c><01:07:25.290><c> of</c><01:07:25.560><c> this</c><01:07:26.160><c> event</c>

01:07:26.660 --> 01:07:26.670 align:start position:0%
all the capabilities of this event
 

01:07:26.670 --> 01:07:29.600 align:start position:0%
all the capabilities of this event
emitter<01:07:27.360><c> the</c><01:07:28.200><c> way</c><01:07:28.320><c> we</c><01:07:28.470><c> do</c><01:07:28.650><c> that</c><01:07:28.800><c> is</c><01:07:29.010><c> by</c><01:07:29.580><c> using</c>

01:07:29.600 --> 01:07:29.610 align:start position:0%
emitter the way we do that is by using
 

01:07:29.610 --> 01:07:33.560 align:start position:0%
emitter the way we do that is by using
the<01:07:29.970><c> extends</c><01:07:30.630><c> keyword</c><01:07:31.140><c> that</c><01:07:31.380><c> comes</c><01:07:31.950><c> in</c><01:07:32.190><c> es6</c><01:07:32.940><c> so</c>

01:07:33.560 --> 01:07:33.570 align:start position:0%
the extends keyword that comes in es6 so
 

01:07:33.570 --> 01:07:36.800 align:start position:0%
the extends keyword that comes in es6 so
extends<01:07:34.290><c> and</c><01:07:34.760><c> here</c><01:07:35.760><c> we</c><01:07:35.850><c> add</c><01:07:36.000><c> the</c><01:07:36.270><c> name</c><01:07:36.540><c> of</c><01:07:36.690><c> the</c>

01:07:36.800 --> 01:07:36.810 align:start position:0%
extends and here we add the name of the
 

01:07:36.810 --> 01:07:40.180 align:start position:0%
extends and here we add the name of the
parent<01:07:37.380><c> or</c><01:07:37.560><c> the</c><01:07:37.619><c> base</c><01:07:38.190><c> class</c><01:07:38.580><c> so</c><01:07:39.420><c> event</c>

01:07:40.180 --> 01:07:40.190 align:start position:0%
parent or the base class so event
 

01:07:40.190 --> 01:07:44.330 align:start position:0%
parent or the base class so event
emitter<01:07:41.190><c> and</c><01:07:41.420><c> with</c><01:07:42.420><c> this</c><01:07:42.660><c> simple</c><01:07:43.020><c> change</c><01:07:43.340><c> this</c>

01:07:44.330 --> 01:07:44.340 align:start position:0%
emitter and with this simple change this
 

01:07:44.340 --> 01:07:46.460 align:start position:0%
emitter and with this simple change this
logger<01:07:44.730><c> class</c><01:07:45.090><c> will</c><01:07:45.480><c> have</c><01:07:45.720><c> all</c><01:07:46.020><c> the</c>

01:07:46.460 --> 01:07:46.470 align:start position:0%
logger class will have all the
 

01:07:46.470 --> 01:07:49.190 align:start position:0%
logger class will have all the
functionality<01:07:47.250><c> that</c><01:07:47.280><c> is</c><01:07:47.520><c> defined</c><01:07:47.970><c> in</c><01:07:48.360><c> event</c>

01:07:49.190 --> 01:07:49.200 align:start position:0%
functionality that is defined in event
 

01:07:49.200 --> 01:07:52.850 align:start position:0%
functionality that is defined in event
emitter<01:07:49.950><c> so</c><01:07:50.760><c> here</c><01:07:51.060><c> when</c><01:07:51.900><c> raising</c><01:07:52.200><c> this</c><01:07:52.500><c> event</c>

01:07:52.850 --> 01:07:52.860 align:start position:0%
emitter so here when raising this event
 

01:07:52.860 --> 01:07:55.130 align:start position:0%
emitter so here when raising this event
instead<01:07:53.850><c> of</c><01:07:53.940><c> using</c><01:07:54.180><c> this</c><01:07:54.330><c> emitter</c><01:07:54.930><c> object</c>

01:07:55.130 --> 01:07:55.140 align:start position:0%
instead of using this emitter object
 

01:07:55.140 --> 01:07:59.030 align:start position:0%
instead of using this emitter object
we're<01:07:56.070><c> going</c><01:07:56.220><c> to</c><01:07:56.340><c> use</c><01:07:56.520><c> this</c><01:07:57.470><c> so</c><01:07:58.470><c> in</c><01:07:58.650><c> this</c><01:07:58.770><c> class</c>

01:07:59.030 --> 01:07:59.040 align:start position:0%
we're going to use this so in this class
 

01:07:59.040 --> 01:08:03.260 align:start position:0%
we're going to use this so in this class
we<01:07:59.340><c> can</c><01:07:59.490><c> directly</c><01:08:00.360><c> omit</c><01:08:01.170><c> or</c><01:08:01.550><c> raise</c><01:08:02.550><c> events</c>

01:08:03.260 --> 01:08:03.270 align:start position:0%
we can directly omit or raise events
 

01:08:03.270 --> 01:08:06.620 align:start position:0%
we can directly omit or raise events
okay<01:08:04.110><c> and</c><01:08:05.010><c> now</c><01:08:05.160><c> we</c><01:08:05.520><c> no</c><01:08:05.790><c> longer</c><01:08:05.820><c> need</c><01:08:06.360><c> this</c>

01:08:06.620 --> 01:08:06.630 align:start position:0%
okay and now we no longer need this
 

01:08:06.630 --> 01:08:09.830 align:start position:0%
okay and now we no longer need this
actual<01:08:07.610><c> emitter</c><01:08:08.610><c> object</c><01:08:08.790><c> because</c><01:08:09.570><c> we</c><01:08:09.690><c> have</c>

01:08:09.830 --> 01:08:09.840 align:start position:0%
actual emitter object because we have
 

01:08:09.840 --> 01:08:12.620 align:start position:0%
actual emitter object because we have
not<01:08:09.990><c> used</c><01:08:10.260><c> it</c><01:08:10.500><c> anywhere</c><01:08:11.130><c> in</c><01:08:11.310><c> this</c><01:08:11.640><c> code</c><01:08:11.850><c> so</c>

01:08:12.620 --> 01:08:12.630 align:start position:0%
not used it anywhere in this code so
 

01:08:12.630 --> 01:08:15.500 align:start position:0%
not used it anywhere in this code so
delete<01:08:13.250><c> we're</c><01:08:14.250><c> done</c><01:08:14.490><c> with</c><01:08:14.670><c> the</c><01:08:14.760><c> logger</c><01:08:14.970><c> module</c>

01:08:15.500 --> 01:08:15.510 align:start position:0%
delete we're done with the logger module
 

01:08:15.510 --> 01:08:18.849 align:start position:0%
delete we're done with the logger module
now<01:08:16.350><c> back</c><01:08:17.009><c> in</c><01:08:17.160><c> the</c><01:08:17.250><c> app</c><01:08:17.370><c> module</c>

01:08:18.849 --> 01:08:18.859 align:start position:0%
now back in the app module
 

01:08:18.859 --> 01:08:21.820 align:start position:0%
now back in the app module
so<01:08:19.520><c> here</c><01:08:19.730><c> when</c><01:08:20.000><c> requiring</c><01:08:20.480><c> the</c><01:08:20.839><c> logger</c><01:08:21.080><c> module</c>

01:08:21.820 --> 01:08:21.830 align:start position:0%
so here when requiring the logger module
 

01:08:21.830 --> 01:08:24.579 align:start position:0%
so here when requiring the logger module
we<01:08:22.490><c> get</c><01:08:22.670><c> a</c><01:08:22.700><c> class</c><01:08:23.030><c> so</c><01:08:23.720><c> I'm</c><01:08:23.990><c> gonna</c><01:08:24.080><c> rename</c><01:08:24.380><c> this</c>

01:08:24.579 --> 01:08:24.589 align:start position:0%
we get a class so I'm gonna rename this
 

01:08:24.589 --> 01:08:28.810 align:start position:0%
we get a class so I'm gonna rename this
to<01:08:25.150><c> lager</c><01:08:26.150><c> with</c><01:08:26.810><c> capital</c><01:08:27.290><c> L</c><01:08:27.500><c> that's</c><01:08:28.400><c> a</c><01:08:28.520><c> class</c>

01:08:28.810 --> 01:08:28.820 align:start position:0%
to lager with capital L that's a class
 

01:08:28.820 --> 01:08:37.530 align:start position:0%
to lager with capital L that's a class
now<01:08:29.810><c> we</c><01:08:29.870><c> create</c><01:08:30.200><c> an</c><01:08:30.530><c> object</c><01:08:32.080><c> so</c><01:08:33.080><c> new</c><01:08:33.640><c> lager</c>

01:08:37.530 --> 01:08:37.540 align:start position:0%
 
 

01:08:37.540 --> 01:08:40.910 align:start position:0%
 
and<01:08:37.630><c> then</c><01:08:38.410><c> to</c><01:08:38.620><c> log</c><01:08:38.859><c> a</c><01:08:38.890><c> message</c><01:08:39.339><c> recall</c><01:08:39.850><c> logger</c>

01:08:40.910 --> 01:08:40.920 align:start position:0%
and then to log a message recall logger
 

01:08:40.920 --> 01:08:44.550 align:start position:0%
and then to log a message recall logger
deadlock<01:08:42.270><c> now</c><01:08:43.270><c> similar</c><01:08:43.660><c> to</c><01:08:43.720><c> the</c><01:08:43.930><c> change</c><01:08:44.290><c> that</c>

01:08:44.550 --> 01:08:44.560 align:start position:0%
deadlock now similar to the change that
 

01:08:44.560 --> 01:08:47.010 align:start position:0%
deadlock now similar to the change that
we<01:08:44.680><c> made</c><01:08:44.710><c> in</c><01:08:45.100><c> the</c><01:08:45.220><c> logger</c><01:08:45.460><c> module</c><01:08:46.000><c> we</c><01:08:46.810><c> no</c>

01:08:47.010 --> 01:08:47.020 align:start position:0%
we made in the logger module we no
 

01:08:47.020 --> 01:08:49.710 align:start position:0%
we made in the logger module we no
longer<01:08:47.049><c> need</c><01:08:47.589><c> this</c><01:08:48.250><c> event</c><01:08:48.730><c> a</c><01:08:48.880><c> meter</c><01:08:49.210><c> object</c>

01:08:49.710 --> 01:08:49.720 align:start position:0%
longer need this event a meter object
 

01:08:49.720 --> 01:08:52.620 align:start position:0%
longer need this event a meter object
here<01:08:49.990><c> we</c><01:08:50.680><c> want</c><01:08:50.859><c> to</c><01:08:50.920><c> work</c><01:08:51.040><c> directly</c><01:08:51.460><c> with</c><01:08:51.700><c> this</c>

01:08:52.620 --> 01:08:52.630 align:start position:0%
here we want to work directly with this
 

01:08:52.630 --> 01:08:55.190 align:start position:0%
here we want to work directly with this
logger<01:08:52.990><c> object</c><01:08:53.620><c> so</c><01:08:54.400><c> we're</c><01:08:54.670><c> gonna</c><01:08:54.819><c> register</c>

01:08:55.190 --> 01:08:55.200 align:start position:0%
logger object so we're gonna register
 

01:08:55.200 --> 01:08:59.490 align:start position:0%
logger object so we're gonna register
this<01:08:56.200><c> listener</c><01:08:56.859><c> on</c><01:08:57.130><c> this</c><01:08:57.819><c> logger</c><01:08:58.240><c> object</c><01:08:58.870><c> okay</c>

01:08:59.490 --> 01:08:59.500 align:start position:0%
this listener on this logger object okay
 

01:08:59.500 --> 01:09:05.340 align:start position:0%
this listener on this logger object okay
so<01:09:00.310><c> I'm</c><01:09:01.270><c> gonna</c><01:09:01.510><c> move</c><01:09:01.740><c> this</c><01:09:02.740><c> code</c><01:09:04.350><c> after</c>

01:09:05.340 --> 01:09:05.350 align:start position:0%
so I'm gonna move this code after
 

01:09:05.350 --> 01:09:09.860 align:start position:0%
so I'm gonna move this code after
creating<01:09:05.650><c> the</c><01:09:06.280><c> logger</c><01:09:07.710><c> we</c><01:09:08.710><c> say</c><01:09:08.920><c> hey</c><01:09:09.370><c> logger</c>

01:09:09.860 --> 01:09:09.870 align:start position:0%
creating the logger we say hey logger
 

01:09:09.870 --> 01:09:13.470 align:start position:0%
creating the logger we say hey logger
when<01:09:10.870><c> you</c><01:09:11.049><c> raise</c><01:09:11.260><c> this</c><01:09:11.859><c> message</c><01:09:12.430><c> log</c><01:09:12.730><c> event</c><01:09:13.210><c> I</c>

01:09:13.470 --> 01:09:13.480 align:start position:0%
when you raise this message log event I
 

01:09:13.480 --> 01:09:16.579 align:start position:0%
when you raise this message log event I
want<01:09:14.020><c> to</c><01:09:14.140><c> execute</c><01:09:14.560><c> this</c><01:09:14.830><c> code</c><01:09:15.240><c> okay</c><01:09:16.240><c> and</c>

01:09:16.579 --> 01:09:16.589 align:start position:0%
want to execute this code okay and
 

01:09:16.589 --> 01:09:18.960 align:start position:0%
want to execute this code okay and
finally<01:09:17.589><c> you</c><01:09:17.830><c> can</c><01:09:17.950><c> see</c><01:09:18.160><c> we</c><01:09:18.280><c> no</c><01:09:18.490><c> longer</c><01:09:18.520><c> need</c>

01:09:18.960 --> 01:09:18.970 align:start position:0%
finally you can see we no longer need
 

01:09:18.970 --> 01:09:21.720 align:start position:0%
finally you can see we no longer need
this<01:09:19.210><c> event</c><01:09:19.990><c> emitter</c><01:09:20.410><c> object</c><01:09:20.560><c> it's</c><01:09:21.280><c> not</c><01:09:21.400><c> used</c>

01:09:21.720 --> 01:09:21.730 align:start position:0%
this event emitter object it's not used
 

01:09:21.730 --> 01:09:25.680 align:start position:0%
this event emitter object it's not used
anywhere<01:09:22.060><c> delete</c><01:09:23.370><c> now</c><01:09:24.370><c> when</c><01:09:25.299><c> you</c><01:09:25.450><c> run</c><01:09:25.540><c> this</c>

01:09:25.680 --> 01:09:25.690 align:start position:0%
anywhere delete now when you run this
 

01:09:25.690 --> 01:09:27.690 align:start position:0%
anywhere delete now when you run this
application<01:09:26.319><c> we're</c><01:09:27.160><c> going</c><01:09:27.190><c> to</c><01:09:27.460><c> see</c><01:09:27.580><c> this</c>

01:09:27.690 --> 01:09:27.700 align:start position:0%
application we're going to see this
 

01:09:27.700 --> 01:09:30.480 align:start position:0%
application we're going to see this
message<01:09:28.060><c> on</c><01:09:28.210><c> the</c><01:09:28.330><c> console</c><01:09:28.750><c> but</c><01:09:29.440><c> also</c><01:09:29.740><c> because</c>

01:09:30.480 --> 01:09:30.490 align:start position:0%
message on the console but also because
 

01:09:30.490 --> 01:09:33.420 align:start position:0%
message on the console but also because
we're<01:09:30.700><c> using</c><01:09:30.880><c> the</c><01:09:31.000><c> same</c><01:09:31.420><c> logger</c><01:09:31.839><c> object</c><01:09:32.589><c> for</c>

01:09:33.420 --> 01:09:33.430 align:start position:0%
we're using the same logger object for
 

01:09:33.430 --> 01:09:35.970 align:start position:0%
we're using the same logger object for
registering<01:09:34.240><c> an</c><01:09:34.480><c> event</c><01:09:34.810><c> listener</c><01:09:35.080><c> and</c><01:09:35.470><c> also</c>

01:09:35.970 --> 01:09:35.980 align:start position:0%
registering an event listener and also
 

01:09:35.980 --> 01:09:38.880 align:start position:0%
registering an event listener and also
raising<01:09:36.460><c> an</c><01:09:36.549><c> event</c><01:09:36.850><c> we're</c><01:09:37.630><c> going</c><01:09:37.810><c> to</c><01:09:37.930><c> see</c><01:09:38.140><c> this</c>

01:09:38.880 --> 01:09:38.890 align:start position:0%
raising an event we're going to see this
 

01:09:38.890 --> 01:09:44.570 align:start position:0%
raising an event we're going to see this
message<01:09:39.430><c> on</c><01:09:39.640><c> the</c><01:09:40.210><c> console</c><01:09:41.640><c> so</c><01:09:42.640><c> note</c><01:09:43.420><c> fjs</c><01:09:44.109><c> look</c>

01:09:44.570 --> 01:09:44.580 align:start position:0%
message on the console so note fjs look
 

01:09:44.580 --> 01:09:47.010 align:start position:0%
message on the console so note fjs look
this<01:09:45.580><c> is</c><01:09:45.760><c> the</c><01:09:45.850><c> message</c><01:09:46.060><c> on</c><01:09:46.299><c> the</c><01:09:46.330><c> console</c><01:09:46.810><c> and</c>

01:09:47.010 --> 01:09:47.020 align:start position:0%
this is the message on the console and
 

01:09:47.020 --> 01:09:49.440 align:start position:0%
this is the message on the console and
you<01:09:47.620><c> can</c><01:09:47.770><c> see</c><01:09:47.980><c> our</c><01:09:48.730><c> listener</c><01:09:49.210><c> was</c>

01:09:49.440 --> 01:09:49.450 align:start position:0%
you can see our listener was
 

01:09:49.450 --> 01:09:51.809 align:start position:0%
you can see our listener was
successfully<01:09:50.080><c> caught</c><01:09:50.430><c> so</c><01:09:51.430><c> let's</c><01:09:51.640><c> quickly</c>

01:09:51.809 --> 01:09:51.819 align:start position:0%
successfully caught so let's quickly
 

01:09:51.819 --> 01:09:55.440 align:start position:0%
successfully caught so let's quickly
recap<01:09:53.069><c> if</c><01:09:54.069><c> you</c><01:09:54.280><c> want</c><01:09:54.430><c> to</c><01:09:54.490><c> raise</c><01:09:54.670><c> events</c><01:09:55.330><c> in</c>

01:09:55.440 --> 01:09:55.450 align:start position:0%
recap if you want to raise events in
 

01:09:55.450 --> 01:09:57.000 align:start position:0%
recap if you want to raise events in
your<01:09:55.570><c> application</c><01:09:56.200><c> to</c><01:09:56.350><c> signal</c><01:09:56.830><c> that</c>

01:09:57.000 --> 01:09:57.010 align:start position:0%
your application to signal that
 

01:09:57.010 --> 01:09:58.980 align:start position:0%
your application to signal that
something<01:09:57.220><c> has</c><01:09:57.550><c> happened</c><01:09:57.720><c> you</c><01:09:58.720><c> need</c><01:09:58.870><c> to</c>

01:09:58.980 --> 01:09:58.990 align:start position:0%
something has happened you need to
 

01:09:58.990 --> 01:10:02.640 align:start position:0%
something has happened you need to
create<01:09:59.230><c> a</c><01:09:59.260><c> class</c><01:09:59.560><c> that</c><01:10:00.180><c> extend</c><01:10:01.180><c> event</c><01:10:01.990><c> emitter</c>

01:10:02.640 --> 01:10:02.650 align:start position:0%
create a class that extend event emitter
 

01:10:02.650 --> 01:10:05.430 align:start position:0%
create a class that extend event emitter
with<01:10:03.400><c> this</c><01:10:03.640><c> that</c><01:10:04.060><c> class</c><01:10:04.390><c> will</c><01:10:04.630><c> have</c><01:10:04.840><c> all</c><01:10:05.080><c> the</c>

01:10:05.430 --> 01:10:05.440 align:start position:0%
with this that class will have all the
 

01:10:05.440 --> 01:10:07.680 align:start position:0%
with this that class will have all the
functionality<01:10:05.680><c> defined</c><01:10:06.610><c> in</c><01:10:06.850><c> event</c><01:10:07.300><c> emitter</c>

01:10:07.680 --> 01:10:07.690 align:start position:0%
functionality defined in event emitter
 

01:10:07.690 --> 01:10:10.110 align:start position:0%
functionality defined in event emitter
but<01:10:08.380><c> you</c><01:10:08.500><c> can</c><01:10:08.620><c> also</c><01:10:08.860><c> add</c><01:10:09.190><c> additional</c>

01:10:10.110 --> 01:10:10.120 align:start position:0%
but you can also add additional
 

01:10:10.120 --> 01:10:12.540 align:start position:0%
but you can also add additional
functionality<01:10:10.840><c> in</c><01:10:10.990><c> this</c><01:10:11.080><c> case</c><01:10:11.320><c> we</c><01:10:12.100><c> have</c><01:10:12.340><c> the</c>

01:10:12.540 --> 01:10:12.550 align:start position:0%
functionality in this case we have the
 

01:10:12.550 --> 01:10:15.600 align:start position:0%
functionality in this case we have the
ability<01:10:13.030><c> to</c><01:10:13.480><c> log</c><01:10:13.690><c> a</c><01:10:13.720><c> message</c><01:10:14.230><c> and</c><01:10:14.440><c> then</c><01:10:15.190><c> inside</c>

01:10:15.600 --> 01:10:15.610 align:start position:0%
ability to log a message and then inside
 

01:10:15.610 --> 01:10:17.700 align:start position:0%
ability to log a message and then inside
that<01:10:15.670><c> class</c><01:10:16.090><c> whenever</c><01:10:16.930><c> you</c><01:10:17.080><c> want</c><01:10:17.260><c> to</c><01:10:17.350><c> raise</c><01:10:17.530><c> an</c>

01:10:17.700 --> 01:10:17.710 align:start position:0%
that class whenever you want to raise an
 

01:10:17.710 --> 01:10:20.670 align:start position:0%
that class whenever you want to raise an
event<01:10:17.980><c> you</c><01:10:18.130><c> use</c><01:10:18.340><c> this</c><01:10:19.000><c> that</c><01:10:19.570><c> emit</c><01:10:19.900><c> because</c>

01:10:20.670 --> 01:10:20.680 align:start position:0%
event you use this that emit because
 

01:10:20.680 --> 01:10:23.610 align:start position:0%
event you use this that emit because
this<01:10:20.980><c> references</c><01:10:21.880><c> this</c><01:10:22.390><c> longer</c><01:10:22.810><c> class</c><01:10:23.170><c> itself</c>

01:10:23.610 --> 01:10:23.620 align:start position:0%
this references this longer class itself
 

01:10:23.620 --> 01:10:27.060 align:start position:0%
this references this longer class itself
which<01:10:24.250><c> extends</c><01:10:25.090><c> event</c><01:10:25.810><c> emitter</c><01:10:26.440><c> so</c><01:10:26.650><c> all</c><01:10:26.830><c> the</c>

01:10:27.060 --> 01:10:27.070 align:start position:0%
which extends event emitter so all the
 

01:10:27.070 --> 01:10:29.250 align:start position:0%
which extends event emitter so all the
methods<01:10:27.460><c> defined</c><01:10:27.880><c> an</c><01:10:28.090><c> event</c><01:10:28.660><c> emitter</c><01:10:29.050><c> will</c>

01:10:29.250 --> 01:10:29.260 align:start position:0%
methods defined an event emitter will
 

01:10:29.260 --> 01:10:32.520 align:start position:0%
methods defined an event emitter will
also<01:10:29.710><c> be</c><01:10:29.830><c> part</c><01:10:30.220><c> of</c><01:10:30.310><c> this</c><01:10:30.460><c> class</c><01:10:30.730><c> okay</c><01:10:31.660><c> and</c>

01:10:32.520 --> 01:10:32.530 align:start position:0%
also be part of this class okay and
 

01:10:32.530 --> 01:10:36.930 align:start position:0%
also be part of this class okay and
finally<01:10:32.980><c> in</c><01:10:34.170><c> app</c><01:10:35.170><c> module</c><01:10:35.410><c> again</c><01:10:36.280><c> instead</c><01:10:36.850><c> of</c>

01:10:36.930 --> 01:10:36.940 align:start position:0%
finally in app module again instead of
 

01:10:36.940 --> 01:10:40.260 align:start position:0%
finally in app module again instead of
using<01:10:37.120><c> an</c><01:10:37.390><c> instance</c><01:10:38.260><c> of</c><01:10:38.410><c> event</c><01:10:39.130><c> emitter</c><01:10:39.580><c> you</c>

01:10:40.260 --> 01:10:40.270 align:start position:0%
using an instance of event emitter you
 

01:10:40.270 --> 01:10:43.050 align:start position:0%
using an instance of event emitter you
will<01:10:40.390><c> use</c><01:10:40.570><c> an</c><01:10:40.780><c> instance</c><01:10:41.440><c> of</c><01:10:41.590><c> the</c><01:10:42.370><c> custom</c><01:10:42.820><c> class</c>

01:10:43.050 --> 01:10:43.060 align:start position:0%
will use an instance of the custom class
 

01:10:43.060 --> 01:10:46.230 align:start position:0%
will use an instance of the custom class
that<01:10:43.300><c> you</c><01:10:43.390><c> have</c><01:10:43.540><c> defined</c><01:10:43.770><c> that</c><01:10:44.770><c> extends</c><01:10:45.610><c> event</c>

01:10:46.230 --> 01:10:46.240 align:start position:0%
that you have defined that extends event
 

01:10:46.240 --> 01:10:51.839 align:start position:0%
that you have defined that extends event
emitter

01:10:51.839 --> 01:10:51.849 align:start position:0%
 
 

01:10:51.849 --> 01:10:53.879 align:start position:0%
 
one<01:10:52.420><c> of</c><01:10:52.510><c> the</c><01:10:52.630><c> powerful</c><01:10:53.020><c> building</c><01:10:53.500><c> blocks</c><01:10:53.739><c> of</c>

01:10:53.879 --> 01:10:53.889 align:start position:0%
one of the powerful building blocks of
 

01:10:53.889 --> 01:10:57.300 align:start position:0%
one of the powerful building blocks of
node<01:10:54.159><c> is</c><01:10:54.400><c> the</c><01:10:54.820><c> HTTP</c><01:10:55.719><c> module</c><01:10:55.900><c> that</c><01:10:56.710><c> we</c><01:10:56.860><c> use</c><01:10:57.070><c> for</c>

01:10:57.300 --> 01:10:57.310 align:start position:0%
node is the HTTP module that we use for
 

01:10:57.310 --> 01:11:00.300 align:start position:0%
node is the HTTP module that we use for
creating<01:10:57.880><c> networking</c><01:10:58.810><c> applications</c><01:10:59.469><c> for</c>

01:11:00.300 --> 01:11:00.310 align:start position:0%
creating networking applications for
 

01:11:00.310 --> 01:11:02.580 align:start position:0%
creating networking applications for
example<01:11:00.400><c> we</c><01:11:01.239><c> can</c><01:11:01.389><c> create</c><01:11:01.599><c> a</c><01:11:01.690><c> web</c><01:11:01.929><c> server</c><01:11:02.230><c> that</c>

01:11:02.580 --> 01:11:02.590 align:start position:0%
example we can create a web server that
 

01:11:02.590 --> 01:11:05.580 align:start position:0%
example we can create a web server that
listens<01:11:03.400><c> for</c><01:11:03.489><c> HTTP</c><01:11:04.360><c> requests</c><01:11:04.929><c> on</c><01:11:05.079><c> a</c><01:11:05.290><c> given</c>

01:11:05.580 --> 01:11:05.590 align:start position:0%
listens for HTTP requests on a given
 

01:11:05.590 --> 01:11:07.830 align:start position:0%
listens for HTTP requests on a given
port<01:11:05.860><c> and</c><01:11:06.070><c> with</c><01:11:06.820><c> this</c><01:11:06.940><c> we</c><01:11:07.150><c> can</c><01:11:07.239><c> easily</c><01:11:07.510><c> create</c>

01:11:07.830 --> 01:11:07.840 align:start position:0%
port and with this we can easily create
 

01:11:07.840 --> 01:11:10.680 align:start position:0%
port and with this we can easily create
a<01:11:08.199><c> back-end</c><01:11:08.889><c> service</c><01:11:09.520><c> for</c><01:11:10.119><c> our</c><01:11:10.150><c> client</c>

01:11:10.680 --> 01:11:10.690 align:start position:0%
a back-end service for our client
 

01:11:10.690 --> 01:11:12.629 align:start position:0%
a back-end service for our client
applications<01:11:11.290><c> like</c><01:11:11.619><c> a</c><01:11:11.679><c> web</c><01:11:11.889><c> application</c><01:11:12.070><c> that</c>

01:11:12.629 --> 01:11:12.639 align:start position:0%
applications like a web application that
 

01:11:12.639 --> 01:11:15.390 align:start position:0%
applications like a web application that
we<01:11:12.760><c> build</c><01:11:13.030><c> with</c><01:11:13.239><c> react</c><01:11:13.810><c> or</c><01:11:14.110><c> angular</c><01:11:14.530><c> or</c><01:11:15.340><c> a</c>

01:11:15.390 --> 01:11:15.400 align:start position:0%
we build with react or angular or a
 

01:11:15.400 --> 01:11:17.550 align:start position:0%
we build with react or angular or a
mobile<01:11:15.940><c> application</c><01:11:16.090><c> running</c><01:11:17.050><c> on</c><01:11:17.290><c> a</c><01:11:17.349><c> mobile</c>

01:11:17.550 --> 01:11:17.560 align:start position:0%
mobile application running on a mobile
 

01:11:17.560 --> 01:11:20.669 align:start position:0%
mobile application running on a mobile
device<01:11:18.239><c> so</c><01:11:19.239><c> once</c><01:11:19.449><c> again</c><01:11:19.570><c> back</c><01:11:20.260><c> in</c><01:11:20.440><c> the</c><01:11:20.469><c> note</c>

01:11:20.669 --> 01:11:20.679 align:start position:0%
device so once again back in the note
 

01:11:20.679 --> 01:11:22.950 align:start position:0%
device so once again back in the note
documentation<01:11:21.460><c> in</c><01:11:21.639><c> the</c><01:11:22.060><c> list</c><01:11:22.239><c> of</c><01:11:22.329><c> modules</c><01:11:22.810><c> we</c>

01:11:22.950 --> 01:11:22.960 align:start position:0%
documentation in the list of modules we
 

01:11:22.960 --> 01:11:27.120 align:start position:0%
documentation in the list of modules we
can<01:11:23.110><c> find</c><01:11:23.409><c> this</c><01:11:24.070><c> HTTP</c><01:11:24.790><c> module</c><01:11:25.139><c> in</c><01:11:26.139><c> this</c><01:11:26.949><c> module</c>

01:11:27.120 --> 01:11:27.130 align:start position:0%
can find this HTTP module in this module
 

01:11:27.130 --> 01:11:29.669 align:start position:0%
can find this HTTP module in this module
you<01:11:27.369><c> can</c><01:11:27.429><c> see</c><01:11:27.699><c> various</c><01:11:28.300><c> classes</c><01:11:28.840><c> like</c><01:11:29.079><c> HTTP</c>

01:11:29.669 --> 01:11:29.679 align:start position:0%
you can see various classes like HTTP
 

01:11:29.679 --> 01:11:33.089 align:start position:0%
you can see various classes like HTTP
that<01:11:29.860><c> agent</c><01:11:30.929><c> HTTP</c><01:11:31.929><c> that</c><01:11:32.110><c> client</c><01:11:32.469><c> requests</c><01:11:32.860><c> and</c>

01:11:33.089 --> 01:11:33.099 align:start position:0%
that agent HTTP that client requests and
 

01:11:33.099 --> 01:11:35.550 align:start position:0%
that agent HTTP that client requests and
so<01:11:33.340><c> on</c><01:11:33.460><c> each</c><01:11:34.210><c> of</c><01:11:34.270><c> this</c><01:11:34.570><c> classes</c><01:11:35.050><c> has</c><01:11:35.230><c> a</c><01:11:35.260><c> bunch</c>

01:11:35.550 --> 01:11:35.560 align:start position:0%
so on each of this classes has a bunch
 

01:11:35.560 --> 01:11:39.959 align:start position:0%
so on each of this classes has a bunch
of<01:11:35.650><c> properties</c><01:11:36.030><c> methods</c><01:11:37.030><c> and</c><01:11:37.500><c> events</c><01:11:38.760><c> so</c><01:11:39.760><c> back</c>

01:11:39.959 --> 01:11:39.969 align:start position:0%
of properties methods and events so back
 

01:11:39.969 --> 01:11:43.350 align:start position:0%
of properties methods and events so back
in<01:11:40.000><c> vs</c><01:11:40.300><c> code</c><01:11:40.540><c> let's</c><01:11:41.290><c> load</c><01:11:41.500><c> the</c><01:11:41.739><c> HTTP</c><01:11:42.219><c> module</c><01:11:42.400><c> so</c>

01:11:43.350 --> 01:11:43.360 align:start position:0%
in vs code let's load the HTTP module so
 

01:11:43.360 --> 01:11:49.160 align:start position:0%
in vs code let's load the HTTP module so
constant<01:11:44.070><c> HTTP</c><01:11:45.070><c> we</c><01:11:45.969><c> set</c><01:11:46.210><c> it</c><01:11:46.300><c> to</c><01:11:46.329><c> require</c><01:11:47.969><c> HTTP</c>

01:11:49.160 --> 01:11:49.170 align:start position:0%
constant HTTP we set it to require HTTP
 

01:11:49.170 --> 01:11:53.419 align:start position:0%
constant HTTP we set it to require HTTP
okay<01:11:50.670><c> now</c><01:11:51.670><c> here</c><01:11:51.880><c> we</c><01:11:51.969><c> can</c><01:11:52.090><c> call</c><01:11:52.239><c> HTTP</c><01:11:52.900><c> dot</c>

01:11:53.419 --> 01:11:53.429 align:start position:0%
okay now here we can call HTTP dot
 

01:11:53.429 --> 01:11:57.419 align:start position:0%
okay now here we can call HTTP dot
create<01:11:54.510><c> server</c><01:11:55.920><c> this</c><01:11:56.920><c> is</c><01:11:57.099><c> one</c><01:11:57.250><c> of</c><01:11:57.340><c> the</c>

01:11:57.419 --> 01:11:57.429 align:start position:0%
create server this is one of the
 

01:11:57.429 --> 01:11:59.450 align:start position:0%
create server this is one of the
functions<01:11:57.880><c> defined</c><01:11:58.300><c> in</c><01:11:58.449><c> this</c><01:11:58.599><c> module</c><01:11:58.810><c> and</c>

01:11:59.450 --> 01:11:59.460 align:start position:0%
functions defined in this module and
 

01:11:59.460 --> 01:12:03.300 align:start position:0%
functions defined in this module and
with<01:12:00.460><c> this</c><01:12:00.610><c> we</c><01:12:01.239><c> can</c><01:12:01.389><c> create</c><01:12:01.570><c> a</c><01:12:01.869><c> web</c><01:12:02.260><c> server</c><01:12:02.530><c> so</c>

01:12:03.300 --> 01:12:03.310 align:start position:0%
with this we can create a web server so
 

01:12:03.310 --> 01:12:05.879 align:start position:0%
with this we can create a web server so
let's<01:12:03.730><c> store</c><01:12:04.150><c> the</c><01:12:04.300><c> result</c><01:12:04.659><c> in</c><01:12:04.900><c> a</c><01:12:05.560><c> server</c>

01:12:05.879 --> 01:12:05.889 align:start position:0%
let's store the result in a server
 

01:12:05.889 --> 01:12:09.300 align:start position:0%
let's store the result in a server
object<01:12:06.510><c> now</c><01:12:07.510><c> what</c><01:12:07.690><c> is</c><01:12:07.810><c> interesting</c><01:12:08.079><c> is</c><01:12:08.829><c> that</c>

01:12:09.300 --> 01:12:09.310 align:start position:0%
object now what is interesting is that
 

01:12:09.310 --> 01:12:13.200 align:start position:0%
object now what is interesting is that
this<01:12:09.610><c> server</c><01:12:09.969><c> is</c><01:12:10.329><c> an</c><01:12:10.989><c> event</c><01:12:11.500><c> emitter</c><01:12:12.400><c> so</c><01:12:13.090><c> it</c>

01:12:13.200 --> 01:12:13.210 align:start position:0%
this server is an event emitter so it
 

01:12:13.210 --> 01:12:15.120 align:start position:0%
this server is an event emitter so it
has<01:12:13.389><c> all</c><01:12:13.599><c> the</c><01:12:13.960><c> capabilities</c><01:12:14.170><c> of</c><01:12:14.770><c> event</c>

01:12:15.120 --> 01:12:15.130 align:start position:0%
has all the capabilities of event
 

01:12:15.130 --> 01:12:17.010 align:start position:0%
has all the capabilities of event
emitter<01:12:15.550><c> that</c><01:12:16.119><c> you</c><01:12:16.239><c> saw</c><01:12:16.389><c> earlier</c><01:12:16.630><c> in</c><01:12:16.929><c> this</c>

01:12:17.010 --> 01:12:17.020 align:start position:0%
emitter that you saw earlier in this
 

01:12:17.020 --> 01:12:21.180 align:start position:0%
emitter that you saw earlier in this
section<01:12:17.199><c> so</c><01:12:18.099><c> look</c><01:12:18.670><c> server</c><01:12:19.360><c> dot</c><01:12:19.949><c> we</c><01:12:20.949><c> have</c><01:12:20.980><c> the</c>

01:12:21.180 --> 01:12:21.190 align:start position:0%
section so look server dot we have the
 

01:12:21.190 --> 01:12:25.890 align:start position:0%
section so look server dot we have the
on<01:12:21.340><c> method</c><01:12:21.880><c> or</c><01:12:22.060><c> add</c><01:12:22.690><c> listener</c><01:12:23.290><c> or</c><01:12:23.820><c> omit</c><01:12:24.820><c> and</c><01:12:25.090><c> so</c>

01:12:25.890 --> 01:12:25.900 align:start position:0%
on method or add listener or omit and so
 

01:12:25.900 --> 01:12:29.430 align:start position:0%
on method or add listener or omit and so
on<01:12:26.639><c> also</c><01:12:27.639><c> if</c><01:12:28.210><c> you</c><01:12:28.389><c> look</c><01:12:28.510><c> at</c><01:12:28.630><c> the</c><01:12:28.750><c> documentation</c>

01:12:29.430 --> 01:12:29.440 align:start position:0%
on also if you look at the documentation
 

01:12:29.440 --> 01:12:32.370 align:start position:0%
on also if you look at the documentation
for<01:12:29.889><c> the</c><01:12:29.949><c> HTTP</c><01:12:30.550><c> module</c><01:12:30.699><c> on</c><01:12:31.119><c> this</c><01:12:31.960><c> page</c><01:12:32.110><c> you</c><01:12:32.260><c> can</c>

01:12:32.370 --> 01:12:32.380 align:start position:0%
for the HTTP module on this page you can
 

01:12:32.380 --> 01:12:36.120 align:start position:0%
for the HTTP module on this page you can
see<01:12:32.760><c> HTTP</c><01:12:33.760><c> that's</c><01:12:34.119><c> server</c><01:12:34.389><c> class</c><01:12:35.010><c> here</c><01:12:36.010><c> the</c>

01:12:36.120 --> 01:12:36.130 align:start position:0%
see HTTP that's server class here the
 

01:12:36.130 --> 01:12:37.890 align:start position:0%
see HTTP that's server class here the
documentation<01:12:36.849><c> says</c><01:12:37.090><c> that</c><01:12:37.480><c> this</c><01:12:37.659><c> class</c>

01:12:37.890 --> 01:12:37.900 align:start position:0%
documentation says that this class
 

01:12:37.900 --> 01:12:40.979 align:start position:0%
documentation says that this class
inherits<01:12:38.590><c> from</c><01:12:38.650><c> net</c><01:12:39.130><c> dot</c><01:12:39.699><c> server</c><01:12:40.119><c> so</c><01:12:40.719><c> this</c><01:12:40.869><c> is</c>

01:12:40.979 --> 01:12:40.989 align:start position:0%
inherits from net dot server so this is
 

01:12:40.989 --> 01:12:43.770 align:start position:0%
inherits from net dot server so this is
another<01:12:41.380><c> class</c><01:12:41.679><c> defined</c><01:12:42.610><c> in</c><01:12:42.849><c> the</c><01:12:43.150><c> net</c><01:12:43.329><c> module</c>

01:12:43.770 --> 01:12:43.780 align:start position:0%
another class defined in the net module
 

01:12:43.780 --> 01:12:47.040 align:start position:0%
another class defined in the net module
let's<01:12:44.440><c> have</c><01:12:44.619><c> a</c><01:12:44.650><c> look</c><01:12:44.889><c> now</c><01:12:45.449><c> here</c><01:12:46.480><c> the</c>

01:12:47.040 --> 01:12:47.050 align:start position:0%
let's have a look now here the
 

01:12:47.050 --> 01:12:49.319 align:start position:0%
let's have a look now here the
documentation<01:12:47.590><c> says</c><01:12:47.949><c> that</c><01:12:48.550><c> net</c><01:12:48.820><c> the</c><01:12:49.030><c> server</c>

01:12:49.319 --> 01:12:49.329 align:start position:0%
documentation says that net the server
 

01:12:49.329 --> 01:12:53.100 align:start position:0%
documentation says that net the server
is<01:12:49.630><c> an</c><01:12:50.260><c> event</c><01:12:50.710><c> emitter</c><01:12:51.639><c> so</c><01:12:52.300><c> that's</c><01:12:52.510><c> why</c><01:12:52.659><c> I</c><01:12:52.690><c> said</c>

01:12:53.100 --> 01:12:53.110 align:start position:0%
is an event emitter so that's why I said
 

01:12:53.110 --> 01:12:55.319 align:start position:0%
is an event emitter so that's why I said
a<01:12:53.260><c> bunch</c><01:12:53.500><c> of</c><01:12:53.650><c> notes</c><01:12:53.980><c> core</c><01:12:54.340><c> functionality</c><01:12:55.090><c> is</c>

01:12:55.319 --> 01:12:55.329 align:start position:0%
a bunch of notes core functionality is
 

01:12:55.329 --> 01:12:59.700 align:start position:0%
a bunch of notes core functionality is
based<01:12:56.110><c> on</c><01:12:56.469><c> if</c><01:12:56.980><c> an</c><01:12:57.219><c> emitter</c><01:12:58.290><c> so</c><01:12:59.290><c> back</c><01:12:59.469><c> to</c><01:12:59.500><c> our</c>

01:12:59.700 --> 01:12:59.710 align:start position:0%
based on if an emitter so back to our
 

01:12:59.710 --> 01:13:02.600 align:start position:0%
based on if an emitter so back to our
server<01:12:59.949><c> object</c><01:13:00.489><c> now</c><01:13:01.300><c> we</c><01:13:01.360><c> can</c><01:13:01.630><c> call</c><01:13:01.840><c> server</c>

01:13:02.600 --> 01:13:02.610 align:start position:0%
server object now we can call server
 

01:13:02.610 --> 01:13:05.200 align:start position:0%
server object now we can call server
that<01:13:03.610><c> listen</c>

01:13:05.200 --> 01:13:05.210 align:start position:0%
that listen
 

01:13:05.210 --> 01:13:08.790 align:start position:0%
that listen
and<01:13:05.300><c> give</c><01:13:05.630><c> it</c><01:13:05.660><c> a</c><01:13:05.780><c> port</c><01:13:06.110><c> let's</c><01:13:06.440><c> say</c><01:13:06.650><c> port</c><01:13:07.750><c> 3000</c>

01:13:08.790 --> 01:13:08.800 align:start position:0%
and give it a port let's say port 3000
 

01:13:08.800 --> 01:13:11.910 align:start position:0%
and give it a port let's say port 3000
now<01:13:09.800><c> following</c><01:13:10.190><c> that</c><01:13:10.280><c> I'm</c><01:13:10.850><c> gonna</c><01:13:11.360><c> add</c><01:13:11.540><c> a</c>

01:13:11.910 --> 01:13:11.920 align:start position:0%
now following that I'm gonna add a
 

01:13:11.920 --> 01:13:16.000 align:start position:0%
now following that I'm gonna add a
console<01:13:12.920><c> deadlock</c><01:13:13.750><c> saying</c><01:13:14.830><c> listening</c><01:13:15.830><c> on</c>

01:13:16.000 --> 01:13:16.010 align:start position:0%
console deadlock saying listening on
 

01:13:16.010 --> 01:13:20.530 align:start position:0%
console deadlock saying listening on
port<01:13:16.960><c> 3000</c><01:13:17.960><c> okay</c><01:13:18.969><c> now</c><01:13:19.969><c> when</c><01:13:20.150><c> we</c><01:13:20.270><c> run</c><01:13:20.420><c> this</c>

01:13:20.530 --> 01:13:20.540 align:start position:0%
port 3000 okay now when we run this
 

01:13:20.540 --> 01:13:22.479 align:start position:0%
port 3000 okay now when we run this
application<01:13:20.750><c> this</c><01:13:21.380><c> server</c><01:13:21.650><c> will</c><01:13:22.010><c> listen</c><01:13:22.250><c> on</c>

01:13:22.479 --> 01:13:22.489 align:start position:0%
application this server will listen on
 

01:13:22.489 --> 01:13:25.750 align:start position:0%
application this server will listen on
port<01:13:22.520><c> 3000</c><01:13:23.480><c> as</c><01:13:23.960><c> I</c><01:13:24.410><c> told</c><01:13:24.590><c> you</c><01:13:24.739><c> before</c><01:13:24.860><c> every</c>

01:13:25.750 --> 01:13:25.760 align:start position:0%
port 3000 as I told you before every
 

01:13:25.760 --> 01:13:27.520 align:start position:0%
port 3000 as I told you before every
time<01:13:25.969><c> there</c><01:13:26.390><c> is</c><01:13:26.510><c> a</c><01:13:26.540><c> new</c><01:13:26.719><c> connection</c><01:13:27.050><c> or</c><01:13:27.200><c> new</c>

01:13:27.520 --> 01:13:27.530 align:start position:0%
time there is a new connection or new
 

01:13:27.530 --> 01:13:31.330 align:start position:0%
time there is a new connection or new
request<01:13:27.980><c> this</c><01:13:28.550><c> server</c><01:13:29.110><c> raises</c><01:13:30.110><c> an</c><01:13:30.230><c> event</c><01:13:30.500><c> so</c>

01:13:31.330 --> 01:13:31.340 align:start position:0%
request this server raises an event so
 

01:13:31.340 --> 01:13:34.060 align:start position:0%
request this server raises an event so
we<01:13:31.550><c> can</c><01:13:31.670><c> use</c><01:13:31.820><c> the</c><01:13:31.940><c> own</c><01:13:32.120><c> method</c><01:13:32.660><c> to</c><01:13:32.870><c> handle</c><01:13:33.620><c> that</c>

01:13:34.060 --> 01:13:34.070 align:start position:0%
we can use the own method to handle that
 

01:13:34.070 --> 01:13:36.490 align:start position:0%
we can use the own method to handle that
event<01:13:34.489><c> so</c><01:13:34.670><c> before</c><01:13:35.570><c> listening</c><01:13:35.810><c> we</c><01:13:36.290><c> want</c><01:13:36.440><c> to</c>

01:13:36.490 --> 01:13:36.500 align:start position:0%
event so before listening we want to
 

01:13:36.500 --> 01:13:39.900 align:start position:0%
event so before listening we want to
register<01:13:36.650><c> a</c><01:13:37.280><c> listener</c><01:13:37.940><c> or</c><01:13:38.330><c> a</c><01:13:38.510><c> handler</c><01:13:39.020><c> so</c>

01:13:39.900 --> 01:13:39.910 align:start position:0%
register a listener or a handler so
 

01:13:39.910 --> 01:13:44.580 align:start position:0%
register a listener or a handler so
server<01:13:40.910><c> dot</c><01:13:41.750><c> on</c><01:13:42.610><c> the</c><01:13:43.610><c> name</c><01:13:43.760><c> of</c><01:13:43.790><c> the</c><01:13:43.940><c> event</c><01:13:44.090><c> is</c>

01:13:44.580 --> 01:13:44.590 align:start position:0%
server dot on the name of the event is
 

01:13:44.590 --> 01:13:46.810 align:start position:0%
server dot on the name of the event is
connection<01:13:45.590><c> then</c><01:13:45.770><c> you</c><01:13:45.860><c> can</c><01:13:45.980><c> find</c><01:13:46.310><c> in</c><01:13:46.550><c> the</c>

01:13:46.810 --> 01:13:46.820 align:start position:0%
connection then you can find in the
 

01:13:46.820 --> 01:13:48.640 align:start position:0%
connection then you can find in the
documentation<01:13:47.140><c> so</c><01:13:48.140><c> you</c><01:13:48.230><c> don't</c><01:13:48.380><c> have</c><01:13:48.500><c> to</c>

01:13:48.640 --> 01:13:48.650 align:start position:0%
documentation so you don't have to
 

01:13:48.650 --> 01:13:51.910 align:start position:0%
documentation so you don't have to
memorize<01:13:49.160><c> any</c><01:13:49.430><c> of</c><01:13:49.640><c> these</c><01:13:49.820><c> stuff</c><01:13:50.140><c> okay</c><01:13:51.170><c> and</c><01:13:51.380><c> the</c>

01:13:51.910 --> 01:13:51.920 align:start position:0%
memorize any of these stuff okay and the
 

01:13:51.920 --> 01:13:54.130 align:start position:0%
memorize any of these stuff okay and the
second<01:13:52.219><c> argument</c><01:13:52.460><c> is</c><01:13:52.969><c> a</c><01:13:53.390><c> callback</c><01:13:53.780><c> function</c>

01:13:54.130 --> 01:13:54.140 align:start position:0%
second argument is a callback function
 

01:13:54.140 --> 01:13:57.400 align:start position:0%
second argument is a callback function
or<01:13:54.620><c> the</c><01:13:55.100><c> actual</c><01:13:55.310><c> listener</c><01:13:56.060><c> as</c><01:13:56.330><c> you</c><01:13:56.870><c> can</c><01:13:57.020><c> see</c><01:13:57.200><c> in</c>

01:13:57.400 --> 01:13:57.410 align:start position:0%
or the actual listener as you can see in
 

01:13:57.410 --> 01:14:00.040 align:start position:0%
or the actual listener as you can see in
the<01:13:57.590><c> tooltip</c><01:13:57.860><c> here</c><01:13:58.340><c> this</c><01:13:58.880><c> listener</c><01:13:59.540><c> is</c><01:13:59.750><c> a</c>

01:14:00.040 --> 01:14:00.050 align:start position:0%
the tooltip here this listener is a
 

01:14:00.050 --> 01:14:01.900 align:start position:0%
the tooltip here this listener is a
function<01:14:00.530><c> with</c><01:14:00.739><c> one</c><01:14:00.920><c> argument</c><01:14:01.219><c> that</c><01:14:01.760><c> is</c>

01:14:01.900 --> 01:14:01.910 align:start position:0%
function with one argument that is
 

01:14:01.910 --> 01:14:05.320 align:start position:0%
function with one argument that is
socket<01:14:02.390><c> of</c><01:14:02.540><c> type</c><01:14:02.960><c> socket</c><01:14:03.860><c> class</c><01:14:04.130><c> and</c><01:14:04.489><c> it</c>

01:14:05.320 --> 01:14:05.330 align:start position:0%
socket of type socket class and it
 

01:14:05.330 --> 01:14:08.020 align:start position:0%
socket of type socket class and it
returns<01:14:05.810><c> void</c><01:14:06.440><c> so</c><01:14:07.100><c> here</c><01:14:07.310><c> we</c><01:14:07.430><c> have</c><01:14:07.580><c> the</c><01:14:07.760><c> arrow</c>

01:14:08.020 --> 01:14:08.030 align:start position:0%
returns void so here we have the arrow
 

01:14:08.030 --> 01:14:11.950 align:start position:0%
returns void so here we have the arrow
function<01:14:08.630><c> syntax</c><01:14:09.200><c> in</c><01:14:09.410><c> es6</c><01:14:10.270><c> so</c><01:14:11.270><c> let's</c><01:14:11.600><c> add</c><01:14:11.750><c> an</c>

01:14:11.950 --> 01:14:11.960 align:start position:0%
function syntax in es6 so let's add an
 

01:14:11.960 --> 01:14:14.580 align:start position:0%
function syntax in es6 so let's add an
error<01:14:12.140><c> function</c><01:14:12.610><c> that</c><01:14:13.610><c> takes</c><01:14:13.820><c> a</c><01:14:14.000><c> socket</c><01:14:14.239><c> and</c>

01:14:14.580 --> 01:14:14.590 align:start position:0%
error function that takes a socket and
 

01:14:14.590 --> 01:14:19.570 align:start position:0%
error function that takes a socket and
goes<01:14:15.590><c> to</c><01:14:15.860><c> this</c><01:14:16.370><c> code</c><01:14:16.760><c> block</c><01:14:18.250><c> now</c><01:14:19.250><c> here</c><01:14:19.460><c> we</c><01:14:19.550><c> can</c>

01:14:19.570 --> 01:14:19.580 align:start position:0%
goes to this code block now here we can
 

01:14:19.580 --> 01:14:22.750 align:start position:0%
goes to this code block now here we can
simply<01:14:20.000><c> log</c><01:14:20.239><c> something</c><01:14:20.660><c> on</c><01:14:20.780><c> the</c><01:14:20.870><c> console</c><01:14:21.760><c> new</c>

01:14:22.750 --> 01:14:22.760 align:start position:0%
simply log something on the console new
 

01:14:22.760 --> 01:14:28.229 align:start position:0%
simply log something on the console new
connection<01:14:25.570><c> now</c><01:14:26.570><c> back</c><01:14:26.960><c> in</c><01:14:27.110><c> the</c><01:14:27.200><c> terminal</c>

01:14:28.229 --> 01:14:28.239 align:start position:0%
connection now back in the terminal
 

01:14:28.239 --> 01:14:31.330 align:start position:0%
connection now back in the terminal
let's<01:14:29.239><c> run</c><01:14:29.420><c> this</c><01:14:29.540><c> application</c><01:14:29.920><c> we</c><01:14:30.920><c> can</c><01:14:30.950><c> see</c><01:14:31.100><c> we</c>

01:14:31.330 --> 01:14:31.340 align:start position:0%
let's run this application we can see we
 

01:14:31.340 --> 01:14:34.640 align:start position:0%
let's run this application we can see we
are<01:14:31.400><c> listening</c><01:14:31.610><c> on</c><01:14:31.940><c> port</c><01:14:32.200><c> 3000</c>

01:14:34.640 --> 01:14:34.650 align:start position:0%
are listening on port 3000
 

01:14:34.650 --> 01:14:36.380 align:start position:0%
are listening on port 3000
now<01:14:34.739><c> back</c><01:14:34.949><c> in</c><01:14:35.040><c> the</c><01:14:35.130><c> browser</c><01:14:35.280><c> let's</c><01:14:36.239><c> head</c><01:14:36.360><c> over</c>

01:14:36.380 --> 01:14:36.390 align:start position:0%
now back in the browser let's head over
 

01:14:36.390 --> 01:14:40.399 align:start position:0%
now back in the browser let's head over
to<01:14:36.630><c> localhost</c><01:14:37.170><c> port</c><01:14:38.070><c> 3000</c><01:14:38.820><c> and</c><01:14:39.110><c> now</c><01:14:40.110><c> if</c><01:14:40.320><c> you</c>

01:14:40.399 --> 01:14:40.409 align:start position:0%
to localhost port 3000 and now if you
 

01:14:40.409 --> 01:14:42.140 align:start position:0%
to localhost port 3000 and now if you
look<01:14:40.440><c> in</c><01:14:40.679><c> the</c><01:14:40.770><c> terminal</c><01:14:41.280><c> you</c><01:14:41.429><c> can</c><01:14:41.489><c> see</c><01:14:41.760><c> we</c><01:14:41.969><c> have</c>

01:14:42.140 --> 01:14:42.150 align:start position:0%
look in the terminal you can see we have
 

01:14:42.150 --> 01:14:45.290 align:start position:0%
look in the terminal you can see we have
a<01:14:42.179><c> new</c><01:14:42.420><c> connection</c><01:14:42.750><c> here</c><01:14:43.110><c> so</c><01:14:44.030><c> you</c><01:14:45.030><c> can</c><01:14:45.150><c> see</c>

01:14:45.290 --> 01:14:45.300 align:start position:0%
a new connection here so you can see
 

01:14:45.300 --> 01:14:47.570 align:start position:0%
a new connection here so you can see
this<01:14:45.449><c> server</c><01:14:45.750><c> object</c><01:14:46.380><c> raises</c><01:14:47.159><c> different</c>

01:14:47.570 --> 01:14:47.580 align:start position:0%
this server object raises different
 

01:14:47.580 --> 01:14:49.280 align:start position:0%
this server object raises different
kinds<01:14:47.880><c> of</c><01:14:47.940><c> events</c><01:14:48.480><c> that</c><01:14:48.600><c> you</c><01:14:48.659><c> can</c><01:14:48.840><c> respond</c><01:14:49.230><c> to</c>

01:14:49.280 --> 01:14:49.290 align:start position:0%
kinds of events that you can respond to
 

01:14:49.290 --> 01:14:51.800 align:start position:0%
kinds of events that you can respond to
now<01:14:50.100><c> in</c><01:14:50.250><c> real</c><01:14:50.460><c> world</c><01:14:50.670><c> applications</c><01:14:51.239><c> we</c><01:14:51.719><c> are</c>

01:14:51.800 --> 01:14:51.810 align:start position:0%
now in real world applications we are
 

01:14:51.810 --> 01:14:53.930 align:start position:0%
now in real world applications we are
not<01:14:51.989><c> going</c><01:14:52.320><c> to</c><01:14:52.380><c> respond</c><01:14:53.310><c> to</c><01:14:53.370><c> the</c><01:14:53.520><c> connection</c>

01:14:53.930 --> 01:14:53.940 align:start position:0%
not going to respond to the connection
 

01:14:53.940 --> 01:14:56.750 align:start position:0%
not going to respond to the connection
event<01:14:54.210><c> to</c><01:14:54.750><c> build</c><01:14:55.020><c> an</c><01:14:55.260><c> HTTP</c><01:14:56.100><c> service</c><01:14:56.520><c> this</c><01:14:56.699><c> is</c>

01:14:56.750 --> 01:14:56.760 align:start position:0%
event to build an HTTP service this is
 

01:14:56.760 --> 01:15:01.880 align:start position:0%
event to build an HTTP service this is
very<01:14:57.179><c> low</c><01:14:57.480><c> level</c><01:14:57.900><c> so</c><01:14:58.699><c> let's</c><01:14:59.699><c> delete</c><01:14:59.880><c> this</c><01:15:00.890><c> what</c>

01:15:01.880 --> 01:15:01.890 align:start position:0%
very low level so let's delete this what
 

01:15:01.890 --> 01:15:04.399 align:start position:0%
very low level so let's delete this what
we<01:15:02.100><c> commonly</c><01:15:02.340><c> do</c><01:15:02.730><c> is</c><01:15:03.060><c> we</c><01:15:03.510><c> pass</c><01:15:03.719><c> a</c><01:15:04.020><c> callback</c>

01:15:04.399 --> 01:15:04.409 align:start position:0%
we commonly do is we pass a callback
 

01:15:04.409 --> 01:15:07.870 align:start position:0%
we commonly do is we pass a callback
function<01:15:04.800><c> to</c><01:15:05.520><c> this</c><01:15:05.670><c> create</c><01:15:06.030><c> server</c><01:15:06.360><c> method</c><01:15:06.870><c> so</c>

01:15:07.870 --> 01:15:07.880 align:start position:0%
function to this create server method so
 

01:15:07.880 --> 01:15:10.970 align:start position:0%
function to this create server method so
function<01:15:08.880><c> this</c><01:15:09.840><c> function</c><01:15:09.870><c> takes</c><01:15:10.530><c> two</c>

01:15:10.970 --> 01:15:10.980 align:start position:0%
function this function takes two
 

01:15:10.980 --> 01:15:16.100 align:start position:0%
function this function takes two
parameters<01:15:11.580><c> request</c><01:15:12.540><c> and</c><01:15:12.810><c> response</c><01:15:14.870><c> or</c><01:15:15.870><c> we</c>

01:15:16.100 --> 01:15:16.110 align:start position:0%
parameters request and response or we
 

01:15:16.110 --> 01:15:18.649 align:start position:0%
parameters request and response or we
can<01:15:16.230><c> use</c><01:15:16.260><c> the</c><01:15:16.500><c> error</c><01:15:16.739><c> function</c><01:15:17.010><c> syntax</c><01:15:17.640><c> so</c><01:15:17.909><c> we</c>

01:15:18.649 --> 01:15:18.659 align:start position:0%
can use the error function syntax so we
 

01:15:18.659 --> 01:15:21.950 align:start position:0%
can use the error function syntax so we
remove<01:15:18.989><c> the</c><01:15:19.170><c> function</c><01:15:19.590><c> keyword</c><01:15:19.830><c> and</c><01:15:20.310><c> add</c><01:15:21.090><c> this</c>

01:15:21.950 --> 01:15:21.960 align:start position:0%
remove the function keyword and add this
 

01:15:21.960 --> 01:15:25.430 align:start position:0%
remove the function keyword and add this
fat<01:15:22.679><c> arrow</c><01:15:22.980><c> here</c><01:15:23.780><c> now</c><01:15:24.780><c> in</c><01:15:24.929><c> this</c><01:15:25.050><c> function</c>

01:15:25.430 --> 01:15:25.440 align:start position:0%
fat arrow here now in this function
 

01:15:25.440 --> 01:15:27.770 align:start position:0%
fat arrow here now in this function
instead<01:15:25.949><c> of</c><01:15:26.040><c> working</c><01:15:26.219><c> with</c><01:15:26.400><c> a</c><01:15:26.580><c> socket</c><01:15:26.850><c> we</c><01:15:27.630><c> can</c>

01:15:27.770 --> 01:15:27.780 align:start position:0%
instead of working with a socket we can
 

01:15:27.780 --> 01:15:30.200 align:start position:0%
instead of working with a socket we can
work<01:15:27.960><c> with</c><01:15:28.110><c> the</c><01:15:28.170><c> actual</c><01:15:28.590><c> request</c><01:15:29.040><c> or</c><01:15:29.310><c> response</c>

01:15:30.200 --> 01:15:30.210 align:start position:0%
work with the actual request or response
 

01:15:30.210 --> 01:15:33.260 align:start position:0%
work with the actual request or response
objects<01:15:30.860><c> so</c><01:15:31.860><c> we</c><01:15:32.040><c> can</c><01:15:32.159><c> check</c><01:15:32.310><c> if</c><01:15:32.520><c> request</c><01:15:32.969><c> that</c>

01:15:33.260 --> 01:15:33.270 align:start position:0%
objects so we can check if request that
 

01:15:33.270 --> 01:15:38.120 align:start position:0%
objects so we can check if request that
URL<01:15:33.630><c> equals</c><01:15:34.400><c> slash</c><01:15:36.650><c> then</c><01:15:37.650><c> we</c><01:15:37.770><c> can</c><01:15:37.890><c> send</c>

01:15:38.120 --> 01:15:38.130 align:start position:0%
URL equals slash then we can send
 

01:15:38.130 --> 01:15:39.669 align:start position:0%
URL equals slash then we can send
something<01:15:38.340><c> to</c><01:15:38.489><c> the</c><01:15:38.640><c> client</c><01:15:38.969><c> for</c><01:15:39.600><c> example</c>

01:15:39.669 --> 01:15:39.679 align:start position:0%
something to the client for example
 

01:15:39.679 --> 01:15:46.310 align:start position:0%
something to the client for example
response<01:15:40.679><c> dot</c><01:15:41.040><c> write</c><01:15:42.440><c> hello</c><01:15:43.440><c> world</c><01:15:44.120><c> and</c><01:15:45.320><c> then</c>

01:15:46.310 --> 01:15:46.320 align:start position:0%
response dot write hello world and then
 

01:15:46.320 --> 01:15:51.770 align:start position:0%
response dot write hello world and then
we<01:15:46.530><c> end</c><01:15:46.770><c> the</c><01:15:47.489><c> response</c><01:15:48.739><c> okay</c><01:15:49.739><c> now</c><01:15:50.699><c> back</c><01:15:51.480><c> in</c><01:15:51.690><c> the</c>

01:15:51.770 --> 01:15:51.780 align:start position:0%
we end the response okay now back in the
 

01:15:51.780 --> 01:15:54.860 align:start position:0%
we end the response okay now back in the
terminal<01:15:52.100><c> we</c><01:15:53.100><c> can</c><01:15:53.130><c> exit</c><01:15:53.760><c> here</c><01:15:54.060><c> by</c><01:15:54.420><c> pressing</c>

01:15:54.860 --> 01:15:54.870 align:start position:0%
terminal we can exit here by pressing
 

01:15:54.870 --> 01:15:58.010 align:start position:0%
terminal we can exit here by pressing
ctrl<01:15:55.320><c> +</c><01:15:55.560><c> C</c><01:15:56.040><c> and</c><01:15:56.280><c> then</c><01:15:57.090><c> run</c><01:15:57.300><c> the</c><01:15:57.420><c> application</c>

01:15:58.010 --> 01:15:58.020 align:start position:0%
ctrl + C and then run the application
 

01:15:58.020 --> 01:16:00.500 align:start position:0%
ctrl + C and then run the application
again<01:15:58.550><c> okay</c><01:15:59.550><c> we're</c><01:15:59.850><c> still</c><01:16:00.000><c> listening</c><01:16:00.390><c> on</c><01:16:00.480><c> port</c>

01:16:00.500 --> 01:16:00.510 align:start position:0%
again okay we're still listening on port
 

01:16:00.510 --> 01:16:04.939 align:start position:0%
again okay we're still listening on port
3000<01:16:01.409><c> let's</c><01:16:02.400><c> refresh</c><01:16:02.699><c> this</c><01:16:02.850><c> page</c><01:16:03.590><c> so</c><01:16:04.590><c> we</c><01:16:04.770><c> got</c>

01:16:04.939 --> 01:16:04.949 align:start position:0%
3000 let's refresh this page so we got
 

01:16:04.949 --> 01:16:08.360 align:start position:0%
3000 let's refresh this page so we got
hello<01:16:05.250><c> world</c><01:16:05.489><c> on</c><01:16:05.730><c> home</c><01:16:06.600><c> page</c><01:16:07.040><c> now</c><01:16:08.040><c> if</c><01:16:08.159><c> you</c><01:16:08.250><c> want</c>

01:16:08.360 --> 01:16:08.370 align:start position:0%
hello world on home page now if you want
 

01:16:08.370 --> 01:16:10.490 align:start position:0%
hello world on home page now if you want
to<01:16:08.429><c> build</c><01:16:08.610><c> a</c><01:16:08.820><c> back-end</c><01:16:09.480><c> service</c><01:16:09.900><c> for</c><01:16:10.110><c> our</c><01:16:10.140><c> web</c>

01:16:10.490 --> 01:16:10.500 align:start position:0%
to build a back-end service for our web
 

01:16:10.500 --> 01:16:13.149 align:start position:0%
to build a back-end service for our web
or<01:16:10.890><c> mobile</c><01:16:10.920><c> applications</c><01:16:11.850><c> we</c><01:16:12.690><c> need</c><01:16:12.840><c> to</c><01:16:12.929><c> handle</c>

01:16:13.149 --> 01:16:13.159 align:start position:0%
or mobile applications we need to handle
 

01:16:13.159 --> 01:16:16.939 align:start position:0%
or mobile applications we need to handle
various<01:16:14.159><c> routes</c><01:16:14.429><c> here</c><01:16:14.790><c> for</c><01:16:15.510><c> example</c><01:16:15.810><c> we</c><01:16:16.800><c> can</c>

01:16:16.939 --> 01:16:16.949 align:start position:0%
various routes here for example we can
 

01:16:16.949 --> 01:16:20.030 align:start position:0%
various routes here for example we can
have<01:16:16.980><c> another</c><01:16:17.820><c> if</c><01:16:18.090><c> block</c><01:16:18.420><c> if</c><01:16:18.870><c> requested</c><01:16:19.590><c> URL</c>

01:16:20.030 --> 01:16:20.040 align:start position:0%
have another if block if requested URL
 

01:16:20.040 --> 01:16:24.470 align:start position:0%
have another if block if requested URL
equals<01:16:21.140><c> slash</c><01:16:22.219><c> API</c><01:16:23.219><c> slash</c><01:16:23.640><c> courses</c>

01:16:24.470 --> 01:16:24.480 align:start position:0%
equals slash API slash courses
 

01:16:24.480 --> 01:16:26.959 align:start position:0%
equals slash API slash courses
perhaps<01:16:25.230><c> here</c><01:16:25.469><c> we</c><01:16:25.560><c> want</c><01:16:25.710><c> to</c><01:16:25.770><c> return</c><01:16:26.070><c> the</c><01:16:26.760><c> list</c>

01:16:26.959 --> 01:16:26.969 align:start position:0%
perhaps here we want to return the list
 

01:16:26.969 --> 01:16:30.140 align:start position:0%
perhaps here we want to return the list
of<01:16:27.120><c> courses</c><01:16:27.719><c> from</c><01:16:28.260><c> the</c><01:16:28.320><c> database</c><01:16:28.830><c> so</c><01:16:29.760><c> we</c><01:16:30.000><c> would</c>

01:16:30.140 --> 01:16:30.150 align:start position:0%
of courses from the database so we would
 

01:16:30.150 --> 01:16:33.080 align:start position:0%
of courses from the database so we would
do<01:16:30.270><c> something</c><01:16:30.570><c> like</c><01:16:30.659><c> this</c><01:16:30.840><c> response</c><01:16:32.090><c> dot</c>

01:16:33.080 --> 01:16:33.090 align:start position:0%
do something like this response dot
 

01:16:33.090 --> 01:16:36.080 align:start position:0%
do something like this response dot
right<01:16:33.330><c> here</c><01:16:33.570><c> we</c><01:16:34.320><c> want</c><01:16:34.440><c> to</c><01:16:34.530><c> return</c><01:16:34.800><c> an</c><01:16:35.100><c> array</c><01:16:35.880><c> of</c>

01:16:36.080 --> 01:16:36.090 align:start position:0%
right here we want to return an array of
 

01:16:36.090 --> 01:16:41.380 align:start position:0%
right here we want to return an array of
objects<01:16:36.810><c> using</c><01:16:37.260><c> JSON</c><01:16:38.070><c> so</c><01:16:38.940><c> we</c><01:16:39.929><c> use</c><01:16:40.050><c> JSON</c><01:16:40.469><c> dot</c>

01:16:41.380 --> 01:16:41.390 align:start position:0%
objects using JSON so we use JSON dot
 

01:16:41.390 --> 01:16:45.110 align:start position:0%
objects using JSON so we use JSON dot
stringify<01:16:42.390><c> and</c><01:16:43.610><c> give</c><01:16:44.610><c> it</c><01:16:44.699><c> an</c><01:16:44.820><c> array</c><01:16:45.090><c> of</c>

01:16:45.110 --> 01:16:45.120 align:start position:0%
stringify and give it an array of
 

01:16:45.120 --> 01:16:47.629 align:start position:0%
stringify and give it an array of
objects<01:16:45.870><c> now</c><01:16:46.409><c> for</c><01:16:46.650><c> simplicity</c><01:16:46.830><c> here</c><01:16:47.429><c> we</c><01:16:47.550><c> don't</c>

01:16:47.629 --> 01:16:47.639 align:start position:0%
objects now for simplicity here we don't
 

01:16:47.639 --> 01:16:48.410 align:start position:0%
objects now for simplicity here we don't
have<01:16:47.760><c> to</c><01:16:48.000><c> worry</c>

01:16:48.410 --> 01:16:48.420 align:start position:0%
have to worry
 

01:16:48.420 --> 01:16:51.410 align:start position:0%
have to worry
the<01:16:48.719><c> database</c><01:16:49.170><c> or</c><01:16:49.440><c> complex</c><01:16:50.400><c> objects</c><01:16:50.880><c> let's</c>

01:16:51.410 --> 01:16:51.420 align:start position:0%
the database or complex objects let's
 

01:16:51.420 --> 01:16:56.080 align:start position:0%
the database or complex objects let's
just<01:16:51.630><c> return</c><01:16:51.810><c> an</c><01:16:52.290><c> array</c><01:16:52.890><c> of</c><01:16:52.920><c> numbers</c><01:16:53.340><c> 1</c><01:16:54.020><c> 2</c><01:16:55.020><c> &amp;</c><01:16:55.410><c> 3</c>

01:16:56.080 --> 01:16:56.090 align:start position:0%
just return an array of numbers 1 2 &amp; 3
 

01:16:56.090 --> 01:17:00.410 align:start position:0%
just return an array of numbers 1 2 &amp; 3
so<01:16:57.090><c> we</c><01:16:57.270><c> pass</c><01:16:57.510><c> this</c><01:16:57.780><c> to</c><01:16:58.380><c> json</c><01:16:58.949><c> stringify</c><01:16:59.580><c> which</c>

01:17:00.410 --> 01:17:00.420 align:start position:0%
so we pass this to json stringify which
 

01:17:00.420 --> 01:17:02.570 align:start position:0%
so we pass this to json stringify which
will<01:17:00.630><c> convert</c><01:17:01.080><c> this</c><01:17:01.199><c> array</c><01:17:01.560><c> into</c><01:17:02.160><c> a</c><01:17:02.190><c> string</c>

01:17:02.570 --> 01:17:02.580 align:start position:0%
will convert this array into a string
 

01:17:02.580 --> 01:17:05.240 align:start position:0%
will convert this array into a string
using<01:17:02.820><c> json</c><01:17:03.360><c> syntax</c><01:17:03.870><c> and</c><01:17:04.110><c> then</c><01:17:04.860><c> we'll</c><01:17:05.010><c> write</c>

01:17:05.240 --> 01:17:05.250 align:start position:0%
using json syntax and then we'll write
 

01:17:05.250 --> 01:17:07.850 align:start position:0%
using json syntax and then we'll write
it<01:17:05.429><c> to</c><01:17:05.550><c> the</c><01:17:05.640><c> response</c><01:17:06.030><c> and</c><01:17:06.300><c> finally</c><01:17:07.140><c> response</c>

01:17:07.850 --> 01:17:07.860 align:start position:0%
it to the response and finally response
 

01:17:07.860 --> 01:17:13.700 align:start position:0%
it to the response and finally response
the<01:17:08.760><c> end</c><01:17:10.310><c> now</c><01:17:11.310><c> back</c><01:17:11.640><c> in</c><01:17:11.790><c> the</c><01:17:11.850><c> terminal</c><01:17:12.560><c> we</c><01:17:13.560><c> need</c>

01:17:13.700 --> 01:17:13.710 align:start position:0%
the end now back in the terminal we need
 

01:17:13.710 --> 01:17:17.000 align:start position:0%
the end now back in the terminal we need
to<01:17:13.800><c> stop</c><01:17:14.100><c> this</c><01:17:14.219><c> process</c><01:17:14.699><c> again</c><01:17:14.820><c> and</c><01:17:15.890><c> run</c><01:17:16.890><c> it</c>

01:17:17.000 --> 01:17:17.010 align:start position:0%
to stop this process again and run it
 

01:17:17.010 --> 01:17:18.770 align:start position:0%
to stop this process again and run it
one<01:17:17.130><c> more</c><01:17:17.280><c> time</c><01:17:17.429><c> now</c><01:17:17.670><c> in</c><01:17:18.090><c> the</c><01:17:18.150><c> future</c><01:17:18.540><c> I</c><01:17:18.690><c> will</c>

01:17:18.770 --> 01:17:18.780 align:start position:0%
one more time now in the future I will
 

01:17:18.780 --> 01:17:20.990 align:start position:0%
one more time now in the future I will
show<01:17:19.050><c> you</c><01:17:19.110><c> how</c><01:17:19.440><c> we</c><01:17:19.500><c> can</c><01:17:19.770><c> automate</c><01:17:20.010><c> this</c><01:17:20.489><c> so</c>

01:17:20.990 --> 01:17:21.000 align:start position:0%
show you how we can automate this so
 

01:17:21.000 --> 01:17:22.669 align:start position:0%
show you how we can automate this so
every<01:17:21.360><c> time</c><01:17:21.510><c> we</c><01:17:21.690><c> make</c><01:17:21.840><c> a</c><01:17:21.870><c> simple</c><01:17:22.140><c> change</c><01:17:22.560><c> to</c>

01:17:22.669 --> 01:17:22.679 align:start position:0%
every time we make a simple change to
 

01:17:22.679 --> 01:17:24.500 align:start position:0%
every time we make a simple change to
our<01:17:22.710><c> application</c><01:17:23.340><c> we</c><01:17:23.520><c> don't</c><01:17:23.699><c> have</c><01:17:23.850><c> to</c><01:17:24.000><c> restart</c>

01:17:24.500 --> 01:17:24.510 align:start position:0%
our application we don't have to restart
 

01:17:24.510 --> 01:17:28.610 align:start position:0%
our application we don't have to restart
it<01:17:24.719><c> so</c><01:17:25.590><c> now</c><01:17:26.520><c> back</c><01:17:26.699><c> in</c><01:17:26.850><c> the</c><01:17:26.910><c> browser</c><01:17:27.060><c> if</c><01:17:27.500><c> we</c><01:17:28.500><c> go</c>

01:17:28.610 --> 01:17:28.620 align:start position:0%
it so now back in the browser if we go
 

01:17:28.620 --> 01:17:32.540 align:start position:0%
it so now back in the browser if we go
to<01:17:28.679><c> slash</c><01:17:29.100><c> API</c><01:17:29.940><c> slash</c><01:17:30.449><c> courses</c><01:17:31.340><c> we</c><01:17:32.340><c> get</c><01:17:32.460><c> an</c>

01:17:32.540 --> 01:17:32.550 align:start position:0%
to slash API slash courses we get an
 

01:17:32.550 --> 01:17:36.169 align:start position:0%
to slash API slash courses we get an
array<01:17:32.910><c> with</c><01:17:33.360><c> three</c><01:17:33.660><c> numbers</c><01:17:34.699><c> so</c><01:17:35.699><c> as</c><01:17:35.880><c> you</c><01:17:36.000><c> see</c>

01:17:36.169 --> 01:17:36.179 align:start position:0%
array with three numbers so as you see
 

01:17:36.179 --> 01:17:38.060 align:start position:0%
array with three numbers so as you see
building<01:17:36.870><c> a</c><01:17:36.960><c> web</c><01:17:37.110><c> server</c><01:17:37.380><c> we</c><01:17:37.620><c> know</c><01:17:37.800><c> it</c><01:17:37.860><c> is</c><01:17:38.040><c> very</c>

01:17:38.060 --> 01:17:38.070 align:start position:0%
building a web server we know it is very
 

01:17:38.070 --> 01:17:40.760 align:start position:0%
building a web server we know it is very
easy<01:17:38.480><c> now</c><01:17:39.480><c> in</c><01:17:39.630><c> the</c><01:17:39.719><c> real</c><01:17:39.870><c> world</c><01:17:40.170><c> we</c><01:17:40.560><c> are</c><01:17:40.590><c> not</c>

01:17:40.760 --> 01:17:40.770 align:start position:0%
easy now in the real world we are not
 

01:17:40.770 --> 01:17:43.640 align:start position:0%
easy now in the real world we are not
going<01:17:41.040><c> to</c><01:17:41.100><c> use</c><01:17:41.310><c> this</c><01:17:41.550><c> HTTP</c><01:17:42.210><c> module</c><01:17:42.390><c> to</c><01:17:43.230><c> build</c><01:17:43.500><c> a</c>

01:17:43.640 --> 01:17:43.650 align:start position:0%
going to use this HTTP module to build a
 

01:17:43.650 --> 01:17:46.070 align:start position:0%
going to use this HTTP module to build a
back-end<01:17:44.010><c> service</c><01:17:44.550><c> for</c><01:17:44.730><c> our</c><01:17:44.820><c> application</c><01:17:45.390><c> the</c>

01:17:46.070 --> 01:17:46.080 align:start position:0%
back-end service for our application the
 

01:17:46.080 --> 01:17:48.260 align:start position:0%
back-end service for our application the
reason<01:17:46.440><c> for</c><01:17:46.590><c> this</c><01:17:46.739><c> is</c><01:17:46.980><c> because</c><01:17:47.580><c> as</c><01:17:47.940><c> you</c><01:17:48.030><c> can</c>

01:17:48.260 --> 01:17:48.270 align:start position:0%
reason for this is because as you can
 

01:17:48.270 --> 01:17:52.550 align:start position:0%
reason for this is because as you can
see<01:17:48.330><c> here</c><01:17:48.870><c> as</c><01:17:49.050><c> we</c><01:17:49.679><c> add</c><01:17:49.860><c> more</c><01:17:50.160><c> routes</c><01:17:51.230><c> this</c><01:17:52.230><c> code</c>

01:17:52.550 --> 01:17:52.560 align:start position:0%
see here as we add more routes this code
 

01:17:52.560 --> 01:17:55.189 align:start position:0%
see here as we add more routes this code
gets<01:17:53.280><c> more</c><01:17:53.489><c> complex</c><01:17:53.969><c> because</c><01:17:54.540><c> we</c><01:17:54.660><c> add</c><01:17:54.840><c> all</c><01:17:55.170><c> of</c>

01:17:55.189 --> 01:17:55.199 align:start position:0%
gets more complex because we add all of
 

01:17:55.199 --> 01:17:58.250 align:start position:0%
gets more complex because we add all of
them<01:17:55.530><c> in</c><01:17:55.770><c> a</c><01:17:55.920><c> linear</c><01:17:56.190><c> way</c><01:17:56.540><c> inside</c><01:17:57.540><c> this</c>

01:17:58.250 --> 01:17:58.260 align:start position:0%
them in a linear way inside this
 

01:17:58.260 --> 01:18:00.919 align:start position:0%
them in a linear way inside this
callback<01:17:58.650><c> function</c><01:17:59.250><c> so</c><01:18:00.120><c> instead</c><01:18:00.480><c> we</c><01:18:00.660><c> use</c><01:18:00.690><c> a</c>

01:18:00.919 --> 01:18:00.929 align:start position:0%
callback function so instead we use a
 

01:18:00.929 --> 01:18:03.800 align:start position:0%
callback function so instead we use a
framework<01:18:01.380><c> called</c><01:18:01.860><c> Express</c><01:18:02.699><c> which</c><01:18:03.420><c> gives</c><01:18:03.660><c> our</c>

01:18:03.800 --> 01:18:03.810 align:start position:0%
framework called Express which gives our
 

01:18:03.810 --> 01:18:06.290 align:start position:0%
framework called Express which gives our
application<01:18:04.380><c> a</c><01:18:04.530><c> clean</c><01:18:04.860><c> structure</c><01:18:05.429><c> to</c><01:18:05.880><c> handle</c>

01:18:06.290 --> 01:18:06.300 align:start position:0%
application a clean structure to handle
 

01:18:06.300 --> 01:18:09.680 align:start position:0%
application a clean structure to handle
various<01:18:06.960><c> routes</c><01:18:07.580><c> internally</c><01:18:08.580><c> the</c><01:18:09.179><c> Express</c>

01:18:09.680 --> 01:18:09.690 align:start position:0%
various routes internally the Express
 

01:18:09.690 --> 01:18:12.080 align:start position:0%
various routes internally the Express
framework<01:18:10.140><c> is</c><01:18:10.380><c> built</c><01:18:10.620><c> on</c><01:18:10.920><c> top</c><01:18:11.250><c> of</c><01:18:11.310><c> the</c><01:18:11.489><c> HTTP</c>

01:18:12.080 --> 01:18:12.090 align:start position:0%
framework is built on top of the HTTP
 

01:18:12.090 --> 01:18:15.080 align:start position:0%
framework is built on top of the HTTP
module<01:18:12.300><c> in</c><01:18:12.840><c> node</c>

