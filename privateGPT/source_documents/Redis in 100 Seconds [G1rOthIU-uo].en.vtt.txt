redis an in memory multi model database
famous for its sub millisecond latency
it was created in 2009 based on the idea
that a cache can also be a durable data
store
around this time apps like twitter were
growing exponentially and needed a way
to deliver data to their end users
faster than a relational database could
handle
redis which means remote dictionary
server was adopted by some of the most
heavily trafficked sites in the world
because it changed the database game by
creating a system where data is always
modified or read from the main computer
memory
as opposed to the much slower disk but
at the same time
it stores its data on the disk so it can
be reconstructed
as needed which means the database is
fully durable supporting things like
snapshots and backups every data point
in the database is a key
followed by one of many different data
structures like a string
list hash or stream so you can store
data naturally just like you would with
your favorite programming language as
opposed to squeezing it into a bunch of
tables or json documents
interacting with the database is handled
with a simple set of commands
like set followed by a key and value to
create data
then git followed by a key to read data
historically
redis has been described as a key value
store and is often used as a cache to
make relational databases faster at
scale
but here s where your mind is about to
be blown redis is perfectly suitable as
a primary database
and can dramatically reduce complexity
because making things go fast at scale
is the primary cause of complexity in
the first place with redis your database
is already fast
no need for a complex caching layer but
you might be wondering
how do i model complex relationships
today redis is what you would call
a multi model database supporting a
variety of different database paradigms
with
add on modules that you can opt into as
needed if your data contains
relationships bring in redis graph
and query it with cipher or use the json
module to structure your data as a
hierarchy
just like a document oriented database
then use the search module
to turn your database into a full text
search engine and it even has modules
for ai workloads time series data
and more the quickest way to get started
is the free tier on redis enterprise
cloud that ll give you a free database
to play around with and you can attach
one extra module to it then you can
connect to it with the redis cli or with
the redis insight tool which contains an
interactive dashboard to manage your
data this has been redis in 100 seconds
but what do you guys think would you use
redis as your primary database let me
know why or why not
in the comments thanks for watching and
