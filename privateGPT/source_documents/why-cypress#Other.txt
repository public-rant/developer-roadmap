   #[https://docs.cypress.io/guides/overview/why-cypress]alternate
   [https://docs.cypress.io/guides/overview/why-cypress]alternate
   [https://docs.cypress.io/opensearch.xml]Cypress Documentation

   IFRAME:
   [https://www.googletagmanager.com/ns.html?id=GTM-KNKBWLD]https://www.go
   ogletagmanager.com/ns.html?id=GTM-KNKBWLD

   [https://docs.cypress.io/guides/overview/why-cypress#docusaurus_skipToC
   ontent_fallback]Skip to main content

   (BUTTON) [https://docs.cypress.io/guides/overview/why-cypress]
   Cypress Logo Cypress Logo
   [https://docs.cypress.io/guides/overview/why-cypress]Guides[https://doc
   s.cypress.io/api/table-of-contents]API[https://docs.cypress.io/plugins]
   Plugins[https://docs.cypress.io/examples/recipes]Examples[https://docs.
   cypress.io/faq/questions/using-cypress-faq]FAQ[https://learn.cypress.io
   /]Learn
   [https://github.com/cypress-io/cypress-documentation][https://on.cypres
   s.io/discord]
   (BUTTON)
   (BUTTON) Search
   (BUTTON)

     * [https://docs.cypress.io/guides/overview/why-cypress]Overview
          + [https://docs.cypress.io/guides/overview/why-cypress]Why
            Cypress?
          + [https://docs.cypress.io/guides/overview/key-differences]Key
            Differences
     * [https://docs.cypress.io/guides/getting-started/installing-cypress]
       Getting Started
     * [https://docs.cypress.io/guides/end-to-end-testing/writing-your-fir
       st-end-to-end-test]End-to-End Testing
     * [https://docs.cypress.io/guides/component-testing/overview]Componen
       t Testing
     * [https://docs.cypress.io/guides/core-concepts/introduction-to-cypre
       ss]Core Concepts
     * [https://docs.cypress.io/guides/cloud/introduction]Cypress Cloud
     * [https://docs.cypress.io/guides/guides/command-line]Guides
     * [https://docs.cypress.io/guides/continuous-integration/introduction
       ]Continuous Integration
     * [https://docs.cypress.io/guides/tooling/IDE-integration]Tooling
     * [https://docs.cypress.io/guides/references/advanced-installation]Re
       ferences

     * [https://docs.cypress.io/]
     * Overview

     Why Cypress?
   (BUTTON) On this page

Why Cypress?

   info

What you'll
learn[https://docs.cypress.io/guides/overview/why-cypress#What-youll-learn]​

     * What Cypress is and why you should use it
     * Our mission, and what we believe in
     * Key Cypress features
     * Types of tests Cypress is designed for

   IFRAME:
   [https://youtube.com/embed/LcGHiFnBh3Y]https://youtube.com/embed/LcGHiF
   nBh3Y

In a
nutshell[https://docs.cypress.io/guides/overview/why-cypress#In-a-nutshell]​

   Cypress is a next generation front end testing tool built for the
   modern web. We address the key pain points developers and QA engineers
   face when testing modern applications.

   We make it possible to:
     * [https://docs.cypress.io/guides/overview/why-cypress#Setting-up-tes
       ts]Set up tests
     * [https://docs.cypress.io/guides/overview/why-cypress#Writing-tests]
       Write tests
     * [https://docs.cypress.io/guides/overview/why-cypress#Running-tests]
       Run tests
     * [https://docs.cypress.io/guides/overview/why-cypress#Debugging-test
       s]Debug Tests

   Cypress is most often compared to Selenium; however Cypress is both
   fundamentally and architecturally different. Cypress is not constrained
   by the same restrictions as Selenium.

   This enables you to write faster, easier and more reliable tests.

Who uses
Cypress?[https://docs.cypress.io/guides/overview/why-cypress#Who-uses-Cypress
]​

   Our users are typically developers or QA engineers building web
   applications using modern JavaScript frameworks.

   Cypress enables you to write all types of tests:
     * [https://docs.cypress.io/guides/end-to-end-testing/writing-your-fir
       st-end-to-end-test]End-to-end tests
     * [https://docs.cypress.io/guides/component-testing/overview]Componen
       t tests
     * Integration tests
     * Unit tests

   Cypress can test anything that runs in a browser.

Cypress
ecosystem[https://docs.cypress.io/guides/overview/why-cypress#Cypress-ecosyst
em]​

   Cypress consists of a free, [https://github.com/cypress-io/cypress]open
   source,
   [https://docs.cypress.io/guides/getting-started/installing-cypress]loca
   lly installed application and Cypress Cloud for
   [https://docs.cypress.io/guides/cloud/introduction]recording your
   tests.
     * First: Cypress helps you set up and start writing tests every day
       while you build your application locally. TDD at its best!
     * Later: After building up a suite of tests and
       [https://docs.cypress.io/guides/continuous-integration/introduction
       ]integrating Cypress with your CI Provider,
       [https://docs.cypress.io/guides/cloud/introduction]Cypress Cloud
       can record your test runs. You'll never have to wonder: Why did
       this fail?

Our mission[https://docs.cypress.io/guides/overview/why-cypress#Our-mission]​

   Our mission is to build a thriving, open source ecosystem that enhances
   productivity, makes testing an enjoyable experience, and generates
   developer happiness. We hold ourselves accountable to champion a
   testing process that actually works.

   We believe our documentation should be approachable. This means
   enabling our readers to understand fully not just the what but the why
   as well.

   We want to help developers build a new generation of modern
   applications faster, better, and without the stress and anxiety
   associated with managing tests. We aim to elevate the art of software
   development by leveraging test results to generate actionable insights
   for long-term stability by proactively identifying areas for
   improvement.

   We know that in order for us to be successful we must enable, nurture,
   and foster an ecosystem that thrives on open source. Every line of test
   code is an investment in your codebase, it will never be coupled to us
   as a paid service or company. Tests will be able to run and work
   independently, always.

   We believe testing needs a lot of ❤️ and we are here to build a tool, a
   service, and a community that everyone can learn and benefit from.
   We're solving the hardest pain points shared by every developer working
   on the web. We believe in this mission and hope that you will join us
   to make Cypress a lasting ecosystem that makes everyone happy.

Features[https://docs.cypress.io/guides/overview/why-cypress#Features]​

   Cypress comes fully baked, batteries included. Here is a list of things
   it can do that no other testing framework can:
     * Time Travel: Cypress takes snapshots as your tests run. Hover over
       commands in the
       [https://docs.cypress.io/guides/core-concepts/cypress-app#Command-L
       og]Command Log to see exactly what happened at each step.
     * Debuggability: Stop guessing why your tests are failing.
       [https://docs.cypress.io/guides/guides/debugging]Debug directly
       from familiar tools like Developer Tools. Our readable errors and
       stack traces make debugging lightning fast.
     * Automatic Waiting: Never add waits or sleeps to your tests. Cypress
       [https://docs.cypress.io/guides/core-concepts/introduction-to-cypre
       ss#Cypress-is-Not-Like-jQuery]automatically waits for commands and
       assertions before moving on. No more async hell.
     * Spies, Stubs, and Clocks: Verify and
       [https://docs.cypress.io/guides/guides/stubs-spies-and-clocks]contr
       ol the behavior of functions, server responses, or timers. The same
       functionality you love from unit testing is right at your
       fingertips.
     * Network Traffic Control: Easily
       [https://docs.cypress.io/guides/guides/network-requests]control,
       stub, and test edge cases without involving your server. You can
       stub network traffic however you like.
     * Consistent Results: Our architecture doesn't use Selenium or
       WebDriver. Say hello to fast, consistent and reliable tests that
       are flake-free.
     * Screenshots and Videos: View screenshots taken automatically on
       failure, or videos of your entire test suite when run from the CLI.
       Record to
       [https://docs.cypress.io/guides/cloud/introduction]Cypress Cloud to
       store them with your test results for zero-configuration debugging.
     * Cross Browser Testing: Run tests within Firefox and Chrome-family
       browsers (including Edge and Electron) locally and
       [https://docs.cypress.io/guides/guides/cross-browser-testing]optima
       lly in a Continuous Integration pipeline.
     * Smart Orchestration: Once you're set up to record to Cypress Cloud,
       easily
       [https://docs.cypress.io/guides/cloud/smart-orchestration/paralleli
       zation]parallelize your test suite, rerun failed specs first with
       [https://docs.cypress.io/guides/cloud/smart-orchestration/spec-prio
       ritization]Spec Prioritization, and cancel test runs on failures
       with
       [https://docs.cypress.io/guides/cloud/smart-orchestration/run-cance
       llation]Auto Cancellation for tight feedback loops.
     * Flake Detection: Discover and diagnose unreliable tests with
       Cypress Cloud's
       [https://docs.cypress.io/guides/cloud/flaky-test-management]Flaky
       test management.

Setting up
tests[https://docs.cypress.io/guides/overview/why-cypress#Setting-up-tests]​

   There are no servers, drivers, or any other dependencies to install or
   configure. You can write your first passing test in 60 seconds.

Writing
tests[https://docs.cypress.io/guides/overview/why-cypress#Writing-tests]​

   Tests written in Cypress are meant to be easy to read and understand.
   Our API comes fully baked, on top of tools you are familiar with
   already.

Running
tests[https://docs.cypress.io/guides/overview/why-cypress#Running-tests]​

   Cypress runs as fast as your browser can render content. You can watch
   tests run in real time as you develop your applications. TDD FTW!

Debugging
tests[https://docs.cypress.io/guides/overview/why-cypress#Debugging-tests]​

   Readable error messages help you to debug quickly. You also have access
   to all the developer tools you know and love.

Test types[https://docs.cypress.io/guides/overview/why-cypress#Test-types]​

   Cypress can be used to write several different types of tests. This can
   provide even more confidence that your application under test is
   working as intended.

End-to-end[https://docs.cypress.io/guides/overview/why-cypress#End-to-end]​

   Cypress was originally designed to run end-to-end (E2E) tests on
   anything that runs in a browser. A typical E2E test visits the
   application in a browser and performs actions via the UI just like a
   real user would.
it('adds todos', () => {
  cy.visit('https://example.cypress.io/')
  cy.get('[data-testid="new-todo"]')
    .type('write code{enter}')
    .type('write tests{enter}')
  // confirm the application is showing two items
  cy.get('[data-testid="todos"]').should('have.length', 2)
})

   (BUTTON)

Component[https://docs.cypress.io/guides/overview/why-cypress#Component]​

   You can also use Cypress to mount components from supported web
   frameworks and execute
   [https://docs.cypress.io/guides/component-testing/overview]component
   tests.
import TodoList from './components/TodoList'
it('contains the correct number of todos', () => {
  const todos = [
    { text: 'Buy milk', id: 1 },
    { text: 'Learn Component Testing', id: 2 },
  ]
  cy.mount(<TodoList todos={todos} />)
  // the component starts running like a mini web app
  cy.get('[data-testid="todos"]').should('have.length', todos.length)
})

   (BUTTON)

API[https://docs.cypress.io/guides/overview/why-cypress#API]​

   Cypress can perform arbitrary HTTP calls, thus you can use it for API
   testing.
it('adds a todo', () => {
  cy.request({
    url: '/todos',
    method: 'POST',
    body: {
      title: 'Write REST API',
    },
  })
    .its('body')
    .should('deep.contain', {
      title: 'Write REST API',
      completed: false,
    })
})

   (BUTTON)

Other[https://docs.cypress.io/guides/overview/why-cypress#Other]​

   Finally, through a large number of
   [https://docs.cypress.io/plugins]official and 3rd party plugins you can
   write Cypress [https://github.com/component-driven/cypress-axe]a11y,
   [https://docs.cypress.io/plugins#Visual%20Testing]visual,
   [https://docs.cypress.io/faq/questions/using-cypress-faq#How-do-I-check
   -that-an-email-was-sent-out]email and other types of tests.

Cypress in the Real
World[https://docs.cypress.io/guides/overview/why-cypress#Cypress-in-the-Real
-World]​

   Cypress Real World App

   Cypress makes it quick and easy to start testing, and as you begin to
   test your app, you'll often wonder if you're using best practices or
   scalable strategies.

   To guide the way, the Cypress team has created the
   [https://github.com/cypress-io/cypress-realworld-app]Real World App
   (RWA), a full stack example application that demonstrates testing with
   Cypress in practical and realistic scenarios.

   The RWA achieves full
   [https://docs.cypress.io/guides/tooling/code-coverage]code-coverage
   with end-to-end tests
   [https://docs.cypress.io/guides/guides/cross-browser-testing]across
   multiple browsers and
   [https://docs.cypress.io/api/commands/viewport]device sizes, but also
   includes [https://docs.cypress.io/guides/tooling/visual-testing]visual
   regression tests, API tests, unit tests, and runs them all in an
   [https://cloud.cypress.io/projects/7s5okt]efficient CI pipeline. Use
   the RWA to learn, experiment, tinker, and practice web application
   testing with Cypress.

   The app is bundled with everything you need,
   [https://github.com/cypress-io/cypress-realworld-app]just clone the
   repository and start testing.

   [https://github.com/cypress-io/cypress-documentation/tree/main/docs/gui
   des/overview/why-cypress.mdx]Edit this page
     * [https://docs.cypress.io/guides/overview/why-cypress#In-a-nutshell]
       In a nutshell
     * [https://docs.cypress.io/guides/overview/why-cypress#Who-uses-Cypre
       ss]Who uses Cypress?
     * [https://docs.cypress.io/guides/overview/why-cypress#Cypress-ecosys
       tem]Cypress ecosystem
     * [https://docs.cypress.io/guides/overview/why-cypress#Our-mission]Ou
       r mission
     * [https://docs.cypress.io/guides/overview/why-cypress#Features]Featu
       res
          + [https://docs.cypress.io/guides/overview/why-cypress#Setting-u
            p-tests]Setting up tests
          + [https://docs.cypress.io/guides/overview/why-cypress#Writing-t
            ests]Writing tests
          + [https://docs.cypress.io/guides/overview/why-cypress#Running-t
            ests]Running tests
          + [https://docs.cypress.io/guides/overview/why-cypress#Debugging
            -tests]Debugging tests
     * [https://docs.cypress.io/guides/overview/why-cypress#Test-types]Tes
       t types
          + [https://docs.cypress.io/guides/overview/why-cypress#End-to-en
            d]End-to-end
          + [https://docs.cypress.io/guides/overview/why-cypress#Component
            ]Component
          + [https://docs.cypress.io/guides/overview/why-cypress#API]API
          + [https://docs.cypress.io/guides/overview/why-cypress#Other]Oth
            er
     * [https://docs.cypress.io/guides/overview/why-cypress#Cypress-in-the
       -Real-World]Cypress in the Real World

   Learn
     * [https://github.com/cypress-io/cypress-realworld-app]Real World App
     * [https://learn.cypress.io/]Real World Testing
     * [https://www.youtube.com/channel/UC-EOsTo2l2x39e4JmSaWNRQ]YouTube

   Community
     * [https://github.com/cypress-io/cypress/discussions]GitHub
       Discussions
     * [https://on.cypress.io/discord]Discord
     * [https://twitter.com/Cypress_io]Twitter

   Solutions
     * [https://www.cypress.io/features]Cypress App
     * [https://www.cypress.io/cloud]Cypress Cloud
     * [https://migrator.cypress.io/]Cypress Migrator

   Company
     * [https://www.cypress.io/about-us]About
     * [https://www.cypress.io/blog]Cypress Blog
     * [https://www.cypress.io/careers]Careers
     * [https://www.cypress.io/support]Support

   © 2023 Cypress.io. All rights reserved.
