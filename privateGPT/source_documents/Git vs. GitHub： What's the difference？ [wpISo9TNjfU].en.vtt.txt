What s the nbsp difference between Git and GitHub or GitLab
but before I do please hit that Subscribe button
Let s say you work for a media streaming company
So you want to be able to be able to play music nbsp of all sorts of genres on a device
How do you work with that team of developers
on the same code base or project without conflicting
So what is Git right
That might not mean a whole lot to you right now but we ll jump into nbsp what exactly that means
Or GitLab
So where Git is actually the underlying nbsp system that runs on your local machine nbsp nbsp
or hosted via the web
You nbsp may know GitHub or GitLab as a very diverse community open source community
So let s talk about some of the benefits and and aspects
So first of all it allows you to track your changes
Kind of going nbsp along with that it s a historical backup nbsp using
So it s it s kind of like a Save as nbsp button
You basically can keep a previous version and revert to it if you need to
So if you introduce a bug or mess something up
and revert those changes
So maybe nbsp one of the biggest benefits that Git and GitHub allow
So like we were talking about over here
and then merge their changes in together to nbsp make progress on a project
Next it s also very flexible
or Git or GitHub can be used as part of your nbsp DevOps flows
and your project and actually have it be part of an automated test
So that s a really nbsp neat aspect it s very flexible
versus GitHub is on the web right it s a website and nbsp that s how you interact with GitHub or GitLab nbsp nbsp
about Git and GitHub or GitLab is that it s trunk based development
So you have this main you can think of nbsp main code
make some changes and then merge your code back into that main branch
makes some changes and then nbsp merges back into that main branch
All right let s dive into nbsp our example and see what exactly this looks like
So repository
It s a place to nbsp store your code and your changes to code
And at the same nbsp time let s say over here that I nbsp am working
So how do I do that
remember our trunk based development
So that s where I m going to be making my nbsp changes to the code base
Well I m nbsp a huge Bluegrass fan OK
So down here let s say that I have my application
So this nbsp is where I m going to actually be making changes
Great
say commit
and then once I m happy there everything s committed
back over to our cloud hosted repo in GitHub
Perfect
So over here my co worker Greg
and now he happens to be making these changes before nbsp I pushed up my Bluegrass changes back to the
So he doesn t have my changes yet so when he clones down to his local machine
He s a huge Rock fan nbsp OK
he s going to make the home screen feature nbsp Rock music
and then he nbsp commits them back to what we call Greg branch
and push them back to the main branch
Well he ll actually need to pull and merge whatever is in the main branch
So now nbsp he has to pull those down into his Greg branch and merge them
There is what s nbsp called a merge conflict that happens right here right
So there s a conflict that he needs to resolve there
Like any good co worker he compromises right
So he makes those changes in his branch
So the next step he needs to take is
You may have heard folks talk about nbsp a P R right That s what a pull request is nbsp nbsp
a way for him to say nbsp Hey these are the changes that I want to make
so that nbsp anyone on the development team like Nathan
And I can approve the pull request and then get those changes nbsp merged into the main branch
Bluegrass and Rock both featured on the main page Awesome
how is it related to GitHub and GitLab
but nbsp as a team of developers
If you have questions please drop us a line nbsp below
And don t forget
which are free nbsp browser based interactive Kubernetes labs
