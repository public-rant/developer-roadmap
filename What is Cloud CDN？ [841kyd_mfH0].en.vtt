WEBVTT



00:00:00.160 --> 00:00:02.310 align:start position:0%
 
welcome<00:00:00.640><c> to</c><00:00:00.880><c> google</c><00:00:01.199><c> cloud</c><00:00:01.599><c> drawing</c><00:00:02.000><c> board</c>

00:00:02.310 --> 00:00:02.320 align:start position:0%
welcome to google cloud drawing board
 

00:00:02.320 --> 00:00:03.830 align:start position:0%
welcome to google cloud drawing board
where<00:00:02.480><c> we</c><00:00:02.720><c> doodle</c><00:00:03.040><c> our</c><00:00:03.199><c> way</c><00:00:03.520><c> through</c><00:00:03.760><c> the</c>

00:00:03.830 --> 00:00:03.840 align:start position:0%
where we doodle our way through the
 

00:00:03.840 --> 00:00:04.550 align:start position:0%
where we doodle our way through the
cloud

00:00:04.550 --> 00:00:04.560 align:start position:0%
cloud
 

00:00:04.560 --> 00:00:07.829 align:start position:0%
cloud
today's<00:00:05.040><c> topic</c><00:00:05.600><c> what</c><00:00:06.000><c> is</c><00:00:06.399><c> cloud</c><00:00:06.879><c> cdn</c>

00:00:07.829 --> 00:00:07.839 align:start position:0%
today's topic what is cloud cdn
 

00:00:07.839 --> 00:00:09.669 align:start position:0%
today's topic what is cloud cdn
this<00:00:08.080><c> video</c><00:00:08.320><c> is</c><00:00:08.400><c> divided</c><00:00:08.800><c> into</c><00:00:09.040><c> chapters</c>

00:00:09.669 --> 00:00:09.679 align:start position:0%
this video is divided into chapters
 

00:00:09.679 --> 00:00:11.589 align:start position:0%
this video is divided into chapters
watch<00:00:09.920><c> the</c><00:00:10.000><c> full</c><00:00:10.240><c> video</c><00:00:10.559><c> or</c><00:00:10.719><c> skip</c><00:00:11.040><c> ahead</c><00:00:11.280><c> to</c>

00:00:11.589 --> 00:00:11.599 align:start position:0%
watch the full video or skip ahead to
 

00:00:11.599 --> 00:00:13.430 align:start position:0%
watch the full video or skip ahead to
any<00:00:11.920><c> section</c><00:00:12.240><c> of</c><00:00:12.400><c> your</c><00:00:12.639><c> choice</c>

00:00:13.430 --> 00:00:13.440 align:start position:0%
any section of your choice
 

00:00:13.440 --> 00:00:16.310 align:start position:0%
any section of your choice
whatever<00:00:14.080><c> your</c><00:00:14.400><c> app</c><00:00:14.719><c> or</c><00:00:14.960><c> website</c><00:00:15.519><c> is</c><00:00:15.839><c> chances</c>

00:00:16.310 --> 00:00:16.320 align:start position:0%
whatever your app or website is chances
 

00:00:16.320 --> 00:00:18.470 align:start position:0%
whatever your app or website is chances
are<00:00:16.560><c> that</c><00:00:16.720><c> your</c><00:00:16.960><c> users</c><00:00:17.520><c> are</c><00:00:17.680><c> distributed</c>

00:00:18.470 --> 00:00:18.480 align:start position:0%
are that your users are distributed
 

00:00:18.480 --> 00:00:20.470 align:start position:0%
are that your users are distributed
across<00:00:18.880><c> different</c><00:00:19.199><c> locations</c><00:00:19.840><c> and</c><00:00:20.000><c> are</c><00:00:20.160><c> not</c>

00:00:20.470 --> 00:00:20.480 align:start position:0%
across different locations and are not
 

00:00:20.480 --> 00:00:22.550 align:start position:0%
across different locations and are not
necessarily<00:00:21.199><c> close</c><00:00:21.439><c> to</c><00:00:21.600><c> where</c><00:00:21.760><c> your</c><00:00:22.000><c> servers</c>

00:00:22.550 --> 00:00:22.560 align:start position:0%
necessarily close to where your servers
 

00:00:22.560 --> 00:00:23.029 align:start position:0%
necessarily close to where your servers
are

00:00:23.029 --> 00:00:23.039 align:start position:0%
are
 

00:00:23.039 --> 00:00:25.109 align:start position:0%
are
this<00:00:23.279><c> means</c><00:00:23.600><c> the</c><00:00:23.760><c> requests</c><00:00:24.320><c> travel</c><00:00:24.720><c> across</c>

00:00:25.109 --> 00:00:25.119 align:start position:0%
this means the requests travel across
 

00:00:25.119 --> 00:00:26.310 align:start position:0%
this means the requests travel across
the<00:00:25.199><c> public</c><00:00:25.599><c> internet</c>

00:00:26.310 --> 00:00:26.320 align:start position:0%
the public internet
 

00:00:26.320 --> 00:00:28.390 align:start position:0%
the public internet
through<00:00:26.640><c> long</c><00:00:26.960><c> distances</c><00:00:27.840><c> leading</c><00:00:28.160><c> to</c>

00:00:28.390 --> 00:00:28.400 align:start position:0%
through long distances leading to
 

00:00:28.400 --> 00:00:30.070 align:start position:0%
through long distances leading to
inconsistent<00:00:29.199><c> and</c><00:00:29.439><c> frustrating</c>

00:00:30.070 --> 00:00:30.080 align:start position:0%
inconsistent and frustrating
 

00:00:30.080 --> 00:00:33.350 align:start position:0%
inconsistent and frustrating
user<00:00:30.480><c> experience</c><00:00:31.679><c> that's</c><00:00:32.000><c> where</c><00:00:32.399><c> cloud</c><00:00:32.800><c> cdn</c>

00:00:33.350 --> 00:00:33.360 align:start position:0%
user experience that's where cloud cdn
 

00:00:33.360 --> 00:00:34.229 align:start position:0%
user experience that's where cloud cdn
comes<00:00:33.680><c> in</c>

00:00:34.229 --> 00:00:34.239 align:start position:0%
comes in
 

00:00:34.239 --> 00:00:36.709 align:start position:0%
comes in
cloud<00:00:34.559><c> cdn</c><00:00:35.200><c> is</c><00:00:35.360><c> a</c><00:00:35.440><c> content</c><00:00:35.920><c> delivery</c><00:00:36.320><c> network</c>

00:00:36.709 --> 00:00:36.719 align:start position:0%
cloud cdn is a content delivery network
 

00:00:36.719 --> 00:00:38.310 align:start position:0%
cloud cdn is a content delivery network
that<00:00:37.040><c> accelerates</c><00:00:37.760><c> your</c><00:00:37.920><c> web</c>

00:00:38.310 --> 00:00:38.320 align:start position:0%
that accelerates your web
 

00:00:38.320 --> 00:00:40.709 align:start position:0%
that accelerates your web
and<00:00:38.480><c> video</c><00:00:38.800><c> content</c><00:00:39.280><c> delivery</c><00:00:40.000><c> by</c><00:00:40.239><c> using</c>

00:00:40.709 --> 00:00:40.719 align:start position:0%
and video content delivery by using
 

00:00:40.719 --> 00:00:42.790 align:start position:0%
and video content delivery by using
google's<00:00:41.280><c> global</c><00:00:41.840><c> edge</c><00:00:42.160><c> network</c>

00:00:42.790 --> 00:00:42.800 align:start position:0%
google's global edge network
 

00:00:42.800 --> 00:00:45.510 align:start position:0%
google's global edge network
to<00:00:43.040><c> bring</c><00:00:43.360><c> content</c><00:00:43.840><c> as</c><00:00:44.160><c> close</c><00:00:44.480><c> to</c><00:00:44.559><c> the</c><00:00:44.719><c> user</c><00:00:45.200><c> as</c>

00:00:45.510 --> 00:00:45.520 align:start position:0%
to bring content as close to the user as
 

00:00:45.520 --> 00:00:46.470 align:start position:0%
to bring content as close to the user as
possible

00:00:46.470 --> 00:00:46.480 align:start position:0%
possible
 

00:00:46.480 --> 00:00:49.670 align:start position:0%
possible
as<00:00:46.640><c> a</c><00:00:46.800><c> result</c><00:00:47.360><c> the</c><00:00:47.600><c> latency</c><00:00:48.320><c> cost</c><00:00:48.879><c> and</c><00:00:49.200><c> load</c><00:00:49.520><c> on</c>

00:00:49.670 --> 00:00:49.680 align:start position:0%
as a result the latency cost and load on
 

00:00:49.680 --> 00:00:50.869 align:start position:0%
as a result the latency cost and load on
your<00:00:49.920><c> backend</c><00:00:50.320><c> servers</c>

00:00:50.869 --> 00:00:50.879 align:start position:0%
your backend servers
 

00:00:50.879 --> 00:00:53.590 align:start position:0%
your backend servers
is<00:00:51.039><c> reduced</c><00:00:51.840><c> making</c><00:00:52.160><c> it</c><00:00:52.320><c> easier</c><00:00:52.719><c> to</c><00:00:52.960><c> scale</c><00:00:53.360><c> to</c>

00:00:53.590 --> 00:00:53.600 align:start position:0%
is reduced making it easier to scale to
 

00:00:53.600 --> 00:00:54.950 align:start position:0%
is reduced making it easier to scale to
millions<00:00:54.079><c> of</c><00:00:54.239><c> users</c>

00:00:54.950 --> 00:00:54.960 align:start position:0%
millions of users
 

00:00:54.960 --> 00:00:56.790 align:start position:0%
millions of users
let's<00:00:55.199><c> consider</c><00:00:55.680><c> an</c><00:00:55.840><c> app</c><00:00:56.000><c> to</c><00:00:56.160><c> understand</c><00:00:56.640><c> how</c>

00:00:56.790 --> 00:00:56.800 align:start position:0%
let's consider an app to understand how
 

00:00:56.800 --> 00:00:59.349 align:start position:0%
let's consider an app to understand how
this<00:00:57.039><c> works</c><00:00:57.760><c> when</c><00:00:58.000><c> a</c><00:00:58.160><c> user</c><00:00:58.480><c> makes</c><00:00:58.800><c> a</c><00:00:58.879><c> request</c>

00:00:59.349 --> 00:00:59.359 align:start position:0%
this works when a user makes a request
 

00:00:59.359 --> 00:01:01.029 align:start position:0%
this works when a user makes a request
to<00:00:59.440><c> your</c><00:00:59.680><c> website</c><00:01:00.239><c> or</c><00:01:00.480><c> app</c>

00:01:01.029 --> 00:01:01.039 align:start position:0%
to your website or app
 

00:01:01.039 --> 00:01:03.189 align:start position:0%
to your website or app
the<00:01:01.199><c> request</c><00:01:01.680><c> is</c><00:01:01.840><c> routed</c><00:01:02.160><c> to</c><00:01:02.320><c> the</c><00:01:02.480><c> closest</c>

00:01:03.189 --> 00:01:03.199 align:start position:0%
the request is routed to the closest
 

00:01:03.199 --> 00:01:04.310 align:start position:0%
the request is routed to the closest
google<00:01:03.600><c> edge</c><00:01:03.920><c> node</c>

00:01:04.310 --> 00:01:04.320 align:start position:0%
google edge node
 

00:01:04.320 --> 00:01:07.190 align:start position:0%
google edge node
we<00:01:04.479><c> have</c><00:01:04.720><c> over</c><00:01:04.960><c> 120</c><00:01:05.760><c> of</c><00:01:05.840><c> these</c><00:01:06.479><c> for</c><00:01:06.720><c> fast</c><00:01:07.040><c> and</c>

00:01:07.190 --> 00:01:07.200 align:start position:0%
we have over 120 of these for fast and
 

00:01:07.200 --> 00:01:08.950 align:start position:0%
we have over 120 of these for fast and
reliable<00:01:07.760><c> traffic</c><00:01:08.159><c> flow</c>

00:01:08.950 --> 00:01:08.960 align:start position:0%
reliable traffic flow
 

00:01:08.960 --> 00:01:12.070 align:start position:0%
reliable traffic flow
then<00:01:09.439><c> to</c><00:01:09.600><c> the</c><00:01:09.760><c> global</c><00:01:10.159><c> https</c><00:01:10.960><c> load</c><00:01:11.200><c> balancer</c>

00:01:12.070 --> 00:01:12.080 align:start position:0%
then to the global https load balancer
 

00:01:12.080 --> 00:01:14.950 align:start position:0%
then to the global https load balancer
to<00:01:12.320><c> the</c><00:01:12.479><c> backend</c><00:01:13.119><c> or</c><00:01:13.280><c> the</c><00:01:13.439><c> origin</c><00:01:14.320><c> from</c><00:01:14.560><c> there</c>

00:01:14.950 --> 00:01:14.960 align:start position:0%
to the backend or the origin from there
 

00:01:14.960 --> 00:01:16.070 align:start position:0%
to the backend or the origin from there
with<00:01:15.200><c> cloud</c><00:01:15.520><c> cdn</c>

00:01:16.070 --> 00:01:16.080 align:start position:0%
with cloud cdn
 

00:01:16.080 --> 00:01:18.630 align:start position:0%
with cloud cdn
enabled<00:01:16.799><c> we'll</c><00:01:17.040><c> serve</c><00:01:17.360><c> the</c><00:01:17.520><c> content</c><00:01:18.080><c> directly</c>

00:01:18.630 --> 00:01:18.640 align:start position:0%
enabled we'll serve the content directly
 

00:01:18.640 --> 00:01:19.670 align:start position:0%
enabled we'll serve the content directly
from<00:01:18.880><c> cache</c>

00:01:19.670 --> 00:01:19.680 align:start position:0%
from cache
 

00:01:19.680 --> 00:01:21.830 align:start position:0%
from cache
cache<00:01:20.080><c> is</c><00:01:20.240><c> nothing</c><00:01:20.560><c> but</c><00:01:20.799><c> a</c><00:01:20.960><c> group</c><00:01:21.200><c> of</c><00:01:21.360><c> servers</c>

00:01:21.830 --> 00:01:21.840 align:start position:0%
cache is nothing but a group of servers
 

00:01:21.840 --> 00:01:22.710 align:start position:0%
cache is nothing but a group of servers
that<00:01:22.080><c> store</c>

00:01:22.710 --> 00:01:22.720 align:start position:0%
that store
 

00:01:22.720 --> 00:01:24.950 align:start position:0%
that store
and<00:01:22.880><c> manage</c><00:01:23.280><c> cacheable</c><00:01:23.840><c> content</c><00:01:24.479><c> so</c><00:01:24.720><c> that</c>

00:01:24.950 --> 00:01:24.960 align:start position:0%
and manage cacheable content so that
 

00:01:24.960 --> 00:01:26.789 align:start position:0%
and manage cacheable content so that
future<00:01:25.360><c> requests</c><00:01:25.840><c> for</c><00:01:26.000><c> that</c><00:01:26.240><c> content</c>

00:01:26.789 --> 00:01:26.799 align:start position:0%
future requests for that content
 

00:01:26.799 --> 00:01:29.670 align:start position:0%
future requests for that content
can<00:01:27.040><c> be</c><00:01:27.280><c> served</c><00:01:27.759><c> faster</c><00:01:28.640><c> the</c><00:01:28.799><c> cached</c><00:01:29.200><c> content</c>

00:01:29.670 --> 00:01:29.680 align:start position:0%
can be served faster the cached content
 

00:01:29.680 --> 00:01:31.830 align:start position:0%
can be served faster the cached content
is<00:01:29.840><c> a</c><00:01:30.000><c> copy</c><00:01:30.400><c> of</c><00:01:30.640><c> cachable</c><00:01:31.200><c> content</c><00:01:31.600><c> that</c><00:01:31.759><c> is</c>

00:01:31.830 --> 00:01:31.840 align:start position:0%
is a copy of cachable content that is
 

00:01:31.840 --> 00:01:33.910 align:start position:0%
is a copy of cachable content that is
stored<00:01:32.240><c> on</c><00:01:32.400><c> your</c><00:01:32.640><c> origin</c><00:01:33.200><c> servers</c>

00:01:33.910 --> 00:01:33.920 align:start position:0%
stored on your origin servers
 

00:01:33.920 --> 00:01:35.910 align:start position:0%
stored on your origin servers
typically<00:01:34.479><c> including</c><00:01:34.960><c> web</c><00:01:35.280><c> assets</c><00:01:35.680><c> like</c>

00:01:35.910 --> 00:01:35.920 align:start position:0%
typically including web assets like
 

00:01:35.920 --> 00:01:37.590 align:start position:0%
typically including web assets like
javascript<00:01:36.720><c> css</c>

00:01:37.590 --> 00:01:37.600 align:start position:0%
javascript css
 

00:01:37.600 --> 00:01:40.550 align:start position:0%
javascript css
images<00:01:38.240><c> and</c><00:01:38.479><c> videos</c><00:01:39.439><c> cloud</c><00:01:39.759><c> cdn</c><00:01:40.240><c> can</c>

00:01:40.550 --> 00:01:40.560 align:start position:0%
images and videos cloud cdn can
 

00:01:40.560 --> 00:01:42.550 align:start position:0%
images and videos cloud cdn can
automatically<00:01:41.280><c> cache</c><00:01:41.600><c> this</c><00:01:41.840><c> content</c>

00:01:42.550 --> 00:01:42.560 align:start position:0%
automatically cache this content
 

00:01:42.560 --> 00:01:44.789 align:start position:0%
automatically cache this content
with<00:01:42.799><c> just</c><00:01:43.040><c> a</c><00:01:43.119><c> single</c><00:01:43.600><c> checkbox</c><00:01:44.320><c> using</c><00:01:44.640><c> the</c>

00:01:44.789 --> 00:01:44.799 align:start position:0%
with just a single checkbox using the
 

00:01:44.799 --> 00:01:46.789 align:start position:0%
with just a single checkbox using the
recommended<00:01:45.520><c> cache</c><00:01:45.840><c> modes</c><00:01:46.240><c> to</c><00:01:46.399><c> cache</c>

00:01:46.789 --> 00:01:46.799 align:start position:0%
recommended cache modes to cache
 

00:01:46.799 --> 00:01:48.950 align:start position:0%
recommended cache modes to cache
all<00:01:47.119><c> static</c><00:01:47.600><c> content</c><00:01:48.240><c> if</c><00:01:48.399><c> you</c><00:01:48.479><c> need</c><00:01:48.720><c> more</c>

00:01:48.950 --> 00:01:48.960 align:start position:0%
all static content if you need more
 

00:01:48.960 --> 00:01:51.190 align:start position:0%
all static content if you need more
control<00:01:49.600><c> you</c><00:01:49.759><c> can</c><00:01:49.920><c> direct</c><00:01:50.320><c> cloud</c><00:01:50.560><c> cdn</c>

00:01:51.190 --> 00:01:51.200 align:start position:0%
control you can direct cloud cdn
 

00:01:51.200 --> 00:01:53.270 align:start position:0%
control you can direct cloud cdn
by<00:01:51.439><c> setting</c><00:01:51.840><c> http</c><00:01:52.479><c> headers</c><00:01:52.960><c> on</c><00:01:53.040><c> your</c>

00:01:53.270 --> 00:01:53.280 align:start position:0%
by setting http headers on your
 

00:01:53.280 --> 00:01:55.590 align:start position:0%
by setting http headers on your
responses<00:01:54.079><c> and</c><00:01:54.240><c> you</c><00:01:54.399><c> can</c><00:01:54.560><c> also</c><00:01:54.880><c> force</c><00:01:55.280><c> all</c>

00:01:55.590 --> 00:01:55.600 align:start position:0%
responses and you can also force all
 

00:01:55.600 --> 00:01:57.030 align:start position:0%
responses and you can also force all
content<00:01:56.000><c> to</c><00:01:56.159><c> be</c><00:01:56.399><c> cached</c>

00:01:57.030 --> 00:01:57.040 align:start position:0%
content to be cached
 

00:01:57.040 --> 00:01:59.030 align:start position:0%
content to be cached
just<00:01:57.280><c> know</c><00:01:57.439><c> that</c><00:01:57.600><c> this</c><00:01:57.920><c> ignores</c><00:01:58.320><c> the</c><00:01:58.560><c> private</c>

00:01:59.030 --> 00:01:59.040 align:start position:0%
just know that this ignores the private
 

00:01:59.040 --> 00:02:01.510 align:start position:0%
just know that this ignores the private
no<00:01:59.280><c> store</c><00:01:59.759><c> or</c><00:02:00.000><c> no</c><00:02:00.159><c> cache</c><00:02:00.479><c> directives</c><00:02:01.040><c> in</c><00:02:01.200><c> cache</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
no store or no cache directives in cache
 

00:02:01.520 --> 00:02:03.109 align:start position:0%
no store or no cache directives in cache
control<00:02:01.920><c> response</c><00:02:02.320><c> headers</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
control response headers
 

00:02:03.119 --> 00:02:04.950 align:start position:0%
control response headers
when<00:02:03.280><c> the</c><00:02:03.360><c> request</c><00:02:03.840><c> is</c><00:02:04.000><c> received</c><00:02:04.479><c> by</c><00:02:04.640><c> cloud</c>

00:02:04.950 --> 00:02:04.960 align:start position:0%
when the request is received by cloud
 

00:02:04.960 --> 00:02:07.510 align:start position:0%
when the request is received by cloud
cdn<00:02:05.759><c> it</c><00:02:06.000><c> looks</c><00:02:06.240><c> for</c><00:02:06.399><c> the</c><00:02:06.560><c> cached</c><00:02:06.960><c> content</c>

00:02:07.510 --> 00:02:07.520 align:start position:0%
cdn it looks for the cached content
 

00:02:07.520 --> 00:02:09.109 align:start position:0%
cdn it looks for the cached content
using<00:02:07.920><c> the</c><00:02:08.160><c> cache</c><00:02:08.560><c> key</c>

00:02:09.109 --> 00:02:09.119 align:start position:0%
using the cache key
 

00:02:09.119 --> 00:02:11.270 align:start position:0%
using the cache key
which<00:02:09.360><c> is</c><00:02:09.440><c> typically</c><00:02:09.920><c> the</c><00:02:10.080><c> uri</c><00:02:10.800><c> but</c><00:02:10.959><c> you</c><00:02:11.120><c> can</c>

00:02:11.270 --> 00:02:11.280 align:start position:0%
which is typically the uri but you can
 

00:02:11.280 --> 00:02:12.869 align:start position:0%
which is typically the uri but you can
customize<00:02:11.920><c> this</c><00:02:12.160><c> cache</c><00:02:12.480><c> key</c>

00:02:12.869 --> 00:02:12.879 align:start position:0%
customize this cache key
 

00:02:12.879 --> 00:02:15.350 align:start position:0%
customize this cache key
to<00:02:13.040><c> remove</c><00:02:13.440><c> protocol</c><00:02:14.239><c> hosts</c><00:02:14.720><c> or</c><00:02:14.959><c> query</c>

00:02:15.350 --> 00:02:15.360 align:start position:0%
to remove protocol hosts or query
 

00:02:15.360 --> 00:02:16.070 align:start position:0%
to remove protocol hosts or query
strings

00:02:16.070 --> 00:02:16.080 align:start position:0%
strings
 

00:02:16.080 --> 00:02:18.150 align:start position:0%
strings
for<00:02:16.239><c> the</c><00:02:16.400><c> user's</c><00:02:16.879><c> request</c><00:02:17.520><c> if</c><00:02:17.680><c> a</c><00:02:17.760><c> cached</c>

00:02:18.150 --> 00:02:18.160 align:start position:0%
for the user's request if a cached
 

00:02:18.160 --> 00:02:20.710 align:start position:0%
for the user's request if a cached
response<00:02:18.640><c> is</c><00:02:18.800><c> found</c><00:02:19.200><c> in</c><00:02:19.360><c> cloud</c><00:02:19.680><c> cdn</c><00:02:20.160><c> cache</c>

00:02:20.710 --> 00:02:20.720 align:start position:0%
response is found in cloud cdn cache
 

00:02:20.720 --> 00:02:23.190 align:start position:0%
response is found in cloud cdn cache
the<00:02:20.879><c> response</c><00:02:21.440><c> is</c><00:02:21.599><c> retrieved</c><00:02:22.239><c> from</c><00:02:22.480><c> cache</c><00:02:22.959><c> and</c>

00:02:23.190 --> 00:02:23.200 align:start position:0%
the response is retrieved from cache and
 

00:02:23.200 --> 00:02:24.309 align:start position:0%
the response is retrieved from cache and
sent<00:02:23.440><c> to</c><00:02:23.520><c> the</c><00:02:23.680><c> user</c>

00:02:24.309 --> 00:02:24.319 align:start position:0%
sent to the user
 

00:02:24.319 --> 00:02:27.190 align:start position:0%
sent to the user
this<00:02:24.720><c> is</c><00:02:24.959><c> called</c><00:02:25.360><c> a</c><00:02:25.599><c> cache</c><00:02:25.920><c> hit</c><00:02:26.560><c> when</c><00:02:26.800><c> a</c><00:02:26.879><c> cache</c>

00:02:27.190 --> 00:02:27.200 align:start position:0%
this is called a cache hit when a cache
 

00:02:27.200 --> 00:02:28.070 align:start position:0%
this is called a cache hit when a cache
hit<00:02:27.520><c> occurs</c>

00:02:28.070 --> 00:02:28.080 align:start position:0%
hit occurs
 

00:02:28.080 --> 00:02:30.550 align:start position:0%
hit occurs
cloud<00:02:28.480><c> cdn</c><00:02:29.200><c> looks</c><00:02:29.520><c> up</c><00:02:29.680><c> the</c><00:02:29.760><c> content</c><00:02:30.160><c> by</c><00:02:30.400><c> its</c>

00:02:30.550 --> 00:02:30.560 align:start position:0%
cloud cdn looks up the content by its
 

00:02:30.560 --> 00:02:31.270 align:start position:0%
cloud cdn looks up the content by its
cache<00:02:30.879><c> key</c>

00:02:31.270 --> 00:02:31.280 align:start position:0%
cache key
 

00:02:31.280 --> 00:02:33.509 align:start position:0%
cache key
and<00:02:31.519><c> responds</c><00:02:32.080><c> directly</c><00:02:32.560><c> to</c><00:02:32.720><c> the</c><00:02:32.879><c> user</c>

00:02:33.509 --> 00:02:33.519 align:start position:0%
and responds directly to the user
 

00:02:33.519 --> 00:02:34.949 align:start position:0%
and responds directly to the user
shortening<00:02:34.000><c> the</c><00:02:34.080><c> round</c><00:02:34.319><c> trip</c><00:02:34.640><c> time</c>

00:02:34.949 --> 00:02:34.959 align:start position:0%
shortening the round trip time
 

00:02:34.959 --> 00:02:37.030 align:start position:0%
shortening the round trip time
and<00:02:35.120><c> saving</c><00:02:35.440><c> the</c><00:02:35.599><c> origin</c><00:02:36.000><c> server</c><00:02:36.480><c> from</c><00:02:36.800><c> having</c>

00:02:37.030 --> 00:02:37.040 align:start position:0%
and saving the origin server from having
 

00:02:37.040 --> 00:02:38.470 align:start position:0%
and saving the origin server from having
to<00:02:37.200><c> process</c><00:02:37.599><c> the</c><00:02:37.680><c> request</c>

00:02:38.470 --> 00:02:38.480 align:start position:0%
to process the request
 

00:02:38.480 --> 00:02:40.390 align:start position:0%
to process the request
the<00:02:38.720><c> first</c><00:02:39.120><c> time</c><00:02:39.360><c> that</c><00:02:39.519><c> a</c><00:02:39.599><c> piece</c><00:02:39.840><c> of</c><00:02:40.000><c> content</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
the first time that a piece of content
 

00:02:40.400 --> 00:02:42.550 align:start position:0%
the first time that a piece of content
is<00:02:40.560><c> requested</c><00:02:41.440><c> the</c><00:02:41.599><c> call</c><00:02:41.920><c> cdn</c>

00:02:42.550 --> 00:02:42.560 align:start position:0%
is requested the call cdn
 

00:02:42.560 --> 00:02:44.550 align:start position:0%
is requested the call cdn
can't<00:02:42.959><c> fulfill</c><00:02:43.360><c> the</c><00:02:43.440><c> request</c><00:02:43.840><c> from</c><00:02:44.000><c> the</c><00:02:44.160><c> cash</c>

00:02:44.550 --> 00:02:44.560 align:start position:0%
can't fulfill the request from the cash
 

00:02:44.560 --> 00:02:46.790 align:start position:0%
can't fulfill the request from the cash
because<00:02:45.360><c> it</c><00:02:45.519><c> doesn't</c><00:02:45.840><c> have</c><00:02:46.000><c> it</c><00:02:46.160><c> there</c>

00:02:46.790 --> 00:02:46.800 align:start position:0%
because it doesn't have it there
 

00:02:46.800 --> 00:02:49.670 align:start position:0%
because it doesn't have it there
this<00:02:47.200><c> is</c><00:02:47.440><c> called</c><00:02:47.840><c> a</c><00:02:48.000><c> cash</c><00:02:48.480><c> miss</c><00:02:49.040><c> when</c><00:02:49.280><c> a</c><00:02:49.360><c> cache</c>

00:02:49.670 --> 00:02:49.680 align:start position:0%
this is called a cash miss when a cache
 

00:02:49.680 --> 00:02:49.990 align:start position:0%
this is called a cash miss when a cache
miss

00:02:49.990 --> 00:02:50.000 align:start position:0%
miss
 

00:02:50.000 --> 00:02:52.470 align:start position:0%
miss
occurs<00:02:50.560><c> the</c><00:02:50.720><c> cloud</c><00:02:51.040><c> cdn</c><00:02:51.599><c> might</c><00:02:52.000><c> attempt</c><00:02:52.319><c> to</c>

00:02:52.470 --> 00:02:52.480 align:start position:0%
occurs the cloud cdn might attempt to
 

00:02:52.480 --> 00:02:54.710 align:start position:0%
occurs the cloud cdn might attempt to
get<00:02:52.640><c> the</c><00:02:52.800><c> content</c><00:02:53.200><c> from</c><00:02:53.360><c> the</c><00:02:53.440><c> nearby</c><00:02:54.080><c> cache</c>

00:02:54.710 --> 00:02:54.720 align:start position:0%
get the content from the nearby cache
 

00:02:54.720 --> 00:02:56.949 align:start position:0%
get the content from the nearby cache
if<00:02:54.879><c> the</c><00:02:54.959><c> nearby</c><00:02:55.360><c> cache</c><00:02:55.680><c> has</c><00:02:56.000><c> the</c><00:02:56.080><c> content</c><00:02:56.720><c> it</c>

00:02:56.949 --> 00:02:56.959 align:start position:0%
if the nearby cache has the content it
 

00:02:56.959 --> 00:02:59.030 align:start position:0%
if the nearby cache has the content it
sends<00:02:57.200><c> it</c><00:02:57.360><c> to</c><00:02:57.440><c> the</c><00:02:57.599><c> first</c><00:02:58.000><c> cache</c><00:02:58.319><c> by</c><00:02:58.560><c> using</c>

00:02:59.030 --> 00:02:59.040 align:start position:0%
sends it to the first cache by using
 

00:02:59.040 --> 00:03:01.509 align:start position:0%
sends it to the first cache by using
cache<00:02:59.440><c> to</c><00:02:59.599><c> cache</c><00:03:00.159><c> fill</c><00:03:00.640><c> otherwise</c><00:03:01.120><c> it</c><00:03:01.280><c> just</c>

00:03:01.509 --> 00:03:01.519 align:start position:0%
cache to cache fill otherwise it just
 

00:03:01.519 --> 00:03:03.589 align:start position:0%
cache to cache fill otherwise it just
sends<00:03:01.760><c> the</c><00:03:01.840><c> request</c><00:03:02.319><c> to</c><00:03:02.480><c> the</c><00:03:02.640><c> origin</c><00:03:03.120><c> server</c>

00:03:03.589 --> 00:03:03.599 align:start position:0%
sends the request to the origin server
 

00:03:03.599 --> 00:03:05.990 align:start position:0%
sends the request to the origin server
the<00:03:03.840><c> maximum</c><00:03:04.480><c> lifetime</c><00:03:05.040><c> of</c><00:03:05.120><c> the</c><00:03:05.360><c> object</c><00:03:05.840><c> in</c>

00:03:05.990 --> 00:03:06.000 align:start position:0%
the maximum lifetime of the object in
 

00:03:06.000 --> 00:03:08.790 align:start position:0%
the maximum lifetime of the object in
cache<00:03:06.400><c> is</c><00:03:06.560><c> defined</c><00:03:07.120><c> by</c><00:03:07.360><c> the</c><00:03:07.599><c> ttls</c><00:03:08.400><c> or</c>

00:03:08.790 --> 00:03:08.800 align:start position:0%
cache is defined by the ttls or
 

00:03:08.800 --> 00:03:11.350 align:start position:0%
cache is defined by the ttls or
time<00:03:09.120><c> to</c><00:03:09.280><c> live</c><00:03:09.599><c> values</c><00:03:10.480><c> set</c><00:03:10.720><c> by</c><00:03:10.959><c> the</c><00:03:11.040><c> cache</c>

00:03:11.350 --> 00:03:11.360 align:start position:0%
time to live values set by the cache
 

00:03:11.360 --> 00:03:12.309 align:start position:0%
time to live values set by the cache
directives<00:03:12.000><c> from</c>

00:03:12.309 --> 00:03:12.319 align:start position:0%
directives from
 

00:03:12.319 --> 00:03:15.110 align:start position:0%
directives from
each<00:03:12.560><c> http</c><00:03:13.280><c> response</c><00:03:13.840><c> or</c><00:03:14.080><c> cache</c><00:03:14.480><c> mode</c><00:03:14.959><c> when</c>

00:03:15.110 --> 00:03:15.120 align:start position:0%
each http response or cache mode when
 

00:03:15.120 --> 00:03:16.710 align:start position:0%
each http response or cache mode when
the<00:03:15.280><c> ttl</c><00:03:15.760><c> has</c><00:03:15.920><c> expired</c>

00:03:16.710 --> 00:03:16.720 align:start position:0%
the ttl has expired
 

00:03:16.720 --> 00:03:19.430 align:start position:0%
the ttl has expired
the<00:03:16.879><c> content</c><00:03:17.360><c> is</c><00:03:17.519><c> evicted</c><00:03:18.000><c> from</c><00:03:18.239><c> cash</c><00:03:18.879><c> now</c><00:03:19.120><c> how</c>

00:03:19.430 --> 00:03:19.440 align:start position:0%
the content is evicted from cash now how
 

00:03:19.440 --> 00:03:21.110 align:start position:0%
the content is evicted from cash now how
do<00:03:19.599><c> you</c><00:03:19.680><c> use</c><00:03:20.000><c> cloud</c><00:03:20.400><c> cdn</c>

00:03:21.110 --> 00:03:21.120 align:start position:0%
do you use cloud cdn
 

00:03:21.120 --> 00:03:23.270 align:start position:0%
do you use cloud cdn
you<00:03:21.280><c> can</c><00:03:21.440><c> set</c><00:03:21.680><c> up</c><00:03:21.760><c> cloud</c><00:03:22.000><c> cdn</c><00:03:22.560><c> through</c><00:03:22.800><c> gcloud</c>

00:03:23.270 --> 00:03:23.280 align:start position:0%
you can set up cloud cdn through gcloud
 

00:03:23.280 --> 00:03:24.470 align:start position:0%
you can set up cloud cdn through gcloud
command<00:03:23.599><c> line</c><00:03:23.840><c> interface</c>

00:03:24.470 --> 00:03:24.480 align:start position:0%
command line interface
 

00:03:24.480 --> 00:03:27.430 align:start position:0%
command line interface
cloud<00:03:24.879><c> console</c><00:03:25.440><c> or</c><00:03:25.680><c> the</c><00:03:25.840><c> apis</c><00:03:26.879><c> since</c><00:03:27.200><c> cloud</c>

00:03:27.430 --> 00:03:27.440 align:start position:0%
cloud console or the apis since cloud
 

00:03:27.440 --> 00:03:29.670 align:start position:0%
cloud console or the apis since cloud
cdn<00:03:27.920><c> leverages</c><00:03:28.480><c> google</c><00:03:28.879><c> cloud</c><00:03:29.280><c> global</c>

00:03:29.670 --> 00:03:29.680 align:start position:0%
cdn leverages google cloud global
 

00:03:29.680 --> 00:03:32.390 align:start position:0%
cdn leverages google cloud global
external<00:03:30.239><c> https</c><00:03:31.040><c> load</c><00:03:31.280><c> balancers</c><00:03:31.920><c> to</c><00:03:32.000><c> provide</c>

00:03:32.390 --> 00:03:32.400 align:start position:0%
external https load balancers to provide
 

00:03:32.400 --> 00:03:33.030 align:start position:0%
external https load balancers to provide
routing

00:03:33.030 --> 00:03:33.040 align:start position:0%
routing
 

00:03:33.040 --> 00:03:35.670 align:start position:0%
routing
health<00:03:33.440><c> checking</c><00:03:33.920><c> and</c><00:03:34.159><c> any</c><00:03:34.400><c> cost</c><00:03:34.640><c> support</c><00:03:35.360><c> it</c>

00:03:35.670 --> 00:03:35.680 align:start position:0%
health checking and any cost support it
 

00:03:35.680 --> 00:03:36.949 align:start position:0%
health checking and any cost support it
can<00:03:35.920><c> be</c><00:03:36.159><c> enabled</c><00:03:36.640><c> by</c>

00:03:36.949 --> 00:03:36.959 align:start position:0%
can be enabled by
 

00:03:36.959 --> 00:03:39.030 align:start position:0%
can be enabled by
easily<00:03:37.360><c> checking</c><00:03:37.760><c> a</c><00:03:37.840><c> box</c><00:03:38.239><c> while</c><00:03:38.560><c> setting</c><00:03:38.959><c> up</c>

00:03:39.030 --> 00:03:39.040 align:start position:0%
easily checking a box while setting up
 

00:03:39.040 --> 00:03:40.949 align:start position:0%
easily checking a box while setting up
the<00:03:39.200><c> backends</c><00:03:39.840><c> or</c><00:03:40.000><c> the</c><00:03:40.159><c> origins</c>

00:03:40.949 --> 00:03:40.959 align:start position:0%
the backends or the origins
 

00:03:40.959 --> 00:03:43.509 align:start position:0%
the backends or the origins
cloud<00:03:41.280><c> cdn</c><00:03:41.760><c> makes</c><00:03:42.000><c> it</c><00:03:42.159><c> even</c><00:03:42.480><c> easier</c><00:03:42.959><c> to</c><00:03:43.120><c> serve</c>

00:03:43.509 --> 00:03:43.519 align:start position:0%
cloud cdn makes it even easier to serve
 

00:03:43.519 --> 00:03:43.990 align:start position:0%
cloud cdn makes it even easier to serve
web

00:03:43.990 --> 00:03:44.000 align:start position:0%
web
 

00:03:44.000 --> 00:03:46.149 align:start position:0%
web
and<00:03:44.239><c> media</c><00:03:44.640><c> content</c><00:03:45.200><c> using</c><00:03:45.599><c> google</c><00:03:45.840><c> cloud</c>

00:03:46.149 --> 00:03:46.159 align:start position:0%
and media content using google cloud
 

00:03:46.159 --> 00:03:48.229 align:start position:0%
and media content using google cloud
storage<00:03:46.879><c> you</c><00:03:47.040><c> just</c><00:03:47.280><c> upload</c><00:03:47.599><c> your</c><00:03:47.760><c> content</c><00:03:48.080><c> to</c>

00:03:48.229 --> 00:03:48.239 align:start position:0%
storage you just upload your content to
 

00:03:48.239 --> 00:03:49.110 align:start position:0%
storage you just upload your content to
a<00:03:48.319><c> bucket</c>

00:03:49.110 --> 00:03:49.120 align:start position:0%
a bucket
 

00:03:49.120 --> 00:03:51.830 align:start position:0%
a bucket
set<00:03:49.360><c> up</c><00:03:49.440><c> load</c><00:03:49.680><c> balancer</c><00:03:50.560><c> and</c><00:03:50.799><c> enable</c><00:03:51.200><c> caching</c>

00:03:51.830 --> 00:03:51.840 align:start position:0%
set up load balancer and enable caching
 

00:03:51.840 --> 00:03:52.789 align:start position:0%
set up load balancer and enable caching
and<00:03:52.080><c> if</c><00:03:52.239><c> you</c><00:03:52.480><c> are</c>

00:03:52.789 --> 00:03:52.799 align:start position:0%
and if you are
 

00:03:52.799 --> 00:03:55.350 align:start position:0%
and if you are
like<00:03:52.959><c> many</c><00:03:53.200><c> of</c><00:03:53.360><c> our</c><00:03:53.599><c> customers</c><00:03:54.640><c> you</c><00:03:54.879><c> probably</c>

00:03:55.350 --> 00:03:55.360 align:start position:0%
like many of our customers you probably
 

00:03:55.360 --> 00:03:57.110 align:start position:0%
like many of our customers you probably
have<00:03:55.599><c> services</c><00:03:56.080><c> that</c><00:03:56.319><c> are</c><00:03:56.480><c> on-prem</c>

00:03:57.110 --> 00:03:57.120 align:start position:0%
have services that are on-prem
 

00:03:57.120 --> 00:03:59.589 align:start position:0%
have services that are on-prem
or<00:03:57.439><c> in</c><00:03:57.599><c> other</c><00:03:57.840><c> clouds</c><00:03:58.480><c> to</c><00:03:58.799><c> enable</c><00:03:59.360><c> these</c>

00:03:59.589 --> 00:03:59.599 align:start position:0%
or in other clouds to enable these
 

00:03:59.599 --> 00:04:01.030 align:start position:0%
or in other clouds to enable these
hybrid<00:04:00.080><c> architectures</c>

00:04:01.030 --> 00:04:01.040 align:start position:0%
hybrid architectures
 

00:04:01.040 --> 00:04:04.229 align:start position:0%
hybrid architectures
cloud<00:04:01.439><c> cdn</c><00:04:02.000><c> and</c><00:04:02.159><c> https</c><00:04:02.879><c> load</c><00:04:03.120><c> balancing</c><00:04:03.840><c> also</c>

00:04:04.229 --> 00:04:04.239 align:start position:0%
cloud cdn and https load balancing also
 

00:04:04.239 --> 00:04:06.470 align:start position:0%
cloud cdn and https load balancing also
support<00:04:04.720><c> external</c><00:04:05.439><c> backends</c>

00:04:06.470 --> 00:04:06.480 align:start position:0%
support external backends
 

00:04:06.480 --> 00:04:08.390 align:start position:0%
support external backends
let's<00:04:06.720><c> get</c><00:04:06.959><c> into</c><00:04:07.200><c> the</c><00:04:07.360><c> underlying</c><00:04:07.840><c> details</c>

00:04:08.390 --> 00:04:08.400 align:start position:0%
let's get into the underlying details
 

00:04:08.400 --> 00:04:09.509 align:start position:0%
let's get into the underlying details
now<00:04:08.879><c> global</c>

00:04:09.509 --> 00:04:09.519 align:start position:0%
now global
 

00:04:09.519 --> 00:04:12.789 align:start position:0%
now global
anycast<00:04:10.159><c> ips</c><00:04:10.799><c> provides</c><00:04:11.360><c> single</c><00:04:11.760><c> ip</c><00:04:12.480><c> for</c>

00:04:12.789 --> 00:04:12.799 align:start position:0%
anycast ips provides single ip for
 

00:04:12.799 --> 00:04:15.670 align:start position:0%
anycast ips provides single ip for
global<00:04:13.280><c> reach</c><00:04:13.840><c> it</c><00:04:14.159><c> allows</c><00:04:14.720><c> google</c><00:04:15.120><c> cloud</c><00:04:15.519><c> to</c>

00:04:15.670 --> 00:04:15.680 align:start position:0%
global reach it allows google cloud to
 

00:04:15.680 --> 00:04:18.150 align:start position:0%
global reach it allows google cloud to
route<00:04:16.079><c> users</c><00:04:16.479><c> to</c><00:04:16.639><c> the</c><00:04:16.799><c> nearest</c><00:04:17.359><c> edge</c><00:04:17.680><c> cache</c>

00:04:18.150 --> 00:04:18.160 align:start position:0%
route users to the nearest edge cache
 

00:04:18.160 --> 00:04:20.310 align:start position:0%
route users to the nearest edge cache
automatically<00:04:19.120><c> and</c><00:04:19.359><c> avoid</c><00:04:19.759><c> relying</c><00:04:20.160><c> on</c><00:04:20.239><c> the</c>

00:04:20.310 --> 00:04:20.320 align:start position:0%
automatically and avoid relying on the
 

00:04:20.320 --> 00:04:22.069 align:start position:0%
automatically and avoid relying on the
dns<00:04:20.799><c> propagation</c><00:04:21.440><c> delays</c>

00:04:22.069 --> 00:04:22.079 align:start position:0%
dns propagation delays
 

00:04:22.079 --> 00:04:24.629 align:start position:0%
dns propagation delays
that<00:04:22.400><c> can</c><00:04:22.800><c> impact</c><00:04:23.199><c> availability</c><00:04:24.240><c> it</c><00:04:24.400><c> also</c>

00:04:24.629 --> 00:04:24.639 align:start position:0%
that can impact availability it also
 

00:04:24.639 --> 00:04:26.150 align:start position:0%
that can impact availability it also
supports<00:04:25.040><c> http</c><00:04:25.759><c> 2</c>

00:04:26.150 --> 00:04:26.160 align:start position:0%
supports http 2
 

00:04:26.160 --> 00:04:28.710 align:start position:0%
supports http 2
end-to-end<00:04:27.360><c> and</c><00:04:27.680><c> quick</c><00:04:27.919><c> protocol</c><00:04:28.560><c> from</c>

00:04:28.710 --> 00:04:28.720 align:start position:0%
end-to-end and quick protocol from
 

00:04:28.720 --> 00:04:29.909 align:start position:0%
end-to-end and quick protocol from
client<00:04:29.040><c> to</c><00:04:29.199><c> cache</c>

00:04:29.909 --> 00:04:29.919 align:start position:0%
client to cache
 

00:04:29.919 --> 00:04:32.469 align:start position:0%
client to cache
quick<00:04:30.160><c> is</c><00:04:30.320><c> a</c><00:04:30.400><c> multiplexed</c><00:04:31.360><c> stream</c><00:04:31.759><c> transport</c>

00:04:32.469 --> 00:04:32.479 align:start position:0%
quick is a multiplexed stream transport
 

00:04:32.479 --> 00:04:33.510 align:start position:0%
quick is a multiplexed stream transport
over<00:04:32.720><c> udp</c>

00:04:33.510 --> 00:04:33.520 align:start position:0%
over udp
 

00:04:33.520 --> 00:04:36.469 align:start position:0%
over udp
which<00:04:33.840><c> reduces</c><00:04:34.479><c> latency</c><00:04:35.280><c> making</c><00:04:35.600><c> it</c><00:04:35.840><c> ideal</c>

00:04:36.469 --> 00:04:36.479 align:start position:0%
which reduces latency making it ideal
 

00:04:36.479 --> 00:04:38.629 align:start position:0%
which reduces latency making it ideal
for<00:04:36.720><c> lossy</c><00:04:37.199><c> mobile</c><00:04:37.600><c> networks</c>

00:04:38.629 --> 00:04:38.639 align:start position:0%
for lossy mobile networks
 

00:04:38.639 --> 00:04:41.350 align:start position:0%
for lossy mobile networks
that<00:04:38.960><c> brings</c><00:04:39.280><c> me</c><00:04:39.520><c> to</c><00:04:39.680><c> security</c><00:04:40.720><c> data</c><00:04:41.199><c> is</c>

00:04:41.350 --> 00:04:41.360 align:start position:0%
that brings me to security data is
 

00:04:41.360 --> 00:04:41.990 align:start position:0%
that brings me to security data is
encrypted

00:04:41.990 --> 00:04:42.000 align:start position:0%
encrypted
 

00:04:42.000 --> 00:04:44.870 align:start position:0%
encrypted
at<00:04:42.320><c> rest</c><00:04:42.800><c> and</c><00:04:42.960><c> in</c><00:04:43.199><c> transit</c><00:04:43.759><c> from</c><00:04:44.000><c> google</c><00:04:44.479><c> cloud</c>

00:04:44.870 --> 00:04:44.880 align:start position:0%
at rest and in transit from google cloud
 

00:04:44.880 --> 00:04:47.110 align:start position:0%
at rest and in transit from google cloud
load<00:04:45.120><c> balancing</c><00:04:45.759><c> to</c><00:04:45.919><c> back-end</c><00:04:46.400><c> supporting</c><00:04:46.960><c> an</c>

00:04:47.110 --> 00:04:47.120 align:start position:0%
load balancing to back-end supporting an
 

00:04:47.120 --> 00:04:47.749 align:start position:0%
load balancing to back-end supporting an
end-to-end

00:04:47.749 --> 00:04:47.759 align:start position:0%
end-to-end
 

00:04:47.759 --> 00:04:49.590 align:start position:0%
end-to-end
encrypted<00:04:48.320><c> experience</c><00:04:49.280><c> you</c><00:04:49.440><c> can</c>

00:04:49.590 --> 00:04:49.600 align:start position:0%
encrypted experience you can
 

00:04:49.600 --> 00:04:52.310 align:start position:0%
encrypted experience you can
programmatically<00:04:50.479><c> sign</c><00:04:50.800><c> urls</c><00:04:51.520><c> and</c><00:04:51.759><c> cookies</c>

00:04:52.310 --> 00:04:52.320 align:start position:0%
programmatically sign urls and cookies
 

00:04:52.320 --> 00:04:54.629 align:start position:0%
programmatically sign urls and cookies
to<00:04:52.560><c> limit</c><00:04:52.960><c> video</c><00:04:53.440><c> segment</c><00:04:53.919><c> access</c><00:04:54.400><c> to</c>

00:04:54.629 --> 00:04:54.639 align:start position:0%
to limit video segment access to
 

00:04:54.639 --> 00:04:56.390 align:start position:0%
to limit video segment access to
authorized<00:04:55.199><c> users</c><00:04:55.600><c> only</c>

00:04:56.390 --> 00:04:56.400 align:start position:0%
authorized users only
 

00:04:56.400 --> 00:04:58.950 align:start position:0%
authorized users only
the<00:04:56.560><c> signature</c><00:04:57.120><c> is</c><00:04:57.280><c> validated</c><00:04:58.000><c> at</c><00:04:58.160><c> the</c><00:04:58.320><c> cdn</c>

00:04:58.950 --> 00:04:58.960 align:start position:0%
the signature is validated at the cdn
 

00:04:58.960 --> 00:04:59.430 align:start position:0%
the signature is validated at the cdn
edge

00:04:59.430 --> 00:04:59.440 align:start position:0%
edge
 

00:04:59.440 --> 00:05:01.350 align:start position:0%
edge
and<00:04:59.600><c> the</c><00:04:59.680><c> request</c><00:05:00.400><c> that</c><00:05:00.639><c> should</c><00:05:00.880><c> not</c><00:05:01.120><c> get</c>

00:05:01.350 --> 00:05:01.360 align:start position:0%
and the request that should not get
 

00:05:01.360 --> 00:05:03.189 align:start position:0%
and the request that should not get
through<00:05:01.759><c> is</c><00:05:01.919><c> blocked</c><00:05:02.400><c> right</c><00:05:02.639><c> there</c>

00:05:03.189 --> 00:05:03.199 align:start position:0%
through is blocked right there
 

00:05:03.199 --> 00:05:05.990 align:start position:0%
through is blocked right there
on<00:05:03.440><c> a</c><00:05:03.600><c> broader</c><00:05:04.080><c> level</c><00:05:04.479><c> you</c><00:05:04.560><c> can</c><00:05:04.800><c> enable</c><00:05:05.360><c> ssl</c>

00:05:05.990 --> 00:05:06.000 align:start position:0%
on a broader level you can enable ssl
 

00:05:06.000 --> 00:05:06.390 align:start position:0%
on a broader level you can enable ssl
for

00:05:06.390 --> 00:05:06.400 align:start position:0%
for
 

00:05:06.400 --> 00:05:09.749 align:start position:0%
for
free<00:05:06.960><c> using</c><00:05:07.440><c> google</c><00:05:07.840><c> managed</c><00:05:08.400><c> search</c><00:05:09.280><c> now</c><00:05:09.520><c> to</c>

00:05:09.749 --> 00:05:09.759 align:start position:0%
free using google managed search now to
 

00:05:09.759 --> 00:05:10.469 align:start position:0%
free using google managed search now to
summarize

00:05:10.469 --> 00:05:10.479 align:start position:0%
summarize
 

00:05:10.479 --> 00:05:12.950 align:start position:0%
summarize
use<00:05:10.800><c> cloud</c><00:05:11.120><c> cdn</c><00:05:11.600><c> to</c><00:05:11.759><c> improve</c><00:05:12.160><c> performance</c><00:05:12.800><c> and</c>

00:05:12.950 --> 00:05:12.960 align:start position:0%
use cloud cdn to improve performance and
 

00:05:12.960 --> 00:05:15.110 align:start position:0%
use cloud cdn to improve performance and
reduce<00:05:13.360><c> serving</c><00:05:13.840><c> costs</c><00:05:14.240><c> for</c><00:05:14.479><c> regularly</c>

00:05:15.110 --> 00:05:15.120 align:start position:0%
reduce serving costs for regularly
 

00:05:15.120 --> 00:05:16.230 align:start position:0%
reduce serving costs for regularly
accessed<00:05:15.520><c> content</c><00:05:15.919><c> by</c>

00:05:16.230 --> 00:05:16.240 align:start position:0%
accessed content by
 

00:05:16.240 --> 00:05:18.310 align:start position:0%
accessed content by
automatically<00:05:17.039><c> caching</c><00:05:17.440><c> static</c><00:05:17.840><c> content</c>

00:05:18.310 --> 00:05:18.320 align:start position:0%
automatically caching static content
 

00:05:18.320 --> 00:05:19.909 align:start position:0%
automatically caching static content
with<00:05:18.560><c> a</c><00:05:18.639><c> click</c><00:05:18.880><c> of</c><00:05:19.039><c> a</c><00:05:19.120><c> button</c>

00:05:19.909 --> 00:05:19.919 align:start position:0%
with a click of a button
 

00:05:19.919 --> 00:05:22.150 align:start position:0%
with a click of a button
want<00:05:20.080><c> to</c><00:05:20.160><c> learn</c><00:05:20.400><c> more</c><00:05:20.639><c> about</c><00:05:20.960><c> cloud</c><00:05:21.280><c> cdn</c><00:05:21.919><c> check</c>

00:05:22.150 --> 00:05:22.160 align:start position:0%
want to learn more about cloud cdn check
 

00:05:22.160 --> 00:05:24.510 align:start position:0%
want to learn more about cloud cdn check
out<00:05:22.840><c> cloud.google.com</c>

00:05:24.510 --> 00:05:24.520 align:start position:0%
out cloud.google.com
 

00:05:24.520 --> 00:05:27.520 align:start position:0%
out cloud.google.com
cdn

