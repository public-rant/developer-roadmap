WEBVTT



00:00:00.560 --> 00:00:03.189 align:start position:0%
 
hello<00:00:01.040><c> and</c><00:00:01.199><c> welcome</c><00:00:01.839><c> to</c><00:00:02.000><c> the</c><00:00:02.240><c> kubernetes</c>

00:00:03.189 --> 00:00:03.199 align:start position:0%
hello and welcome to the kubernetes
 

00:00:03.199 --> 00:00:05.510 align:start position:0%
hello and welcome to the kubernetes
crash<00:00:03.520><c> course</c><00:00:04.240><c> where</c><00:00:04.560><c> i</c><00:00:04.720><c> will</c><00:00:04.880><c> teach</c><00:00:05.120><c> you</c>

00:00:05.510 --> 00:00:05.520 align:start position:0%
crash course where i will teach you
 

00:00:05.520 --> 00:00:07.190 align:start position:0%
crash course where i will teach you
everything<00:00:05.920><c> you</c><00:00:06.080><c> need</c><00:00:06.240><c> to</c><00:00:06.399><c> know</c><00:00:06.640><c> to</c><00:00:06.879><c> get</c>

00:00:07.190 --> 00:00:07.200 align:start position:0%
everything you need to know to get
 

00:00:07.200 --> 00:00:10.310 align:start position:0%
everything you need to know to get
started<00:00:07.600><c> with</c><00:00:07.759><c> kubernetes</c><00:00:08.720><c> in</c><00:00:08.880><c> one</c><00:00:09.200><c> hour</c>

00:00:10.310 --> 00:00:10.320 align:start position:0%
started with kubernetes in one hour
 

00:00:10.320 --> 00:00:13.270 align:start position:0%
started with kubernetes in one hour
i<00:00:10.480><c> am</c><00:00:10.719><c> nana</c><00:00:11.200><c> and</c><00:00:11.360><c> i</c><00:00:11.519><c> have</c><00:00:11.759><c> taught</c><00:00:12.480><c> hundreds</c><00:00:13.040><c> of</c>

00:00:13.270 --> 00:00:13.280 align:start position:0%
i am nana and i have taught hundreds of
 

00:00:13.280 --> 00:00:15.829 align:start position:0%
i am nana and i have taught hundreds of
thousands<00:00:13.840><c> of</c><00:00:14.000><c> people</c><00:00:14.799><c> how</c><00:00:14.960><c> to</c><00:00:15.200><c> advance</c><00:00:15.599><c> their</c>

00:00:15.829 --> 00:00:15.839 align:start position:0%
thousands of people how to advance their
 

00:00:15.839 --> 00:00:18.230 align:start position:0%
thousands of people how to advance their
devops<00:00:16.240><c> skills</c><00:00:16.960><c> through</c><00:00:17.119><c> my</c><00:00:17.279><c> youtube</c><00:00:17.680><c> channel</c>

00:00:18.230 --> 00:00:18.240 align:start position:0%
devops skills through my youtube channel
 

00:00:18.240 --> 00:00:20.070 align:start position:0%
devops skills through my youtube channel
online<00:00:18.640><c> courses</c><00:00:19.199><c> and</c><00:00:19.279><c> the</c><00:00:19.439><c> devops</c>

00:00:20.070 --> 00:00:20.080 align:start position:0%
online courses and the devops
 

00:00:20.080 --> 00:00:21.830 align:start position:0%
online courses and the devops
educational<00:00:20.800><c> program</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
educational program
 

00:00:21.840 --> 00:00:24.310 align:start position:0%
educational program
if<00:00:22.000><c> you're</c><00:00:22.240><c> new</c><00:00:22.480><c> here</c><00:00:23.119><c> be</c><00:00:23.359><c> sure</c><00:00:23.600><c> to</c><00:00:23.760><c> subscribe</c>

00:00:24.310 --> 00:00:24.320 align:start position:0%
if you're new here be sure to subscribe
 

00:00:24.320 --> 00:00:27.429 align:start position:0%
if you're new here be sure to subscribe
because<00:00:24.800><c> i</c><00:00:25.039><c> upload</c><00:00:25.519><c> new</c><00:00:25.760><c> videos</c><00:00:26.400><c> all</c><00:00:26.560><c> the</c><00:00:26.720><c> time</c>

00:00:27.429 --> 00:00:27.439 align:start position:0%
because i upload new videos all the time
 

00:00:27.439 --> 00:00:29.589 align:start position:0%
because i upload new videos all the time
now<00:00:27.680><c> let's</c><00:00:27.920><c> look</c><00:00:28.160><c> at</c><00:00:28.400><c> an</c><00:00:28.560><c> overview</c><00:00:29.199><c> of</c><00:00:29.439><c> what</c>

00:00:29.589 --> 00:00:29.599 align:start position:0%
now let's look at an overview of what
 

00:00:29.599 --> 00:00:30.790 align:start position:0%
now let's look at an overview of what
you<00:00:29.760><c> will</c><00:00:29.920><c> learn</c>

00:00:30.790 --> 00:00:30.800 align:start position:0%
you will learn
 

00:00:30.800 --> 00:00:32.310 align:start position:0%
you will learn
first<00:00:31.039><c> of</c><00:00:31.199><c> all</c><00:00:31.439><c> we'll</c><00:00:31.679><c> see</c><00:00:32.000><c> what</c><00:00:32.160><c> is</c>

00:00:32.310 --> 00:00:32.320 align:start position:0%
first of all we'll see what is
 

00:00:32.320 --> 00:00:34.630 align:start position:0%
first of all we'll see what is
kubernetes<00:00:32.960><c> and</c><00:00:33.120><c> why</c><00:00:33.360><c> do</c><00:00:33.520><c> we</c><00:00:33.600><c> need</c><00:00:33.840><c> it</c><00:00:34.000><c> and</c><00:00:34.239><c> why</c>

00:00:34.630 --> 00:00:34.640 align:start position:0%
kubernetes and why do we need it and why
 

00:00:34.640 --> 00:00:37.110 align:start position:0%
kubernetes and why do we need it and why
did<00:00:34.880><c> it</c><00:00:35.040><c> become</c><00:00:35.600><c> so</c><00:00:35.920><c> popular</c>

00:00:37.110 --> 00:00:37.120 align:start position:0%
did it become so popular
 

00:00:37.120 --> 00:00:38.790 align:start position:0%
did it become so popular
second<00:00:37.440><c> we</c><00:00:37.600><c> will</c><00:00:37.760><c> go</c><00:00:37.920><c> through</c><00:00:38.160><c> the</c><00:00:38.239><c> kubernetes</c>

00:00:38.790 --> 00:00:38.800 align:start position:0%
second we will go through the kubernetes
 

00:00:38.800 --> 00:00:40.549 align:start position:0%
second we will go through the kubernetes
architecture<00:00:39.600><c> and</c><00:00:39.680><c> you</c><00:00:39.840><c> will</c><00:00:40.000><c> see</c><00:00:40.320><c> how</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
architecture and you will see how
 

00:00:40.559 --> 00:00:42.310 align:start position:0%
architecture and you will see how
kubernetes<00:00:41.200><c> actually</c><00:00:41.600><c> works</c><00:00:42.079><c> in</c><00:00:42.160><c> the</c>

00:00:42.310 --> 00:00:42.320 align:start position:0%
kubernetes actually works in the
 

00:00:42.320 --> 00:00:43.670 align:start position:0%
kubernetes actually works in the
background

00:00:43.670 --> 00:00:43.680 align:start position:0%
background
 

00:00:43.680 --> 00:00:45.990 align:start position:0%
background
after<00:00:44.000><c> that</c><00:00:44.239><c> we</c><00:00:44.399><c> will</c><00:00:44.559><c> cover</c><00:00:45.120><c> main</c><00:00:45.360><c> kubernetes</c>

00:00:45.990 --> 00:00:46.000 align:start position:0%
after that we will cover main kubernetes
 

00:00:46.000 --> 00:00:48.389 align:start position:0%
after that we will cover main kubernetes
components<00:00:46.960><c> that</c><00:00:47.280><c> you</c><00:00:47.440><c> need</c><00:00:47.600><c> to</c><00:00:47.840><c> learn</c><00:00:48.160><c> to</c>

00:00:48.389 --> 00:00:48.399 align:start position:0%
components that you need to learn to
 

00:00:48.399 --> 00:00:51.029 align:start position:0%
components that you need to learn to
work<00:00:48.800><c> efficiently</c><00:00:49.520><c> with</c><00:00:49.680><c> kubernetes</c><00:00:50.800><c> and</c>

00:00:51.029 --> 00:00:51.039 align:start position:0%
work efficiently with kubernetes and
 

00:00:51.039 --> 00:00:53.590 align:start position:0%
work efficiently with kubernetes and
finally<00:00:51.840><c> we</c><00:00:52.000><c> will</c><00:00:52.160><c> do</c><00:00:52.480><c> a</c><00:00:52.640><c> hands-on</c><00:00:53.199><c> demo</c>

00:00:53.590 --> 00:00:53.600 align:start position:0%
finally we will do a hands-on demo
 

00:00:53.600 --> 00:00:56.069 align:start position:0%
finally we will do a hands-on demo
project<00:00:54.160><c> to</c><00:00:54.399><c> get</c><00:00:54.640><c> your</c><00:00:54.960><c> first</c><00:00:55.440><c> practical</c>

00:00:56.069 --> 00:00:56.079 align:start position:0%
project to get your first practical
 

00:00:56.079 --> 00:00:58.470 align:start position:0%
project to get your first practical
experience<00:00:56.719><c> with</c><00:00:56.879><c> kubernetes</c><00:00:58.160><c> now</c>

00:00:58.470 --> 00:00:58.480 align:start position:0%
experience with kubernetes now
 

00:00:58.480 --> 00:01:01.270 align:start position:0%
experience with kubernetes now
kubernetes<00:00:59.199><c> is</c><00:00:59.440><c> a</c><00:00:59.520><c> very</c><00:00:59.840><c> popular</c><00:01:00.399><c> but</c><00:01:00.640><c> also</c><00:01:01.120><c> a</c>

00:01:01.270 --> 00:01:01.280 align:start position:0%
kubernetes is a very popular but also a
 

00:01:01.280 --> 00:01:04.390 align:start position:0%
kubernetes is a very popular but also a
very<00:01:01.680><c> complex</c><00:01:02.320><c> technology</c><00:01:03.359><c> so</c><00:01:03.680><c> this</c><00:01:04.000><c> crash</c>

00:01:04.390 --> 00:01:04.400 align:start position:0%
very complex technology so this crash
 

00:01:04.400 --> 00:01:06.550 align:start position:0%
very complex technology so this crash
course<00:01:04.720><c> will</c><00:01:04.960><c> help</c><00:01:05.199><c> you</c><00:01:05.680><c> get</c><00:01:05.920><c> your</c><00:01:06.159><c> first</c>

00:01:06.550 --> 00:01:06.560 align:start position:0%
course will help you get your first
 

00:01:06.560 --> 00:01:08.230 align:start position:0%
course will help you get your first
experience<00:01:07.280><c> to</c><00:01:07.439><c> get</c><00:01:07.680><c> started</c><00:01:08.080><c> with</c>

00:01:08.230 --> 00:01:08.240 align:start position:0%
experience to get started with
 

00:01:08.240 --> 00:01:10.789 align:start position:0%
experience to get started with
kubernetes<00:01:09.280><c> but</c><00:01:09.520><c> if</c><00:01:09.840><c> by</c><00:01:10.080><c> the</c><00:01:10.240><c> end</c><00:01:10.479><c> of</c><00:01:10.640><c> the</c>

00:01:10.789 --> 00:01:10.799 align:start position:0%
kubernetes but if by the end of the
 

00:01:10.799 --> 00:01:12.870 align:start position:0%
kubernetes but if by the end of the
video<00:01:11.280><c> you</c><00:01:11.439><c> decide</c><00:01:11.920><c> to</c><00:01:12.159><c> deepen</c><00:01:12.560><c> your</c>

00:01:12.870 --> 00:01:12.880 align:start position:0%
video you decide to deepen your
 

00:01:12.880 --> 00:01:15.109 align:start position:0%
video you decide to deepen your
knowledge<00:01:13.280><c> in</c><00:01:13.360><c> kubernetes</c><00:01:14.320><c> and</c><00:01:14.560><c> are</c><00:01:14.720><c> thinking</c>

00:01:15.109 --> 00:01:15.119 align:start position:0%
knowledge in kubernetes and are thinking
 

00:01:15.119 --> 00:01:17.030 align:start position:0%
knowledge in kubernetes and are thinking
about<00:01:15.439><c> a</c><00:01:15.520><c> career</c><00:01:16.159><c> as</c><00:01:16.320><c> a</c><00:01:16.479><c> kubernetes</c>

00:01:17.030 --> 00:01:17.040 align:start position:0%
about a career as a kubernetes
 

00:01:17.040 --> 00:01:20.070 align:start position:0%
about a career as a kubernetes
administrator<00:01:18.159><c> my</c><00:01:18.400><c> new</c><00:01:18.880><c> complete</c><00:01:19.439><c> kubernetes</c>

00:01:20.070 --> 00:01:20.080 align:start position:0%
administrator my new complete kubernetes
 

00:01:20.080 --> 00:01:22.310 align:start position:0%
administrator my new complete kubernetes
administrator<00:01:20.880><c> course</c><00:01:21.439><c> will</c><00:01:21.600><c> be</c><00:01:21.759><c> a</c><00:01:21.920><c> great</c>

00:01:22.310 --> 00:01:22.320 align:start position:0%
administrator course will be a great
 

00:01:22.320 --> 00:01:24.230 align:start position:0%
administrator course will be a great
resource<00:01:22.799><c> for</c><00:01:22.960><c> you</c><00:01:23.439><c> where</c><00:01:23.680><c> you</c><00:01:23.840><c> will</c><00:01:24.000><c> learn</c>

00:01:24.230 --> 00:01:24.240 align:start position:0%
resource for you where you will learn
 

00:01:24.240 --> 00:01:26.710 align:start position:0%
resource for you where you will learn
how<00:01:24.400><c> to</c><00:01:24.640><c> build</c><00:01:25.360><c> configure</c><00:01:26.080><c> and</c><00:01:26.320><c> manage</c>

00:01:26.710 --> 00:01:26.720 align:start position:0%
how to build configure and manage
 

00:01:26.720 --> 00:01:29.270 align:start position:0%
how to build configure and manage
kubernetes<00:01:27.280><c> clusters</c><00:01:28.000><c> from</c><00:01:28.240><c> scratch</c>

00:01:29.270 --> 00:01:29.280 align:start position:0%
kubernetes clusters from scratch
 

00:01:29.280 --> 00:01:32.230 align:start position:0%
kubernetes clusters from scratch
the<00:01:29.520><c> course</c><00:01:29.840><c> is</c><00:01:30.079><c> also</c><00:01:30.479><c> dedicated</c><00:01:31.119><c> to</c><00:01:31.360><c> help</c><00:01:31.600><c> you</c>

00:01:32.230 --> 00:01:32.240 align:start position:0%
the course is also dedicated to help you
 

00:01:32.240 --> 00:01:35.749 align:start position:0%
the course is also dedicated to help you
pass<00:01:32.560><c> the</c><00:01:32.799><c> cka</c><00:01:33.520><c> exam</c><00:01:34.240><c> from</c><00:01:34.479><c> linux</c><00:01:34.960><c> foundation</c>

00:01:35.749 --> 00:01:35.759 align:start position:0%
pass the cka exam from linux foundation
 

00:01:35.759 --> 00:01:37.830 align:start position:0%
pass the cka exam from linux foundation
to<00:01:35.920><c> become</c><00:01:36.320><c> a</c><00:01:36.479><c> certified</c><00:01:37.200><c> kubernetes</c>

00:01:37.830 --> 00:01:37.840 align:start position:0%
to become a certified kubernetes
 

00:01:37.840 --> 00:01:40.630 align:start position:0%
to become a certified kubernetes
administrator<00:01:39.040><c> now</c><00:01:39.280><c> we</c><00:01:39.439><c> have</c><00:01:39.680><c> a</c><00:01:39.920><c> lot</c><00:01:40.159><c> to</c><00:01:40.320><c> cover</c>

00:01:40.630 --> 00:01:40.640 align:start position:0%
administrator now we have a lot to cover
 

00:01:40.640 --> 00:01:43.270 align:start position:0%
administrator now we have a lot to cover
in<00:01:40.799><c> this</c><00:01:40.960><c> video</c><00:01:41.520><c> so</c><00:01:41.759><c> let's</c><00:01:42.159><c> jump</c><00:01:42.720><c> right</c><00:01:42.960><c> into</c>

00:01:43.270 --> 00:01:43.280 align:start position:0%
in this video so let's jump right into
 

00:01:43.280 --> 00:01:44.230 align:start position:0%
in this video so let's jump right into
it

00:01:44.230 --> 00:01:44.240 align:start position:0%
it
 

00:01:44.240 --> 00:01:45.910 align:start position:0%
it
so<00:01:44.479><c> let's</c><00:01:44.799><c> jump</c><00:01:45.040><c> in</c><00:01:45.280><c> right</c><00:01:45.520><c> into</c><00:01:45.759><c> the</c>

00:01:45.910 --> 00:01:45.920 align:start position:0%
so let's jump in right into the
 

00:01:45.920 --> 00:01:48.149 align:start position:0%
so let's jump in right into the
definition<00:01:46.640><c> what</c><00:01:46.799><c> is</c><00:01:46.960><c> kubernetes</c>

00:01:48.149 --> 00:01:48.159 align:start position:0%
definition what is kubernetes
 

00:01:48.159 --> 00:01:49.910 align:start position:0%
definition what is kubernetes
so<00:01:48.320><c> kubernetes</c><00:01:48.960><c> is</c><00:01:49.040><c> an</c><00:01:49.200><c> open</c><00:01:49.520><c> source</c>

00:01:49.910 --> 00:01:49.920 align:start position:0%
so kubernetes is an open source
 

00:01:49.920 --> 00:01:52.230 align:start position:0%
so kubernetes is an open source
container<00:01:50.720><c> orchestration</c><00:01:51.600><c> framework</c><00:01:52.079><c> which</c>

00:01:52.230 --> 00:01:52.240 align:start position:0%
container orchestration framework which
 

00:01:52.240 --> 00:01:54.710 align:start position:0%
container orchestration framework which
was<00:01:52.479><c> originally</c><00:01:52.960><c> developed</c><00:01:53.360><c> by</c><00:01:53.840><c> google</c><00:01:54.399><c> so</c><00:01:54.640><c> on</c>

00:01:54.710 --> 00:01:54.720 align:start position:0%
was originally developed by google so on
 

00:01:54.720 --> 00:01:57.670 align:start position:0%
was originally developed by google so on
the<00:01:54.960><c> foundation</c><00:01:55.840><c> it</c><00:01:56.000><c> manages</c><00:01:56.640><c> containers</c><00:01:57.439><c> be</c>

00:01:57.670 --> 00:01:57.680 align:start position:0%
the foundation it manages containers be
 

00:01:57.680 --> 00:01:59.749 align:start position:0%
the foundation it manages containers be
docker<00:01:58.159><c> containers</c><00:01:58.719><c> or</c><00:01:58.960><c> from</c><00:01:59.200><c> some</c><00:01:59.439><c> other</c>

00:01:59.749 --> 00:01:59.759 align:start position:0%
docker containers or from some other
 

00:01:59.759 --> 00:02:02.310 align:start position:0%
docker containers or from some other
technology<00:02:00.479><c> which</c><00:02:00.719><c> basically</c><00:02:01.360><c> means</c><00:02:02.159><c> that</c>

00:02:02.310 --> 00:02:02.320 align:start position:0%
technology which basically means that
 

00:02:02.320 --> 00:02:05.350 align:start position:0%
technology which basically means that
kubernetes<00:02:03.119><c> helps</c><00:02:03.439><c> you</c><00:02:03.680><c> manage</c><00:02:04.240><c> applications</c>

00:02:05.350 --> 00:02:05.360 align:start position:0%
kubernetes helps you manage applications
 

00:02:05.360 --> 00:02:07.990 align:start position:0%
kubernetes helps you manage applications
that<00:02:05.600><c> are</c><00:02:05.759><c> made</c><00:02:06.079><c> up</c><00:02:06.479><c> of</c><00:02:06.960><c> hundreds</c><00:02:07.439><c> or</c><00:02:07.520><c> maybe</c>

00:02:07.990 --> 00:02:08.000 align:start position:0%
that are made up of hundreds or maybe
 

00:02:08.000 --> 00:02:11.270 align:start position:0%
that are made up of hundreds or maybe
thousands<00:02:08.640><c> of</c><00:02:09.360><c> containers</c><00:02:10.479><c> and</c><00:02:10.640><c> it</c><00:02:10.800><c> helps</c><00:02:11.120><c> you</c>

00:02:11.270 --> 00:02:11.280 align:start position:0%
thousands of containers and it helps you
 

00:02:11.280 --> 00:02:13.910 align:start position:0%
thousands of containers and it helps you
manage<00:02:11.680><c> them</c><00:02:12.000><c> in</c><00:02:12.160><c> different</c><00:02:12.959><c> environments</c>

00:02:13.910 --> 00:02:13.920 align:start position:0%
manage them in different environments
 

00:02:13.920 --> 00:02:16.550 align:start position:0%
manage them in different environments
like<00:02:14.400><c> physical</c><00:02:14.959><c> machines</c><00:02:15.599><c> virtual</c><00:02:16.000><c> machines</c>

00:02:16.550 --> 00:02:16.560 align:start position:0%
like physical machines virtual machines
 

00:02:16.560 --> 00:02:19.430 align:start position:0%
like physical machines virtual machines
or<00:02:16.800><c> cloud</c><00:02:17.200><c> environments</c><00:02:17.920><c> or</c><00:02:18.160><c> even</c><00:02:18.480><c> hybrid</c>

00:02:19.430 --> 00:02:19.440 align:start position:0%
or cloud environments or even hybrid
 

00:02:19.440 --> 00:02:23.910 align:start position:0%
or cloud environments or even hybrid
deployment<00:02:20.000><c> environments</c>

00:02:23.910 --> 00:02:23.920 align:start position:0%
 
 

00:02:23.920 --> 00:02:26.150 align:start position:0%
 
so<00:02:24.160><c> what</c><00:02:24.400><c> problems</c><00:02:24.879><c> does</c><00:02:25.120><c> kubernetes</c><00:02:25.760><c> solve</c>

00:02:26.150 --> 00:02:26.160 align:start position:0%
so what problems does kubernetes solve
 

00:02:26.160 --> 00:02:29.110 align:start position:0%
so what problems does kubernetes solve
and<00:02:26.480><c> what</c><00:02:27.120><c> are</c><00:02:27.360><c> the</c><00:02:27.680><c> tasks</c><00:02:28.160><c> of</c><00:02:28.319><c> a</c><00:02:28.400><c> container</c>

00:02:29.110 --> 00:02:29.120 align:start position:0%
and what are the tasks of a container
 

00:02:29.120 --> 00:02:32.070 align:start position:0%
and what are the tasks of a container
orchestration<00:02:30.000><c> tool</c><00:02:30.400><c> actually</c><00:02:31.200><c> so</c><00:02:31.440><c> to</c><00:02:31.760><c> go</c>

00:02:32.070 --> 00:02:32.080 align:start position:0%
orchestration tool actually so to go
 

00:02:32.080 --> 00:02:34.229 align:start position:0%
orchestration tool actually so to go
through<00:02:32.239><c> this</c><00:02:32.640><c> chronologically</c>

00:02:34.229 --> 00:02:34.239 align:start position:0%
through this chronologically
 

00:02:34.239 --> 00:02:36.550 align:start position:0%
through this chronologically
the<00:02:34.480><c> rise</c><00:02:34.800><c> of</c><00:02:34.959><c> microservices</c><00:02:36.080><c> caused</c>

00:02:36.550 --> 00:02:36.560 align:start position:0%
the rise of microservices caused
 

00:02:36.560 --> 00:02:38.390 align:start position:0%
the rise of microservices caused
increased<00:02:37.120><c> usage</c><00:02:37.599><c> of</c><00:02:37.760><c> container</c>

00:02:38.390 --> 00:02:38.400 align:start position:0%
increased usage of container
 

00:02:38.400 --> 00:02:40.390 align:start position:0%
increased usage of container
technologies<00:02:39.360><c> because</c><00:02:39.599><c> the</c><00:02:39.760><c> containers</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
technologies because the containers
 

00:02:40.400 --> 00:02:43.270 align:start position:0%
technologies because the containers
actually<00:02:40.720><c> offer</c><00:02:40.959><c> the</c><00:02:41.120><c> perfect</c><00:02:41.680><c> host</c><00:02:42.480><c> for</c>

00:02:43.270 --> 00:02:43.280 align:start position:0%
actually offer the perfect host for
 

00:02:43.280 --> 00:02:44.150 align:start position:0%
actually offer the perfect host for
small

00:02:44.150 --> 00:02:44.160 align:start position:0%
small
 

00:02:44.160 --> 00:02:46.309 align:start position:0%
small
independent<00:02:45.280><c> applications</c><00:02:46.080><c> like</c>

00:02:46.309 --> 00:02:46.319 align:start position:0%
independent applications like
 

00:02:46.319 --> 00:02:48.150 align:start position:0%
independent applications like
microservices

00:02:48.150 --> 00:02:48.160 align:start position:0%
microservices
 

00:02:48.160 --> 00:02:50.470 align:start position:0%
microservices
and<00:02:48.319><c> the</c><00:02:48.560><c> rise</c><00:02:48.879><c> of</c><00:02:49.040><c> containers</c><00:02:49.920><c> and</c><00:02:50.000><c> the</c><00:02:50.160><c> micro</c>

00:02:50.470 --> 00:02:50.480 align:start position:0%
and the rise of containers and the micro
 

00:02:50.480 --> 00:02:53.509 align:start position:0%
and the rise of containers and the micro
service<00:02:50.800><c> technology</c><00:02:51.760><c> actually</c><00:02:52.239><c> resulted</c><00:02:52.959><c> in</c>

00:02:53.509 --> 00:02:53.519 align:start position:0%
service technology actually resulted in
 

00:02:53.519 --> 00:02:55.670 align:start position:0%
service technology actually resulted in
applications<00:02:54.319><c> they're</c><00:02:54.560><c> now</c><00:02:54.879><c> comprised</c><00:02:55.519><c> of</c>

00:02:55.670 --> 00:02:55.680 align:start position:0%
applications they're now comprised of
 

00:02:55.680 --> 00:02:57.670 align:start position:0%
applications they're now comprised of
hundreds<00:02:56.160><c> or</c><00:02:56.319><c> sometimes</c><00:02:56.800><c> maybe</c><00:02:57.280><c> even</c>

00:02:57.670 --> 00:02:57.680 align:start position:0%
hundreds or sometimes maybe even
 

00:02:57.680 --> 00:03:00.229 align:start position:0%
hundreds or sometimes maybe even
thousands<00:02:58.159><c> of</c><00:02:58.400><c> containers</c><00:02:59.360><c> managing</c><00:02:59.920><c> those</c>

00:03:00.229 --> 00:03:00.239 align:start position:0%
thousands of containers managing those
 

00:03:00.239 --> 00:03:02.869 align:start position:0%
thousands of containers managing those
loads<00:03:00.560><c> of</c><00:03:00.720><c> containers</c><00:03:01.599><c> across</c><00:03:02.080><c> multiple</c>

00:03:02.869 --> 00:03:02.879 align:start position:0%
loads of containers across multiple
 

00:03:02.879 --> 00:03:06.229 align:start position:0%
loads of containers across multiple
environments<00:03:04.080><c> using</c><00:03:04.640><c> scripts</c><00:03:05.360><c> and</c><00:03:05.680><c> self-made</c>

00:03:06.229 --> 00:03:06.239 align:start position:0%
environments using scripts and self-made
 

00:03:06.239 --> 00:03:08.869 align:start position:0%
environments using scripts and self-made
tools<00:03:06.640><c> can</c><00:03:06.800><c> be</c><00:03:07.120><c> really</c><00:03:07.680><c> complex</c>

00:03:08.869 --> 00:03:08.879 align:start position:0%
tools can be really complex
 

00:03:08.879 --> 00:03:11.270 align:start position:0%
tools can be really complex
and<00:03:09.120><c> sometimes</c><00:03:09.680><c> even</c><00:03:10.000><c> impossible</c><00:03:10.800><c> so</c><00:03:11.040><c> that</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
and sometimes even impossible so that
 

00:03:11.280 --> 00:03:14.070 align:start position:0%
and sometimes even impossible so that
specific<00:03:12.080><c> scenario</c><00:03:12.640><c> actually</c><00:03:13.040><c> caused</c><00:03:13.840><c> the</c>

00:03:14.070 --> 00:03:14.080 align:start position:0%
specific scenario actually caused the
 

00:03:14.080 --> 00:03:15.110 align:start position:0%
specific scenario actually caused the
need<00:03:14.400><c> for</c>

00:03:15.110 --> 00:03:15.120 align:start position:0%
need for
 

00:03:15.120 --> 00:03:17.350 align:start position:0%
need for
having<00:03:15.680><c> container</c><00:03:16.319><c> orchestration</c>

00:03:17.350 --> 00:03:17.360 align:start position:0%
having container orchestration
 

00:03:17.360 --> 00:03:21.350 align:start position:0%
having container orchestration
technologies

00:03:21.350 --> 00:03:21.360 align:start position:0%
 
 

00:03:21.360 --> 00:03:23.830 align:start position:0%
 
so<00:03:21.599><c> what</c><00:03:22.239><c> those</c><00:03:22.640><c> orchestration</c><00:03:23.440><c> tools</c><00:03:23.680><c> like</c>

00:03:23.830 --> 00:03:23.840 align:start position:0%
so what those orchestration tools like
 

00:03:23.840 --> 00:03:25.670 align:start position:0%
so what those orchestration tools like
kubernetes<00:03:24.560><c> do</c><00:03:24.879><c> is</c>

00:03:25.670 --> 00:03:25.680 align:start position:0%
kubernetes do is
 

00:03:25.680 --> 00:03:28.390 align:start position:0%
kubernetes do is
actually<00:03:26.159><c> guarantee</c><00:03:26.879><c> following</c><00:03:27.440><c> features</c>

00:03:28.390 --> 00:03:28.400 align:start position:0%
actually guarantee following features
 

00:03:28.400 --> 00:03:32.229 align:start position:0%
actually guarantee following features
one<00:03:28.959><c> is</c><00:03:29.200><c> high</c><00:03:29.519><c> availability</c><00:03:30.799><c> in</c><00:03:30.959><c> simple</c><00:03:31.360><c> words</c>

00:03:32.229 --> 00:03:32.239 align:start position:0%
one is high availability in simple words
 

00:03:32.239 --> 00:03:34.630 align:start position:0%
one is high availability in simple words
high<00:03:32.720><c> availability</c><00:03:33.519><c> means</c><00:03:33.920><c> that</c><00:03:34.480><c> the</c>

00:03:34.630 --> 00:03:34.640 align:start position:0%
high availability means that the
 

00:03:34.640 --> 00:03:36.789 align:start position:0%
high availability means that the
application<00:03:35.360><c> has</c><00:03:35.599><c> no</c><00:03:35.840><c> downtime</c><00:03:36.400><c> so</c><00:03:36.560><c> it's</c>

00:03:36.789 --> 00:03:36.799 align:start position:0%
application has no downtime so it's
 

00:03:36.799 --> 00:03:40.229 align:start position:0%
application has no downtime so it's
always<00:03:37.680><c> accessible</c><00:03:38.319><c> by</c><00:03:38.480><c> the</c><00:03:38.640><c> users</c><00:03:39.599><c> a</c><00:03:39.840><c> second</c>

00:03:40.229 --> 00:03:40.239 align:start position:0%
always accessible by the users a second
 

00:03:40.239 --> 00:03:43.509 align:start position:0%
always accessible by the users a second
one<00:03:40.640><c> is</c><00:03:41.120><c> scalability</c><00:03:42.319><c> which</c><00:03:42.640><c> means</c><00:03:43.040><c> you</c><00:03:43.200><c> can</c>

00:03:43.509 --> 00:03:43.519 align:start position:0%
one is scalability which means you can
 

00:03:43.519 --> 00:03:46.149 align:start position:0%
one is scalability which means you can
scale<00:03:43.840><c> your</c><00:03:44.159><c> applications</c><00:03:45.120><c> fast</c><00:03:45.840><c> when</c><00:03:46.000><c> you</c>

00:03:46.149 --> 00:03:46.159 align:start position:0%
scale your applications fast when you
 

00:03:46.159 --> 00:03:49.030 align:start position:0%
scale your applications fast when you
have<00:03:46.480><c> more</c><00:03:46.879><c> load</c><00:03:47.200><c> on</c><00:03:47.440><c> it</c><00:03:47.840><c> and</c><00:03:48.000><c> more</c><00:03:48.319><c> users</c><00:03:48.879><c> are</c>

00:03:49.030 --> 00:03:49.040 align:start position:0%
have more load on it and more users are
 

00:03:49.040 --> 00:03:51.509 align:start position:0%
have more load on it and more users are
trying<00:03:49.280><c> to</c><00:03:49.519><c> access</c><00:03:50.000><c> it</c><00:03:50.560><c> and</c><00:03:50.720><c> the</c><00:03:50.879><c> same</c><00:03:51.120><c> way</c><00:03:51.360><c> you</c>

00:03:51.509 --> 00:03:51.519 align:start position:0%
trying to access it and the same way you
 

00:03:51.519 --> 00:03:53.910 align:start position:0%
trying to access it and the same way you
can<00:03:51.760><c> easily</c><00:03:52.319><c> scale</c><00:03:52.720><c> it</c><00:03:52.799><c> down</c><00:03:53.120><c> when</c><00:03:53.280><c> the</c><00:03:53.519><c> load</c>

00:03:53.910 --> 00:03:53.920 align:start position:0%
can easily scale it down when the load
 

00:03:53.920 --> 00:03:55.110 align:start position:0%
can easily scale it down when the load
goes<00:03:54.239><c> down</c>

00:03:55.110 --> 00:03:55.120 align:start position:0%
goes down
 

00:03:55.120 --> 00:03:56.869 align:start position:0%
goes down
so<00:03:55.360><c> it</c><00:03:55.519><c> makes</c><00:03:55.760><c> your</c><00:03:55.920><c> application</c><00:03:56.640><c> more</c>

00:03:56.869 --> 00:03:56.879 align:start position:0%
so it makes your application more
 

00:03:56.879 --> 00:03:59.830 align:start position:0%
so it makes your application more
flexible<00:03:57.599><c> to</c><00:03:57.760><c> adjust</c><00:03:58.560><c> to</c><00:03:58.720><c> the</c><00:03:58.879><c> increasing</c><00:03:59.599><c> or</c>

00:03:59.830 --> 00:03:59.840 align:start position:0%
flexible to adjust to the increasing or
 

00:03:59.840 --> 00:04:03.110 align:start position:0%
flexible to adjust to the increasing or
decreasing<00:04:00.959><c> load</c><00:04:01.760><c> and</c><00:04:01.840><c> the</c><00:04:02.000><c> third</c><00:04:02.319><c> one</c><00:04:02.640><c> is</c>

00:04:03.110 --> 00:04:03.120 align:start position:0%
decreasing load and the third one is
 

00:04:03.120 --> 00:04:05.190 align:start position:0%
decreasing load and the third one is
disaster<00:04:03.760><c> recovery</c><00:04:04.400><c> which</c><00:04:04.560><c> basically</c><00:04:04.959><c> means</c>

00:04:05.190 --> 00:04:05.200 align:start position:0%
disaster recovery which basically means
 

00:04:05.200 --> 00:04:06.789 align:start position:0%
disaster recovery which basically means
that<00:04:05.360><c> if</c><00:04:05.519><c> an</c><00:04:05.680><c> infrastructure</c><00:04:06.400><c> has</c><00:04:06.640><c> some</c>

00:04:06.789 --> 00:04:06.799 align:start position:0%
that if an infrastructure has some
 

00:04:06.799 --> 00:04:09.429 align:start position:0%
that if an infrastructure has some
problems<00:04:07.439><c> like</c><00:04:08.080><c> data</c><00:04:08.480><c> is</c><00:04:08.720><c> lost</c><00:04:09.120><c> or</c><00:04:09.280><c> the</c>

00:04:09.429 --> 00:04:09.439 align:start position:0%
problems like data is lost or the
 

00:04:09.439 --> 00:04:11.429 align:start position:0%
problems like data is lost or the
servers<00:04:10.000><c> explode</c><00:04:10.480><c> or</c><00:04:10.640><c> something</c><00:04:10.879><c> bad</c><00:04:11.120><c> happens</c>

00:04:11.429 --> 00:04:11.439 align:start position:0%
servers explode or something bad happens
 

00:04:11.439 --> 00:04:12.789 align:start position:0%
servers explode or something bad happens
with<00:04:11.599><c> the</c><00:04:11.680><c> service</c><00:04:12.000><c> center</c><00:04:12.640><c> the</c>

00:04:12.789 --> 00:04:12.799 align:start position:0%
with the service center the
 

00:04:12.799 --> 00:04:14.630 align:start position:0%
with the service center the
infrastructure<00:04:13.439><c> has</c><00:04:13.680><c> to</c><00:04:13.840><c> have</c><00:04:14.159><c> some</c><00:04:14.319><c> kind</c><00:04:14.480><c> of</c>

00:04:14.630 --> 00:04:14.640 align:start position:0%
infrastructure has to have some kind of
 

00:04:14.640 --> 00:04:16.870 align:start position:0%
infrastructure has to have some kind of
mechanism<00:04:15.200><c> to</c><00:04:15.439><c> back</c><00:04:15.680><c> up</c><00:04:15.840><c> the</c><00:04:16.000><c> data</c><00:04:16.560><c> and</c><00:04:16.720><c> to</c>

00:04:16.870 --> 00:04:16.880 align:start position:0%
mechanism to back up the data and to
 

00:04:16.880 --> 00:04:19.189 align:start position:0%
mechanism to back up the data and to
restore<00:04:17.359><c> it</c><00:04:17.600><c> to</c><00:04:17.759><c> the</c><00:04:17.840><c> latest</c><00:04:18.320><c> state</c><00:04:18.720><c> so</c><00:04:18.880><c> that</c>

00:04:19.189 --> 00:04:19.199 align:start position:0%
restore it to the latest state so that
 

00:04:19.199 --> 00:04:21.110 align:start position:0%
restore it to the latest state so that
application<00:04:19.840><c> doesn't</c><00:04:20.160><c> actually</c><00:04:20.560><c> lose</c><00:04:20.880><c> any</c>

00:04:21.110 --> 00:04:21.120 align:start position:0%
application doesn't actually lose any
 

00:04:21.120 --> 00:04:23.670 align:start position:0%
application doesn't actually lose any
data<00:04:21.759><c> and</c><00:04:21.919><c> the</c><00:04:22.000><c> containerized</c><00:04:22.800><c> application</c>

00:04:23.670 --> 00:04:23.680 align:start position:0%
data and the containerized application
 

00:04:23.680 --> 00:04:26.310 align:start position:0%
data and the containerized application
can<00:04:23.919><c> run</c><00:04:24.320><c> from</c><00:04:24.560><c> the</c><00:04:25.040><c> latest</c><00:04:25.440><c> state</c><00:04:25.919><c> after</c><00:04:26.160><c> the</c>

00:04:26.310 --> 00:04:26.320 align:start position:0%
can run from the latest state after the
 

00:04:26.320 --> 00:04:27.510 align:start position:0%
can run from the latest state after the
recovery

00:04:27.510 --> 00:04:27.520 align:start position:0%
recovery
 

00:04:27.520 --> 00:04:29.350 align:start position:0%
recovery
and<00:04:27.759><c> all</c><00:04:27.919><c> of</c><00:04:28.080><c> these</c><00:04:28.320><c> are</c><00:04:28.639><c> functionalities</c>

00:04:29.350 --> 00:04:29.360 align:start position:0%
and all of these are functionalities
 

00:04:29.360 --> 00:04:30.150 align:start position:0%
and all of these are functionalities
that

00:04:30.150 --> 00:04:30.160 align:start position:0%
that
 

00:04:30.160 --> 00:04:32.230 align:start position:0%
that
container<00:04:30.800><c> orchestration</c><00:04:31.600><c> technologies</c>

00:04:32.230 --> 00:04:32.240 align:start position:0%
container orchestration technologies
 

00:04:32.240 --> 00:04:34.550 align:start position:0%
container orchestration technologies
like<00:04:32.400><c> kubernetes</c><00:04:33.280><c> offer</c><00:04:33.840><c> so</c><00:04:34.080><c> how</c><00:04:34.240><c> does</c><00:04:34.400><c> the</c>

00:04:34.550 --> 00:04:34.560 align:start position:0%
like kubernetes offer so how does the
 

00:04:34.560 --> 00:04:36.870 align:start position:0%
like kubernetes offer so how does the
kubernetes<00:04:35.199><c> basic</c><00:04:35.680><c> architecture</c><00:04:36.479><c> actually</c>

00:04:36.870 --> 00:04:36.880 align:start position:0%
kubernetes basic architecture actually
 

00:04:36.880 --> 00:04:37.909 align:start position:0%
kubernetes basic architecture actually
look<00:04:37.120><c> like</c>

00:04:37.909 --> 00:04:37.919 align:start position:0%
look like
 

00:04:37.919 --> 00:04:40.469 align:start position:0%
look like
the<00:04:38.080><c> kubernetes</c><00:04:38.720><c> cluster</c><00:04:39.360><c> is</c><00:04:39.520><c> made</c><00:04:39.840><c> up</c><00:04:40.080><c> with</c>

00:04:40.469 --> 00:04:40.479 align:start position:0%
the kubernetes cluster is made up with
 

00:04:40.479 --> 00:04:43.030 align:start position:0%
the kubernetes cluster is made up with
at<00:04:40.720><c> least</c><00:04:41.199><c> one</c><00:04:41.759><c> master</c><00:04:42.240><c> node</c>

00:04:43.030 --> 00:04:43.040 align:start position:0%
at least one master node
 

00:04:43.040 --> 00:04:45.350 align:start position:0%
at least one master node
and<00:04:43.199><c> then</c><00:04:43.360><c> connected</c><00:04:44.000><c> to</c><00:04:44.160><c> it</c><00:04:44.320><c> you</c><00:04:44.560><c> have</c>

00:04:45.350 --> 00:04:45.360 align:start position:0%
and then connected to it you have
 

00:04:45.360 --> 00:04:49.030 align:start position:0%
and then connected to it you have
a<00:04:45.440><c> couple</c><00:04:45.840><c> of</c><00:04:46.400><c> worker</c><00:04:46.800><c> nodes</c><00:04:47.360><c> where</c><00:04:47.680><c> each</c><00:04:48.400><c> node</c>

00:04:49.030 --> 00:04:49.040 align:start position:0%
a couple of worker nodes where each node
 

00:04:49.040 --> 00:04:52.390 align:start position:0%
a couple of worker nodes where each node
has<00:04:49.680><c> a</c><00:04:49.840><c> cubelet</c><00:04:50.479><c> process</c><00:04:51.199><c> running</c><00:04:51.680><c> on</c><00:04:51.840><c> it</c><00:04:52.160><c> and</c>

00:04:52.390 --> 00:04:52.400 align:start position:0%
has a cubelet process running on it and
 

00:04:52.400 --> 00:04:55.270 align:start position:0%
has a cubelet process running on it and
cubelet<00:04:52.960><c> is</c><00:04:53.199><c> actually</c><00:04:53.520><c> a</c><00:04:53.600><c> kubernetes</c><00:04:54.320><c> process</c>

00:04:55.270 --> 00:04:55.280 align:start position:0%
cubelet is actually a kubernetes process
 

00:04:55.280 --> 00:04:58.550 align:start position:0%
cubelet is actually a kubernetes process
that<00:04:55.600><c> makes</c><00:04:55.919><c> it</c><00:04:56.160><c> possible</c><00:04:56.800><c> for</c><00:04:57.120><c> the</c><00:04:57.280><c> cluster</c>

00:04:58.550 --> 00:04:58.560 align:start position:0%
that makes it possible for the cluster
 

00:04:58.560 --> 00:05:00.710 align:start position:0%
that makes it possible for the cluster
to<00:04:58.800><c> talk</c><00:04:59.040><c> to</c><00:04:59.280><c> each</c><00:04:59.440><c> other</c><00:04:59.840><c> to</c><00:05:00.000><c> communicate</c><00:05:00.560><c> to</c>

00:05:00.710 --> 00:05:00.720 align:start position:0%
to talk to each other to communicate to
 

00:05:00.720 --> 00:05:03.110 align:start position:0%
to talk to each other to communicate to
each<00:05:00.880><c> other</c><00:05:01.440><c> and</c><00:05:01.600><c> actually</c><00:05:02.160><c> execute</c><00:05:02.800><c> some</c>

00:05:03.110 --> 00:05:03.120 align:start position:0%
each other and actually execute some
 

00:05:03.120 --> 00:05:05.270 align:start position:0%
each other and actually execute some
tasks<00:05:03.600><c> on</c><00:05:03.759><c> those</c><00:05:04.000><c> nodes</c><00:05:04.400><c> like</c><00:05:04.880><c> running</c>

00:05:05.270 --> 00:05:05.280 align:start position:0%
tasks on those nodes like running
 

00:05:05.280 --> 00:05:07.430 align:start position:0%
tasks on those nodes like running
application<00:05:05.919><c> processes</c>

00:05:07.430 --> 00:05:07.440 align:start position:0%
application processes
 

00:05:07.440 --> 00:05:09.990 align:start position:0%
application processes
each<00:05:07.759><c> worker</c><00:05:08.160><c> node</c><00:05:08.560><c> has</c><00:05:09.120><c> containers</c><00:05:09.840><c> of</c>

00:05:09.990 --> 00:05:10.000 align:start position:0%
each worker node has containers of
 

00:05:10.000 --> 00:05:12.790 align:start position:0%
each worker node has containers of
different<00:05:10.400><c> applications</c><00:05:11.199><c> deployed</c><00:05:11.680><c> on</c><00:05:11.840><c> it</c><00:05:12.320><c> so</c>

00:05:12.790 --> 00:05:12.800 align:start position:0%
different applications deployed on it so
 

00:05:12.800 --> 00:05:15.430 align:start position:0%
different applications deployed on it so
depending<00:05:13.280><c> on</c><00:05:13.520><c> how</c><00:05:13.759><c> the</c><00:05:14.320><c> workload</c><00:05:15.039><c> is</c>

00:05:15.430 --> 00:05:15.440 align:start position:0%
depending on how the workload is
 

00:05:15.440 --> 00:05:17.909 align:start position:0%
depending on how the workload is
distributed<00:05:16.240><c> you</c><00:05:16.400><c> would</c><00:05:16.639><c> have</c><00:05:17.280><c> different</c>

00:05:17.909 --> 00:05:17.919 align:start position:0%
distributed you would have different
 

00:05:17.919 --> 00:05:20.150 align:start position:0%
distributed you would have different
number<00:05:18.400><c> of</c><00:05:18.560><c> docker</c><00:05:18.960><c> containers</c><00:05:19.680><c> running</c><00:05:20.000><c> on</c>

00:05:20.150 --> 00:05:20.160 align:start position:0%
number of docker containers running on
 

00:05:20.160 --> 00:05:23.029 align:start position:0%
number of docker containers running on
worker<00:05:20.560><c> nodes</c><00:05:21.360><c> and</c><00:05:21.520><c> worker</c><00:05:22.000><c> nodes</c><00:05:22.639><c> are</c><00:05:22.800><c> where</c>

00:05:23.029 --> 00:05:23.039 align:start position:0%
worker nodes and worker nodes are where
 

00:05:23.039 --> 00:05:25.670 align:start position:0%
worker nodes and worker nodes are where
the<00:05:23.280><c> actual</c><00:05:23.680><c> work</c><00:05:24.000><c> is</c><00:05:24.160><c> happening</c><00:05:24.720><c> so</c><00:05:24.960><c> here</c><00:05:25.360><c> is</c>

00:05:25.670 --> 00:05:25.680 align:start position:0%
the actual work is happening so here is
 

00:05:25.680 --> 00:05:28.469 align:start position:0%
the actual work is happening so here is
where<00:05:25.840><c> your</c><00:05:26.160><c> applications</c><00:05:27.440><c> are</c><00:05:27.680><c> running</c><00:05:28.320><c> so</c>

00:05:28.469 --> 00:05:28.479 align:start position:0%
where your applications are running so
 

00:05:28.479 --> 00:05:30.230 align:start position:0%
where your applications are running so
the<00:05:28.639><c> question</c><00:05:28.960><c> is</c><00:05:29.280><c> what</c><00:05:29.520><c> is</c><00:05:29.680><c> running</c><00:05:30.000><c> on</c>

00:05:30.230 --> 00:05:30.240 align:start position:0%
the question is what is running on
 

00:05:30.240 --> 00:05:31.590 align:start position:0%
the question is what is running on
masternode

00:05:31.590 --> 00:05:31.600 align:start position:0%
masternode
 

00:05:31.600 --> 00:05:34.070 align:start position:0%
masternode
masternode<00:05:32.320><c> actually</c><00:05:32.720><c> runs</c><00:05:33.520><c> several</c>

00:05:34.070 --> 00:05:34.080 align:start position:0%
masternode actually runs several
 

00:05:34.080 --> 00:05:37.510 align:start position:0%
masternode actually runs several
kubernetes<00:05:35.280><c> processes</c><00:05:36.000><c> that</c><00:05:36.160><c> are</c><00:05:36.400><c> absolutely</c>

00:05:37.510 --> 00:05:37.520 align:start position:0%
kubernetes processes that are absolutely
 

00:05:37.520 --> 00:05:38.390 align:start position:0%
kubernetes processes that are absolutely
necessary

00:05:38.390 --> 00:05:38.400 align:start position:0%
necessary
 

00:05:38.400 --> 00:05:41.350 align:start position:0%
necessary
to<00:05:38.720><c> run</c><00:05:39.120><c> and</c><00:05:39.360><c> manage</c><00:05:39.840><c> the</c><00:05:40.080><c> cluster</c><00:05:40.639><c> properly</c>

00:05:41.350 --> 00:05:41.360 align:start position:0%
to run and manage the cluster properly
 

00:05:41.360 --> 00:05:44.310 align:start position:0%
to run and manage the cluster properly
one<00:05:41.600><c> of</c><00:05:41.680><c> such</c><00:05:42.000><c> processes</c><00:05:42.639><c> is</c><00:05:42.880><c> an</c><00:05:43.120><c> api</c><00:05:43.520><c> server</c>

00:05:44.310 --> 00:05:44.320 align:start position:0%
one of such processes is an api server
 

00:05:44.320 --> 00:05:47.430 align:start position:0%
one of such processes is an api server
which<00:05:44.720><c> also</c><00:05:45.280><c> is</c><00:05:45.440><c> a</c><00:05:45.520><c> container</c><00:05:46.400><c> an</c><00:05:46.639><c> api</c><00:05:47.120><c> server</c>

00:05:47.430 --> 00:05:47.440 align:start position:0%
which also is a container an api server
 

00:05:47.440 --> 00:05:49.430 align:start position:0%
which also is a container an api server
is<00:05:47.680><c> actually</c><00:05:48.240><c> the</c><00:05:48.479><c> entry</c><00:05:48.960><c> point</c><00:05:49.199><c> to</c><00:05:49.360><c> the</c>

00:05:49.430 --> 00:05:49.440 align:start position:0%
is actually the entry point to the
 

00:05:49.440 --> 00:05:51.590 align:start position:0%
is actually the entry point to the
kubernetes<00:05:50.160><c> cluster</c><00:05:50.800><c> so</c><00:05:51.039><c> this</c><00:05:51.280><c> is</c><00:05:51.360><c> the</c>

00:05:51.590 --> 00:05:51.600 align:start position:0%
kubernetes cluster so this is the
 

00:05:51.600 --> 00:05:52.390 align:start position:0%
kubernetes cluster so this is the
process

00:05:52.390 --> 00:05:52.400 align:start position:0%
process
 

00:05:52.400 --> 00:05:54.230 align:start position:0%
process
which<00:05:52.639><c> the</c><00:05:52.880><c> different</c><00:05:53.199><c> kubernetes</c><00:05:53.840><c> clients</c>

00:05:54.230 --> 00:05:54.240 align:start position:0%
which the different kubernetes clients
 

00:05:54.240 --> 00:05:56.710 align:start position:0%
which the different kubernetes clients
will<00:05:54.400><c> talk</c><00:05:54.639><c> to</c><00:05:55.199><c> like</c><00:05:55.520><c> ui</c><00:05:56.080><c> if</c><00:05:56.160><c> you're</c><00:05:56.319><c> using</c>

00:05:56.710 --> 00:05:56.720 align:start position:0%
will talk to like ui if you're using
 

00:05:56.720 --> 00:05:59.510 align:start position:0%
will talk to like ui if you're using
kubernetes<00:05:57.360><c> dashboard</c><00:05:58.319><c> an</c><00:05:58.560><c> api</c><00:05:59.120><c> if</c><00:05:59.280><c> you're</c>

00:05:59.510 --> 00:05:59.520 align:start position:0%
kubernetes dashboard an api if you're
 

00:05:59.520 --> 00:06:02.070 align:start position:0%
kubernetes dashboard an api if you're
using<00:06:00.160><c> some</c><00:06:00.400><c> scripts</c><00:06:01.199><c> and</c><00:06:01.440><c> automating</c>

00:06:02.070 --> 00:06:02.080 align:start position:0%
using some scripts and automating
 

00:06:02.080 --> 00:06:05.189 align:start position:0%
using some scripts and automating
technologies<00:06:03.039><c> and</c><00:06:03.440><c> a</c><00:06:03.520><c> command</c><00:06:03.919><c> line</c><00:06:04.240><c> tool</c><00:06:04.960><c> so</c>

00:06:05.189 --> 00:06:05.199 align:start position:0%
technologies and a command line tool so
 

00:06:05.199 --> 00:06:07.909 align:start position:0%
technologies and a command line tool so
all<00:06:05.440><c> of</c><00:06:05.520><c> these</c><00:06:05.759><c> will</c><00:06:06.080><c> talk</c><00:06:06.319><c> to</c><00:06:06.400><c> the</c><00:06:06.560><c> api</c><00:06:07.039><c> server</c>

00:06:07.909 --> 00:06:07.919 align:start position:0%
all of these will talk to the api server
 

00:06:07.919 --> 00:06:09.510 align:start position:0%
all of these will talk to the api server
another<00:06:08.319><c> process</c><00:06:08.720><c> that</c><00:06:08.880><c> is</c><00:06:09.039><c> running</c><00:06:09.360><c> on</c>

00:06:09.510 --> 00:06:09.520 align:start position:0%
another process that is running on
 

00:06:09.520 --> 00:06:12.230 align:start position:0%
another process that is running on
master<00:06:10.400><c> node</c><00:06:10.800><c> is</c><00:06:10.960><c> a</c><00:06:11.120><c> controller</c><00:06:11.600><c> manager</c>

00:06:12.230 --> 00:06:12.240 align:start position:0%
master node is a controller manager
 

00:06:12.240 --> 00:06:14.550 align:start position:0%
master node is a controller manager
which<00:06:12.400><c> basically</c><00:06:13.360><c> keeps</c><00:06:13.680><c> an</c><00:06:13.840><c> overview</c><00:06:14.479><c> of</c>

00:06:14.550 --> 00:06:14.560 align:start position:0%
which basically keeps an overview of
 

00:06:14.560 --> 00:06:16.710 align:start position:0%
which basically keeps an overview of
what's<00:06:14.880><c> happening</c><00:06:15.120><c> in</c><00:06:15.280><c> the</c><00:06:15.360><c> cluster</c><00:06:16.319><c> whether</c>

00:06:16.710 --> 00:06:16.720 align:start position:0%
what's happening in the cluster whether
 

00:06:16.720 --> 00:06:19.110 align:start position:0%
what's happening in the cluster whether
something<00:06:17.039><c> needs</c><00:06:17.280><c> to</c><00:06:17.440><c> be</c><00:06:17.600><c> repaired</c><00:06:18.479><c> or</c><00:06:18.639><c> maybe</c>

00:06:19.110 --> 00:06:19.120 align:start position:0%
something needs to be repaired or maybe
 

00:06:19.120 --> 00:06:21.110 align:start position:0%
something needs to be repaired or maybe
if<00:06:19.360><c> a</c><00:06:19.520><c> container</c><00:06:20.080><c> died</c><00:06:20.400><c> and</c><00:06:20.479><c> it</c><00:06:20.639><c> needs</c><00:06:20.800><c> to</c><00:06:20.960><c> be</c>

00:06:21.110 --> 00:06:21.120 align:start position:0%
if a container died and it needs to be
 

00:06:21.120 --> 00:06:23.189 align:start position:0%
if a container died and it needs to be
restarted<00:06:22.000><c> etc</c>

00:06:23.189 --> 00:06:23.199 align:start position:0%
restarted etc
 

00:06:23.199 --> 00:06:25.110 align:start position:0%
restarted etc
and<00:06:23.520><c> another</c><00:06:23.919><c> one</c><00:06:24.319><c> is</c>

00:06:25.110 --> 00:06:25.120 align:start position:0%
and another one is
 

00:06:25.120 --> 00:06:27.590 align:start position:0%
and another one is
scheduler<00:06:25.840><c> which</c><00:06:26.080><c> is</c><00:06:26.319><c> basically</c><00:06:26.800><c> responsible</c>

00:06:27.590 --> 00:06:27.600 align:start position:0%
scheduler which is basically responsible
 

00:06:27.600 --> 00:06:29.110 align:start position:0%
scheduler which is basically responsible
for<00:06:27.840><c> scheduling</c>

00:06:29.110 --> 00:06:29.120 align:start position:0%
for scheduling
 

00:06:29.120 --> 00:06:31.830 align:start position:0%
for scheduling
containers<00:06:29.919><c> on</c><00:06:30.160><c> different</c><00:06:30.560><c> nodes</c><00:06:31.280><c> based</c><00:06:31.680><c> on</c>

00:06:31.830 --> 00:06:31.840 align:start position:0%
containers on different nodes based on
 

00:06:31.840 --> 00:06:34.710 align:start position:0%
containers on different nodes based on
the<00:06:32.000><c> workload</c><00:06:32.800><c> and</c><00:06:32.960><c> the</c><00:06:33.280><c> available</c><00:06:34.319><c> server</c>

00:06:34.710 --> 00:06:34.720 align:start position:0%
the workload and the available server
 

00:06:34.720 --> 00:06:37.270 align:start position:0%
the workload and the available server
resources<00:06:35.680><c> on</c><00:06:36.080><c> each</c><00:06:36.400><c> node</c><00:06:36.800><c> so</c><00:06:36.960><c> it's</c><00:06:37.120><c> an</c>

00:06:37.270 --> 00:06:37.280 align:start position:0%
resources on each node so it's an
 

00:06:37.280 --> 00:06:38.550 align:start position:0%
resources on each node so it's an
intelligent

00:06:38.550 --> 00:06:38.560 align:start position:0%
intelligent
 

00:06:38.560 --> 00:06:41.270 align:start position:0%
intelligent
process<00:06:38.960><c> that</c><00:06:39.199><c> decides</c><00:06:40.000><c> on</c><00:06:40.240><c> which</c><00:06:40.800><c> worker</c>

00:06:41.270 --> 00:06:41.280 align:start position:0%
process that decides on which worker
 

00:06:41.280 --> 00:06:44.230 align:start position:0%
process that decides on which worker
node<00:06:42.000><c> the</c><00:06:42.240><c> next</c><00:06:42.960><c> container</c><00:06:43.840><c> should</c><00:06:44.080><c> be</c>

00:06:44.230 --> 00:06:44.240 align:start position:0%
node the next container should be
 

00:06:44.240 --> 00:06:46.550 align:start position:0%
node the next container should be
scheduled<00:06:44.880><c> on</c><00:06:45.360><c> based</c><00:06:45.680><c> on</c><00:06:45.759><c> the</c><00:06:46.000><c> available</c>

00:06:46.550 --> 00:06:46.560 align:start position:0%
scheduled on based on the available
 

00:06:46.560 --> 00:06:48.950 align:start position:0%
scheduled on based on the available
resources<00:06:47.199><c> on</c><00:06:47.280><c> those</c><00:06:47.520><c> worker</c><00:06:47.919><c> nodes</c><00:06:48.560><c> and</c><00:06:48.720><c> the</c>

00:06:48.950 --> 00:06:48.960 align:start position:0%
resources on those worker nodes and the
 

00:06:48.960 --> 00:06:51.270 align:start position:0%
resources on those worker nodes and the
load<00:06:49.199><c> that</c><00:06:49.360><c> that</c><00:06:49.599><c> container</c><00:06:50.160><c> needs</c><00:06:50.960><c> and</c>

00:06:51.270 --> 00:06:51.280 align:start position:0%
load that that container needs and
 

00:06:51.280 --> 00:06:53.430 align:start position:0%
load that that container needs and
another<00:06:52.000><c> very</c><00:06:52.240><c> important</c><00:06:52.720><c> component</c><00:06:53.199><c> of</c><00:06:53.280><c> the</c>

00:06:53.430 --> 00:06:53.440 align:start position:0%
another very important component of the
 

00:06:53.440 --> 00:06:56.469 align:start position:0%
another very important component of the
whole<00:06:53.680><c> cluster</c><00:06:54.400><c> is</c><00:06:54.639><c> actually</c><00:06:55.120><c> an</c><00:06:55.280><c> etcd</c><00:06:56.240><c> key</c>

00:06:56.469 --> 00:06:56.479 align:start position:0%
whole cluster is actually an etcd key
 

00:06:56.479 --> 00:06:59.510 align:start position:0%
whole cluster is actually an etcd key
value<00:06:56.960><c> storage</c><00:06:57.680><c> which</c><00:06:57.919><c> basically</c><00:06:58.639><c> holds</c><00:06:59.280><c> at</c>

00:06:59.510 --> 00:06:59.520 align:start position:0%
value storage which basically holds at
 

00:06:59.520 --> 00:07:01.990 align:start position:0%
value storage which basically holds at
any<00:06:59.759><c> time</c><00:07:00.240><c> the</c><00:07:00.400><c> current</c><00:07:00.880><c> state</c><00:07:01.360><c> of</c><00:07:01.599><c> the</c>

00:07:01.990 --> 00:07:02.000 align:start position:0%
any time the current state of the
 

00:07:02.000 --> 00:07:04.469 align:start position:0%
any time the current state of the
kubernetes<00:07:02.639><c> cluster</c><00:07:03.520><c> so</c><00:07:03.759><c> it</c><00:07:03.919><c> has</c><00:07:04.240><c> all</c><00:07:04.319><c> the</c>

00:07:04.469 --> 00:07:04.479 align:start position:0%
kubernetes cluster so it has all the
 

00:07:04.479 --> 00:07:06.629 align:start position:0%
kubernetes cluster so it has all the
configuration<00:07:05.199><c> data</c><00:07:05.680><c> inside</c>

00:07:06.629 --> 00:07:06.639 align:start position:0%
configuration data inside
 

00:07:06.639 --> 00:07:09.749 align:start position:0%
configuration data inside
and<00:07:07.039><c> all</c><00:07:07.280><c> the</c><00:07:07.680><c> status</c><00:07:08.160><c> data</c><00:07:08.560><c> of</c><00:07:08.800><c> each</c><00:07:09.120><c> node</c><00:07:09.520><c> and</c>

00:07:09.749 --> 00:07:09.759 align:start position:0%
and all the status data of each node and
 

00:07:09.759 --> 00:07:12.550 align:start position:0%
and all the status data of each node and
each<00:07:10.240><c> container</c><00:07:11.199><c> inside</c><00:07:11.599><c> of</c><00:07:11.680><c> that</c><00:07:12.000><c> node</c><00:07:12.400><c> and</c>

00:07:12.550 --> 00:07:12.560 align:start position:0%
each container inside of that node and
 

00:07:12.560 --> 00:07:14.469 align:start position:0%
each container inside of that node and
the<00:07:12.800><c> backup</c><00:07:13.199><c> and</c><00:07:13.280><c> restore</c><00:07:13.759><c> that</c><00:07:13.919><c> we</c><00:07:14.080><c> mentioned</c>

00:07:14.469 --> 00:07:14.479 align:start position:0%
the backup and restore that we mentioned
 

00:07:14.479 --> 00:07:16.870 align:start position:0%
the backup and restore that we mentioned
previously<00:07:15.360><c> is</c><00:07:15.599><c> actually</c><00:07:16.080><c> made</c><00:07:16.479><c> from</c><00:07:16.639><c> these</c>

00:07:16.870 --> 00:07:16.880 align:start position:0%
previously is actually made from these
 

00:07:16.880 --> 00:07:20.790 align:start position:0%
previously is actually made from these
etcd<00:07:17.919><c> snapshots</c><00:07:18.880><c> because</c><00:07:19.199><c> you</c><00:07:19.280><c> can</c><00:07:19.680><c> recover</c>

00:07:20.790 --> 00:07:20.800 align:start position:0%
etcd snapshots because you can recover
 

00:07:20.800 --> 00:07:24.230 align:start position:0%
etcd snapshots because you can recover
the<00:07:21.039><c> whole</c><00:07:21.360><c> cluster</c><00:07:21.919><c> state</c><00:07:22.560><c> using</c><00:07:22.880><c> that</c><00:07:23.199><c> etcd</c>

00:07:24.230 --> 00:07:24.240 align:start position:0%
the whole cluster state using that etcd
 

00:07:24.240 --> 00:07:26.950 align:start position:0%
the whole cluster state using that etcd
snapshot<00:07:24.960><c> and</c><00:07:25.120><c> last</c><00:07:25.360><c> but</c><00:07:25.599><c> not</c><00:07:25.840><c> least</c><00:07:26.560><c> also</c><00:07:26.880><c> a</c>

00:07:26.950 --> 00:07:26.960 align:start position:0%
snapshot and last but not least also a
 

00:07:26.960 --> 00:07:29.430 align:start position:0%
snapshot and last but not least also a
very<00:07:27.199><c> important</c><00:07:27.680><c> component</c><00:07:28.240><c> of</c><00:07:28.319><c> kubernetes</c>

00:07:29.430 --> 00:07:29.440 align:start position:0%
very important component of kubernetes
 

00:07:29.440 --> 00:07:32.309 align:start position:0%
very important component of kubernetes
which<00:07:29.840><c> enables</c><00:07:30.560><c> those</c><00:07:30.960><c> nodes</c><00:07:31.520><c> worker</c><00:07:31.919><c> nodes</c>

00:07:32.309 --> 00:07:32.319 align:start position:0%
which enables those nodes worker nodes
 

00:07:32.319 --> 00:07:34.390 align:start position:0%
which enables those nodes worker nodes
masternodes<00:07:33.120><c> talk</c><00:07:33.360><c> to</c><00:07:33.520><c> each</c><00:07:33.680><c> other</c><00:07:34.080><c> is</c><00:07:34.240><c> the</c>

00:07:34.390 --> 00:07:34.400 align:start position:0%
masternodes talk to each other is the
 

00:07:34.400 --> 00:07:37.749 align:start position:0%
masternodes talk to each other is the
virtual<00:07:34.960><c> network</c><00:07:35.680><c> that</c><00:07:36.000><c> spans</c><00:07:36.800><c> all</c><00:07:36.960><c> the</c><00:07:37.199><c> nodes</c>

00:07:37.749 --> 00:07:37.759 align:start position:0%
virtual network that spans all the nodes
 

00:07:37.759 --> 00:07:39.830 align:start position:0%
virtual network that spans all the nodes
that<00:07:37.919><c> are</c><00:07:38.160><c> part</c><00:07:38.479><c> of</c><00:07:38.639><c> the</c><00:07:38.800><c> cluster</c><00:07:39.520><c> and</c><00:07:39.680><c> in</c>

00:07:39.830 --> 00:07:39.840 align:start position:0%
that are part of the cluster and in
 

00:07:39.840 --> 00:07:42.710 align:start position:0%
that are part of the cluster and in
simple<00:07:40.240><c> words</c><00:07:40.960><c> virtual</c><00:07:41.440><c> network</c><00:07:42.000><c> actually</c>

00:07:42.710 --> 00:07:42.720 align:start position:0%
simple words virtual network actually
 

00:07:42.720 --> 00:07:43.749 align:start position:0%
simple words virtual network actually
turns

00:07:43.749 --> 00:07:43.759 align:start position:0%
turns
 

00:07:43.759 --> 00:07:46.790 align:start position:0%
turns
all<00:07:44.000><c> the</c><00:07:44.240><c> nodes</c><00:07:45.120><c> inside</c><00:07:45.440><c> of</c><00:07:45.599><c> a</c><00:07:45.759><c> cluster</c><00:07:46.400><c> into</c>

00:07:46.790 --> 00:07:46.800 align:start position:0%
all the nodes inside of a cluster into
 

00:07:46.800 --> 00:07:50.230 align:start position:0%
all the nodes inside of a cluster into
one<00:07:47.440><c> powerful</c><00:07:48.000><c> machine</c><00:07:48.800><c> that</c><00:07:49.120><c> has</c><00:07:49.520><c> the</c><00:07:49.759><c> sum</c><00:07:50.080><c> of</c>

00:07:50.230 --> 00:07:50.240 align:start position:0%
one powerful machine that has the sum of
 

00:07:50.240 --> 00:07:53.110 align:start position:0%
one powerful machine that has the sum of
all<00:07:50.400><c> the</c><00:07:50.560><c> resources</c><00:07:51.199><c> of</c><00:07:51.360><c> individual</c><00:07:52.479><c> nodes</c>

00:07:53.110 --> 00:07:53.120 align:start position:0%
all the resources of individual nodes
 

00:07:53.120 --> 00:07:55.110 align:start position:0%
all the resources of individual nodes
one<00:07:53.360><c> thing</c><00:07:53.599><c> to</c><00:07:53.680><c> be</c><00:07:53.840><c> noted</c><00:07:54.319><c> here</c><00:07:54.639><c> is</c><00:07:54.720><c> that</c>

00:07:55.110 --> 00:07:55.120 align:start position:0%
one thing to be noted here is that
 

00:07:55.120 --> 00:07:58.150 align:start position:0%
one thing to be noted here is that
worker<00:07:55.599><c> knows</c><00:07:55.919><c> because</c><00:07:56.319><c> they</c><00:07:56.720><c> actually</c><00:07:57.280><c> have</c>

00:07:58.150 --> 00:07:58.160 align:start position:0%
worker knows because they actually have
 

00:07:58.160 --> 00:08:01.350 align:start position:0%
worker knows because they actually have
most<00:07:58.639><c> load</c><00:07:59.360><c> because</c><00:07:59.680><c> they</c><00:07:59.919><c> are</c><00:08:00.160><c> running</c><00:08:00.560><c> the</c>

00:08:01.350 --> 00:08:01.360 align:start position:0%
most load because they are running the
 

00:08:01.360 --> 00:08:04.710 align:start position:0%
most load because they are running the
applications<00:08:02.560><c> on</c><00:08:02.960><c> inside</c><00:08:03.360><c> of</c><00:08:03.520><c> it</c><00:08:03.919><c> usually</c><00:08:04.479><c> are</c>

00:08:04.710 --> 00:08:04.720 align:start position:0%
applications on inside of it usually are
 

00:08:04.720 --> 00:08:07.110 align:start position:0%
applications on inside of it usually are
much<00:08:05.039><c> bigger</c><00:08:05.599><c> and</c><00:08:05.759><c> have</c><00:08:06.000><c> more</c><00:08:06.319><c> resources</c>

00:08:07.110 --> 00:08:07.120 align:start position:0%
much bigger and have more resources
 

00:08:07.120 --> 00:08:08.790 align:start position:0%
much bigger and have more resources
because<00:08:07.440><c> they</c><00:08:07.599><c> will</c><00:08:07.759><c> be</c><00:08:07.919><c> running</c><00:08:08.240><c> hundreds</c><00:08:08.639><c> of</c>

00:08:08.790 --> 00:08:08.800 align:start position:0%
because they will be running hundreds of
 

00:08:08.800 --> 00:08:11.749 align:start position:0%
because they will be running hundreds of
containers<00:08:09.440><c> inside</c><00:08:09.840><c> of</c><00:08:09.919><c> them</c><00:08:10.400><c> whereas</c><00:08:10.879><c> master</c>

00:08:11.749 --> 00:08:11.759 align:start position:0%
containers inside of them whereas master
 

00:08:11.759 --> 00:08:14.070 align:start position:0%
containers inside of them whereas master
node<00:08:12.080><c> will</c><00:08:12.240><c> be</c><00:08:12.400><c> running</c><00:08:12.720><c> just</c><00:08:12.960><c> a</c><00:08:13.039><c> handful</c><00:08:13.520><c> of</c>

00:08:14.070 --> 00:08:14.080 align:start position:0%
node will be running just a handful of
 

00:08:14.080 --> 00:08:16.230 align:start position:0%
node will be running just a handful of
master<00:08:14.560><c> processes</c><00:08:15.120><c> like</c><00:08:15.360><c> we</c><00:08:15.680><c> see</c><00:08:15.919><c> in</c><00:08:16.000><c> this</c>

00:08:16.230 --> 00:08:16.240 align:start position:0%
master processes like we see in this
 

00:08:16.240 --> 00:08:18.070 align:start position:0%
master processes like we see in this
diagram<00:08:16.960><c> so</c><00:08:17.120><c> it</c><00:08:17.199><c> doesn't</c><00:08:17.440><c> need</c><00:08:17.599><c> that</c><00:08:17.840><c> many</c>

00:08:18.070 --> 00:08:18.080 align:start position:0%
diagram so it doesn't need that many
 

00:08:18.080 --> 00:08:20.790 align:start position:0%
diagram so it doesn't need that many
resources<00:08:19.120><c> however</c><00:08:19.599><c> as</c><00:08:19.759><c> you</c><00:08:19.840><c> can</c><00:08:20.000><c> imagine</c>

00:08:20.790 --> 00:08:20.800 align:start position:0%
resources however as you can imagine
 

00:08:20.800 --> 00:08:23.430 align:start position:0%
resources however as you can imagine
masternode<00:08:21.680><c> is</c><00:08:22.240><c> much</c><00:08:22.560><c> more</c><00:08:22.800><c> important</c><00:08:23.280><c> than</c>

00:08:23.430 --> 00:08:23.440 align:start position:0%
masternode is much more important than
 

00:08:23.440 --> 00:08:25.589 align:start position:0%
masternode is much more important than
the<00:08:23.919><c> individual</c><00:08:24.479><c> worker</c><00:08:24.879><c> nodes</c><00:08:25.199><c> because</c><00:08:25.520><c> if</c>

00:08:25.589 --> 00:08:25.599 align:start position:0%
the individual worker nodes because if
 

00:08:25.599 --> 00:08:29.350 align:start position:0%
the individual worker nodes because if
for<00:08:25.840><c> example</c><00:08:26.319><c> you</c><00:08:26.879><c> lose</c><00:08:27.199><c> a</c><00:08:27.360><c> masternode</c><00:08:28.560><c> access</c>

00:08:29.350 --> 00:08:29.360 align:start position:0%
for example you lose a masternode access
 

00:08:29.360 --> 00:08:31.029 align:start position:0%
for example you lose a masternode access
you<00:08:29.520><c> will</c><00:08:29.680><c> not</c><00:08:29.919><c> be</c><00:08:30.080><c> able</c><00:08:30.240><c> to</c><00:08:30.479><c> access</c><00:08:30.879><c> the</c>

00:08:31.029 --> 00:08:31.039 align:start position:0%
you will not be able to access the
 

00:08:31.039 --> 00:08:34.070 align:start position:0%
you will not be able to access the
cluster<00:08:31.599><c> anymore</c><00:08:32.399><c> and</c><00:08:32.640><c> that</c><00:08:32.959><c> means</c><00:08:33.279><c> that</c><00:08:33.599><c> you</c>

00:08:34.070 --> 00:08:34.080 align:start position:0%
cluster anymore and that means that you
 

00:08:34.080 --> 00:08:36.630 align:start position:0%
cluster anymore and that means that you
absolutely<00:08:34.719><c> have</c><00:08:34.880><c> to</c><00:08:35.120><c> have</c><00:08:35.519><c> a</c><00:08:35.680><c> backup</c><00:08:36.159><c> of</c><00:08:36.320><c> your</c>

00:08:36.630 --> 00:08:36.640 align:start position:0%
absolutely have to have a backup of your
 

00:08:36.640 --> 00:08:39.670 align:start position:0%
absolutely have to have a backup of your
master<00:08:37.120><c> at</c><00:08:37.360><c> any</c><00:08:37.599><c> time</c><00:08:38.320><c> so</c><00:08:38.880><c> in</c><00:08:39.120><c> production</c>

00:08:39.670 --> 00:08:39.680 align:start position:0%
master at any time so in production
 

00:08:39.680 --> 00:08:41.509 align:start position:0%
master at any time so in production
environments<00:08:40.399><c> usually</c><00:08:40.800><c> you</c><00:08:40.880><c> would</c><00:08:41.039><c> have</c><00:08:41.279><c> at</c>

00:08:41.509 --> 00:08:41.519 align:start position:0%
environments usually you would have at
 

00:08:41.519 --> 00:08:43.990 align:start position:0%
environments usually you would have at
least<00:08:42.320><c> two</c><00:08:42.560><c> masters</c><00:08:43.360><c> inside</c><00:08:43.760><c> of</c><00:08:43.839><c> your</c>

00:08:43.990 --> 00:08:44.000 align:start position:0%
least two masters inside of your
 

00:08:44.000 --> 00:08:46.630 align:start position:0%
least two masters inside of your
kubernetes<00:08:44.640><c> cluster</c><00:08:45.519><c> but</c><00:08:45.680><c> in</c><00:08:45.839><c> more</c><00:08:46.080><c> cases</c><00:08:46.560><c> of</c>

00:08:46.630 --> 00:08:46.640 align:start position:0%
kubernetes cluster but in more cases of
 

00:08:46.640 --> 00:08:48.230 align:start position:0%
kubernetes cluster but in more cases of
course<00:08:47.120><c> you're</c><00:08:47.279><c> going</c><00:08:47.360><c> to</c><00:08:47.440><c> have</c><00:08:47.680><c> multiple</c>

00:08:48.230 --> 00:08:48.240 align:start position:0%
course you're going to have multiple
 

00:08:48.240 --> 00:08:51.670 align:start position:0%
course you're going to have multiple
musters<00:08:49.120><c> where</c><00:08:49.360><c> if</c><00:08:49.600><c> one</c><00:08:49.920><c> muster</c><00:08:50.800><c> node</c>

00:08:51.670 --> 00:08:51.680 align:start position:0%
musters where if one muster node
 

00:08:51.680 --> 00:08:54.070 align:start position:0%
musters where if one muster node
is<00:08:51.920><c> down</c><00:08:52.640><c> the</c><00:08:52.800><c> cluster</c><00:08:53.279><c> continues</c><00:08:53.839><c> to</c>

00:08:54.070 --> 00:08:54.080 align:start position:0%
is down the cluster continues to
 

00:08:54.080 --> 00:08:56.630 align:start position:0%
is down the cluster continues to
function<00:08:54.959><c> smoothly</c><00:08:55.440><c> because</c><00:08:55.760><c> you</c><00:08:55.920><c> have</c><00:08:56.399><c> other</c>

00:08:56.630 --> 00:08:56.640 align:start position:0%
function smoothly because you have other
 

00:08:56.640 --> 00:08:59.430 align:start position:0%
function smoothly because you have other
masters<00:08:57.120><c> available</c>

00:08:59.430 --> 00:08:59.440 align:start position:0%
masters available
 

00:08:59.440 --> 00:09:01.829 align:start position:0%
masters available
in<00:08:59.600><c> this</c><00:08:59.839><c> video</c><00:09:00.320><c> we're</c><00:09:00.560><c> going</c><00:09:00.640><c> to</c><00:09:00.800><c> learn</c><00:09:01.120><c> about</c>

00:09:01.829 --> 00:09:01.839 align:start position:0%
in this video we're going to learn about
 

00:09:01.839 --> 00:09:04.790 align:start position:0%
in this video we're going to learn about
the<00:09:02.000><c> main</c><00:09:02.320><c> kubernetes</c><00:09:03.040><c> components</c><00:09:04.160><c> that</c><00:09:04.480><c> we</c>

00:09:04.790 --> 00:09:04.800 align:start position:0%
the main kubernetes components that we
 

00:09:04.800 --> 00:09:07.670 align:start position:0%
the main kubernetes components that we
as<00:09:05.040><c> kubernetes</c><00:09:05.680><c> administrators</c><00:09:06.720><c> or</c><00:09:07.120><c> users</c>

00:09:07.670 --> 00:09:07.680 align:start position:0%
as kubernetes administrators or users
 

00:09:07.680 --> 00:09:10.230 align:start position:0%
as kubernetes administrators or users
will<00:09:07.920><c> be</c><00:09:08.080><c> working</c><00:09:08.480><c> with</c><00:09:08.880><c> most</c><00:09:09.120><c> of</c><00:09:09.200><c> the</c><00:09:09.360><c> time</c><00:09:10.080><c> to</c>

00:09:10.230 --> 00:09:10.240 align:start position:0%
will be working with most of the time to
 

00:09:10.240 --> 00:09:12.310 align:start position:0%
will be working with most of the time to
make<00:09:10.480><c> it</c><00:09:10.720><c> easier</c><00:09:11.120><c> to</c><00:09:11.279><c> understand</c><00:09:11.839><c> all</c><00:09:12.000><c> these</c>

00:09:12.310 --> 00:09:12.320 align:start position:0%
make it easier to understand all these
 

00:09:12.320 --> 00:09:14.870 align:start position:0%
make it easier to understand all these
components<00:09:13.200><c> i'm</c><00:09:13.360><c> gonna</c><00:09:13.600><c> build</c><00:09:14.000><c> a</c><00:09:14.240><c> simple</c><00:09:14.560><c> use</c>

00:09:14.870 --> 00:09:14.880 align:start position:0%
components i'm gonna build a simple use
 

00:09:14.880 --> 00:09:17.509 align:start position:0%
components i'm gonna build a simple use
case<00:09:15.279><c> of</c><00:09:15.440><c> a</c><00:09:15.519><c> web</c><00:09:15.760><c> application</c><00:09:16.640><c> with</c><00:09:16.959><c> a</c><00:09:17.120><c> simple</c>

00:09:17.509 --> 00:09:17.519 align:start position:0%
case of a web application with a simple
 

00:09:17.519 --> 00:09:20.150 align:start position:0%
case of a web application with a simple
database<00:09:18.399><c> and</c><00:09:18.640><c> i'm</c><00:09:18.800><c> gonna</c><00:09:19.040><c> show</c><00:09:19.279><c> you</c><00:09:19.600><c> step</c><00:09:19.920><c> by</c>

00:09:20.150 --> 00:09:20.160 align:start position:0%
database and i'm gonna show you step by
 

00:09:20.160 --> 00:09:23.110 align:start position:0%
database and i'm gonna show you step by
step<00:09:20.720><c> how</c><00:09:21.040><c> each</c><00:09:21.360><c> component</c><00:09:21.920><c> in</c><00:09:22.000><c> kubernetes</c>

00:09:23.110 --> 00:09:23.120 align:start position:0%
step how each component in kubernetes
 

00:09:23.120 --> 00:09:25.269 align:start position:0%
step how each component in kubernetes
helps<00:09:23.440><c> you</c><00:09:23.600><c> deploy</c><00:09:24.160><c> such</c><00:09:24.399><c> an</c><00:09:24.560><c> application</c>

00:09:25.269 --> 00:09:25.279 align:start position:0%
helps you deploy such an application
 

00:09:25.279 --> 00:09:27.670 align:start position:0%
helps you deploy such an application
setup<00:09:25.920><c> and</c><00:09:26.160><c> what</c><00:09:26.399><c> is</c><00:09:26.480><c> the</c><00:09:26.640><c> role</c><00:09:27.040><c> of</c><00:09:27.279><c> each</c><00:09:27.519><c> of</c>

00:09:27.670 --> 00:09:27.680 align:start position:0%
setup and what is the role of each of
 

00:09:27.680 --> 00:09:31.670 align:start position:0%
setup and what is the role of each of
these<00:09:27.920><c> components</c>

00:09:31.670 --> 00:09:31.680 align:start position:0%
 
 

00:09:31.680 --> 00:09:34.230 align:start position:0%
 
so<00:09:31.839><c> let's</c><00:09:32.080><c> start</c><00:09:32.320><c> with</c><00:09:32.480><c> the</c><00:09:32.560><c> basic</c><00:09:32.959><c> setup</c><00:09:33.440><c> of</c><00:09:33.839><c> a</c>

00:09:34.230 --> 00:09:34.240 align:start position:0%
so let's start with the basic setup of a
 

00:09:34.240 --> 00:09:37.350 align:start position:0%
so let's start with the basic setup of a
worker<00:09:34.640><c> node</c><00:09:35.440><c> or</c><00:09:35.680><c> in</c><00:09:35.839><c> kubernetes</c><00:09:36.640><c> terms</c><00:09:37.200><c> a</c>

00:09:37.350 --> 00:09:37.360 align:start position:0%
worker node or in kubernetes terms a
 

00:09:37.360 --> 00:09:38.550 align:start position:0%
worker node or in kubernetes terms a
node

00:09:38.550 --> 00:09:38.560 align:start position:0%
node
 

00:09:38.560 --> 00:09:41.110 align:start position:0%
node
which<00:09:38.800><c> is</c><00:09:39.040><c> a</c><00:09:39.200><c> simple</c><00:09:39.680><c> server</c><00:09:40.399><c> a</c><00:09:40.560><c> physical</c><00:09:41.040><c> or</c>

00:09:41.110 --> 00:09:41.120 align:start position:0%
which is a simple server a physical or
 

00:09:41.120 --> 00:09:43.910 align:start position:0%
which is a simple server a physical or
virtual<00:09:41.519><c> machine</c><00:09:42.240><c> and</c><00:09:42.399><c> the</c><00:09:42.640><c> basic</c><00:09:43.200><c> component</c>

00:09:43.910 --> 00:09:43.920 align:start position:0%
virtual machine and the basic component
 

00:09:43.920 --> 00:09:47.430 align:start position:0%
virtual machine and the basic component
or<00:09:44.000><c> the</c><00:09:44.160><c> smallest</c><00:09:44.720><c> unit</c><00:09:45.440><c> of</c><00:09:45.600><c> kubernetes</c><00:09:46.399><c> is</c><00:09:47.120><c> a</c>

00:09:47.430 --> 00:09:47.440 align:start position:0%
or the smallest unit of kubernetes is a
 

00:09:47.440 --> 00:09:49.990 align:start position:0%
or the smallest unit of kubernetes is a
pod<00:09:48.160><c> so</c><00:09:48.320><c> what</c><00:09:48.640><c> pod</c><00:09:49.040><c> is</c><00:09:49.279><c> is</c><00:09:49.440><c> basically</c><00:09:49.839><c> an</c>

00:09:49.990 --> 00:09:50.000 align:start position:0%
pod so what pod is is basically an
 

00:09:50.000 --> 00:09:52.949 align:start position:0%
pod so what pod is is basically an
abstraction<00:09:50.880><c> over</c><00:09:51.360><c> a</c><00:09:51.519><c> container</c><00:09:52.560><c> so</c><00:09:52.800><c> if</c>

00:09:52.949 --> 00:09:52.959 align:start position:0%
abstraction over a container so if
 

00:09:52.959 --> 00:09:55.190 align:start position:0%
abstraction over a container so if
you're<00:09:53.200><c> familiar</c><00:09:53.600><c> with</c><00:09:53.760><c> docker</c><00:09:54.160><c> containers</c>

00:09:55.190 --> 00:09:55.200 align:start position:0%
you're familiar with docker containers
 

00:09:55.200 --> 00:09:57.670 align:start position:0%
you're familiar with docker containers
or<00:09:55.440><c> container</c><00:09:56.080><c> images</c><00:09:56.880><c> so</c><00:09:57.040><c> basically</c><00:09:57.440><c> what</c>

00:09:57.670 --> 00:09:57.680 align:start position:0%
or container images so basically what
 

00:09:57.680 --> 00:10:00.389 align:start position:0%
or container images so basically what
pod<00:09:58.000><c> does</c><00:09:58.320><c> is</c><00:09:58.800><c> it</c><00:09:59.040><c> creates</c><00:09:59.440><c> this</c><00:09:59.839><c> running</c>

00:10:00.389 --> 00:10:00.399 align:start position:0%
pod does is it creates this running
 

00:10:00.399 --> 00:10:03.509 align:start position:0%
pod does is it creates this running
environment<00:10:01.519><c> or</c><00:10:01.920><c> a</c><00:10:02.079><c> layer</c><00:10:02.560><c> on</c><00:10:02.720><c> top</c><00:10:03.040><c> of</c><00:10:03.200><c> the</c>

00:10:03.509 --> 00:10:03.519 align:start position:0%
environment or a layer on top of the
 

00:10:03.519 --> 00:10:04.389 align:start position:0%
environment or a layer on top of the
container

00:10:04.389 --> 00:10:04.399 align:start position:0%
container
 

00:10:04.399 --> 00:10:06.310 align:start position:0%
container
and<00:10:04.560><c> the</c><00:10:04.720><c> reason</c><00:10:05.120><c> is</c><00:10:05.279><c> because</c><00:10:05.519><c> kubernetes</c>

00:10:06.310 --> 00:10:06.320 align:start position:0%
and the reason is because kubernetes
 

00:10:06.320 --> 00:10:09.030 align:start position:0%
and the reason is because kubernetes
wants<00:10:06.560><c> to</c><00:10:06.880><c> abstract</c><00:10:07.600><c> away</c><00:10:08.160><c> the</c><00:10:08.399><c> container</c>

00:10:09.030 --> 00:10:09.040 align:start position:0%
wants to abstract away the container
 

00:10:09.040 --> 00:10:11.910 align:start position:0%
wants to abstract away the container
runtime<00:10:09.519><c> or</c><00:10:09.760><c> container</c><00:10:10.399><c> technologies</c><00:10:11.680><c> so</c>

00:10:11.910 --> 00:10:11.920 align:start position:0%
runtime or container technologies so
 

00:10:11.920 --> 00:10:14.790 align:start position:0%
runtime or container technologies so
that<00:10:12.399><c> you</c><00:10:12.560><c> can</c><00:10:12.800><c> replace</c><00:10:13.440><c> them</c><00:10:13.680><c> if</c><00:10:13.839><c> you</c><00:10:14.000><c> want</c><00:10:14.240><c> to</c>

00:10:14.790 --> 00:10:14.800 align:start position:0%
that you can replace them if you want to
 

00:10:14.800 --> 00:10:16.310 align:start position:0%
that you can replace them if you want to
and<00:10:15.040><c> also</c><00:10:15.360><c> because</c><00:10:15.600><c> you</c><00:10:15.760><c> don't</c><00:10:15.920><c> have</c><00:10:16.160><c> to</c>

00:10:16.310 --> 00:10:16.320 align:start position:0%
and also because you don't have to
 

00:10:16.320 --> 00:10:19.350 align:start position:0%
and also because you don't have to
directly<00:10:17.120><c> work</c><00:10:17.440><c> with</c><00:10:18.000><c> docker</c><00:10:18.560><c> or</c><00:10:18.640><c> whatever</c>

00:10:19.350 --> 00:10:19.360 align:start position:0%
directly work with docker or whatever
 

00:10:19.360 --> 00:10:21.509 align:start position:0%
directly work with docker or whatever
container<00:10:19.920><c> technology</c><00:10:20.880><c> you</c><00:10:21.040><c> use</c><00:10:21.360><c> in</c><00:10:21.440><c> a</c>

00:10:21.509 --> 00:10:21.519 align:start position:0%
container technology you use in a
 

00:10:21.519 --> 00:10:23.269 align:start position:0%
container technology you use in a
kubernetes<00:10:22.079><c> so</c><00:10:22.240><c> you</c><00:10:22.480><c> only</c><00:10:22.720><c> interact</c><00:10:23.120><c> with</c><00:10:23.200><c> the</c>

00:10:23.269 --> 00:10:23.279 align:start position:0%
kubernetes so you only interact with the
 

00:10:23.279 --> 00:10:25.190 align:start position:0%
kubernetes so you only interact with the
kubernetes<00:10:23.839><c> layer</c><00:10:24.240><c> so</c><00:10:24.480><c> we</c><00:10:24.640><c> have</c><00:10:25.040><c> an</c>

00:10:25.190 --> 00:10:25.200 align:start position:0%
kubernetes layer so we have an
 

00:10:25.200 --> 00:10:27.430 align:start position:0%
kubernetes layer so we have an
application<00:10:26.000><c> pod</c><00:10:26.480><c> which</c><00:10:26.800><c> is</c><00:10:26.959><c> our</c><00:10:27.279><c> own</c>

00:10:27.430 --> 00:10:27.440 align:start position:0%
application pod which is our own
 

00:10:27.440 --> 00:10:30.150 align:start position:0%
application pod which is our own
application<00:10:28.480><c> and</c><00:10:28.640><c> that</c><00:10:28.880><c> will</c><00:10:29.360><c> maybe</c><00:10:29.680><c> use</c><00:10:30.000><c> a</c>

00:10:30.150 --> 00:10:30.160 align:start position:0%
application and that will maybe use a
 

00:10:30.160 --> 00:10:32.949 align:start position:0%
application and that will maybe use a
database<00:10:31.040><c> pod</c><00:10:31.440><c> with</c><00:10:31.680><c> its</c><00:10:32.000><c> own</c><00:10:32.240><c> container</c><00:10:32.880><c> and</c>

00:10:32.949 --> 00:10:32.959 align:start position:0%
database pod with its own container and
 

00:10:32.959 --> 00:10:35.509 align:start position:0%
database pod with its own container and
this<00:10:33.200><c> is</c><00:10:33.440><c> also</c><00:10:33.680><c> an</c><00:10:33.839><c> important</c><00:10:34.399><c> concept</c><00:10:34.880><c> here</c>

00:10:35.509 --> 00:10:35.519 align:start position:0%
this is also an important concept here
 

00:10:35.519 --> 00:10:38.310 align:start position:0%
this is also an important concept here
pod<00:10:35.920><c> is</c><00:10:36.079><c> usually</c><00:10:36.720><c> meant</c><00:10:37.040><c> to</c><00:10:37.279><c> run</c><00:10:38.000><c> one</c>

00:10:38.310 --> 00:10:38.320 align:start position:0%
pod is usually meant to run one
 

00:10:38.320 --> 00:10:41.190 align:start position:0%
pod is usually meant to run one
application<00:10:39.120><c> container</c><00:10:40.160><c> inside</c><00:10:40.560><c> of</c><00:10:40.720><c> it</c><00:10:41.040><c> you</c>

00:10:41.190 --> 00:10:41.200 align:start position:0%
application container inside of it you
 

00:10:41.200 --> 00:10:43.430 align:start position:0%
application container inside of it you
can<00:10:41.360><c> run</c><00:10:41.680><c> multiple</c><00:10:42.160><c> containers</c><00:10:42.720><c> inside</c><00:10:43.200><c> one</c>

00:10:43.430 --> 00:10:43.440 align:start position:0%
can run multiple containers inside one
 

00:10:43.440 --> 00:10:45.910 align:start position:0%
can run multiple containers inside one
pod<00:10:44.160><c> but</c><00:10:44.480><c> usually</c><00:10:44.880><c> it's</c><00:10:45.120><c> only</c><00:10:45.360><c> the</c><00:10:45.519><c> case</c><00:10:45.839><c> if</c>

00:10:45.910 --> 00:10:45.920 align:start position:0%
pod but usually it's only the case if
 

00:10:45.920 --> 00:10:48.069 align:start position:0%
pod but usually it's only the case if
you<00:10:46.079><c> have</c><00:10:46.240><c> one</c><00:10:46.560><c> main</c><00:10:46.880><c> application</c><00:10:47.440><c> container</c>

00:10:48.069 --> 00:10:48.079 align:start position:0%
you have one main application container
 

00:10:48.079 --> 00:10:51.350 align:start position:0%
you have one main application container
and<00:10:48.240><c> the</c><00:10:48.720><c> helper</c><00:10:49.360><c> container</c><00:10:50.000><c> or</c><00:10:50.240><c> some</c><00:10:50.880><c> side</c>

00:10:51.350 --> 00:10:51.360 align:start position:0%
and the helper container or some side
 

00:10:51.360 --> 00:10:54.389 align:start position:0%
and the helper container or some side
service<00:10:52.079><c> that</c><00:10:52.320><c> has</c><00:10:52.560><c> to</c><00:10:52.800><c> run</c><00:10:53.200><c> inside</c><00:10:53.600><c> of</c><00:10:53.760><c> that</c>

00:10:54.389 --> 00:10:54.399 align:start position:0%
service that has to run inside of that
 

00:10:54.399 --> 00:10:55.350 align:start position:0%
service that has to run inside of that
pod

00:10:55.350 --> 00:10:55.360 align:start position:0%
pod
 

00:10:55.360 --> 00:10:57.030 align:start position:0%
pod
and<00:10:55.519><c> as</c><00:10:55.760><c> you</c><00:10:55.839><c> see</c><00:10:56.079><c> this</c><00:10:56.240><c> is</c><00:10:56.320><c> nothing</c><00:10:56.640><c> special</c>

00:10:57.030 --> 00:10:57.040 align:start position:0%
and as you see this is nothing special
 

00:10:57.040 --> 00:10:58.790 align:start position:0%
and as you see this is nothing special
you<00:10:57.200><c> just</c><00:10:57.360><c> have</c><00:10:57.519><c> one</c><00:10:57.760><c> server</c><00:10:58.240><c> and</c><00:10:58.560><c> two</c>

00:10:58.790 --> 00:10:58.800 align:start position:0%
you just have one server and two
 

00:10:58.800 --> 00:11:00.710 align:start position:0%
you just have one server and two
containers<00:10:59.360><c> running</c><00:10:59.600><c> on</c><00:10:59.760><c> it</c><00:11:00.160><c> with</c><00:11:00.399><c> a</c>

00:11:00.710 --> 00:11:00.720 align:start position:0%
containers running on it with a
 

00:11:00.720 --> 00:11:02.870 align:start position:0%
containers running on it with a
abstraction<00:11:01.360><c> layer</c><00:11:01.760><c> on</c><00:11:01.839><c> top</c><00:11:02.079><c> of</c><00:11:02.240><c> it</c><00:11:02.560><c> so</c><00:11:02.720><c> now</c>

00:11:02.870 --> 00:11:02.880 align:start position:0%
abstraction layer on top of it so now
 

00:11:02.880 --> 00:11:04.710 align:start position:0%
abstraction layer on top of it so now
let's<00:11:03.120><c> see</c><00:11:03.279><c> how</c><00:11:03.440><c> they</c><00:11:03.760><c> communicate</c><00:11:04.320><c> with</c><00:11:04.560><c> each</c>

00:11:04.710 --> 00:11:04.720 align:start position:0%
let's see how they communicate with each
 

00:11:04.720 --> 00:11:07.110 align:start position:0%
let's see how they communicate with each
other<00:11:05.040><c> in</c><00:11:05.120><c> kubernetes</c><00:11:05.760><c> world</c><00:11:06.320><c> so</c><00:11:06.480><c> kubernetes</c>

00:11:07.110 --> 00:11:07.120 align:start position:0%
other in kubernetes world so kubernetes
 

00:11:07.120 --> 00:11:09.269 align:start position:0%
other in kubernetes world so kubernetes
offers<00:11:07.440><c> out</c><00:11:07.600><c> of</c><00:11:07.680><c> the</c><00:11:07.839><c> box</c><00:11:08.160><c> a</c><00:11:08.320><c> virtual</c><00:11:08.800><c> network</c>

00:11:09.269 --> 00:11:09.279 align:start position:0%
offers out of the box a virtual network
 

00:11:09.279 --> 00:11:10.949 align:start position:0%
offers out of the box a virtual network
which<00:11:09.519><c> means</c><00:11:09.760><c> that</c><00:11:10.000><c> each</c>

00:11:10.949 --> 00:11:10.959 align:start position:0%
which means that each
 

00:11:10.959 --> 00:11:14.389 align:start position:0%
which means that each
pod<00:11:11.839><c> gets</c><00:11:12.240><c> its</c><00:11:12.480><c> own</c><00:11:12.880><c> ip</c><00:11:13.200><c> address</c><00:11:14.079><c> not</c><00:11:14.240><c> the</c>

00:11:14.389 --> 00:11:14.399 align:start position:0%
pod gets its own ip address not the
 

00:11:14.399 --> 00:11:16.870 align:start position:0%
pod gets its own ip address not the
container<00:11:14.959><c> the</c><00:11:15.120><c> pod</c><00:11:15.440><c> gets</c><00:11:15.680><c> the</c><00:11:15.839><c> ip</c><00:11:16.079><c> address</c>

00:11:16.870 --> 00:11:16.880 align:start position:0%
container the pod gets the ip address
 

00:11:16.880 --> 00:11:18.470 align:start position:0%
container the pod gets the ip address
and<00:11:17.120><c> each</c><00:11:17.600><c> pod</c>

00:11:18.470 --> 00:11:18.480 align:start position:0%
and each pod
 

00:11:18.480 --> 00:11:20.470 align:start position:0%
and each pod
can<00:11:18.800><c> communicate</c><00:11:19.440><c> with</c><00:11:19.600><c> each</c><00:11:19.839><c> other</c><00:11:20.240><c> using</c>

00:11:20.470 --> 00:11:20.480 align:start position:0%
can communicate with each other using
 

00:11:20.480 --> 00:11:22.710 align:start position:0%
can communicate with each other using
that<00:11:20.720><c> ip</c><00:11:21.120><c> address</c><00:11:21.519><c> which</c><00:11:21.680><c> is</c><00:11:21.839><c> an</c><00:11:22.000><c> internal</c><00:11:22.480><c> ip</c>

00:11:22.710 --> 00:11:22.720 align:start position:0%
that ip address which is an internal ip
 

00:11:22.720 --> 00:11:24.870 align:start position:0%
that ip address which is an internal ip
address<00:11:23.200><c> obviously</c><00:11:23.680><c> it's</c><00:11:23.839><c> not</c><00:11:24.000><c> the</c><00:11:24.399><c> public</c>

00:11:24.870 --> 00:11:24.880 align:start position:0%
address obviously it's not the public
 

00:11:24.880 --> 00:11:27.910 align:start position:0%
address obviously it's not the public
one<00:11:25.519><c> so</c><00:11:25.760><c> my</c><00:11:26.160><c> application</c><00:11:27.120><c> container</c><00:11:27.680><c> can</c>

00:11:27.910 --> 00:11:27.920 align:start position:0%
one so my application container can
 

00:11:27.920 --> 00:11:29.990 align:start position:0%
one so my application container can
communicate<00:11:28.480><c> with</c><00:11:28.640><c> database</c><00:11:29.200><c> using</c><00:11:29.519><c> the</c><00:11:29.680><c> ip</c>

00:11:29.990 --> 00:11:30.000 align:start position:0%
communicate with database using the ip
 

00:11:30.000 --> 00:11:33.190 align:start position:0%
communicate with database using the ip
address<00:11:30.880><c> however</c><00:11:31.760><c> pod</c><00:11:32.399><c> components</c><00:11:33.040><c> in</c>

00:11:33.190 --> 00:11:33.200 align:start position:0%
address however pod components in
 

00:11:33.200 --> 00:11:36.150 align:start position:0%
address however pod components in
kubernetes<00:11:34.160><c> also</c><00:11:34.480><c> an</c><00:11:34.640><c> important</c><00:11:35.040><c> concept</c><00:11:36.000><c> are</c>

00:11:36.150 --> 00:11:36.160 align:start position:0%
kubernetes also an important concept are
 

00:11:36.160 --> 00:11:39.190 align:start position:0%
kubernetes also an important concept are
ephemeral<00:11:36.880><c> which</c><00:11:37.200><c> means</c><00:11:37.440><c> that</c><00:11:37.600><c> they</c><00:11:37.839><c> can</c><00:11:38.240><c> die</c>

00:11:39.190 --> 00:11:39.200 align:start position:0%
ephemeral which means that they can die
 

00:11:39.200 --> 00:11:40.790 align:start position:0%
ephemeral which means that they can die
very<00:11:39.600><c> easily</c>

00:11:40.790 --> 00:11:40.800 align:start position:0%
very easily
 

00:11:40.800 --> 00:11:42.790 align:start position:0%
very easily
and<00:11:40.959><c> when</c><00:11:41.120><c> that</c><00:11:41.440><c> happens</c><00:11:41.920><c> for</c><00:11:42.079><c> example</c><00:11:42.480><c> if</c><00:11:42.640><c> i</c>

00:11:42.790 --> 00:11:42.800 align:start position:0%
and when that happens for example if i
 

00:11:42.800 --> 00:11:45.590 align:start position:0%
and when that happens for example if i
lose<00:11:43.040><c> a</c><00:11:43.120><c> database</c><00:11:43.680><c> container</c><00:11:44.560><c> because</c><00:11:45.440><c> the</c>

00:11:45.590 --> 00:11:45.600 align:start position:0%
lose a database container because the
 

00:11:45.600 --> 00:11:47.590 align:start position:0%
lose a database container because the
container<00:11:46.640><c> crashed</c><00:11:47.040><c> because</c><00:11:47.360><c> the</c>

00:11:47.590 --> 00:11:47.600 align:start position:0%
container crashed because the
 

00:11:47.600 --> 00:11:50.629 align:start position:0%
container crashed because the
application<00:11:48.240><c> crashed</c><00:11:48.720><c> inside</c><00:11:49.519><c> or</c><00:11:49.760><c> because</c>

00:11:50.629 --> 00:11:50.639 align:start position:0%
application crashed inside or because
 

00:11:50.639 --> 00:11:53.030 align:start position:0%
application crashed inside or because
the<00:11:50.880><c> nodes</c><00:11:51.600><c> the</c><00:11:51.839><c> server</c><00:11:52.240><c> that</c><00:11:52.399><c> i'm</c><00:11:52.639><c> running</c>

00:11:53.030 --> 00:11:53.040 align:start position:0%
the nodes the server that i'm running
 

00:11:53.040 --> 00:11:54.470 align:start position:0%
the nodes the server that i'm running
them<00:11:53.360><c> on</c>

00:11:54.470 --> 00:11:54.480 align:start position:0%
them on
 

00:11:54.480 --> 00:11:57.670 align:start position:0%
them on
ran<00:11:54.720><c> out</c><00:11:55.040><c> resources</c><00:11:56.000><c> the</c><00:11:56.160><c> pod</c><00:11:56.480><c> will</c><00:11:56.639><c> die</c>

00:11:57.670 --> 00:11:57.680 align:start position:0%
ran out resources the pod will die
 

00:11:57.680 --> 00:11:59.829 align:start position:0%
ran out resources the pod will die
and<00:11:57.920><c> a</c><00:11:58.000><c> new</c><00:11:58.240><c> one</c><00:11:58.480><c> will</c><00:11:58.720><c> get</c><00:11:58.959><c> created</c><00:11:59.519><c> in</c><00:11:59.600><c> its</c>

00:11:59.829 --> 00:11:59.839 align:start position:0%
and a new one will get created in its
 

00:11:59.839 --> 00:12:02.470 align:start position:0%
and a new one will get created in its
place<00:12:00.639><c> and</c><00:12:00.800><c> when</c><00:12:01.040><c> that</c><00:12:01.279><c> happens</c><00:12:01.839><c> it</c><00:12:02.000><c> will</c><00:12:02.160><c> get</c>

00:12:02.470 --> 00:12:02.480 align:start position:0%
place and when that happens it will get
 

00:12:02.480 --> 00:12:04.949 align:start position:0%
place and when that happens it will get
assigned<00:12:03.040><c> a</c><00:12:03.279><c> new</c><00:12:03.519><c> ip</c><00:12:03.920><c> address</c><00:12:04.639><c> which</c>

00:12:04.949 --> 00:12:04.959 align:start position:0%
assigned a new ip address which
 

00:12:04.959 --> 00:12:07.110 align:start position:0%
assigned a new ip address which
obviously<00:12:05.440><c> is</c><00:12:05.600><c> inconvenient</c><00:12:06.320><c> if</c><00:12:06.480><c> you</c><00:12:06.720><c> are</c>

00:12:07.110 --> 00:12:07.120 align:start position:0%
obviously is inconvenient if you are
 

00:12:07.120 --> 00:12:08.949 align:start position:0%
obviously is inconvenient if you are
communicating<00:12:07.839><c> with</c><00:12:08.000><c> the</c><00:12:08.079><c> database</c><00:12:08.720><c> using</c>

00:12:08.949 --> 00:12:08.959 align:start position:0%
communicating with the database using
 

00:12:08.959 --> 00:12:10.629 align:start position:0%
communicating with the database using
the<00:12:09.120><c> ip</c><00:12:09.360><c> address</c><00:12:09.760><c> because</c><00:12:10.079><c> now</c><00:12:10.240><c> you</c><00:12:10.320><c> have</c><00:12:10.480><c> to</c>

00:12:10.629 --> 00:12:10.639 align:start position:0%
the ip address because now you have to
 

00:12:10.639 --> 00:12:13.590 align:start position:0%
the ip address because now you have to
adjust<00:12:11.040><c> it</c><00:12:11.360><c> every</c><00:12:11.760><c> time</c><00:12:12.399><c> pod</c><00:12:12.720><c> restarts</c><00:12:13.440><c> and</c>

00:12:13.590 --> 00:12:13.600 align:start position:0%
adjust it every time pod restarts and
 

00:12:13.600 --> 00:12:15.990 align:start position:0%
adjust it every time pod restarts and
because<00:12:14.000><c> of</c><00:12:14.160><c> that</c><00:12:14.560><c> another</c><00:12:15.200><c> component</c><00:12:15.839><c> of</c>

00:12:15.990 --> 00:12:16.000 align:start position:0%
because of that another component of
 

00:12:16.000 --> 00:12:21.670 align:start position:0%
because of that another component of
kubernetes<00:12:16.720><c> called</c><00:12:17.360><c> service</c><00:12:18.079><c> is</c><00:12:18.320><c> used</c>

00:12:21.670 --> 00:12:21.680 align:start position:0%
 
 

00:12:21.680 --> 00:12:24.710 align:start position:0%
 
so<00:12:22.000><c> service</c><00:12:22.480><c> is</c><00:12:22.720><c> basically</c><00:12:23.519><c> a</c><00:12:23.760><c> static</c><00:12:24.320><c> ip</c>

00:12:24.710 --> 00:12:24.720 align:start position:0%
so service is basically a static ip
 

00:12:24.720 --> 00:12:27.110 align:start position:0%
so service is basically a static ip
address<00:12:25.040><c> or</c><00:12:25.200><c> permanent</c><00:12:25.760><c> ip</c><00:12:26.079><c> address</c><00:12:26.639><c> that</c><00:12:26.880><c> can</c>

00:12:27.110 --> 00:12:27.120 align:start position:0%
address or permanent ip address that can
 

00:12:27.120 --> 00:12:31.110 align:start position:0%
address or permanent ip address that can
be<00:12:27.360><c> attached</c><00:12:28.399><c> so</c><00:12:28.560><c> to</c><00:12:28.720><c> say</c><00:12:29.120><c> to</c><00:12:29.360><c> each</c><00:12:29.839><c> pod</c><00:12:30.480><c> so</c><00:12:30.800><c> my</c>

00:12:31.110 --> 00:12:31.120 align:start position:0%
be attached so to say to each pod so my
 

00:12:31.120 --> 00:12:32.790 align:start position:0%
be attached so to say to each pod so my
app<00:12:31.440><c> will</c><00:12:31.600><c> have</c><00:12:31.839><c> its</c><00:12:32.000><c> own</c><00:12:32.240><c> service</c><00:12:32.639><c> and</c>

00:12:32.790 --> 00:12:32.800 align:start position:0%
app will have its own service and
 

00:12:32.800 --> 00:12:35.750 align:start position:0%
app will have its own service and
database<00:12:33.519><c> pod</c><00:12:33.839><c> will</c><00:12:34.079><c> have</c><00:12:34.320><c> its</c><00:12:34.560><c> own</c><00:12:34.800><c> service</c>

00:12:35.750 --> 00:12:35.760 align:start position:0%
database pod will have its own service
 

00:12:35.760 --> 00:12:38.310 align:start position:0%
database pod will have its own service
and<00:12:35.839><c> the</c><00:12:36.000><c> good</c><00:12:36.240><c> thing</c><00:12:36.480><c> here</c><00:12:36.880><c> is</c><00:12:37.120><c> that</c><00:12:37.760><c> the</c><00:12:38.000><c> life</c>

00:12:38.310 --> 00:12:38.320 align:start position:0%
and the good thing here is that the life
 

00:12:38.320 --> 00:12:41.350 align:start position:0%
and the good thing here is that the life
cycles<00:12:38.959><c> of</c><00:12:39.360><c> service</c><00:12:39.839><c> and</c><00:12:39.920><c> the</c><00:12:40.160><c> pod</c><00:12:40.639><c> are</c><00:12:41.120><c> not</c>

00:12:41.350 --> 00:12:41.360 align:start position:0%
cycles of service and the pod are not
 

00:12:41.360 --> 00:12:44.470 align:start position:0%
cycles of service and the pod are not
connected<00:12:42.000><c> so</c><00:12:42.320><c> even</c><00:12:42.560><c> if</c><00:12:42.800><c> the</c><00:12:43.200><c> pod</c><00:12:43.519><c> dies</c>

00:12:44.470 --> 00:12:44.480 align:start position:0%
connected so even if the pod dies
 

00:12:44.480 --> 00:12:48.389 align:start position:0%
connected so even if the pod dies
the<00:12:44.639><c> service</c><00:12:45.519><c> and</c><00:12:45.680><c> its</c><00:12:45.920><c> ip</c><00:12:46.240><c> address</c><00:12:47.040><c> will</c><00:12:47.279><c> stay</c>

00:12:48.389 --> 00:12:48.399 align:start position:0%
the service and its ip address will stay
 

00:12:48.399 --> 00:12:51.030 align:start position:0%
the service and its ip address will stay
so<00:12:48.560><c> you</c><00:12:48.720><c> don't</c><00:12:48.959><c> have</c><00:12:49.200><c> to</c><00:12:49.839><c> change</c><00:12:50.320><c> that</c>

00:12:51.030 --> 00:12:51.040 align:start position:0%
so you don't have to change that
 

00:12:51.040 --> 00:12:52.949 align:start position:0%
so you don't have to change that
endpoint<00:12:51.839><c> anymore</c>

00:12:52.949 --> 00:12:52.959 align:start position:0%
endpoint anymore
 

00:12:52.959 --> 00:12:55.030 align:start position:0%
endpoint anymore
so<00:12:53.200><c> now</c><00:12:53.519><c> obviously</c><00:12:54.079><c> you</c><00:12:54.240><c> would</c><00:12:54.399><c> want</c><00:12:54.639><c> your</c>

00:12:55.030 --> 00:12:55.040 align:start position:0%
so now obviously you would want your
 

00:12:55.040 --> 00:12:57.269 align:start position:0%
so now obviously you would want your
application<00:12:56.000><c> to</c><00:12:56.160><c> be</c><00:12:56.320><c> accessible</c><00:12:56.959><c> through</c><00:12:57.120><c> a</c>

00:12:57.269 --> 00:12:57.279 align:start position:0%
application to be accessible through a
 

00:12:57.279 --> 00:12:59.350 align:start position:0%
application to be accessible through a
browser<00:12:57.839><c> right</c><00:12:58.320><c> and</c><00:12:58.560><c> for</c><00:12:58.800><c> this</c><00:12:59.040><c> you</c><00:12:59.200><c> would</c>

00:12:59.350 --> 00:12:59.360 align:start position:0%
browser right and for this you would
 

00:12:59.360 --> 00:13:01.829 align:start position:0%
browser right and for this you would
have<00:12:59.519><c> to</c><00:12:59.760><c> create</c><00:13:00.160><c> an</c><00:13:00.320><c> external</c><00:13:00.959><c> service</c><00:13:01.600><c> so</c>

00:13:01.829 --> 00:13:01.839 align:start position:0%
have to create an external service so
 

00:13:01.839 --> 00:13:04.629 align:start position:0%
have to create an external service so
external<00:13:02.320><c> services</c><00:13:02.959><c> a</c><00:13:03.200><c> service</c><00:13:03.680><c> that</c><00:13:04.000><c> opens</c>

00:13:04.629 --> 00:13:04.639 align:start position:0%
external services a service that opens
 

00:13:04.639 --> 00:13:07.910 align:start position:0%
external services a service that opens
the<00:13:04.880><c> communication</c><00:13:05.839><c> from</c><00:13:06.160><c> external</c><00:13:06.720><c> sources</c>

00:13:07.910 --> 00:13:07.920 align:start position:0%
the communication from external sources
 

00:13:07.920 --> 00:13:09.670 align:start position:0%
the communication from external sources
but<00:13:08.160><c> obviously</c><00:13:08.720><c> you</c><00:13:08.800><c> wouldn't</c><00:13:09.200><c> want</c><00:13:09.440><c> your</c>

00:13:09.670 --> 00:13:09.680 align:start position:0%
but obviously you wouldn't want your
 

00:13:09.680 --> 00:13:12.230 align:start position:0%
but obviously you wouldn't want your
database<00:13:10.240><c> to</c><00:13:10.399><c> be</c><00:13:10.560><c> open</c><00:13:10.959><c> to</c><00:13:11.200><c> the</c><00:13:11.680><c> public</c>

00:13:12.230 --> 00:13:12.240 align:start position:0%
database to be open to the public
 

00:13:12.240 --> 00:13:14.870 align:start position:0%
database to be open to the public
requests<00:13:13.200><c> and</c><00:13:13.440><c> for</c><00:13:13.600><c> that</c><00:13:14.000><c> you</c><00:13:14.160><c> would</c><00:13:14.399><c> create</c>

00:13:14.870 --> 00:13:14.880 align:start position:0%
requests and for that you would create
 

00:13:14.880 --> 00:13:17.190 align:start position:0%
requests and for that you would create
something<00:13:15.279><c> called</c><00:13:15.600><c> an</c><00:13:15.760><c> internal</c><00:13:16.240><c> service</c><00:13:16.959><c> so</c>

00:13:17.190 --> 00:13:17.200 align:start position:0%
something called an internal service so
 

00:13:17.200 --> 00:13:20.069 align:start position:0%
something called an internal service so
this<00:13:17.440><c> is</c><00:13:18.000><c> a</c><00:13:18.240><c> type</c><00:13:18.560><c> of</c><00:13:18.720><c> a</c><00:13:18.880><c> service</c><00:13:19.279><c> that</c><00:13:19.519><c> you</c>

00:13:20.069 --> 00:13:20.079 align:start position:0%
this is a type of a service that you
 

00:13:20.079 --> 00:13:23.190 align:start position:0%
this is a type of a service that you
specify<00:13:20.800><c> when</c><00:13:21.200><c> creating</c><00:13:21.839><c> one</c><00:13:22.240><c> however</c><00:13:22.959><c> if</c><00:13:23.040><c> you</c>

00:13:23.190 --> 00:13:23.200 align:start position:0%
specify when creating one however if you
 

00:13:23.200 --> 00:13:26.310 align:start position:0%
specify when creating one however if you
notice<00:13:24.079><c> the</c><00:13:24.399><c> url</c><00:13:25.200><c> of</c>

00:13:26.310 --> 00:13:26.320 align:start position:0%
notice the url of
 

00:13:26.320 --> 00:13:29.030 align:start position:0%
notice the url of
the<00:13:26.800><c> external</c><00:13:27.440><c> service</c><00:13:28.000><c> is</c><00:13:28.160><c> not</c><00:13:28.480><c> very</c>

00:13:29.030 --> 00:13:29.040 align:start position:0%
the external service is not very
 

00:13:29.040 --> 00:13:32.629 align:start position:0%
the external service is not very
practical<00:13:29.839><c> so</c><00:13:30.079><c> basically</c><00:13:30.560><c> what</c><00:13:30.720><c> you</c><00:13:30.959><c> have</c><00:13:31.440><c> is</c>

00:13:32.629 --> 00:13:32.639 align:start position:0%
practical so basically what you have is
 

00:13:32.639 --> 00:13:36.629 align:start position:0%
practical so basically what you have is
an<00:13:32.800><c> http</c><00:13:33.279><c> protocol</c><00:13:34.320><c> with</c><00:13:34.720><c> a</c><00:13:34.959><c> node</c><00:13:35.440><c> ip</c><00:13:35.839><c> address</c>

00:13:36.629 --> 00:13:36.639 align:start position:0%
an http protocol with a node ip address
 

00:13:36.639 --> 00:13:39.350 align:start position:0%
an http protocol with a node ip address
so<00:13:36.959><c> of</c><00:13:37.200><c> the</c><00:13:37.360><c> node</c><00:13:37.839><c> not</c><00:13:38.000><c> the</c><00:13:38.160><c> service</c><00:13:38.959><c> and</c><00:13:39.120><c> the</c>

00:13:39.350 --> 00:13:39.360 align:start position:0%
so of the node not the service and the
 

00:13:39.360 --> 00:13:42.230 align:start position:0%
so of the node not the service and the
port<00:13:39.680><c> number</c><00:13:40.320><c> of</c><00:13:40.399><c> the</c><00:13:40.560><c> service</c><00:13:40.959><c> which</c><00:13:41.199><c> is</c>

00:13:42.230 --> 00:13:42.240 align:start position:0%
port number of the service which is
 

00:13:42.240 --> 00:13:44.310 align:start position:0%
port number of the service which is
good<00:13:42.480><c> for</c><00:13:42.880><c> test</c><00:13:43.199><c> purposes</c><00:13:43.760><c> if</c><00:13:43.920><c> you</c><00:13:44.000><c> want</c><00:13:44.160><c> to</c>

00:13:44.310 --> 00:13:44.320 align:start position:0%
good for test purposes if you want to
 

00:13:44.320 --> 00:13:46.710 align:start position:0%
good for test purposes if you want to
test<00:13:44.560><c> something</c><00:13:44.959><c> very</c><00:13:45.199><c> fast</c><00:13:45.920><c> but</c><00:13:46.160><c> not</c><00:13:46.399><c> for</c><00:13:46.560><c> the</c>

00:13:46.710 --> 00:13:46.720 align:start position:0%
test something very fast but not for the
 

00:13:46.720 --> 00:13:48.870 align:start position:0%
test something very fast but not for the
end<00:13:46.959><c> product</c><00:13:47.360><c> so</c><00:13:47.920><c> usually</c><00:13:48.320><c> you</c><00:13:48.480><c> would</c><00:13:48.639><c> want</c>

00:13:48.870 --> 00:13:48.880 align:start position:0%
end product so usually you would want
 

00:13:48.880 --> 00:13:50.790 align:start position:0%
end product so usually you would want
your<00:13:49.040><c> url</c><00:13:49.440><c> to</c><00:13:49.600><c> look</c><00:13:49.839><c> like</c><00:13:50.000><c> this</c><00:13:50.320><c> if</c><00:13:50.480><c> you</c><00:13:50.560><c> want</c>

00:13:50.790 --> 00:13:50.800 align:start position:0%
your url to look like this if you want
 

00:13:50.800 --> 00:13:53.590 align:start position:0%
your url to look like this if you want
to<00:13:51.040><c> talk</c><00:13:51.279><c> to</c><00:13:51.440><c> your</c><00:13:51.839><c> application</c><00:13:53.040><c> with</c><00:13:53.440><c> a</c>

00:13:53.590 --> 00:13:53.600 align:start position:0%
to talk to your application with a
 

00:13:53.600 --> 00:13:56.550 align:start position:0%
to talk to your application with a
secure<00:13:54.079><c> protocol</c><00:13:55.120><c> and</c><00:13:55.440><c> a</c><00:13:55.519><c> domain</c><00:13:55.920><c> name</c><00:13:56.320><c> and</c>

00:13:56.550 --> 00:13:56.560 align:start position:0%
secure protocol and a domain name and
 

00:13:56.560 --> 00:13:57.670 align:start position:0%
secure protocol and a domain name and
for<00:13:56.800><c> that</c>

00:13:57.670 --> 00:13:57.680 align:start position:0%
for that
 

00:13:57.680 --> 00:14:00.230 align:start position:0%
for that
there<00:13:58.000><c> is</c><00:13:58.320><c> another</c><00:13:58.800><c> component</c><00:13:59.360><c> of</c><00:13:59.440><c> kubernetes</c>

00:14:00.230 --> 00:14:00.240 align:start position:0%
there is another component of kubernetes
 

00:14:00.240 --> 00:14:03.269 align:start position:0%
there is another component of kubernetes
called<00:14:00.880><c> ingress</c><00:14:01.760><c> so</c><00:14:01.920><c> instead</c><00:14:02.240><c> of</c><00:14:02.399><c> service</c><00:14:03.120><c> the</c>

00:14:03.269 --> 00:14:03.279 align:start position:0%
called ingress so instead of service the
 

00:14:03.279 --> 00:14:05.189 align:start position:0%
called ingress so instead of service the
request<00:14:03.760><c> goes</c><00:14:04.000><c> first</c><00:14:04.320><c> to</c><00:14:04.560><c> ingress</c><00:14:04.959><c> and</c><00:14:05.120><c> it</c>

00:14:05.189 --> 00:14:05.199 align:start position:0%
request goes first to ingress and it
 

00:14:05.199 --> 00:14:08.150 align:start position:0%
request goes first to ingress and it
does<00:14:05.440><c> the</c><00:14:05.680><c> forwarding</c><00:14:06.240><c> then</c><00:14:06.560><c> to</c><00:14:06.800><c> the</c><00:14:07.040><c> service</c>

00:14:08.150 --> 00:14:08.160 align:start position:0%
does the forwarding then to the service
 

00:14:08.160 --> 00:14:10.230 align:start position:0%
does the forwarding then to the service
so<00:14:08.320><c> now</c><00:14:08.480><c> we</c><00:14:08.720><c> saw</c><00:14:08.880><c> some</c><00:14:09.120><c> of</c><00:14:09.199><c> the</c><00:14:09.360><c> very</c><00:14:09.760><c> basic</c>

00:14:10.230 --> 00:14:10.240 align:start position:0%
so now we saw some of the very basic
 

00:14:10.240 --> 00:14:12.550 align:start position:0%
so now we saw some of the very basic
components<00:14:10.720><c> of</c><00:14:10.880><c> kubernetes</c><00:14:11.839><c> and</c><00:14:12.079><c> as</c><00:14:12.240><c> you</c><00:14:12.320><c> see</c>

00:14:12.550 --> 00:14:12.560 align:start position:0%
components of kubernetes and as you see
 

00:14:12.560 --> 00:14:14.790 align:start position:0%
components of kubernetes and as you see
this<00:14:12.800><c> is</c><00:14:13.040><c> a</c><00:14:13.199><c> very</c><00:14:13.600><c> simple</c><00:14:14.000><c> setup</c><00:14:14.320><c> we</c><00:14:14.480><c> just</c><00:14:14.639><c> have</c>

00:14:14.790 --> 00:14:14.800 align:start position:0%
this is a very simple setup we just have
 

00:14:14.800 --> 00:14:17.910 align:start position:0%
this is a very simple setup we just have
a<00:14:14.959><c> one</c><00:14:15.279><c> server</c><00:14:16.160><c> and</c><00:14:16.320><c> a</c><00:14:16.399><c> couple</c><00:14:16.720><c> of</c><00:14:17.199><c> containers</c>

00:14:17.910 --> 00:14:17.920 align:start position:0%
a one server and a couple of containers
 

00:14:17.920 --> 00:14:21.189 align:start position:0%
a one server and a couple of containers
running<00:14:18.720><c> and</c><00:14:19.199><c> some</c><00:14:19.519><c> services</c><00:14:20.399><c> nothing</c><00:14:20.880><c> really</c>

00:14:21.189 --> 00:14:21.199 align:start position:0%
running and some services nothing really
 

00:14:21.199 --> 00:14:24.310 align:start position:0%
running and some services nothing really
special<00:14:22.000><c> where</c><00:14:22.240><c> kubernetes</c><00:14:23.279><c> advantages</c><00:14:24.160><c> or</c>

00:14:24.310 --> 00:14:24.320 align:start position:0%
special where kubernetes advantages or
 

00:14:24.320 --> 00:14:26.790 align:start position:0%
special where kubernetes advantages or
the<00:14:24.480><c> actual</c><00:14:24.880><c> cool</c><00:14:25.199><c> features</c><00:14:25.920><c> really</c><00:14:26.560><c> come</c>

00:14:26.790 --> 00:14:26.800 align:start position:0%
the actual cool features really come
 

00:14:26.800 --> 00:14:28.949 align:start position:0%
the actual cool features really come
forward<00:14:27.519><c> but</c><00:14:27.760><c> we're</c><00:14:27.920><c> gonna</c><00:14:28.160><c> get</c><00:14:28.399><c> there</c><00:14:28.639><c> step</c>

00:14:28.949 --> 00:14:28.959 align:start position:0%
forward but we're gonna get there step
 

00:14:28.959 --> 00:14:34.230 align:start position:0%
forward but we're gonna get there step
by<00:14:29.120><c> step</c><00:14:29.680><c> so</c><00:14:29.839><c> let's</c><00:14:30.079><c> continue</c>

00:14:34.230 --> 00:14:34.240 align:start position:0%
 
 

00:14:34.240 --> 00:14:36.949 align:start position:0%
 
so<00:14:34.480><c> as</c><00:14:34.639><c> we</c><00:14:34.880><c> said</c><00:14:35.600><c> pods</c><00:14:36.079><c> communicate</c><00:14:36.639><c> with</c><00:14:36.800><c> each</c>

00:14:36.949 --> 00:14:36.959 align:start position:0%
so as we said pods communicate with each
 

00:14:36.959 --> 00:14:39.269 align:start position:0%
so as we said pods communicate with each
other<00:14:37.279><c> using</c><00:14:37.600><c> a</c><00:14:37.680><c> service</c><00:14:38.079><c> so</c><00:14:38.240><c> my</c><00:14:38.560><c> application</c>

00:14:39.269 --> 00:14:39.279 align:start position:0%
other using a service so my application
 

00:14:39.279 --> 00:14:42.949 align:start position:0%
other using a service so my application
will<00:14:39.519><c> have</c><00:14:40.240><c> a</c><00:14:40.399><c> database</c><00:14:41.519><c> endpoint</c><00:14:42.480><c> let's</c><00:14:42.720><c> say</c>

00:14:42.949 --> 00:14:42.959 align:start position:0%
will have a database endpoint let's say
 

00:14:42.959 --> 00:14:45.910 align:start position:0%
will have a database endpoint let's say
called<00:14:43.199><c> mongodb</c><00:14:43.920><c> service</c><00:14:44.800><c> that</c><00:14:45.040><c> it</c><00:14:45.279><c> uses</c><00:14:45.680><c> to</c>

00:14:45.910 --> 00:14:45.920 align:start position:0%
called mongodb service that it uses to
 

00:14:45.920 --> 00:14:48.310 align:start position:0%
called mongodb service that it uses to
communicate<00:14:46.480><c> with</c><00:14:46.639><c> the</c><00:14:46.720><c> database</c><00:14:47.760><c> but</c>

00:14:48.310 --> 00:14:48.320 align:start position:0%
communicate with the database but
 

00:14:48.320 --> 00:14:50.470 align:start position:0%
communicate with the database but
whether<00:14:48.639><c> you</c><00:14:49.120><c> configure</c><00:14:49.760><c> usually</c><00:14:50.240><c> this</c>

00:14:50.470 --> 00:14:50.480 align:start position:0%
whether you configure usually this
 

00:14:50.480 --> 00:14:53.030 align:start position:0%
whether you configure usually this
database<00:14:51.120><c> url</c><00:14:51.600><c> or</c><00:14:51.839><c> endpoint</c><00:14:52.480><c> usually</c><00:14:52.959><c> you</c>

00:14:53.030 --> 00:14:53.040 align:start position:0%
database url or endpoint usually you
 

00:14:53.040 --> 00:14:55.350 align:start position:0%
database url or endpoint usually you
would<00:14:53.199><c> do</c><00:14:53.360><c> it</c><00:14:53.519><c> in</c><00:14:53.760><c> application</c><00:14:54.639><c> properties</c>

00:14:55.350 --> 00:14:55.360 align:start position:0%
would do it in application properties
 

00:14:55.360 --> 00:14:58.389 align:start position:0%
would do it in application properties
file<00:14:56.079><c> or</c><00:14:56.800><c> as</c><00:14:57.040><c> some</c><00:14:57.199><c> kind</c><00:14:57.440><c> of</c><00:14:57.760><c> external</c>

00:14:58.389 --> 00:14:58.399 align:start position:0%
file or as some kind of external
 

00:14:58.399 --> 00:15:00.790 align:start position:0%
file or as some kind of external
environmental<00:14:59.040><c> variable</c><00:14:59.839><c> but</c><00:15:00.079><c> usually</c><00:15:00.560><c> it's</c>

00:15:00.790 --> 00:15:00.800 align:start position:0%
environmental variable but usually it's
 

00:15:00.800 --> 00:15:03.350 align:start position:0%
environmental variable but usually it's
inside<00:15:01.279><c> of</c><00:15:01.519><c> the</c><00:15:01.839><c> built</c><00:15:02.639><c> image</c><00:15:03.040><c> of</c><00:15:03.199><c> the</c>

00:15:03.350 --> 00:15:03.360 align:start position:0%
inside of the built image of the
 

00:15:03.360 --> 00:15:05.990 align:start position:0%
inside of the built image of the
application<00:15:04.399><c> so</c><00:15:04.639><c> for</c><00:15:04.800><c> example</c><00:15:05.519><c> if</c><00:15:05.760><c> the</c>

00:15:05.990 --> 00:15:06.000 align:start position:0%
application so for example if the
 

00:15:06.000 --> 00:15:08.629 align:start position:0%
application so for example if the
endpoint<00:15:06.800><c> of</c><00:15:06.959><c> the</c><00:15:07.120><c> service</c><00:15:07.519><c> or</c><00:15:07.760><c> service</c><00:15:08.160><c> name</c>

00:15:08.629 --> 00:15:08.639 align:start position:0%
endpoint of the service or service name
 

00:15:08.639 --> 00:15:11.430 align:start position:0%
endpoint of the service or service name
in<00:15:08.800><c> this</c><00:15:09.040><c> case</c><00:15:09.440><c> changed</c><00:15:10.000><c> to</c><00:15:10.240><c> mongodb</c><00:15:11.279><c> you</c>

00:15:11.430 --> 00:15:11.440 align:start position:0%
in this case changed to mongodb you
 

00:15:11.440 --> 00:15:13.509 align:start position:0%
in this case changed to mongodb you
would<00:15:11.600><c> have</c><00:15:11.760><c> to</c><00:15:11.920><c> adjust</c><00:15:12.399><c> that</c><00:15:12.560><c> url</c><00:15:13.279><c> in</c><00:15:13.360><c> the</c>

00:15:13.509 --> 00:15:13.519 align:start position:0%
would have to adjust that url in the
 

00:15:13.519 --> 00:15:16.310 align:start position:0%
would have to adjust that url in the
application<00:15:14.639><c> so</c><00:15:15.040><c> usually</c><00:15:15.519><c> you'd</c><00:15:15.760><c> have</c><00:15:15.920><c> to</c>

00:15:16.310 --> 00:15:16.320 align:start position:0%
application so usually you'd have to
 

00:15:16.320 --> 00:15:18.310 align:start position:0%
application so usually you'd have to
rebuild<00:15:16.720><c> the</c><00:15:16.880><c> application</c><00:15:17.600><c> with</c><00:15:17.839><c> a</c><00:15:18.000><c> new</c>

00:15:18.310 --> 00:15:18.320 align:start position:0%
rebuild the application with a new
 

00:15:18.320 --> 00:15:20.310 align:start position:0%
rebuild the application with a new
version<00:15:19.120><c> and</c><00:15:19.279><c> you</c><00:15:19.440><c> have</c><00:15:19.600><c> to</c><00:15:19.760><c> push</c><00:15:20.000><c> it</c><00:15:20.079><c> to</c><00:15:20.240><c> the</c>

00:15:20.310 --> 00:15:20.320 align:start position:0%
version and you have to push it to the
 

00:15:20.320 --> 00:15:23.189 align:start position:0%
version and you have to push it to the
repository<00:15:21.360><c> and</c><00:15:21.519><c> now</c><00:15:21.839><c> you'll</c><00:15:22.079><c> have</c><00:15:22.320><c> to</c>

00:15:23.189 --> 00:15:23.199 align:start position:0%
repository and now you'll have to
 

00:15:23.199 --> 00:15:26.150 align:start position:0%
repository and now you'll have to
pull<00:15:23.440><c> that</c><00:15:24.000><c> new</c><00:15:24.320><c> image</c><00:15:24.959><c> in</c><00:15:25.040><c> your</c><00:15:25.440><c> pod</c><00:15:26.000><c> and</c>

00:15:26.150 --> 00:15:26.160 align:start position:0%
pull that new image in your pod and
 

00:15:26.160 --> 00:15:28.710 align:start position:0%
pull that new image in your pod and
restart<00:15:26.800><c> the</c><00:15:26.959><c> whole</c><00:15:27.199><c> thing</c><00:15:27.680><c> so</c><00:15:28.000><c> a</c><00:15:28.160><c> little</c><00:15:28.399><c> bit</c>

00:15:28.710 --> 00:15:28.720 align:start position:0%
restart the whole thing so a little bit
 

00:15:28.720 --> 00:15:32.150 align:start position:0%
restart the whole thing so a little bit
tedious<00:15:29.440><c> for</c><00:15:30.079><c> a</c><00:15:30.240><c> small</c><00:15:30.639><c> change</c><00:15:31.040><c> like</c><00:15:31.360><c> database</c>

00:15:32.150 --> 00:15:32.160 align:start position:0%
tedious for a small change like database
 

00:15:32.160 --> 00:15:35.509 align:start position:0%
tedious for a small change like database
url<00:15:32.720><c> so</c><00:15:32.880><c> for</c><00:15:33.120><c> that</c><00:15:33.440><c> purpose</c><00:15:34.160><c> kubernetes</c><00:15:34.880><c> has</c><00:15:35.360><c> a</c>

00:15:35.509 --> 00:15:35.519 align:start position:0%
url so for that purpose kubernetes has a
 

00:15:35.519 --> 00:15:38.389 align:start position:0%
url so for that purpose kubernetes has a
component<00:15:36.240><c> called</c><00:15:36.639><c> config</c><00:15:37.120><c> map</c><00:15:37.839><c> so</c><00:15:38.079><c> what</c><00:15:38.240><c> it</c>

00:15:38.389 --> 00:15:38.399 align:start position:0%
component called config map so what it
 

00:15:38.399 --> 00:15:40.470 align:start position:0%
component called config map so what it
does<00:15:38.720><c> is</c><00:15:38.959><c> it's</c><00:15:39.120><c> basically</c><00:15:39.600><c> your</c><00:15:39.839><c> external</c>

00:15:40.470 --> 00:15:40.480 align:start position:0%
does is it's basically your external
 

00:15:40.480 --> 00:15:43.030 align:start position:0%
does is it's basically your external
configuration<00:15:41.360><c> to</c><00:15:41.519><c> your</c><00:15:41.759><c> application</c><00:15:42.720><c> so</c>

00:15:43.030 --> 00:15:43.040 align:start position:0%
configuration to your application so
 

00:15:43.040 --> 00:15:45.509 align:start position:0%
configuration to your application so
config<00:15:43.519><c> map</c><00:15:43.920><c> would</c><00:15:44.160><c> usually</c><00:15:44.720><c> contain</c>

00:15:45.509 --> 00:15:45.519 align:start position:0%
config map would usually contain
 

00:15:45.519 --> 00:15:48.150 align:start position:0%
config map would usually contain
configuration<00:15:46.399><c> data</c><00:15:46.800><c> like</c><00:15:47.199><c> urls</c><00:15:47.839><c> of</c><00:15:48.000><c> a</c>

00:15:48.150 --> 00:15:48.160 align:start position:0%
configuration data like urls of a
 

00:15:48.160 --> 00:15:50.389 align:start position:0%
configuration data like urls of a
database<00:15:48.800><c> or</c><00:15:48.959><c> some</c><00:15:49.279><c> other</c><00:15:49.519><c> services</c><00:15:50.079><c> that</c><00:15:50.240><c> you</c>

00:15:50.389 --> 00:15:50.399 align:start position:0%
database or some other services that you
 

00:15:50.399 --> 00:15:53.350 align:start position:0%
database or some other services that you
use<00:15:51.040><c> and</c><00:15:51.199><c> in</c><00:15:51.440><c> kubernetes</c><00:15:52.399><c> you</c><00:15:52.560><c> just</c><00:15:52.880><c> connect</c>

00:15:53.350 --> 00:15:53.360 align:start position:0%
use and in kubernetes you just connect
 

00:15:53.360 --> 00:15:56.550 align:start position:0%
use and in kubernetes you just connect
it<00:15:53.600><c> to</c><00:15:53.759><c> the</c><00:15:54.000><c> pod</c><00:15:54.800><c> so</c><00:15:55.040><c> that</c><00:15:55.360><c> pod</c><00:15:55.839><c> actually</c><00:15:56.240><c> gets</c>

00:15:56.550 --> 00:15:56.560 align:start position:0%
it to the pod so that pod actually gets
 

00:15:56.560 --> 00:15:59.350 align:start position:0%
it to the pod so that pod actually gets
the<00:15:56.800><c> data</c><00:15:57.120><c> that</c><00:15:57.360><c> config</c><00:15:57.839><c> map</c><00:15:58.240><c> contains</c>

00:15:59.350 --> 00:15:59.360 align:start position:0%
the data that config map contains
 

00:15:59.360 --> 00:16:01.189 align:start position:0%
the data that config map contains
and<00:15:59.519><c> now</c><00:15:59.920><c> if</c><00:16:00.079><c> you</c><00:16:00.160><c> change</c><00:16:00.560><c> the</c><00:16:00.720><c> name</c><00:16:00.959><c> of</c><00:16:01.040><c> the</c>

00:16:01.189 --> 00:16:01.199 align:start position:0%
and now if you change the name of the
 

00:16:01.199 --> 00:16:03.590 align:start position:0%
and now if you change the name of the
service<00:16:01.920><c> the</c><00:16:02.079><c> endpoint</c><00:16:02.560><c> of</c><00:16:02.639><c> the</c><00:16:02.800><c> service</c><00:16:03.440><c> you</c>

00:16:03.590 --> 00:16:03.600 align:start position:0%
service the endpoint of the service you
 

00:16:03.600 --> 00:16:06.150 align:start position:0%
service the endpoint of the service you
just<00:16:04.000><c> adjust</c><00:16:04.399><c> the</c><00:16:04.560><c> config</c><00:16:04.959><c> map</c><00:16:05.600><c> and</c><00:16:05.759><c> that's</c><00:16:06.079><c> it</c>

00:16:06.150 --> 00:16:06.160 align:start position:0%
just adjust the config map and that's it
 

00:16:06.160 --> 00:16:07.990 align:start position:0%
just adjust the config map and that's it
you<00:16:06.320><c> don't</c><00:16:06.480><c> have</c><00:16:06.639><c> to</c><00:16:06.800><c> build</c><00:16:07.040><c> a</c><00:16:07.120><c> new</c><00:16:07.360><c> image</c><00:16:07.680><c> and</c>

00:16:07.990 --> 00:16:08.000 align:start position:0%
you don't have to build a new image and
 

00:16:08.000 --> 00:16:11.030 align:start position:0%
you don't have to build a new image and
have<00:16:08.160><c> to</c><00:16:08.639><c> go</c><00:16:08.880><c> through</c><00:16:09.120><c> this</c><00:16:09.360><c> whole</c><00:16:09.920><c> cycle</c><00:16:10.720><c> now</c>

00:16:11.030 --> 00:16:11.040 align:start position:0%
have to go through this whole cycle now
 

00:16:11.040 --> 00:16:13.910 align:start position:0%
have to go through this whole cycle now
part<00:16:11.360><c> of</c><00:16:11.600><c> the</c><00:16:12.240><c> external</c><00:16:12.880><c> configuration</c><00:16:13.680><c> can</c>

00:16:13.910 --> 00:16:13.920 align:start position:0%
part of the external configuration can
 

00:16:13.920 --> 00:16:16.949 align:start position:0%
part of the external configuration can
also<00:16:14.240><c> be</c><00:16:14.560><c> database</c><00:16:15.120><c> username</c><00:16:15.839><c> and</c><00:16:16.000><c> password</c>

00:16:16.949 --> 00:16:16.959 align:start position:0%
also be database username and password
 

00:16:16.959 --> 00:16:19.829 align:start position:0%
also be database username and password
right<00:16:17.440><c> which</c><00:16:17.759><c> may</c><00:16:18.160><c> also</c><00:16:18.639><c> change</c><00:16:19.199><c> in</c><00:16:19.360><c> the</c>

00:16:19.829 --> 00:16:19.839 align:start position:0%
right which may also change in the
 

00:16:19.839 --> 00:16:21.910 align:start position:0%
right which may also change in the
application<00:16:20.480><c> deployment</c><00:16:21.040><c> process</c><00:16:21.600><c> but</c>

00:16:21.910 --> 00:16:21.920 align:start position:0%
application deployment process but
 

00:16:21.920 --> 00:16:24.310 align:start position:0%
application deployment process but
putting<00:16:22.240><c> a</c><00:16:22.399><c> password</c><00:16:23.040><c> or</c><00:16:23.360><c> other</c><00:16:23.600><c> credentials</c>

00:16:24.310 --> 00:16:24.320 align:start position:0%
putting a password or other credentials
 

00:16:24.320 --> 00:16:27.110 align:start position:0%
putting a password or other credentials
in<00:16:24.480><c> a</c><00:16:24.560><c> config</c><00:16:24.959><c> map</c><00:16:25.440><c> in</c><00:16:25.600><c> a</c><00:16:25.759><c> plain</c><00:16:26.240><c> text</c><00:16:26.639><c> format</c>

00:16:27.110 --> 00:16:27.120 align:start position:0%
in a config map in a plain text format
 

00:16:27.120 --> 00:16:29.509 align:start position:0%
in a config map in a plain text format
would<00:16:27.279><c> be</c><00:16:27.920><c> insecure</c><00:16:28.720><c> even</c><00:16:28.959><c> though</c><00:16:29.199><c> it's</c><00:16:29.360><c> an</c>

00:16:29.509 --> 00:16:29.519 align:start position:0%
would be insecure even though it's an
 

00:16:29.519 --> 00:16:31.749 align:start position:0%
would be insecure even though it's an
external<00:16:29.920><c> configuration</c><00:16:31.040><c> so</c><00:16:31.199><c> for</c><00:16:31.440><c> this</c>

00:16:31.749 --> 00:16:31.759 align:start position:0%
external configuration so for this
 

00:16:31.759 --> 00:16:34.790 align:start position:0%
external configuration so for this
purpose<00:16:32.639><c> kubernetes</c><00:16:33.279><c> has</c><00:16:33.680><c> another</c><00:16:34.079><c> component</c>

00:16:34.790 --> 00:16:34.800 align:start position:0%
purpose kubernetes has another component
 

00:16:34.800 --> 00:16:36.470 align:start position:0%
purpose kubernetes has another component
called<00:16:35.360><c> secret</c>

00:16:36.470 --> 00:16:36.480 align:start position:0%
called secret
 

00:16:36.480 --> 00:16:39.110 align:start position:0%
called secret
so<00:16:36.800><c> secret</c><00:16:37.360><c> is</c><00:16:37.600><c> just</c><00:16:37.839><c> like</c><00:16:38.079><c> config</c><00:16:38.560><c> map</c><00:16:38.959><c> but</c>

00:16:39.110 --> 00:16:39.120 align:start position:0%
so secret is just like config map but
 

00:16:39.120 --> 00:16:41.350 align:start position:0%
so secret is just like config map but
the<00:16:39.279><c> difference</c><00:16:39.920><c> is</c><00:16:40.160><c> that</c><00:16:40.399><c> it's</c><00:16:40.800><c> used</c><00:16:41.120><c> to</c>

00:16:41.350 --> 00:16:41.360 align:start position:0%
the difference is that it's used to
 

00:16:41.360 --> 00:16:43.990 align:start position:0%
the difference is that it's used to
store<00:16:41.920><c> secret</c><00:16:42.399><c> data</c><00:16:43.199><c> credentials</c><00:16:43.839><c> for</c>

00:16:43.990 --> 00:16:44.000 align:start position:0%
store secret data credentials for
 

00:16:44.000 --> 00:16:46.790 align:start position:0%
store secret data credentials for
example<00:16:44.959><c> and</c><00:16:45.120><c> it's</c><00:16:45.360><c> stored</c><00:16:46.079><c> not</c><00:16:46.240><c> in</c><00:16:46.399><c> a</c><00:16:46.480><c> plain</c>

00:16:46.790 --> 00:16:46.800 align:start position:0%
example and it's stored not in a plain
 

00:16:46.800 --> 00:16:50.069 align:start position:0%
example and it's stored not in a plain
text<00:16:47.120><c> format</c><00:16:47.519><c> but</c><00:16:47.759><c> in</c><00:16:48.240><c> base</c><00:16:48.800><c> 64</c><00:16:49.519><c> in</c><00:16:49.519><c> encoded</c>

00:16:50.069 --> 00:16:50.079 align:start position:0%
text format but in base 64 in encoded
 

00:16:50.079 --> 00:16:52.310 align:start position:0%
text format but in base 64 in encoded
format<00:16:50.880><c> but</c><00:16:51.040><c> of</c><00:16:51.199><c> course</c><00:16:51.600><c> basics</c><00:16:52.000><c> before</c>

00:16:52.310 --> 00:16:52.320 align:start position:0%
format but of course basics before
 

00:16:52.320 --> 00:16:53.829 align:start position:0%
format but of course basics before
encoding<00:16:52.720><c> a</c><00:16:52.880><c> secret</c><00:16:53.199><c> doesn't</c><00:16:53.440><c> make</c><00:16:53.680><c> it</c>

00:16:53.829 --> 00:16:53.839 align:start position:0%
encoding a secret doesn't make it
 

00:16:53.839 --> 00:16:55.749 align:start position:0%
encoding a secret doesn't make it
automatically<00:16:54.480><c> secure</c>

00:16:55.749 --> 00:16:55.759 align:start position:0%
automatically secure
 

00:16:55.759 --> 00:16:58.150 align:start position:0%
automatically secure
the<00:16:56.320><c> secret</c><00:16:56.720><c> components</c><00:16:57.360><c> are</c><00:16:57.519><c> meant</c><00:16:57.680><c> to</c><00:16:57.839><c> be</c>

00:16:58.150 --> 00:16:58.160 align:start position:0%
the secret components are meant to be
 

00:16:58.160 --> 00:16:59.509 align:start position:0%
the secret components are meant to be
encrypted

00:16:59.509 --> 00:16:59.519 align:start position:0%
encrypted
 

00:16:59.519 --> 00:17:02.150 align:start position:0%
encrypted
using<00:17:00.000><c> third-party</c><00:17:00.880><c> tools</c><00:17:01.360><c> in</c><00:17:01.519><c> kubernetes</c>

00:17:02.150 --> 00:17:02.160 align:start position:0%
using third-party tools in kubernetes
 

00:17:02.160 --> 00:17:04.069 align:start position:0%
using third-party tools in kubernetes
because<00:17:02.480><c> kubernetes</c><00:17:03.040><c> doesn't</c><00:17:03.360><c> encrypt</c><00:17:03.759><c> them</c>

00:17:04.069 --> 00:17:04.079 align:start position:0%
because kubernetes doesn't encrypt them
 

00:17:04.079 --> 00:17:05.669 align:start position:0%
because kubernetes doesn't encrypt them
out<00:17:04.240><c> of</c><00:17:04.319><c> the</c><00:17:04.480><c> box</c>

00:17:05.669 --> 00:17:05.679 align:start position:0%
out of the box
 

00:17:05.679 --> 00:17:07.590 align:start position:0%
out of the box
and<00:17:05.839><c> there</c><00:17:05.919><c> are</c><00:17:06.079><c> tools</c><00:17:06.400><c> for</c><00:17:06.559><c> that</c><00:17:07.039><c> from</c><00:17:07.280><c> cloud</c>

00:17:07.590 --> 00:17:07.600 align:start position:0%
and there are tools for that from cloud
 

00:17:07.600 --> 00:17:10.390 align:start position:0%
and there are tools for that from cloud
providers<00:17:08.559><c> or</c><00:17:08.959><c> separate</c><00:17:09.600><c> third-party</c><00:17:10.160><c> tools</c>

00:17:10.390 --> 00:17:10.400 align:start position:0%
providers or separate third-party tools
 

00:17:10.400 --> 00:17:11.429 align:start position:0%
providers or separate third-party tools
that<00:17:10.559><c> you</c><00:17:10.720><c> can</c>

00:17:11.429 --> 00:17:11.439 align:start position:0%
that you can
 

00:17:11.439 --> 00:17:13.909 align:start position:0%
that you can
deploy<00:17:11.919><c> on</c><00:17:12.079><c> kubernetes</c><00:17:12.880><c> to</c><00:17:13.120><c> encrypt</c><00:17:13.679><c> your</c>

00:17:13.909 --> 00:17:13.919 align:start position:0%
deploy on kubernetes to encrypt your
 

00:17:13.919 --> 00:17:16.390 align:start position:0%
deploy on kubernetes to encrypt your
secrets<00:17:14.720><c> and</c><00:17:14.959><c> that</c><00:17:15.120><c> will</c><00:17:15.280><c> make</c><00:17:15.600><c> secrets</c>

00:17:16.390 --> 00:17:16.400 align:start position:0%
secrets and that will make secrets
 

00:17:16.400 --> 00:17:17.669 align:start position:0%
secrets and that will make secrets
secure

00:17:17.669 --> 00:17:17.679 align:start position:0%
secure
 

00:17:17.679 --> 00:17:20.069 align:start position:0%
secure
so<00:17:18.000><c> secret</c><00:17:18.400><c> would</c><00:17:18.640><c> contain</c><00:17:19.199><c> things</c><00:17:19.520><c> like</c>

00:17:20.069 --> 00:17:20.079 align:start position:0%
so secret would contain things like
 

00:17:20.079 --> 00:17:21.990 align:start position:0%
so secret would contain things like
credentials<00:17:21.039><c> and</c><00:17:21.199><c> of</c><00:17:21.280><c> course</c><00:17:21.679><c> i</c><00:17:21.760><c> mean</c>

00:17:21.990 --> 00:17:22.000 align:start position:0%
credentials and of course i mean
 

00:17:22.000 --> 00:17:23.829 align:start position:0%
credentials and of course i mean
database<00:17:22.480><c> user</c><00:17:22.880><c> you</c><00:17:23.039><c> could</c><00:17:23.280><c> also</c><00:17:23.520><c> put</c><00:17:23.679><c> in</c>

00:17:23.829 --> 00:17:23.839 align:start position:0%
database user you could also put in
 

00:17:23.839 --> 00:17:26.069 align:start position:0%
database user you could also put in
config<00:17:24.319><c> map</c><00:17:24.799><c> but</c><00:17:24.959><c> what's</c><00:17:25.280><c> important</c><00:17:25.679><c> is</c><00:17:25.839><c> the</c>

00:17:26.069 --> 00:17:26.079 align:start position:0%
config map but what's important is the
 

00:17:26.079 --> 00:17:29.110 align:start position:0%
config map but what's important is the
passwords<00:17:27.280><c> certificates</c><00:17:28.480><c> things</c><00:17:28.799><c> that</c><00:17:28.960><c> you</c>

00:17:29.110 --> 00:17:29.120 align:start position:0%
passwords certificates things that you
 

00:17:29.120 --> 00:17:31.510 align:start position:0%
passwords certificates things that you
don't<00:17:29.360><c> want</c><00:17:30.080><c> other</c><00:17:30.320><c> people</c><00:17:30.559><c> to</c><00:17:30.720><c> have</c><00:17:31.039><c> access</c>

00:17:31.510 --> 00:17:31.520 align:start position:0%
don't want other people to have access
 

00:17:31.520 --> 00:17:34.150 align:start position:0%
don't want other people to have access
to<00:17:31.919><c> would</c><00:17:32.160><c> go</c><00:17:32.559><c> in</c><00:17:32.720><c> the</c><00:17:32.960><c> secret</c><00:17:33.520><c> and</c><00:17:33.679><c> just</c><00:17:33.919><c> like</c>

00:17:34.150 --> 00:17:34.160 align:start position:0%
to would go in the secret and just like
 

00:17:34.160 --> 00:17:36.470 align:start position:0%
to would go in the secret and just like
config<00:17:34.559><c> map</c><00:17:35.039><c> you</c><00:17:35.200><c> just</c><00:17:35.440><c> connect</c><00:17:35.919><c> it</c><00:17:36.080><c> to</c><00:17:36.160><c> your</c>

00:17:36.470 --> 00:17:36.480 align:start position:0%
config map you just connect it to your
 

00:17:36.480 --> 00:17:38.870 align:start position:0%
config map you just connect it to your
pod<00:17:37.039><c> so</c><00:17:37.280><c> that</c><00:17:37.520><c> pod</c><00:17:37.760><c> can</c><00:17:38.000><c> actually</c><00:17:38.400><c> see</c><00:17:38.640><c> those</c>

00:17:38.870 --> 00:17:38.880 align:start position:0%
pod so that pod can actually see those
 

00:17:38.880 --> 00:17:41.510 align:start position:0%
pod so that pod can actually see those
data<00:17:39.679><c> and</c><00:17:39.840><c> read</c><00:17:40.080><c> from</c><00:17:40.320><c> the</c><00:17:40.480><c> secret</c><00:17:41.120><c> you</c><00:17:41.280><c> can</c>

00:17:41.510 --> 00:17:41.520 align:start position:0%
data and read from the secret you can
 

00:17:41.520 --> 00:17:44.310 align:start position:0%
data and read from the secret you can
actually<00:17:41.919><c> use</c><00:17:42.320><c> the</c><00:17:42.720><c> data</c><00:17:43.120><c> from</c><00:17:43.360><c> configmap</c><00:17:44.080><c> or</c>

00:17:44.310 --> 00:17:44.320 align:start position:0%
actually use the data from configmap or
 

00:17:44.320 --> 00:17:47.029 align:start position:0%
actually use the data from configmap or
secret<00:17:44.960><c> inside</c><00:17:45.360><c> of</c><00:17:45.440><c> your</c><00:17:45.760><c> application</c><00:17:46.480><c> pod</c>

00:17:47.029 --> 00:17:47.039 align:start position:0%
secret inside of your application pod
 

00:17:47.039 --> 00:17:49.029 align:start position:0%
secret inside of your application pod
using<00:17:47.440><c> for</c><00:17:47.679><c> example</c><00:17:48.240><c> environmental</c>

00:17:49.029 --> 00:17:49.039 align:start position:0%
using for example environmental
 

00:17:49.039 --> 00:17:52.470 align:start position:0%
using for example environmental
variables<00:17:49.919><c> or</c><00:17:50.240><c> even</c><00:17:50.559><c> as</c><00:17:50.799><c> a</c><00:17:50.880><c> properties</c><00:17:51.520><c> file</c>

00:17:52.470 --> 00:17:52.480 align:start position:0%
variables or even as a properties file
 

00:17:52.480 --> 00:17:54.950 align:start position:0%
variables or even as a properties file
so<00:17:52.640><c> now</c><00:17:52.799><c> let's</c><00:17:53.039><c> see</c><00:17:53.280><c> another</c><00:17:53.760><c> very</c><00:17:54.160><c> important</c>

00:17:54.950 --> 00:17:54.960 align:start position:0%
so now let's see another very important
 

00:17:54.960 --> 00:17:58.310 align:start position:0%
so now let's see another very important
concept<00:17:55.919><c> generally</c><00:17:56.480><c> which</c><00:17:56.720><c> is</c><00:17:57.200><c> data</c><00:17:57.600><c> storage</c>

00:17:58.310 --> 00:17:58.320 align:start position:0%
concept generally which is data storage
 

00:17:58.320 --> 00:18:00.390 align:start position:0%
concept generally which is data storage
and<00:17:58.480><c> how</c><00:17:58.720><c> it</c><00:17:58.880><c> works</c><00:17:59.280><c> in</c><00:17:59.440><c> kubernetes</c>

00:18:00.390 --> 00:18:00.400 align:start position:0%
and how it works in kubernetes
 

00:18:00.400 --> 00:18:02.470 align:start position:0%
and how it works in kubernetes
so<00:18:00.559><c> we</c><00:18:00.720><c> have</c><00:18:00.880><c> this</c><00:18:01.120><c> database</c><00:18:01.760><c> pod</c><00:18:02.080><c> that</c><00:18:02.240><c> our</c>

00:18:02.470 --> 00:18:02.480 align:start position:0%
so we have this database pod that our
 

00:18:02.480 --> 00:18:04.789 align:start position:0%
so we have this database pod that our
application<00:18:03.039><c> uses</c><00:18:03.600><c> and</c><00:18:03.760><c> it</c><00:18:03.840><c> has</c><00:18:04.080><c> some</c><00:18:04.320><c> data</c><00:18:04.640><c> or</c>

00:18:04.789 --> 00:18:04.799 align:start position:0%
application uses and it has some data or
 

00:18:04.799 --> 00:18:06.789 align:start position:0%
application uses and it has some data or
it<00:18:04.960><c> generates</c><00:18:05.440><c> some</c><00:18:05.600><c> data</c><00:18:06.000><c> with</c><00:18:06.160><c> this</c><00:18:06.400><c> setup</c>

00:18:06.789 --> 00:18:06.799 align:start position:0%
it generates some data with this setup
 

00:18:06.799 --> 00:18:09.510 align:start position:0%
it generates some data with this setup
that<00:18:06.960><c> you</c><00:18:07.120><c> see</c><00:18:07.360><c> now</c><00:18:08.000><c> if</c><00:18:08.240><c> the</c><00:18:08.400><c> database</c>

00:18:09.510 --> 00:18:09.520 align:start position:0%
that you see now if the database
 

00:18:09.520 --> 00:18:12.870 align:start position:0%
that you see now if the database
container<00:18:10.080><c> or</c><00:18:10.240><c> the</c><00:18:10.480><c> pod</c><00:18:10.799><c> gets</c><00:18:11.120><c> restarted</c>

00:18:12.870 --> 00:18:12.880 align:start position:0%
container or the pod gets restarted
 

00:18:12.880 --> 00:18:15.750 align:start position:0%
container or the pod gets restarted
the<00:18:13.120><c> data</c><00:18:13.520><c> would</c><00:18:13.679><c> be</c><00:18:14.320><c> gone</c><00:18:15.120><c> and</c><00:18:15.280><c> that's</c>

00:18:15.750 --> 00:18:15.760 align:start position:0%
the data would be gone and that's
 

00:18:15.760 --> 00:18:18.070 align:start position:0%
the data would be gone and that's
problematic<00:18:16.559><c> and</c><00:18:16.880><c> inconvenient</c><00:18:17.600><c> obviously</c>

00:18:18.070 --> 00:18:18.080 align:start position:0%
problematic and inconvenient obviously
 

00:18:18.080 --> 00:18:20.950 align:start position:0%
problematic and inconvenient obviously
because<00:18:18.799><c> you</c><00:18:19.039><c> want</c><00:18:19.360><c> your</c><00:18:19.600><c> database</c><00:18:20.240><c> data</c><00:18:20.720><c> or</c>

00:18:20.950 --> 00:18:20.960 align:start position:0%
because you want your database data or
 

00:18:20.960 --> 00:18:24.470 align:start position:0%
because you want your database data or
log<00:18:21.200><c> data</c><00:18:21.919><c> to</c><00:18:22.080><c> be</c><00:18:22.240><c> persisted</c><00:18:23.120><c> reliably</c><00:18:24.160><c> long</c>

00:18:24.470 --> 00:18:24.480 align:start position:0%
log data to be persisted reliably long
 

00:18:24.480 --> 00:18:25.510 align:start position:0%
log data to be persisted reliably long
term

00:18:25.510 --> 00:18:25.520 align:start position:0%
term
 

00:18:25.520 --> 00:18:27.590 align:start position:0%
term
and<00:18:25.679><c> the</c><00:18:25.840><c> way</c><00:18:26.080><c> you</c><00:18:26.240><c> can</c><00:18:26.400><c> do</c><00:18:26.559><c> it</c><00:18:26.720><c> in</c><00:18:26.799><c> kubernetes</c>

00:18:27.590 --> 00:18:27.600 align:start position:0%
and the way you can do it in kubernetes
 

00:18:27.600 --> 00:18:30.230 align:start position:0%
and the way you can do it in kubernetes
is<00:18:27.919><c> using</c><00:18:28.559><c> another</c><00:18:28.960><c> component</c><00:18:29.440><c> of</c><00:18:29.600><c> kubernetes</c>

00:18:30.230 --> 00:18:30.240 align:start position:0%
is using another component of kubernetes
 

00:18:30.240 --> 00:18:32.390 align:start position:0%
is using another component of kubernetes
called<00:18:30.880><c> volumes</c>

00:18:32.390 --> 00:18:32.400 align:start position:0%
called volumes
 

00:18:32.400 --> 00:18:34.789 align:start position:0%
called volumes
and<00:18:32.559><c> how</c><00:18:32.799><c> it</c><00:18:32.960><c> works</c><00:18:33.360><c> is</c><00:18:33.520><c> that</c><00:18:33.760><c> it</c><00:18:33.919><c> basically</c>

00:18:34.789 --> 00:18:34.799 align:start position:0%
and how it works is that it basically
 

00:18:34.799 --> 00:18:37.590 align:start position:0%
and how it works is that it basically
attaches<00:18:35.840><c> a</c><00:18:36.080><c> physical</c><00:18:36.559><c> storage</c><00:18:37.039><c> on</c><00:18:37.200><c> a</c><00:18:37.360><c> hard</c>

00:18:37.590 --> 00:18:37.600 align:start position:0%
attaches a physical storage on a hard
 

00:18:37.600 --> 00:18:40.630 align:start position:0%
attaches a physical storage on a hard
drive<00:18:38.400><c> to</c><00:18:38.559><c> your</c><00:18:38.960><c> pod</c><00:18:39.360><c> and</c><00:18:39.600><c> that</c><00:18:39.919><c> storage</c><00:18:40.400><c> could</c>

00:18:40.630 --> 00:18:40.640 align:start position:0%
drive to your pod and that storage could
 

00:18:40.640 --> 00:18:42.789 align:start position:0%
drive to your pod and that storage could
be<00:18:40.799><c> either</c><00:18:41.120><c> on</c><00:18:41.280><c> a</c><00:18:41.360><c> local</c><00:18:41.679><c> machine</c><00:18:42.240><c> meaning</c><00:18:42.640><c> on</c>

00:18:42.789 --> 00:18:42.799 align:start position:0%
be either on a local machine meaning on
 

00:18:42.799 --> 00:18:45.750 align:start position:0%
be either on a local machine meaning on
the<00:18:43.039><c> same</c><00:18:43.600><c> server</c><00:18:44.000><c> node</c><00:18:44.320><c> where</c><00:18:44.640><c> the</c><00:18:45.280><c> pod</c><00:18:45.600><c> is</c>

00:18:45.750 --> 00:18:45.760 align:start position:0%
the same server node where the pod is
 

00:18:45.760 --> 00:18:47.350 align:start position:0%
the same server node where the pod is
running<00:18:46.160><c> or</c><00:18:46.320><c> it</c><00:18:46.400><c> could</c><00:18:46.559><c> be</c><00:18:46.720><c> on</c><00:18:46.799><c> a</c><00:18:46.880><c> remote</c>

00:18:47.350 --> 00:18:47.360 align:start position:0%
running or it could be on a remote
 

00:18:47.360 --> 00:18:49.350 align:start position:0%
running or it could be on a remote
storage<00:18:48.320><c> meaning</c><00:18:48.720><c> outside</c><00:18:49.200><c> of</c><00:18:49.280><c> the</c>

00:18:49.350 --> 00:18:49.360 align:start position:0%
storage meaning outside of the
 

00:18:49.360 --> 00:18:52.150 align:start position:0%
storage meaning outside of the
kubernetes<00:18:49.919><c> cluster</c><00:18:50.559><c> it</c><00:18:50.640><c> could</c><00:18:50.880><c> be</c><00:18:51.520><c> a</c><00:18:51.760><c> cloud</c>

00:18:52.150 --> 00:18:52.160 align:start position:0%
kubernetes cluster it could be a cloud
 

00:18:52.160 --> 00:18:54.470 align:start position:0%
kubernetes cluster it could be a cloud
storage<00:18:52.720><c> or</c><00:18:52.799><c> it</c><00:18:52.880><c> could</c><00:18:53.039><c> be</c><00:18:53.200><c> your</c><00:18:53.520><c> own</c><00:18:54.000><c> premise</c>

00:18:54.470 --> 00:18:54.480 align:start position:0%
storage or it could be your own premise
 

00:18:54.480 --> 00:18:56.789 align:start position:0%
storage or it could be your own premise
storage<00:18:55.360><c> which</c><00:18:55.600><c> is</c><00:18:55.760><c> not</c><00:18:56.240><c> part</c><00:18:56.559><c> of</c><00:18:56.720><c> the</c>

00:18:56.789 --> 00:18:56.799 align:start position:0%
storage which is not part of the
 

00:18:56.799 --> 00:18:59.270 align:start position:0%
storage which is not part of the
kubernetes<00:18:57.440><c> cluster</c><00:18:58.240><c> so</c><00:18:58.480><c> you</c><00:18:58.640><c> just</c><00:18:58.880><c> have</c><00:18:59.120><c> an</c>

00:18:59.270 --> 00:18:59.280 align:start position:0%
kubernetes cluster so you just have an
 

00:18:59.280 --> 00:19:01.669 align:start position:0%
kubernetes cluster so you just have an
external<00:18:59.840><c> reference</c><00:19:00.320><c> on</c><00:19:00.480><c> it</c><00:19:00.960><c> so</c><00:19:01.200><c> now</c><00:19:01.440><c> when</c><00:19:01.600><c> the</c>

00:19:01.669 --> 00:19:01.679 align:start position:0%
external reference on it so now when the
 

00:19:01.679 --> 00:19:04.789 align:start position:0%
external reference on it so now when the
database<00:19:02.320><c> pod</c><00:19:02.640><c> or</c><00:19:02.799><c> container</c><00:19:03.360><c> gets</c><00:19:03.679><c> restarted</c>

00:19:04.789 --> 00:19:04.799 align:start position:0%
database pod or container gets restarted
 

00:19:04.799 --> 00:19:07.510 align:start position:0%
database pod or container gets restarted
all<00:19:05.039><c> the</c><00:19:05.200><c> data</c><00:19:05.760><c> will</c><00:19:05.919><c> be</c><00:19:06.320><c> there</c><00:19:06.720><c> persisted</c>

00:19:07.510 --> 00:19:07.520 align:start position:0%
all the data will be there persisted
 

00:19:07.520 --> 00:19:08.710 align:start position:0%
all the data will be there persisted
it's<00:19:07.679><c> important</c><00:19:08.080><c> to</c><00:19:08.160><c> understand</c><00:19:08.559><c> the</c>

00:19:08.710 --> 00:19:08.720 align:start position:0%
it's important to understand the
 

00:19:08.720 --> 00:19:10.870 align:start position:0%
it's important to understand the
distinction<00:19:09.440><c> between</c><00:19:10.000><c> the</c><00:19:10.160><c> kubernetes</c>

00:19:10.870 --> 00:19:10.880 align:start position:0%
distinction between the kubernetes
 

00:19:10.880 --> 00:19:13.669 align:start position:0%
distinction between the kubernetes
cluster<00:19:11.760><c> and</c><00:19:12.000><c> all</c><00:19:12.160><c> of</c><00:19:12.320><c> its</c><00:19:12.480><c> components</c><00:19:13.520><c> and</c>

00:19:13.669 --> 00:19:13.679 align:start position:0%
cluster and all of its components and
 

00:19:13.679 --> 00:19:14.870 align:start position:0%
cluster and all of its components and
the<00:19:13.840><c> storage</c>

00:19:14.870 --> 00:19:14.880 align:start position:0%
the storage
 

00:19:14.880 --> 00:19:17.110 align:start position:0%
the storage
regardless<00:19:15.760><c> of</c><00:19:16.000><c> whether</c><00:19:16.320><c> it's</c><00:19:16.559><c> a</c><00:19:16.640><c> local</c><00:19:17.039><c> or</c>

00:19:17.110 --> 00:19:17.120 align:start position:0%
regardless of whether it's a local or
 

00:19:17.120 --> 00:19:20.230 align:start position:0%
regardless of whether it's a local or
remote<00:19:17.520><c> storage</c><00:19:18.480><c> think</c><00:19:18.720><c> of</c><00:19:18.880><c> a</c><00:19:19.039><c> storage</c><00:19:19.840><c> as</c><00:19:20.000><c> an</c>

00:19:20.230 --> 00:19:20.240 align:start position:0%
remote storage think of a storage as an
 

00:19:20.240 --> 00:19:23.029 align:start position:0%
remote storage think of a storage as an
external<00:19:20.799><c> hard</c><00:19:21.120><c> drive</c><00:19:21.600><c> plugged</c><00:19:22.080><c> in</c><00:19:22.559><c> into</c><00:19:22.880><c> the</c>

00:19:23.029 --> 00:19:23.039 align:start position:0%
external hard drive plugged in into the
 

00:19:23.039 --> 00:19:26.230 align:start position:0%
external hard drive plugged in into the
kubernetes<00:19:23.679><c> cluster</c><00:19:24.559><c> because</c><00:19:25.440><c> the</c><00:19:25.679><c> point</c><00:19:26.000><c> is</c>

00:19:26.230 --> 00:19:26.240 align:start position:0%
kubernetes cluster because the point is
 

00:19:26.240 --> 00:19:28.390 align:start position:0%
kubernetes cluster because the point is
kubernetes<00:19:26.799><c> cluster</c><00:19:27.280><c> explicitly</c><00:19:28.080><c> doesn't</c>

00:19:28.390 --> 00:19:28.400 align:start position:0%
kubernetes cluster explicitly doesn't
 

00:19:28.400 --> 00:19:31.669 align:start position:0%
kubernetes cluster explicitly doesn't
manage<00:19:29.120><c> any</c><00:19:29.679><c> data</c><00:19:30.080><c> persistence</c><00:19:31.120><c> which</c><00:19:31.360><c> means</c>

00:19:31.669 --> 00:19:31.679 align:start position:0%
manage any data persistence which means
 

00:19:31.679 --> 00:19:33.909 align:start position:0%
manage any data persistence which means
that<00:19:32.000><c> you</c><00:19:32.240><c> as</c><00:19:32.400><c> a</c><00:19:32.480><c> kubernetes</c><00:19:33.039><c> user</c><00:19:33.520><c> or</c><00:19:33.679><c> an</c>

00:19:33.909 --> 00:19:33.919 align:start position:0%
that you as a kubernetes user or an
 

00:19:33.919 --> 00:19:36.230 align:start position:0%
that you as a kubernetes user or an
administrator<00:19:35.039><c> are</c><00:19:35.200><c> responsible</c><00:19:35.919><c> for</c>

00:19:36.230 --> 00:19:36.240 align:start position:0%
administrator are responsible for
 

00:19:36.240 --> 00:19:38.390 align:start position:0%
administrator are responsible for
backing<00:19:36.640><c> up</c><00:19:36.720><c> the</c><00:19:36.960><c> data</c><00:19:37.600><c> replicating</c><00:19:38.320><c> and</c>

00:19:38.390 --> 00:19:38.400 align:start position:0%
backing up the data replicating and
 

00:19:38.400 --> 00:19:40.710 align:start position:0%
backing up the data replicating and
managing<00:19:38.960><c> it</c><00:19:39.280><c> and</c><00:19:39.520><c> making</c><00:19:39.919><c> sure</c><00:19:40.160><c> that</c><00:19:40.400><c> it's</c>

00:19:40.710 --> 00:19:40.720 align:start position:0%
managing it and making sure that it's
 

00:19:40.720 --> 00:19:43.909 align:start position:0%
managing it and making sure that it's
kept<00:19:41.039><c> on</c><00:19:41.200><c> a</c><00:19:41.280><c> proper</c><00:19:41.679><c> hardware</c><00:19:42.559><c> etc</c><00:19:43.600><c> because</c>

00:19:43.909 --> 00:19:43.919 align:start position:0%
kept on a proper hardware etc because
 

00:19:43.919 --> 00:19:49.990 align:start position:0%
kept on a proper hardware etc because
it's<00:19:44.160><c> not</c><00:19:44.720><c> taking</c><00:19:45.120><c> care</c><00:19:45.360><c> of</c><00:19:45.520><c> kubernetes</c>

00:19:49.990 --> 00:19:50.000 align:start position:0%
 
 

00:19:50.000 --> 00:19:51.510 align:start position:0%
 
so<00:19:50.160><c> now</c><00:19:50.320><c> let's</c><00:19:50.480><c> see</c><00:19:50.720><c> everything</c><00:19:51.039><c> is</c><00:19:51.200><c> running</c>

00:19:51.510 --> 00:19:51.520 align:start position:0%
so now let's see everything is running
 

00:19:51.520 --> 00:19:53.590 align:start position:0%
so now let's see everything is running
perfectly<00:19:52.080><c> and</c><00:19:52.240><c> a</c><00:19:52.320><c> user</c><00:19:52.720><c> can</c><00:19:53.039><c> access</c><00:19:53.440><c> our</c>

00:19:53.590 --> 00:19:53.600 align:start position:0%
perfectly and a user can access our
 

00:19:53.600 --> 00:19:56.390 align:start position:0%
perfectly and a user can access our
application<00:19:54.640><c> through</c><00:19:54.880><c> a</c><00:19:55.039><c> browser</c>

00:19:56.390 --> 00:19:56.400 align:start position:0%
application through a browser
 

00:19:56.400 --> 00:19:59.029 align:start position:0%
application through a browser
now<00:19:56.559><c> with</c><00:19:56.720><c> this</c><00:19:56.960><c> setup</c><00:19:57.360><c> what</c><00:19:57.520><c> happens</c><00:19:58.160><c> if</c><00:19:58.720><c> my</c>

00:19:59.029 --> 00:19:59.039 align:start position:0%
now with this setup what happens if my
 

00:19:59.039 --> 00:20:02.870 align:start position:0%
now with this setup what happens if my
application<00:19:59.840><c> pod</c><00:20:00.559><c> dies</c><00:20:01.280><c> right</c><00:20:01.760><c> crashes</c><00:20:02.559><c> or</c><00:20:02.799><c> i</c>

00:20:02.870 --> 00:20:02.880 align:start position:0%
application pod dies right crashes or i
 

00:20:02.880 --> 00:20:06.070 align:start position:0%
application pod dies right crashes or i
have<00:20:03.039><c> to</c><00:20:03.280><c> restart</c><00:20:04.320><c> the</c><00:20:04.799><c> pod</c><00:20:05.120><c> because</c><00:20:05.440><c> i</c><00:20:05.679><c> built</c>

00:20:06.070 --> 00:20:06.080 align:start position:0%
have to restart the pod because i built
 

00:20:06.080 --> 00:20:08.310 align:start position:0%
have to restart the pod because i built
a<00:20:06.240><c> new</c><00:20:06.640><c> container</c><00:20:07.280><c> image</c>

00:20:08.310 --> 00:20:08.320 align:start position:0%
a new container image
 

00:20:08.320 --> 00:20:11.110 align:start position:0%
a new container image
basically<00:20:08.880><c> i</c><00:20:08.960><c> would</c><00:20:09.200><c> have</c><00:20:09.520><c> a</c><00:20:09.679><c> downtime</c><00:20:10.640><c> where</c>

00:20:11.110 --> 00:20:11.120 align:start position:0%
basically i would have a downtime where
 

00:20:11.120 --> 00:20:13.990 align:start position:0%
basically i would have a downtime where
a<00:20:11.360><c> user</c><00:20:11.760><c> can</c><00:20:12.080><c> reach</c><00:20:12.320><c> my</c><00:20:12.559><c> application</c><00:20:13.520><c> which</c><00:20:13.760><c> is</c>

00:20:13.990 --> 00:20:14.000 align:start position:0%
a user can reach my application which is
 

00:20:14.000 --> 00:20:16.549 align:start position:0%
a user can reach my application which is
obviously<00:20:14.720><c> a</c><00:20:14.880><c> very</c><00:20:15.280><c> bad</c><00:20:15.520><c> thing</c>

00:20:16.549 --> 00:20:16.559 align:start position:0%
obviously a very bad thing
 

00:20:16.559 --> 00:20:19.029 align:start position:0%
obviously a very bad thing
if<00:20:16.799><c> it</c><00:20:16.880><c> happens</c><00:20:17.280><c> in</c><00:20:17.440><c> production</c><00:20:18.320><c> and</c><00:20:18.559><c> this</c><00:20:18.799><c> is</c>

00:20:19.029 --> 00:20:19.039 align:start position:0%
if it happens in production and this is
 

00:20:19.039 --> 00:20:21.350 align:start position:0%
if it happens in production and this is
exactly<00:20:19.760><c> the</c><00:20:19.919><c> advantage</c><00:20:20.480><c> of</c><00:20:20.640><c> distributed</c>

00:20:21.350 --> 00:20:21.360 align:start position:0%
exactly the advantage of distributed
 

00:20:21.360 --> 00:20:23.350 align:start position:0%
exactly the advantage of distributed
systems<00:20:21.919><c> and</c><00:20:22.080><c> containers</c>

00:20:23.350 --> 00:20:23.360 align:start position:0%
systems and containers
 

00:20:23.360 --> 00:20:25.830 align:start position:0%
systems and containers
so<00:20:23.600><c> instead</c><00:20:23.840><c> of</c><00:20:24.000><c> relying</c><00:20:24.640><c> on</c><00:20:24.880><c> just</c><00:20:25.520><c> one</c>

00:20:25.830 --> 00:20:25.840 align:start position:0%
so instead of relying on just one
 

00:20:25.840 --> 00:20:28.310 align:start position:0%
so instead of relying on just one
application<00:20:26.559><c> part</c><00:20:26.880><c> and</c><00:20:27.120><c> one</c><00:20:27.360><c> database</c><00:20:28.000><c> part</c>

00:20:28.310 --> 00:20:28.320 align:start position:0%
application part and one database part
 

00:20:28.320 --> 00:20:29.430 align:start position:0%
application part and one database part
etc

00:20:29.430 --> 00:20:29.440 align:start position:0%
etc
 

00:20:29.440 --> 00:20:32.710 align:start position:0%
etc
we<00:20:29.600><c> are</c><00:20:30.080><c> replicating</c><00:20:31.280><c> everything</c>

00:20:32.710 --> 00:20:32.720 align:start position:0%
we are replicating everything
 

00:20:32.720 --> 00:20:34.870 align:start position:0%
we are replicating everything
on<00:20:32.960><c> multiple</c><00:20:33.840><c> servers</c>

00:20:34.870 --> 00:20:34.880 align:start position:0%
on multiple servers
 

00:20:34.880 --> 00:20:37.350 align:start position:0%
on multiple servers
so<00:20:35.120><c> we</c><00:20:35.280><c> would</c><00:20:35.520><c> have</c><00:20:35.919><c> another</c><00:20:36.320><c> node</c><00:20:36.799><c> where</c><00:20:37.200><c> a</c>

00:20:37.350 --> 00:20:37.360 align:start position:0%
so we would have another node where a
 

00:20:37.360 --> 00:20:40.470 align:start position:0%
so we would have another node where a
replica<00:20:38.080><c> or</c><00:20:38.320><c> clone</c><00:20:38.880><c> of</c><00:20:39.120><c> our</c><00:20:39.360><c> application</c>

00:20:40.470 --> 00:20:40.480 align:start position:0%
replica or clone of our application
 

00:20:40.480 --> 00:20:43.430 align:start position:0%
replica or clone of our application
would<00:20:40.799><c> run</c><00:20:41.200><c> which</c><00:20:41.440><c> will</c><00:20:41.760><c> also</c><00:20:42.559><c> be</c><00:20:42.880><c> connected</c>

00:20:43.430 --> 00:20:43.440 align:start position:0%
would run which will also be connected
 

00:20:43.440 --> 00:20:45.669 align:start position:0%
would run which will also be connected
to<00:20:43.600><c> the</c><00:20:43.760><c> service</c><00:20:44.480><c> so</c><00:20:44.640><c> remember</c><00:20:45.039><c> previously</c><00:20:45.520><c> we</c>

00:20:45.669 --> 00:20:45.679 align:start position:0%
to the service so remember previously we
 

00:20:45.679 --> 00:20:48.630 align:start position:0%
to the service so remember previously we
said<00:20:45.919><c> the</c><00:20:46.080><c> service</c><00:20:46.640><c> is</c><00:20:46.799><c> like</c><00:20:47.120><c> a</c><00:20:47.600><c> persistent</c>

00:20:48.630 --> 00:20:48.640 align:start position:0%
said the service is like a persistent
 

00:20:48.640 --> 00:20:51.750 align:start position:0%
said the service is like a persistent
static<00:20:49.120><c> ip</c><00:20:49.440><c> address</c><00:20:50.159><c> with</c><00:20:50.400><c> a</c><00:20:50.480><c> dns</c><00:20:50.960><c> name</c><00:20:51.520><c> so</c>

00:20:51.750 --> 00:20:51.760 align:start position:0%
static ip address with a dns name so
 

00:20:51.760 --> 00:20:53.270 align:start position:0%
static ip address with a dns name so
that<00:20:51.919><c> you</c><00:20:52.080><c> don't</c><00:20:52.240><c> have</c><00:20:52.400><c> to</c>

00:20:53.270 --> 00:20:53.280 align:start position:0%
that you don't have to
 

00:20:53.280 --> 00:20:56.230 align:start position:0%
that you don't have to
constantly<00:20:54.000><c> adjust</c><00:20:54.640><c> the</c><00:20:54.960><c> end</c><00:20:55.200><c> point</c><00:20:55.600><c> when</c><00:20:55.919><c> a</c>

00:20:56.230 --> 00:20:56.240 align:start position:0%
constantly adjust the end point when a
 

00:20:56.240 --> 00:20:57.350 align:start position:0%
constantly adjust the end point when a
pod<00:20:56.480><c> dies</c>

00:20:57.350 --> 00:20:57.360 align:start position:0%
pod dies
 

00:20:57.360 --> 00:20:59.909 align:start position:0%
pod dies
but<00:20:57.600><c> service</c><00:20:58.159><c> is</c><00:20:58.320><c> also</c><00:20:58.799><c> a</c><00:20:58.960><c> load</c><00:20:59.280><c> balancer</c>

00:20:59.909 --> 00:20:59.919 align:start position:0%
but service is also a load balancer
 

00:20:59.919 --> 00:21:01.350 align:start position:0%
but service is also a load balancer
which<00:21:00.080><c> means</c><00:21:00.240><c> that</c><00:21:00.400><c> the</c><00:21:00.559><c> service</c><00:21:01.039><c> will</c>

00:21:01.350 --> 00:21:01.360 align:start position:0%
which means that the service will
 

00:21:01.360 --> 00:21:03.350 align:start position:0%
which means that the service will
actually<00:21:01.840><c> catch</c><00:21:02.240><c> the</c><00:21:02.400><c> request</c><00:21:02.880><c> and</c><00:21:03.039><c> forward</c>

00:21:03.350 --> 00:21:03.360 align:start position:0%
actually catch the request and forward
 

00:21:03.360 --> 00:21:05.750 align:start position:0%
actually catch the request and forward
it<00:21:03.440><c> to</c><00:21:03.679><c> whichever</c><00:21:04.159><c> part</c><00:21:04.480><c> is</c><00:21:04.640><c> least</c><00:21:04.880><c> busy</c><00:21:05.440><c> so</c><00:21:05.600><c> it</c>

00:21:05.750 --> 00:21:05.760 align:start position:0%
it to whichever part is least busy so it
 

00:21:05.760 --> 00:21:08.390 align:start position:0%
it to whichever part is least busy so it
has<00:21:06.400><c> both</c><00:21:06.799><c> of</c><00:21:06.880><c> these</c><00:21:07.120><c> functionalities</c>

00:21:08.390 --> 00:21:08.400 align:start position:0%
has both of these functionalities
 

00:21:08.400 --> 00:21:10.470 align:start position:0%
has both of these functionalities
but<00:21:08.640><c> in</c><00:21:08.799><c> order</c><00:21:09.039><c> to</c><00:21:09.200><c> create</c><00:21:09.520><c> the</c><00:21:09.760><c> the</c><00:21:10.000><c> second</c>

00:21:10.470 --> 00:21:10.480 align:start position:0%
but in order to create the the second
 

00:21:10.480 --> 00:21:13.110 align:start position:0%
but in order to create the the second
replica<00:21:11.039><c> of</c><00:21:11.200><c> the</c><00:21:11.520><c> my</c><00:21:11.679><c> application</c><00:21:12.320><c> pod</c><00:21:12.960><c> you</c>

00:21:13.110 --> 00:21:13.120 align:start position:0%
replica of the my application pod you
 

00:21:13.120 --> 00:21:15.590 align:start position:0%
replica of the my application pod you
wouldn't<00:21:13.520><c> create</c><00:21:14.080><c> a</c><00:21:14.240><c> second</c><00:21:14.720><c> part</c><00:21:15.360><c> but</c>

00:21:15.590 --> 00:21:15.600 align:start position:0%
wouldn't create a second part but
 

00:21:15.600 --> 00:21:18.149 align:start position:0%
wouldn't create a second part but
instead<00:21:16.080><c> you</c><00:21:16.240><c> will</c><00:21:16.320><c> define</c><00:21:16.880><c> a</c><00:21:17.039><c> blueprint</c><00:21:17.919><c> for</c>

00:21:18.149 --> 00:21:18.159 align:start position:0%
instead you will define a blueprint for
 

00:21:18.159 --> 00:21:20.950 align:start position:0%
instead you will define a blueprint for
a<00:21:18.240><c> my</c><00:21:18.480><c> application</c><00:21:19.200><c> pod</c><00:21:19.919><c> and</c><00:21:20.159><c> specify</c><00:21:20.799><c> how</c>

00:21:20.950 --> 00:21:20.960 align:start position:0%
a my application pod and specify how
 

00:21:20.960 --> 00:21:23.830 align:start position:0%
a my application pod and specify how
many<00:21:21.360><c> replicas</c><00:21:22.080><c> of</c><00:21:22.320><c> that</c><00:21:22.559><c> pod</c><00:21:23.200><c> you</c><00:21:23.360><c> would</c><00:21:23.600><c> like</c>

00:21:23.830 --> 00:21:23.840 align:start position:0%
many replicas of that pod you would like
 

00:21:23.840 --> 00:21:25.830 align:start position:0%
many replicas of that pod you would like
to<00:21:24.080><c> run</c><00:21:24.400><c> and</c><00:21:24.559><c> that</c><00:21:24.880><c> component</c><00:21:25.520><c> or</c><00:21:25.600><c> that</c>

00:21:25.830 --> 00:21:25.840 align:start position:0%
to run and that component or that
 

00:21:25.840 --> 00:21:28.549 align:start position:0%
to run and that component or that
blueprint<00:21:26.880><c> is</c><00:21:27.039><c> called</c><00:21:27.360><c> deployment</c><00:21:28.080><c> which</c><00:21:28.320><c> is</c>

00:21:28.549 --> 00:21:28.559 align:start position:0%
blueprint is called deployment which is
 

00:21:28.559 --> 00:21:31.510 align:start position:0%
blueprint is called deployment which is
another<00:21:28.960><c> component</c><00:21:29.600><c> of</c><00:21:30.159><c> kubernetes</c><00:21:31.120><c> and</c><00:21:31.280><c> in</c>

00:21:31.510 --> 00:21:31.520 align:start position:0%
another component of kubernetes and in
 

00:21:31.520 --> 00:21:33.909 align:start position:0%
another component of kubernetes and in
practice<00:21:32.320><c> you</c><00:21:32.559><c> would</c><00:21:32.799><c> not</c><00:21:33.039><c> be</c><00:21:33.200><c> working</c><00:21:33.600><c> with</c>

00:21:33.909 --> 00:21:33.919 align:start position:0%
practice you would not be working with
 

00:21:33.919 --> 00:21:36.230 align:start position:0%
practice you would not be working with
pods<00:21:34.400><c> or</c><00:21:34.559><c> you</c><00:21:34.640><c> would</c><00:21:34.799><c> not</c><00:21:34.960><c> be</c><00:21:35.120><c> creating</c><00:21:35.600><c> pods</c>

00:21:36.230 --> 00:21:36.240 align:start position:0%
pods or you would not be creating pods
 

00:21:36.240 --> 00:21:38.310 align:start position:0%
pods or you would not be creating pods
you<00:21:36.400><c> would</c><00:21:36.559><c> be</c><00:21:36.720><c> creating</c><00:21:37.200><c> deployments</c>

00:21:38.310 --> 00:21:38.320 align:start position:0%
you would be creating deployments
 

00:21:38.320 --> 00:21:40.870 align:start position:0%
you would be creating deployments
because<00:21:38.880><c> there</c><00:21:39.120><c> you</c><00:21:39.280><c> can</c><00:21:39.440><c> specify</c><00:21:40.480><c> how</c><00:21:40.640><c> many</c>

00:21:40.870 --> 00:21:40.880 align:start position:0%
because there you can specify how many
 

00:21:40.880 --> 00:21:43.590 align:start position:0%
because there you can specify how many
replicas<00:21:41.440><c> and</c><00:21:41.600><c> you</c><00:21:41.760><c> can</c><00:21:42.000><c> also</c><00:21:42.400><c> scale</c><00:21:43.039><c> up</c><00:21:43.440><c> or</c>

00:21:43.590 --> 00:21:43.600 align:start position:0%
replicas and you can also scale up or
 

00:21:43.600 --> 00:21:46.549 align:start position:0%
replicas and you can also scale up or
scale<00:21:44.080><c> down</c><00:21:44.880><c> the</c><00:21:45.039><c> number</c><00:21:45.280><c> of</c><00:21:45.440><c> replicas</c><00:21:46.240><c> of</c>

00:21:46.549 --> 00:21:46.559 align:start position:0%
scale down the number of replicas of
 

00:21:46.559 --> 00:21:48.950 align:start position:0%
scale down the number of replicas of
pots<00:21:46.960><c> that</c><00:21:47.200><c> you</c><00:21:47.360><c> need</c><00:21:47.760><c> so</c><00:21:47.919><c> with</c><00:21:48.240><c> pot</c><00:21:48.559><c> we</c><00:21:48.720><c> said</c>

00:21:48.950 --> 00:21:48.960 align:start position:0%
pots that you need so with pot we said
 

00:21:48.960 --> 00:21:51.669 align:start position:0%
pots that you need so with pot we said
that<00:21:49.200><c> pot</c><00:21:49.440><c> is</c><00:21:49.679><c> a</c><00:21:49.840><c> layer</c><00:21:50.320><c> of</c><00:21:50.559><c> abstraction</c><00:21:51.440><c> on</c>

00:21:51.669 --> 00:21:51.679 align:start position:0%
that pot is a layer of abstraction on
 

00:21:51.679 --> 00:21:53.590 align:start position:0%
that pot is a layer of abstraction on
top<00:21:51.919><c> of</c><00:21:52.320><c> containers</c>

00:21:53.590 --> 00:21:53.600 align:start position:0%
top of containers
 

00:21:53.600 --> 00:21:56.230 align:start position:0%
top of containers
and<00:21:53.760><c> deployment</c><00:21:54.320><c> is</c><00:21:54.799><c> another</c><00:21:55.280><c> abstraction</c><00:21:56.080><c> on</c>

00:21:56.230 --> 00:21:56.240 align:start position:0%
and deployment is another abstraction on
 

00:21:56.240 --> 00:21:58.149 align:start position:0%
and deployment is another abstraction on
top<00:21:56.480><c> of</c><00:21:56.640><c> pots</c><00:21:57.200><c> which</c><00:21:57.440><c> makes</c><00:21:57.760><c> it</c><00:21:57.919><c> more</c>

00:21:58.149 --> 00:21:58.159 align:start position:0%
top of pots which makes it more
 

00:21:58.159 --> 00:22:00.310 align:start position:0%
top of pots which makes it more
convenient<00:21:58.720><c> to</c><00:21:58.960><c> interact</c><00:21:59.440><c> with</c><00:21:59.600><c> the</c><00:21:59.760><c> pods</c>

00:22:00.310 --> 00:22:00.320 align:start position:0%
convenient to interact with the pods
 

00:22:00.320 --> 00:22:02.630 align:start position:0%
convenient to interact with the pods
replicate<00:22:00.960><c> them</c><00:22:01.600><c> and</c><00:22:01.840><c> do</c><00:22:02.080><c> some</c><00:22:02.320><c> other</c>

00:22:02.630 --> 00:22:02.640 align:start position:0%
replicate them and do some other
 

00:22:02.640 --> 00:22:04.070 align:start position:0%
replicate them and do some other
configuration

00:22:04.070 --> 00:22:04.080 align:start position:0%
configuration
 

00:22:04.080 --> 00:22:06.630 align:start position:0%
configuration
so<00:22:04.320><c> in</c><00:22:04.559><c> practice</c><00:22:05.440><c> you</c><00:22:05.600><c> would</c><00:22:05.919><c> mostly</c><00:22:06.400><c> work</c>

00:22:06.630 --> 00:22:06.640 align:start position:0%
so in practice you would mostly work
 

00:22:06.640 --> 00:22:09.350 align:start position:0%
so in practice you would mostly work
with<00:22:06.880><c> deployments</c><00:22:07.679><c> and</c><00:22:07.840><c> not</c><00:22:08.080><c> with</c><00:22:08.320><c> pods</c><00:22:09.039><c> so</c>

00:22:09.350 --> 00:22:09.360 align:start position:0%
with deployments and not with pods so
 

00:22:09.360 --> 00:22:11.510 align:start position:0%
with deployments and not with pods so
now<00:22:09.760><c> if</c><00:22:10.320><c> one</c><00:22:10.480><c> of</c><00:22:10.559><c> the</c><00:22:10.720><c> replicas</c><00:22:11.280><c> of</c><00:22:11.360><c> your</c>

00:22:11.510 --> 00:22:11.520 align:start position:0%
now if one of the replicas of your
 

00:22:11.520 --> 00:22:13.750 align:start position:0%
now if one of the replicas of your
application<00:22:12.159><c> pod</c><00:22:12.400><c> would</c><00:22:12.559><c> die</c><00:22:13.039><c> the</c><00:22:13.280><c> service</c>

00:22:13.750 --> 00:22:13.760 align:start position:0%
application pod would die the service
 

00:22:13.760 --> 00:22:17.110 align:start position:0%
application pod would die the service
will<00:22:14.320><c> forward</c><00:22:14.640><c> the</c><00:22:14.799><c> requests</c><00:22:15.679><c> to</c><00:22:16.240><c> another</c><00:22:16.640><c> one</c>

00:22:17.110 --> 00:22:17.120 align:start position:0%
will forward the requests to another one
 

00:22:17.120 --> 00:22:18.950 align:start position:0%
will forward the requests to another one
so<00:22:17.360><c> your</c><00:22:17.600><c> application</c><00:22:18.320><c> would</c><00:22:18.559><c> still</c><00:22:18.720><c> be</c>

00:22:18.950 --> 00:22:18.960 align:start position:0%
so your application would still be
 

00:22:18.960 --> 00:22:20.950 align:start position:0%
so your application would still be
accessible<00:22:19.520><c> for</c><00:22:19.679><c> the</c><00:22:19.840><c> user</c><00:22:20.320><c> so</c><00:22:20.559><c> now</c><00:22:20.799><c> you're</c>

00:22:20.950 --> 00:22:20.960 align:start position:0%
accessible for the user so now you're
 

00:22:20.960 --> 00:22:22.310 align:start position:0%
accessible for the user so now you're
probably<00:22:21.280><c> wondering</c><00:22:21.760><c> what</c><00:22:21.919><c> about</c><00:22:22.159><c> the</c>

00:22:22.310 --> 00:22:22.320 align:start position:0%
probably wondering what about the
 

00:22:22.320 --> 00:22:25.029 align:start position:0%
probably wondering what about the
database<00:22:23.120><c> pod</c><00:22:23.520><c> because</c><00:22:23.840><c> if</c><00:22:24.000><c> the</c><00:22:24.159><c> database</c>

00:22:25.029 --> 00:22:25.039 align:start position:0%
database pod because if the database
 

00:22:25.039 --> 00:22:27.350 align:start position:0%
database pod because if the database
part<00:22:25.360><c> died</c><00:22:25.760><c> your</c><00:22:26.000><c> application</c><00:22:26.799><c> also</c><00:22:27.120><c> wouldn't</c>

00:22:27.350 --> 00:22:27.360 align:start position:0%
part died your application also wouldn't
 

00:22:27.360 --> 00:22:29.990 align:start position:0%
part died your application also wouldn't
be<00:22:27.760><c> accessible</c><00:22:28.400><c> so</c><00:22:28.559><c> we</c><00:22:28.799><c> need</c><00:22:29.200><c> a</c>

00:22:29.990 --> 00:22:30.000 align:start position:0%
be accessible so we need a
 

00:22:30.000 --> 00:22:32.950 align:start position:0%
be accessible so we need a
database<00:22:30.799><c> replica</c><00:22:31.360><c> as</c><00:22:31.440><c> well</c><00:22:31.919><c> however</c><00:22:32.720><c> we</c>

00:22:32.950 --> 00:22:32.960 align:start position:0%
database replica as well however we
 

00:22:32.960 --> 00:22:35.350 align:start position:0%
database replica as well however we
can't<00:22:33.600><c> replicate</c><00:22:34.320><c> database</c><00:22:34.880><c> using</c><00:22:35.280><c> a</c>

00:22:35.350 --> 00:22:35.360 align:start position:0%
can't replicate database using a
 

00:22:35.360 --> 00:22:37.830 align:start position:0%
can't replicate database using a
deployment<00:22:36.240><c> and</c><00:22:36.320><c> the</c><00:22:36.559><c> reason</c><00:22:36.960><c> for</c><00:22:37.120><c> that</c><00:22:37.520><c> is</c>

00:22:37.830 --> 00:22:37.840 align:start position:0%
deployment and the reason for that is
 

00:22:37.840 --> 00:22:41.110 align:start position:0%
deployment and the reason for that is
because<00:22:38.720><c> database</c><00:22:39.600><c> has</c><00:22:39.919><c> a</c><00:22:40.159><c> state</c><00:22:40.720><c> which</c><00:22:40.960><c> is</c>

00:22:41.110 --> 00:22:41.120 align:start position:0%
because database has a state which is
 

00:22:41.120 --> 00:22:42.310 align:start position:0%
because database has a state which is
its<00:22:41.440><c> data</c>

00:22:42.310 --> 00:22:42.320 align:start position:0%
its data
 

00:22:42.320 --> 00:22:44.789 align:start position:0%
its data
meaning<00:22:42.720><c> that</c><00:22:42.960><c> if</c><00:22:43.200><c> we</c><00:22:43.440><c> have</c><00:22:44.159><c> clones</c><00:22:44.640><c> or</c>

00:22:44.789 --> 00:22:44.799 align:start position:0%
meaning that if we have clones or
 

00:22:44.799 --> 00:22:47.430 align:start position:0%
meaning that if we have clones or
replicas<00:22:45.440><c> of</c><00:22:45.520><c> the</c><00:22:45.679><c> database</c><00:22:46.799><c> they</c><00:22:46.960><c> would</c><00:22:47.200><c> all</c>

00:22:47.430 --> 00:22:47.440 align:start position:0%
replicas of the database they would all
 

00:22:47.440 --> 00:22:49.990 align:start position:0%
replicas of the database they would all
need<00:22:47.679><c> to</c><00:22:48.400><c> access</c><00:22:48.880><c> the</c><00:22:49.120><c> same</c>

00:22:49.990 --> 00:22:50.000 align:start position:0%
need to access the same
 

00:22:50.000 --> 00:22:50.950 align:start position:0%
need to access the same
shared

00:22:50.950 --> 00:22:50.960 align:start position:0%
shared
 

00:22:50.960 --> 00:22:53.430 align:start position:0%
shared
data<00:22:51.360><c> storage</c><00:22:52.080><c> and</c><00:22:52.320><c> there</c><00:22:52.640><c> you</c><00:22:52.799><c> would</c><00:22:52.960><c> need</c>

00:22:53.430 --> 00:22:53.440 align:start position:0%
data storage and there you would need
 

00:22:53.440 --> 00:22:56.230 align:start position:0%
data storage and there you would need
some<00:22:53.600><c> kind</c><00:22:53.840><c> of</c><00:22:54.000><c> mechanism</c><00:22:54.960><c> that</c><00:22:55.200><c> manages</c>

00:22:56.230 --> 00:22:56.240 align:start position:0%
some kind of mechanism that manages
 

00:22:56.240 --> 00:22:58.549 align:start position:0%
some kind of mechanism that manages
which<00:22:56.640><c> parts</c><00:22:57.200><c> are</c><00:22:57.440><c> currently</c><00:22:58.000><c> writing</c><00:22:58.400><c> to</c>

00:22:58.549 --> 00:22:58.559 align:start position:0%
which parts are currently writing to
 

00:22:58.559 --> 00:23:01.350 align:start position:0%
which parts are currently writing to
that<00:22:58.880><c> storage</c><00:22:59.679><c> or</c><00:22:59.919><c> which</c><00:23:00.159><c> pods</c><00:23:00.640><c> are</c><00:23:00.960><c> reading</c>

00:23:01.350 --> 00:23:01.360 align:start position:0%
that storage or which pods are reading
 

00:23:01.360 --> 00:23:04.510 align:start position:0%
that storage or which pods are reading
from<00:23:01.520><c> the</c><00:23:01.679><c> storage</c><00:23:02.159><c> in</c><00:23:02.320><c> order</c><00:23:02.559><c> to</c><00:23:03.200><c> avoid</c><00:23:03.919><c> data</c>

00:23:04.510 --> 00:23:04.520 align:start position:0%
from the storage in order to avoid data
 

00:23:04.520 --> 00:23:08.549 align:start position:0%
from the storage in order to avoid data
inconsistencies<00:23:05.919><c> and</c><00:23:06.720><c> that</c><00:23:07.280><c> mechanism</c>

00:23:08.549 --> 00:23:08.559 align:start position:0%
inconsistencies and that mechanism
 

00:23:08.559 --> 00:23:11.750 align:start position:0%
inconsistencies and that mechanism
in<00:23:08.720><c> addition</c><00:23:09.200><c> to</c><00:23:09.679><c> replicating</c><00:23:10.640><c> feature</c><00:23:11.520><c> is</c>

00:23:11.750 --> 00:23:11.760 align:start position:0%
in addition to replicating feature is
 

00:23:11.760 --> 00:23:14.470 align:start position:0%
in addition to replicating feature is
offered<00:23:12.240><c> by</c><00:23:12.559><c> another</c><00:23:12.960><c> kubernetes</c><00:23:13.679><c> component</c>

00:23:14.470 --> 00:23:14.480 align:start position:0%
offered by another kubernetes component
 

00:23:14.480 --> 00:23:17.669 align:start position:0%
offered by another kubernetes component
called<00:23:14.960><c> statefulset</c><00:23:16.320><c> so</c><00:23:16.559><c> this</c><00:23:16.799><c> component</c><00:23:17.440><c> is</c>

00:23:17.669 --> 00:23:17.679 align:start position:0%
called statefulset so this component is
 

00:23:17.679 --> 00:23:20.830 align:start position:0%
called statefulset so this component is
meant<00:23:18.159><c> specifically</c><00:23:19.200><c> for</c><00:23:19.520><c> applications</c><00:23:20.320><c> like</c>

00:23:20.830 --> 00:23:20.840 align:start position:0%
meant specifically for applications like
 

00:23:20.840 --> 00:23:24.789 align:start position:0%
meant specifically for applications like
databases<00:23:21.840><c> so</c><00:23:22.559><c> mysql</c><00:23:23.600><c> mongodb</c>

00:23:24.789 --> 00:23:24.799 align:start position:0%
databases so mysql mongodb
 

00:23:24.799 --> 00:23:27.590 align:start position:0%
databases so mysql mongodb
elasticsearch<00:23:26.080><c> or</c><00:23:26.320><c> any</c><00:23:26.559><c> other</c><00:23:26.960><c> stateful</c>

00:23:27.590 --> 00:23:27.600 align:start position:0%
elasticsearch or any other stateful
 

00:23:27.600 --> 00:23:30.070 align:start position:0%
elasticsearch or any other stateful
applications<00:23:28.400><c> or</c><00:23:28.640><c> databases</c>

00:23:30.070 --> 00:23:30.080 align:start position:0%
applications or databases
 

00:23:30.080 --> 00:23:32.630 align:start position:0%
applications or databases
should<00:23:30.320><c> be</c><00:23:30.559><c> created</c><00:23:31.200><c> using</c><00:23:31.600><c> stateful</c><00:23:32.240><c> sets</c>

00:23:32.630 --> 00:23:32.640 align:start position:0%
should be created using stateful sets
 

00:23:32.640 --> 00:23:34.390 align:start position:0%
should be created using stateful sets
and<00:23:32.799><c> not</c><00:23:33.039><c> deployments</c>

00:23:34.390 --> 00:23:34.400 align:start position:0%
and not deployments
 

00:23:34.400 --> 00:23:36.789 align:start position:0%
and not deployments
it's<00:23:34.640><c> a</c><00:23:34.720><c> very</c><00:23:34.960><c> important</c><00:23:35.360><c> distinction</c>

00:23:36.789 --> 00:23:36.799 align:start position:0%
it's a very important distinction
 

00:23:36.799 --> 00:23:39.190 align:start position:0%
it's a very important distinction
and<00:23:36.960><c> stateful</c><00:23:37.520><c> said</c><00:23:37.760><c> just</c><00:23:38.000><c> like</c><00:23:38.240><c> deployment</c>

00:23:39.190 --> 00:23:39.200 align:start position:0%
and stateful said just like deployment
 

00:23:39.200 --> 00:23:40.950 align:start position:0%
and stateful said just like deployment
would<00:23:39.440><c> take</c><00:23:39.760><c> care</c><00:23:40.080><c> of</c>

00:23:40.950 --> 00:23:40.960 align:start position:0%
would take care of
 

00:23:40.960 --> 00:23:44.149 align:start position:0%
would take care of
replicating<00:23:41.679><c> the</c><00:23:41.840><c> pots</c><00:23:42.640><c> and</c><00:23:42.880><c> scaling</c><00:23:43.360><c> them</c><00:23:43.679><c> up</c>

00:23:44.149 --> 00:23:44.159 align:start position:0%
replicating the pots and scaling them up
 

00:23:44.159 --> 00:23:46.710 align:start position:0%
replicating the pots and scaling them up
or<00:23:44.400><c> scaling</c><00:23:44.799><c> them</c><00:23:44.960><c> down</c><00:23:45.600><c> but</c><00:23:45.840><c> making</c><00:23:46.240><c> sure</c><00:23:46.559><c> the</c>

00:23:46.710 --> 00:23:46.720 align:start position:0%
or scaling them down but making sure the
 

00:23:46.720 --> 00:23:48.549 align:start position:0%
or scaling them down but making sure the
database<00:23:47.360><c> reads</c><00:23:47.760><c> and</c><00:23:47.919><c> writes</c><00:23:48.320><c> are</c>

00:23:48.549 --> 00:23:48.559 align:start position:0%
database reads and writes are
 

00:23:48.559 --> 00:23:51.110 align:start position:0%
database reads and writes are
synchronized<00:23:49.679><c> so</c><00:23:49.919><c> that</c><00:23:50.159><c> no</c><00:23:50.480><c> database</c>

00:23:51.110 --> 00:23:51.120 align:start position:0%
synchronized so that no database
 

00:23:51.120 --> 00:23:54.310 align:start position:0%
synchronized so that no database
inconsistencies<00:23:52.400><c> are</c><00:23:52.559><c> offered</c><00:23:53.440><c> however</c><00:23:54.080><c> i</c>

00:23:54.310 --> 00:23:54.320 align:start position:0%
inconsistencies are offered however i
 

00:23:54.320 --> 00:23:56.710 align:start position:0%
inconsistencies are offered however i
must<00:23:54.720><c> mention</c><00:23:55.120><c> here</c><00:23:55.440><c> that</c><00:23:55.840><c> deploying</c>

00:23:56.710 --> 00:23:56.720 align:start position:0%
must mention here that deploying
 

00:23:56.720 --> 00:23:59.110 align:start position:0%
must mention here that deploying
database<00:23:57.360><c> applications</c><00:23:58.159><c> using</c><00:23:58.480><c> stateful</c>

00:23:59.110 --> 00:23:59.120 align:start position:0%
database applications using stateful
 

00:23:59.120 --> 00:24:00.070 align:start position:0%
database applications using stateful
sets

00:24:00.070 --> 00:24:00.080 align:start position:0%
sets
 

00:24:00.080 --> 00:24:03.110 align:start position:0%
sets
in<00:24:00.240><c> kubernetes</c><00:24:00.880><c> cluster</c><00:24:01.760><c> can</c><00:24:02.080><c> be</c><00:24:02.559><c> somewhat</c>

00:24:03.110 --> 00:24:03.120 align:start position:0%
in kubernetes cluster can be somewhat
 

00:24:03.120 --> 00:24:05.510 align:start position:0%
in kubernetes cluster can be somewhat
tedious<00:24:03.919><c> so</c><00:24:04.080><c> it's</c><00:24:04.320><c> definitely</c><00:24:05.279><c> more</c>

00:24:05.510 --> 00:24:05.520 align:start position:0%
tedious so it's definitely more
 

00:24:05.520 --> 00:24:08.149 align:start position:0%
tedious so it's definitely more
difficult<00:24:06.240><c> than</c><00:24:06.799><c> working</c><00:24:07.200><c> with</c><00:24:07.440><c> deployments</c>

00:24:08.149 --> 00:24:08.159 align:start position:0%
difficult than working with deployments
 

00:24:08.159 --> 00:24:09.830 align:start position:0%
difficult than working with deployments
where<00:24:08.400><c> you</c><00:24:08.480><c> don't</c><00:24:08.799><c> have</c><00:24:09.360><c> all</c><00:24:09.520><c> these</c>

00:24:09.830 --> 00:24:09.840 align:start position:0%
where you don't have all these
 

00:24:09.840 --> 00:24:12.230 align:start position:0%
where you don't have all these
challenges<00:24:10.559><c> that's</c><00:24:10.880><c> why</c><00:24:11.120><c> it's</c><00:24:11.360><c> also</c><00:24:11.679><c> a</c><00:24:11.840><c> common</c>

00:24:12.230 --> 00:24:12.240 align:start position:0%
challenges that's why it's also a common
 

00:24:12.240 --> 00:24:14.950 align:start position:0%
challenges that's why it's also a common
practice<00:24:13.039><c> to</c><00:24:13.279><c> host</c><00:24:13.679><c> database</c>

00:24:14.950 --> 00:24:14.960 align:start position:0%
practice to host database
 

00:24:14.960 --> 00:24:17.269 align:start position:0%
practice to host database
applications<00:24:15.919><c> outside</c><00:24:16.480><c> of</c><00:24:16.559><c> the</c><00:24:16.640><c> kubernetes</c>

00:24:17.269 --> 00:24:17.279 align:start position:0%
applications outside of the kubernetes
 

00:24:17.279 --> 00:24:20.230 align:start position:0%
applications outside of the kubernetes
cluster<00:24:18.159><c> and</c><00:24:18.400><c> just</c><00:24:18.720><c> have</c><00:24:18.960><c> the</c><00:24:19.120><c> deployments</c><00:24:19.919><c> or</c>

00:24:20.230 --> 00:24:20.240 align:start position:0%
cluster and just have the deployments or
 

00:24:20.240 --> 00:24:22.310 align:start position:0%
cluster and just have the deployments or
stateless<00:24:20.960><c> applications</c>

00:24:22.310 --> 00:24:22.320 align:start position:0%
stateless applications
 

00:24:22.320 --> 00:24:24.950 align:start position:0%
stateless applications
that<00:24:22.559><c> replicate</c><00:24:23.200><c> and</c><00:24:23.360><c> scale</c><00:24:23.679><c> with</c><00:24:23.919><c> no</c><00:24:24.159><c> problem</c>

00:24:24.950 --> 00:24:24.960 align:start position:0%
that replicate and scale with no problem
 

00:24:24.960 --> 00:24:27.350 align:start position:0%
that replicate and scale with no problem
inside<00:24:25.360><c> of</c><00:24:25.440><c> the</c><00:24:25.520><c> kubernetes</c><00:24:26.080><c> cluster</c><00:24:27.120><c> and</c>

00:24:27.350 --> 00:24:27.360 align:start position:0%
inside of the kubernetes cluster and
 

00:24:27.360 --> 00:24:29.350 align:start position:0%
inside of the kubernetes cluster and
communicate<00:24:27.919><c> with</c><00:24:28.080><c> the</c><00:24:28.159><c> external</c><00:24:28.559><c> database</c>

00:24:29.350 --> 00:24:29.360 align:start position:0%
communicate with the external database
 

00:24:29.360 --> 00:24:31.830 align:start position:0%
communicate with the external database
so<00:24:29.679><c> now</c><00:24:29.840><c> that</c><00:24:30.080><c> we</c><00:24:30.240><c> have</c><00:24:30.480><c> two</c><00:24:30.799><c> replicas</c><00:24:31.440><c> of</c><00:24:31.600><c> my</c>

00:24:31.830 --> 00:24:31.840 align:start position:0%
so now that we have two replicas of my
 

00:24:31.840 --> 00:24:34.230 align:start position:0%
so now that we have two replicas of my
application<00:24:32.400><c> pod</c><00:24:32.880><c> and</c><00:24:33.039><c> two</c><00:24:33.279><c> replicas</c><00:24:33.919><c> of</c><00:24:34.080><c> the</c>

00:24:34.230 --> 00:24:34.240 align:start position:0%
application pod and two replicas of the
 

00:24:34.240 --> 00:24:36.789 align:start position:0%
application pod and two replicas of the
database<00:24:34.880><c> and</c><00:24:34.960><c> they're</c><00:24:35.200><c> both</c><00:24:35.760><c> load</c><00:24:36.080><c> balanced</c>

00:24:36.789 --> 00:24:36.799 align:start position:0%
database and they're both load balanced
 

00:24:36.799 --> 00:24:39.269 align:start position:0%
database and they're both load balanced
our<00:24:37.360><c> setup</c><00:24:37.760><c> is</c><00:24:37.919><c> more</c><00:24:38.080><c> robust</c><00:24:38.799><c> which</c><00:24:39.039><c> means</c>

00:24:39.269 --> 00:24:39.279 align:start position:0%
our setup is more robust which means
 

00:24:39.279 --> 00:24:42.310 align:start position:0%
our setup is more robust which means
that<00:24:39.520><c> now</c><00:24:39.919><c> even</c><00:24:40.159><c> if</c><00:24:40.400><c> node</c><00:24:40.799><c> one</c><00:24:41.120><c> the</c><00:24:41.279><c> whole</c><00:24:41.600><c> node</c>

00:24:42.310 --> 00:24:42.320 align:start position:0%
that now even if node one the whole node
 

00:24:42.320 --> 00:24:46.149 align:start position:0%
that now even if node one the whole node
server<00:24:42.960><c> was</c><00:24:43.279><c> actually</c><00:24:44.000><c> rebooted</c><00:24:44.799><c> or</c><00:24:45.360><c> crashed</c>

00:24:46.149 --> 00:24:46.159 align:start position:0%
server was actually rebooted or crashed
 

00:24:46.159 --> 00:24:48.149 align:start position:0%
server was actually rebooted or crashed
and<00:24:46.320><c> nothing</c><00:24:46.720><c> could</c><00:24:46.960><c> run</c><00:24:47.279><c> on</c><00:24:47.440><c> it</c><00:24:47.760><c> we</c><00:24:47.919><c> would</c>

00:24:48.149 --> 00:24:48.159 align:start position:0%
and nothing could run on it we would
 

00:24:48.159 --> 00:24:50.390 align:start position:0%
and nothing could run on it we would
still<00:24:48.400><c> have</c><00:24:48.799><c> a</c><00:24:49.039><c> second</c><00:24:49.440><c> node</c><00:24:50.000><c> with</c>

00:24:50.390 --> 00:24:50.400 align:start position:0%
still have a second node with
 

00:24:50.400 --> 00:24:53.190 align:start position:0%
still have a second node with
application<00:24:51.200><c> and</c><00:24:51.360><c> database</c><00:24:52.080><c> pods</c><00:24:52.640><c> running</c><00:24:53.039><c> on</c>

00:24:53.190 --> 00:24:53.200 align:start position:0%
application and database pods running on
 

00:24:53.200 --> 00:24:55.269 align:start position:0%
application and database pods running on
it<00:24:53.520><c> and</c><00:24:53.600><c> the</c><00:24:53.840><c> application</c><00:24:54.559><c> would</c><00:24:54.799><c> still</c><00:24:55.039><c> be</c>

00:24:55.269 --> 00:24:55.279 align:start position:0%
it and the application would still be
 

00:24:55.279 --> 00:24:58.630 align:start position:0%
it and the application would still be
accessible<00:24:55.840><c> by</c><00:24:56.000><c> the</c><00:24:56.159><c> user</c><00:24:56.880><c> until</c><00:24:57.600><c> these</c><00:24:58.080><c> two</c>

00:24:58.630 --> 00:24:58.640 align:start position:0%
accessible by the user until these two
 

00:24:58.640 --> 00:25:01.269 align:start position:0%
accessible by the user until these two
replicas<00:24:59.200><c> get</c><00:24:59.440><c> recreated</c><00:25:00.240><c> so</c><00:25:00.480><c> you</c><00:25:00.559><c> can</c><00:25:00.799><c> avoid</c>

00:25:01.269 --> 00:25:01.279 align:start position:0%
replicas get recreated so you can avoid
 

00:25:01.279 --> 00:25:04.310 align:start position:0%
replicas get recreated so you can avoid
downtime

00:25:04.310 --> 00:25:04.320 align:start position:0%
 
 

00:25:04.320 --> 00:25:07.510 align:start position:0%
 
so<00:25:04.480><c> to</c><00:25:04.720><c> summarize</c><00:25:05.919><c> we</c><00:25:06.080><c> have</c><00:25:06.320><c> looked</c><00:25:06.720><c> at</c>

00:25:07.510 --> 00:25:07.520 align:start position:0%
so to summarize we have looked at
 

00:25:07.520 --> 00:25:09.990 align:start position:0%
so to summarize we have looked at
the<00:25:07.679><c> most</c><00:25:08.080><c> used</c><00:25:08.320><c> kubernetes</c><00:25:08.960><c> components</c><00:25:09.840><c> we</c>

00:25:09.990 --> 00:25:10.000 align:start position:0%
the most used kubernetes components we
 

00:25:10.000 --> 00:25:12.070 align:start position:0%
the most used kubernetes components we
start<00:25:10.320><c> with</c><00:25:10.480><c> the</c><00:25:10.720><c> pods</c><00:25:11.120><c> and</c><00:25:11.200><c> the</c><00:25:11.360><c> services</c><00:25:11.919><c> in</c>

00:25:12.070 --> 00:25:12.080 align:start position:0%
start with the pods and the services in
 

00:25:12.080 --> 00:25:14.390 align:start position:0%
start with the pods and the services in
order<00:25:12.240><c> to</c><00:25:12.400><c> communicate</c><00:25:12.960><c> between</c><00:25:13.279><c> the</c><00:25:13.520><c> parts</c>

00:25:14.390 --> 00:25:14.400 align:start position:0%
order to communicate between the parts
 

00:25:14.400 --> 00:25:16.870 align:start position:0%
order to communicate between the parts
and<00:25:14.559><c> the</c><00:25:14.799><c> ingress</c><00:25:15.279><c> component</c><00:25:15.840><c> which</c><00:25:16.080><c> is</c>

00:25:16.870 --> 00:25:16.880 align:start position:0%
and the ingress component which is
 

00:25:16.880 --> 00:25:19.750 align:start position:0%
and the ingress component which is
used<00:25:17.520><c> to</c><00:25:17.679><c> route</c><00:25:18.080><c> traffic</c><00:25:18.559><c> into</c><00:25:18.799><c> the</c><00:25:18.960><c> cluster</c>

00:25:19.750 --> 00:25:19.760 align:start position:0%
used to route traffic into the cluster
 

00:25:19.760 --> 00:25:21.190 align:start position:0%
used to route traffic into the cluster
we've<00:25:20.080><c> also</c><00:25:20.400><c> looked</c><00:25:20.640><c> at</c><00:25:20.799><c> external</c>

00:25:21.190 --> 00:25:21.200 align:start position:0%
we've also looked at external
 

00:25:21.200 --> 00:25:23.430 align:start position:0%
we've also looked at external
configuration<00:25:22.080><c> using</c><00:25:22.480><c> config</c><00:25:22.880><c> maps</c><00:25:23.279><c> and</c>

00:25:23.430 --> 00:25:23.440 align:start position:0%
configuration using config maps and
 

00:25:23.440 --> 00:25:26.549 align:start position:0%
configuration using config maps and
secrets<00:25:24.240><c> and</c><00:25:24.400><c> data</c><00:25:24.799><c> persistence</c><00:25:25.760><c> using</c>

00:25:26.549 --> 00:25:26.559 align:start position:0%
secrets and data persistence using
 

00:25:26.559 --> 00:25:30.070 align:start position:0%
secrets and data persistence using
volumes<00:25:27.440><c> and</c><00:25:27.760><c> finally</c><00:25:28.640><c> we've</c><00:25:28.960><c> looked</c><00:25:29.279><c> at</c><00:25:29.760><c> pod</c>

00:25:30.070 --> 00:25:30.080 align:start position:0%
volumes and finally we've looked at pod
 

00:25:30.080 --> 00:25:33.350 align:start position:0%
volumes and finally we've looked at pod
blueprints<00:25:31.039><c> with</c><00:25:31.360><c> replicating</c><00:25:32.080><c> mechanisms</c>

00:25:33.350 --> 00:25:33.360 align:start position:0%
blueprints with replicating mechanisms
 

00:25:33.360 --> 00:25:36.230 align:start position:0%
blueprints with replicating mechanisms
like<00:25:33.600><c> deployments</c><00:25:34.480><c> and</c><00:25:34.640><c> stateful</c><00:25:35.279><c> sets</c><00:25:36.000><c> where</c>

00:25:36.230 --> 00:25:36.240 align:start position:0%
like deployments and stateful sets where
 

00:25:36.240 --> 00:25:38.710 align:start position:0%
like deployments and stateful sets where
stateful<00:25:36.799><c> set</c><00:25:37.120><c> is</c><00:25:37.279><c> used</c><00:25:37.520><c> specifically</c><00:25:38.400><c> for</c>

00:25:38.710 --> 00:25:38.720 align:start position:0%
stateful set is used specifically for
 

00:25:38.720 --> 00:25:41.269 align:start position:0%
stateful set is used specifically for
stateful<00:25:39.200><c> applications</c><00:25:40.000><c> like</c><00:25:40.240><c> databases</c>

00:25:41.269 --> 00:25:41.279 align:start position:0%
stateful applications like databases
 

00:25:41.279 --> 00:25:44.390 align:start position:0%
stateful applications like databases
just<00:25:41.679><c> using</c><00:25:42.320><c> these</c><00:25:42.720><c> core</c><00:25:43.039><c> components</c><00:25:44.000><c> you</c><00:25:44.159><c> can</c>

00:25:44.390 --> 00:25:44.400 align:start position:0%
just using these core components you can
 

00:25:44.400 --> 00:25:46.230 align:start position:0%
just using these core components you can
actually<00:25:44.720><c> build</c><00:25:45.039><c> pretty</c><00:25:45.440><c> powerful</c>

00:25:46.230 --> 00:25:46.240 align:start position:0%
actually build pretty powerful
 

00:25:46.240 --> 00:25:48.549 align:start position:0%
actually build pretty powerful
kubernetes<00:25:46.880><c> clusters</c>

00:25:48.549 --> 00:25:48.559 align:start position:0%
kubernetes clusters
 

00:25:48.559 --> 00:25:50.710 align:start position:0%
kubernetes clusters
before<00:25:48.960><c> moving</c><00:25:49.279><c> on</c><00:25:49.600><c> i</c><00:25:49.760><c> want</c><00:25:49.919><c> to</c><00:25:50.080><c> give</c><00:25:50.320><c> a</c><00:25:50.480><c> shout</c>

00:25:50.710 --> 00:25:50.720 align:start position:0%
before moving on i want to give a shout
 

00:25:50.720 --> 00:25:52.950 align:start position:0%
before moving on i want to give a shout
out<00:25:50.960><c> to</c><00:25:51.279><c> castin</c><00:25:51.919><c> who</c><00:25:52.080><c> made</c><00:25:52.320><c> this</c><00:25:52.559><c> video</c>

00:25:52.950 --> 00:25:52.960 align:start position:0%
out to castin who made this video
 

00:25:52.960 --> 00:25:54.230 align:start position:0%
out to castin who made this video
possible

00:25:54.230 --> 00:25:54.240 align:start position:0%
possible
 

00:25:54.240 --> 00:25:57.190 align:start position:0%
possible
kessen's<00:25:54.880><c> k10</c><00:25:55.600><c> is</c><00:25:56.080><c> the</c><00:25:56.320><c> data</c><00:25:56.640><c> management</c>

00:25:57.190 --> 00:25:57.200 align:start position:0%
kessen's k10 is the data management
 

00:25:57.200 --> 00:25:59.350 align:start position:0%
kessen's k10 is the data management
platform<00:25:57.760><c> for</c><00:25:58.000><c> kubernetes</c>

00:25:59.350 --> 00:25:59.360 align:start position:0%
platform for kubernetes
 

00:25:59.360 --> 00:26:02.630 align:start position:0%
platform for kubernetes
k10<00:25:59.919><c> basically</c><00:26:00.559><c> takes</c><00:26:00.960><c> off</c><00:26:01.679><c> most</c><00:26:02.000><c> of</c><00:26:02.159><c> the</c><00:26:02.320><c> load</c>

00:26:02.630 --> 00:26:02.640 align:start position:0%
k10 basically takes off most of the load
 

00:26:02.640 --> 00:26:04.310 align:start position:0%
k10 basically takes off most of the load
of<00:26:02.799><c> doing</c><00:26:03.200><c> backup</c><00:26:03.600><c> and</c><00:26:03.679><c> restore</c><00:26:04.159><c> in</c>

00:26:04.310 --> 00:26:04.320 align:start position:0%
of doing backup and restore in
 

00:26:04.320 --> 00:26:06.549 align:start position:0%
of doing backup and restore in
kubernetes<00:26:05.360><c> from</c><00:26:05.600><c> the</c><00:26:05.840><c> cluster</c>

00:26:06.549 --> 00:26:06.559 align:start position:0%
kubernetes from the cluster
 

00:26:06.559 --> 00:26:09.430 align:start position:0%
kubernetes from the cluster
administrators<00:26:07.840><c> it</c><00:26:08.000><c> has</c><00:26:08.080><c> a</c><00:26:08.240><c> very</c><00:26:08.559><c> simple</c><00:26:08.960><c> ui</c>

00:26:09.430 --> 00:26:09.440 align:start position:0%
administrators it has a very simple ui
 

00:26:09.440 --> 00:26:12.230 align:start position:0%
administrators it has a very simple ui
so<00:26:09.600><c> it's</c><00:26:09.840><c> super</c><00:26:10.240><c> easy</c><00:26:10.640><c> to</c><00:26:10.880><c> work</c><00:26:11.200><c> with</c><00:26:11.760><c> and</c><00:26:12.000><c> has</c>

00:26:12.230 --> 00:26:12.240 align:start position:0%
so it's super easy to work with and has
 

00:26:12.240 --> 00:26:14.710 align:start position:0%
so it's super easy to work with and has
an<00:26:12.480><c> intelligent</c><00:26:13.200><c> logic</c><00:26:13.600><c> which</c><00:26:13.919><c> does</c><00:26:14.320><c> all</c><00:26:14.480><c> the</c>

00:26:14.710 --> 00:26:14.720 align:start position:0%
an intelligent logic which does all the
 

00:26:14.720 --> 00:26:17.350 align:start position:0%
an intelligent logic which does all the
heavy<00:26:14.960><c> lifting</c><00:26:15.600><c> for</c><00:26:15.760><c> you</c><00:26:16.240><c> and</c><00:26:16.480><c> with</c><00:26:16.720><c> my</c><00:26:17.039><c> link</c>

00:26:17.350 --> 00:26:17.360 align:start position:0%
heavy lifting for you and with my link
 

00:26:17.360 --> 00:26:20.390 align:start position:0%
heavy lifting for you and with my link
you<00:26:17.440><c> can</c><00:26:17.679><c> download</c><00:26:18.159><c> k10</c><00:26:18.720><c> for</c><00:26:18.960><c> free</c><00:26:19.520><c> and</c><00:26:19.679><c> get</c><00:26:20.080><c> 10</c>

00:26:20.390 --> 00:26:20.400 align:start position:0%
you can download k10 for free and get 10
 

00:26:20.400 --> 00:26:23.190 align:start position:0%
you can download k10 for free and get 10
nodes<00:26:20.960><c> free</c><00:26:21.200><c> forever</c><00:26:21.919><c> to</c><00:26:22.080><c> do</c><00:26:22.240><c> your</c><00:26:22.480><c> kubernetes</c>

00:26:23.190 --> 00:26:23.200 align:start position:0%
nodes free forever to do your kubernetes
 

00:26:23.200 --> 00:26:25.269 align:start position:0%
nodes free forever to do your kubernetes
backups<00:26:23.919><c> so</c><00:26:24.080><c> make</c><00:26:24.240><c> sure</c><00:26:24.480><c> to</c><00:26:24.720><c> check</c><00:26:24.960><c> out</c><00:26:25.039><c> the</c>

00:26:25.269 --> 00:26:25.279 align:start position:0%
backups so make sure to check out the
 

00:26:25.279 --> 00:26:27.269 align:start position:0%
backups so make sure to check out the
link<00:26:25.520><c> in</c><00:26:25.679><c> the</c><00:26:25.760><c> video</c><00:26:26.080><c> description</c><00:26:26.960><c> and</c><00:26:27.039><c> now</c>

00:26:27.269 --> 00:26:27.279 align:start position:0%
link in the video description and now
 

00:26:27.279 --> 00:26:28.950 align:start position:0%
link in the video description and now
let's<00:26:27.520><c> continue</c>

00:26:28.950 --> 00:26:28.960 align:start position:0%
let's continue
 

00:26:28.960 --> 00:26:30.710 align:start position:0%
let's continue
so<00:26:29.200><c> now</c><00:26:29.360><c> that</c><00:26:29.520><c> we</c><00:26:29.679><c> have</c><00:26:29.840><c> seen</c><00:26:30.080><c> the</c><00:26:30.240><c> basic</c>

00:26:30.710 --> 00:26:30.720 align:start position:0%
so now that we have seen the basic
 

00:26:30.720 --> 00:26:32.789 align:start position:0%
so now that we have seen the basic
concepts<00:26:31.200><c> of</c><00:26:31.279><c> kubernetes</c><00:26:32.320><c> how</c><00:26:32.480><c> do</c><00:26:32.640><c> we</c>

00:26:32.789 --> 00:26:32.799 align:start position:0%
concepts of kubernetes how do we
 

00:26:32.799 --> 00:26:34.870 align:start position:0%
concepts of kubernetes how do we
actually<00:26:33.279><c> create</c><00:26:33.679><c> those</c><00:26:34.000><c> components</c><00:26:34.559><c> like</c>

00:26:34.870 --> 00:26:34.880 align:start position:0%
actually create those components like
 

00:26:34.880 --> 00:26:37.430 align:start position:0%
actually create those components like
pods<00:26:35.360><c> and</c><00:26:35.679><c> services</c><00:26:36.640><c> to</c><00:26:36.799><c> configure</c><00:26:37.360><c> the</c>

00:26:37.430 --> 00:26:37.440 align:start position:0%
pods and services to configure the
 

00:26:37.440 --> 00:26:41.590 align:start position:0%
pods and services to configure the
kubernetes<00:26:38.080><c> cluster</c>

00:26:41.590 --> 00:26:41.600 align:start position:0%
 
 

00:26:41.600 --> 00:26:43.830 align:start position:0%
 
all<00:26:41.760><c> the</c><00:26:42.000><c> configuration</c><00:26:43.039><c> in</c><00:26:43.200><c> kubernetes</c>

00:26:43.830 --> 00:26:43.840 align:start position:0%
all the configuration in kubernetes
 

00:26:43.840 --> 00:26:46.230 align:start position:0%
all the configuration in kubernetes
cluster<00:26:44.400><c> actually</c><00:26:44.799><c> goes</c><00:26:45.279><c> through</c><00:26:45.600><c> a</c><00:26:45.760><c> master</c>

00:26:46.230 --> 00:26:46.240 align:start position:0%
cluster actually goes through a master
 

00:26:46.240 --> 00:26:48.950 align:start position:0%
cluster actually goes through a master
node<00:26:46.720><c> with</c><00:26:46.960><c> the</c><00:26:47.039><c> process</c><00:26:47.520><c> called</c><00:26:47.840><c> api</c><00:26:48.320><c> server</c>

00:26:48.950 --> 00:26:48.960 align:start position:0%
node with the process called api server
 

00:26:48.960 --> 00:26:51.190 align:start position:0%
node with the process called api server
which<00:26:49.200><c> we</c><00:26:49.360><c> mentioned</c><00:26:49.679><c> briefly</c><00:26:50.240><c> earlier</c><00:26:50.960><c> so</c>

00:26:51.190 --> 00:26:51.200 align:start position:0%
which we mentioned briefly earlier so
 

00:26:51.200 --> 00:26:54.070 align:start position:0%
which we mentioned briefly earlier so
kubernetes<00:26:51.840><c> clients</c><00:26:52.240><c> which</c><00:26:52.400><c> could</c><00:26:52.559><c> be</c><00:26:52.799><c> a</c><00:26:53.039><c> ui</c><00:26:53.919><c> a</c>

00:26:54.070 --> 00:26:54.080 align:start position:0%
kubernetes clients which could be a ui a
 

00:26:54.080 --> 00:26:56.710 align:start position:0%
kubernetes clients which could be a ui a
kubernetes<00:26:54.720><c> dashboard</c><00:26:55.200><c> for</c><00:26:55.360><c> example</c><00:26:56.159><c> or</c><00:26:56.480><c> an</c>

00:26:56.710 --> 00:26:56.720 align:start position:0%
kubernetes dashboard for example or an
 

00:26:56.720 --> 00:26:59.029 align:start position:0%
kubernetes dashboard for example or an
api<00:26:57.200><c> which</c><00:26:57.440><c> could</c><00:26:57.600><c> be</c><00:26:57.679><c> a</c><00:26:57.840><c> script</c><00:26:58.480><c> or</c><00:26:58.640><c> a</c><00:26:58.720><c> curl</c>

00:26:59.029 --> 00:26:59.039 align:start position:0%
api which could be a script or a curl
 

00:26:59.039 --> 00:26:59.990 align:start position:0%
api which could be a script or a curl
command

00:26:59.990 --> 00:27:00.000 align:start position:0%
command
 

00:27:00.000 --> 00:27:03.110 align:start position:0%
command
or<00:27:00.480><c> a</c><00:27:00.559><c> command</c><00:27:00.960><c> line</c><00:27:01.279><c> tool</c><00:27:01.520><c> like</c><00:27:01.760><c> cubectl</c><00:27:02.799><c> they</c>

00:27:03.110 --> 00:27:03.120 align:start position:0%
or a command line tool like cubectl they
 

00:27:03.120 --> 00:27:05.430 align:start position:0%
or a command line tool like cubectl they
all<00:27:03.360><c> talk</c><00:27:03.520><c> to</c><00:27:03.679><c> the</c><00:27:03.840><c> api</c><00:27:04.240><c> server</c><00:27:04.720><c> and</c><00:27:04.799><c> they</c><00:27:05.120><c> send</c>

00:27:05.430 --> 00:27:05.440 align:start position:0%
all talk to the api server and they send
 

00:27:05.440 --> 00:27:07.990 align:start position:0%
all talk to the api server and they send
their<00:27:05.679><c> configuration</c><00:27:06.480><c> requests</c><00:27:07.279><c> to</c><00:27:07.440><c> the</c><00:27:07.600><c> api</c>

00:27:07.990 --> 00:27:08.000 align:start position:0%
their configuration requests to the api
 

00:27:08.000 --> 00:27:10.310 align:start position:0%
their configuration requests to the api
server<00:27:08.400><c> which</c><00:27:08.720><c> is</c><00:27:08.960><c> the</c><00:27:09.120><c> main</c><00:27:09.440><c> entry</c><00:27:09.840><c> point</c><00:27:10.159><c> or</c>

00:27:10.310 --> 00:27:10.320 align:start position:0%
server which is the main entry point or
 

00:27:10.320 --> 00:27:12.470 align:start position:0%
server which is the main entry point or
the<00:27:10.480><c> only</c><00:27:10.799><c> entry</c><00:27:11.200><c> point</c><00:27:11.520><c> into</c><00:27:11.679><c> the</c><00:27:11.840><c> cluster</c>

00:27:12.470 --> 00:27:12.480 align:start position:0%
the only entry point into the cluster
 

00:27:12.480 --> 00:27:15.190 align:start position:0%
the only entry point into the cluster
and<00:27:12.640><c> these</c><00:27:12.880><c> requests</c><00:27:14.000><c> have</c><00:27:14.159><c> to</c><00:27:14.320><c> be</c><00:27:14.559><c> either</c><00:27:14.960><c> in</c>

00:27:15.190 --> 00:27:15.200 align:start position:0%
and these requests have to be either in
 

00:27:15.200 --> 00:27:18.389 align:start position:0%
and these requests have to be either in
yaml<00:27:15.679><c> format</c><00:27:16.159><c> or</c><00:27:16.640><c> json</c><00:27:17.200><c> format</c><00:27:17.679><c> and</c><00:27:17.840><c> this</c><00:27:18.159><c> is</c>

00:27:18.389 --> 00:27:18.399 align:start position:0%
yaml format or json format and this is
 

00:27:18.399 --> 00:27:21.510 align:start position:0%
yaml format or json format and this is
how<00:27:19.120><c> example</c><00:27:19.679><c> configuration</c><00:27:20.480><c> in</c><00:27:20.640><c> yaml</c><00:27:21.120><c> format</c>

00:27:21.510 --> 00:27:21.520 align:start position:0%
how example configuration in yaml format
 

00:27:21.520 --> 00:27:23.669 align:start position:0%
how example configuration in yaml format
actually<00:27:21.919><c> looks</c><00:27:22.240><c> like</c><00:27:22.720><c> so</c><00:27:22.880><c> with</c><00:27:23.120><c> this</c><00:27:23.360><c> we</c><00:27:23.520><c> are</c>

00:27:23.669 --> 00:27:23.679 align:start position:0%
actually looks like so with this we are
 

00:27:23.679 --> 00:27:26.149 align:start position:0%
actually looks like so with this we are
sending<00:27:24.159><c> a</c><00:27:24.320><c> request</c><00:27:25.120><c> to</c><00:27:25.279><c> kubernetes</c><00:27:26.000><c> to</c>

00:27:26.149 --> 00:27:26.159 align:start position:0%
sending a request to kubernetes to
 

00:27:26.159 --> 00:27:29.190 align:start position:0%
sending a request to kubernetes to
configure<00:27:26.960><c> a</c><00:27:27.120><c> component</c><00:27:27.919><c> called</c><00:27:28.480><c> deployment</c>

00:27:29.190 --> 00:27:29.200 align:start position:0%
configure a component called deployment
 

00:27:29.200 --> 00:27:31.190 align:start position:0%
configure a component called deployment
which<00:27:29.440><c> is</c><00:27:29.600><c> basically</c><00:27:30.240><c> a</c><00:27:30.399><c> template</c><00:27:30.960><c> or</c><00:27:31.120><c> a</c>

00:27:31.190 --> 00:27:31.200 align:start position:0%
which is basically a template or a
 

00:27:31.200 --> 00:27:33.750 align:start position:0%
which is basically a template or a
blueprint<00:27:31.760><c> for</c><00:27:32.000><c> creating</c><00:27:32.559><c> pods</c><00:27:33.120><c> and</c><00:27:33.279><c> in</c><00:27:33.440><c> this</c>

00:27:33.750 --> 00:27:33.760 align:start position:0%
blueprint for creating pods and in this
 

00:27:33.760 --> 00:27:36.389 align:start position:0%
blueprint for creating pods and in this
specific<00:27:34.240><c> configuration</c><00:27:34.960><c> example</c><00:27:35.919><c> we</c><00:27:36.159><c> tell</c>

00:27:36.389 --> 00:27:36.399 align:start position:0%
specific configuration example we tell
 

00:27:36.399 --> 00:27:39.830 align:start position:0%
specific configuration example we tell
kubernetes<00:27:37.039><c> to</c><00:27:37.200><c> create</c><00:27:37.600><c> two</c><00:27:38.320><c> replica</c><00:27:38.960><c> pods</c>

00:27:39.830 --> 00:27:39.840 align:start position:0%
kubernetes to create two replica pods
 

00:27:39.840 --> 00:27:43.029 align:start position:0%
kubernetes to create two replica pods
for<00:27:40.240><c> us</c><00:27:40.799><c> called</c><00:27:41.200><c> my</c><00:27:41.520><c> app</c><00:27:42.000><c> with</c><00:27:42.320><c> each</c><00:27:42.720><c> pod</c>

00:27:43.029 --> 00:27:43.039 align:start position:0%
for us called my app with each pod
 

00:27:43.039 --> 00:27:46.630 align:start position:0%
for us called my app with each pod
replica<00:27:43.919><c> having</c><00:27:44.399><c> a</c><00:27:44.480><c> container</c><00:27:45.440><c> based</c><00:27:45.919><c> on</c><00:27:46.240><c> my</c>

00:27:46.630 --> 00:27:46.640 align:start position:0%
replica having a container based on my
 

00:27:46.640 --> 00:27:49.669 align:start position:0%
replica having a container based on my
image<00:27:47.279><c> running</c><00:27:47.679><c> inside</c><00:27:48.559><c> in</c><00:27:48.720><c> addition</c><00:27:49.200><c> to</c><00:27:49.360><c> that</c>

00:27:49.669 --> 00:27:49.679 align:start position:0%
image running inside in addition to that
 

00:27:49.679 --> 00:27:50.630 align:start position:0%
image running inside in addition to that
we

00:27:50.630 --> 00:27:50.640 align:start position:0%
we
 

00:27:50.640 --> 00:27:52.870 align:start position:0%
we
configure<00:27:51.360><c> what</c><00:27:51.520><c> the</c><00:27:51.760><c> environment</c><00:27:52.320><c> variables</c>

00:27:52.870 --> 00:27:52.880 align:start position:0%
configure what the environment variables
 

00:27:52.880 --> 00:27:54.710 align:start position:0%
configure what the environment variables
and<00:27:53.039><c> the</c><00:27:53.200><c> port</c><00:27:53.520><c> configuration</c><00:27:54.320><c> of</c><00:27:54.480><c> this</c>

00:27:54.710 --> 00:27:54.720 align:start position:0%
and the port configuration of this
 

00:27:54.720 --> 00:27:57.269 align:start position:0%
and the port configuration of this
container<00:27:55.760><c> inside</c><00:27:56.159><c> of</c><00:27:56.240><c> the</c><00:27:56.399><c> pod</c><00:27:56.720><c> should</c><00:27:56.960><c> be</c>

00:27:57.269 --> 00:27:57.279 align:start position:0%
container inside of the pod should be
 

00:27:57.279 --> 00:27:58.789 align:start position:0%
container inside of the pod should be
and<00:27:57.520><c> as</c><00:27:57.760><c> you</c><00:27:57.919><c> see</c>

00:27:58.789 --> 00:27:58.799 align:start position:0%
and as you see
 

00:27:58.799 --> 00:27:59.590 align:start position:0%
and as you see
the

00:27:59.590 --> 00:27:59.600 align:start position:0%
the
 

00:27:59.600 --> 00:28:02.310 align:start position:0%
the
configuration<00:28:00.399><c> requests</c><00:28:01.039><c> in</c><00:28:01.279><c> kubernetes</c><00:28:02.080><c> are</c>

00:28:02.310 --> 00:28:02.320 align:start position:0%
configuration requests in kubernetes are
 

00:28:02.320 --> 00:28:04.789 align:start position:0%
configuration requests in kubernetes are
declarative<00:28:03.200><c> form</c><00:28:03.600><c> so</c><00:28:03.760><c> we</c><00:28:03.919><c> declare</c><00:28:04.399><c> what</c><00:28:04.640><c> is</c>

00:28:04.789 --> 00:28:04.799 align:start position:0%
declarative form so we declare what is
 

00:28:04.799 --> 00:28:07.669 align:start position:0%
declarative form so we declare what is
our<00:28:04.960><c> desired</c><00:28:05.600><c> outcome</c><00:28:06.159><c> from</c><00:28:06.320><c> kubernetes</c>

00:28:07.669 --> 00:28:07.679 align:start position:0%
our desired outcome from kubernetes
 

00:28:07.679 --> 00:28:10.230 align:start position:0%
our desired outcome from kubernetes
and<00:28:08.159><c> kubernetes</c><00:28:08.880><c> tries</c><00:28:09.520><c> to</c><00:28:09.679><c> meet</c><00:28:09.919><c> those</c>

00:28:10.230 --> 00:28:10.240 align:start position:0%
and kubernetes tries to meet those
 

00:28:10.240 --> 00:28:12.549 align:start position:0%
and kubernetes tries to meet those
requirements<00:28:11.120><c> meaning</c><00:28:11.440><c> for</c><00:28:11.600><c> example</c><00:28:12.320><c> since</c>

00:28:12.549 --> 00:28:12.559 align:start position:0%
requirements meaning for example since
 

00:28:12.559 --> 00:28:15.830 align:start position:0%
requirements meaning for example since
we<00:28:12.720><c> declare</c><00:28:13.520><c> we</c><00:28:13.760><c> want</c><00:28:14.080><c> two</c><00:28:14.399><c> replica</c><00:28:15.039><c> parts</c><00:28:15.600><c> of</c>

00:28:15.830 --> 00:28:15.840 align:start position:0%
we declare we want two replica parts of
 

00:28:15.840 --> 00:28:18.230 align:start position:0%
we declare we want two replica parts of
my<00:28:16.240><c> app</c><00:28:16.480><c> deployment</c><00:28:17.279><c> to</c><00:28:17.440><c> be</c><00:28:17.600><c> running</c><00:28:17.919><c> in</c><00:28:18.080><c> the</c>

00:28:18.230 --> 00:28:18.240 align:start position:0%
my app deployment to be running in the
 

00:28:18.240 --> 00:28:21.430 align:start position:0%
my app deployment to be running in the
cluster<00:28:19.039><c> and</c><00:28:19.279><c> one</c><00:28:19.520><c> of</c><00:28:19.679><c> those</c><00:28:20.000><c> parts</c><00:28:20.720><c> dies</c><00:28:21.279><c> the</c>

00:28:21.430 --> 00:28:21.440 align:start position:0%
cluster and one of those parts dies the
 

00:28:21.440 --> 00:28:23.510 align:start position:0%
cluster and one of those parts dies the
controller<00:28:22.000><c> manager</c><00:28:22.480><c> will</c><00:28:22.720><c> see</c><00:28:23.039><c> that</c><00:28:23.200><c> the</c>

00:28:23.510 --> 00:28:23.520 align:start position:0%
controller manager will see that the
 

00:28:23.520 --> 00:28:26.310 align:start position:0%
controller manager will see that the
ease<00:28:23.919><c> and</c><00:28:24.159><c> shoot</c><00:28:24.480><c> states</c><00:28:25.039><c> now</c><00:28:25.440><c> are</c><00:28:25.679><c> different</c>

00:28:26.310 --> 00:28:26.320 align:start position:0%
ease and shoot states now are different
 

00:28:26.320 --> 00:28:29.110 align:start position:0%
ease and shoot states now are different
the<00:28:26.559><c> actual</c><00:28:26.880><c> state</c><00:28:27.279><c> is</c><00:28:27.520><c> one</c><00:28:27.760><c> part</c><00:28:28.240><c> our</c><00:28:28.640><c> desired</c>

00:28:29.110 --> 00:28:29.120 align:start position:0%
the actual state is one part our desired
 

00:28:29.120 --> 00:28:32.310 align:start position:0%
the actual state is one part our desired
state<00:28:29.440><c> is</c><00:28:29.679><c> 2</c><00:28:30.320><c> so</c><00:28:30.640><c> it</c><00:28:30.799><c> goes</c><00:28:31.120><c> to</c><00:28:31.360><c> work</c><00:28:31.840><c> to</c><00:28:32.000><c> make</c>

00:28:32.310 --> 00:28:32.320 align:start position:0%
state is 2 so it goes to work to make
 

00:28:32.320 --> 00:28:35.669 align:start position:0%
state is 2 so it goes to work to make
sure<00:28:32.559><c> that</c><00:28:32.799><c> this</c><00:28:33.200><c> desired</c><00:28:33.840><c> state</c><00:28:34.640><c> is</c>

00:28:35.669 --> 00:28:35.679 align:start position:0%
sure that this desired state is
 

00:28:35.679 --> 00:28:38.149 align:start position:0%
sure that this desired state is
recovered<00:28:36.480><c> automatically</c><00:28:37.200><c> restarting</c><00:28:38.000><c> the</c>

00:28:38.149 --> 00:28:38.159 align:start position:0%
recovered automatically restarting the
 

00:28:38.159 --> 00:28:42.630 align:start position:0%
recovered automatically restarting the
second<00:28:38.559><c> replica</c><00:28:39.120><c> of</c><00:28:39.279><c> that</c><00:28:39.520><c> pod</c>

00:28:42.630 --> 00:28:42.640 align:start position:0%
 
 

00:28:42.640 --> 00:28:45.430 align:start position:0%
 
so<00:28:42.880><c> here</c><00:28:43.200><c> i</c><00:28:43.360><c> have</c><00:28:43.840><c> examples</c><00:28:44.480><c> of</c><00:28:44.640><c> a</c><00:28:44.720><c> deployment</c>

00:28:45.430 --> 00:28:45.440 align:start position:0%
so here i have examples of a deployment
 

00:28:45.440 --> 00:28:48.389 align:start position:0%
so here i have examples of a deployment
and<00:28:45.760><c> service</c><00:28:46.320><c> configuration</c><00:28:47.039><c> files</c><00:28:47.919><c> side</c><00:28:48.159><c> by</c>

00:28:48.389 --> 00:28:48.399 align:start position:0%
and service configuration files side by
 

00:28:48.399 --> 00:28:51.909 align:start position:0%
and service configuration files side by
side<00:28:48.880><c> so</c><00:28:49.520><c> the</c><00:28:49.679><c> first</c><00:28:50.000><c> thing</c><00:28:50.320><c> is</c><00:28:50.720><c> that</c><00:28:51.200><c> every</c>

00:28:51.909 --> 00:28:51.919 align:start position:0%
side so the first thing is that every
 

00:28:51.919 --> 00:28:54.789 align:start position:0%
side so the first thing is that every
configuration<00:28:52.720><c> file</c><00:28:53.200><c> in</c><00:28:53.279><c> kubernetes</c><00:28:54.240><c> has</c>

00:28:54.789 --> 00:28:54.799 align:start position:0%
configuration file in kubernetes has
 

00:28:54.799 --> 00:28:57.830 align:start position:0%
configuration file in kubernetes has
three<00:28:55.120><c> parts</c><00:28:56.000><c> the</c><00:28:56.159><c> first</c><00:28:56.559><c> part</c><00:28:56.960><c> is</c><00:28:57.360><c> where</c><00:28:57.600><c> the</c>

00:28:57.830 --> 00:28:57.840 align:start position:0%
three parts the first part is where the
 

00:28:57.840 --> 00:29:00.389 align:start position:0%
three parts the first part is where the
metadata<00:28:58.720><c> of</c><00:28:58.880><c> that</c><00:28:59.360><c> component</c><00:29:00.000><c> that</c><00:29:00.159><c> you're</c>

00:29:00.389 --> 00:29:00.399 align:start position:0%
metadata of that component that you're
 

00:29:00.399 --> 00:29:03.190 align:start position:0%
metadata of that component that you're
creating<00:29:01.120><c> resides</c><00:29:02.000><c> and</c><00:29:02.159><c> one</c><00:29:02.399><c> of</c><00:29:02.480><c> the</c><00:29:02.559><c> metadata</c>

00:29:03.190 --> 00:29:03.200 align:start position:0%
creating resides and one of the metadata
 

00:29:03.200 --> 00:29:05.510 align:start position:0%
creating resides and one of the metadata
is<00:29:03.360><c> obviously</c><00:29:04.159><c> name</c><00:29:04.640><c> of</c><00:29:04.799><c> the</c><00:29:04.960><c> component</c>

00:29:05.510 --> 00:29:05.520 align:start position:0%
is obviously name of the component
 

00:29:05.520 --> 00:29:08.149 align:start position:0%
is obviously name of the component
itself<00:29:06.399><c> the</c><00:29:06.640><c> second</c><00:29:07.039><c> part</c><00:29:07.600><c> in</c><00:29:07.760><c> the</c>

00:29:08.149 --> 00:29:08.159 align:start position:0%
itself the second part in the
 

00:29:08.159 --> 00:29:11.830 align:start position:0%
itself the second part in the
configuration<00:29:09.039><c> file</c><00:29:09.520><c> is</c><00:29:10.080><c> specification</c><00:29:11.440><c> so</c>

00:29:11.830 --> 00:29:11.840 align:start position:0%
configuration file is specification so
 

00:29:11.840 --> 00:29:14.070 align:start position:0%
configuration file is specification so
each<00:29:12.080><c> component's</c><00:29:12.640><c> configuration</c><00:29:13.279><c> file</c><00:29:13.919><c> will</c>

00:29:14.070 --> 00:29:14.080 align:start position:0%
each component's configuration file will
 

00:29:14.080 --> 00:29:16.470 align:start position:0%
each component's configuration file will
have<00:29:14.320><c> a</c><00:29:14.399><c> specification</c><00:29:15.679><c> where</c><00:29:15.840><c> you</c><00:29:16.000><c> basically</c>

00:29:16.470 --> 00:29:16.480 align:start position:0%
have a specification where you basically
 

00:29:16.480 --> 00:29:19.350 align:start position:0%
have a specification where you basically
put<00:29:16.960><c> every</c><00:29:17.840><c> kind</c><00:29:18.080><c> of</c><00:29:18.240><c> configuration</c><00:29:18.960><c> that</c><00:29:19.120><c> you</c>

00:29:19.350 --> 00:29:19.360 align:start position:0%
put every kind of configuration that you
 

00:29:19.360 --> 00:29:21.590 align:start position:0%
put every kind of configuration that you
want<00:29:19.600><c> to</c><00:29:19.760><c> apply</c><00:29:20.559><c> for</c><00:29:20.799><c> that</c>

00:29:21.590 --> 00:29:21.600 align:start position:0%
want to apply for that
 

00:29:21.600 --> 00:29:23.990 align:start position:0%
want to apply for that
component<00:29:22.640><c> the</c><00:29:22.799><c> first</c><00:29:23.039><c> two</c><00:29:23.279><c> lines</c><00:29:23.600><c> here</c><00:29:23.840><c> as</c>

00:29:23.990 --> 00:29:24.000 align:start position:0%
component the first two lines here as
 

00:29:24.000 --> 00:29:25.430 align:start position:0%
component the first two lines here as
you<00:29:24.159><c> see</c><00:29:24.399><c> is</c><00:29:24.559><c> just</c>

00:29:25.430 --> 00:29:25.440 align:start position:0%
you see is just
 

00:29:25.440 --> 00:29:28.389 align:start position:0%
you see is just
declaring<00:29:26.320><c> what</c><00:29:26.880><c> you</c><00:29:27.039><c> want</c><00:29:27.200><c> to</c><00:29:27.360><c> create</c><00:29:28.159><c> here</c>

00:29:28.389 --> 00:29:28.399 align:start position:0%
declaring what you want to create here
 

00:29:28.399 --> 00:29:30.310 align:start position:0%
declaring what you want to create here
we<00:29:28.559><c> are</c><00:29:28.720><c> creating</c><00:29:29.039><c> deployment</c><00:29:29.919><c> and</c><00:29:30.080><c> here</c>

00:29:30.310 --> 00:29:30.320 align:start position:0%
we are creating deployment and here
 

00:29:30.320 --> 00:29:32.149 align:start position:0%
we are creating deployment and here
we're<00:29:30.480><c> creating</c><00:29:30.880><c> a</c><00:29:31.039><c> service</c>

00:29:32.149 --> 00:29:32.159 align:start position:0%
we're creating a service
 

00:29:32.159 --> 00:29:34.389 align:start position:0%
we're creating a service
and<00:29:32.480><c> this</c><00:29:32.799><c> is</c><00:29:32.960><c> basically</c><00:29:33.679><c> you</c><00:29:33.840><c> have</c><00:29:34.000><c> to</c><00:29:34.159><c> look</c>

00:29:34.389 --> 00:29:34.399 align:start position:0%
and this is basically you have to look
 

00:29:34.399 --> 00:29:35.990 align:start position:0%
and this is basically you have to look
up<00:29:34.640><c> for</c><00:29:34.880><c> each</c><00:29:35.120><c> component</c><00:29:35.679><c> there's</c><00:29:35.919><c> a</c>

00:29:35.990 --> 00:29:36.000 align:start position:0%
up for each component there's a
 

00:29:36.000 --> 00:29:37.909 align:start position:0%
up for each component there's a
different<00:29:36.399><c> api</c><00:29:36.799><c> version</c>

00:29:37.909 --> 00:29:37.919 align:start position:0%
different api version
 

00:29:37.919 --> 00:29:40.870 align:start position:0%
different api version
so<00:29:38.080><c> now</c><00:29:38.480><c> inside</c><00:29:38.960><c> of</c><00:29:39.039><c> the</c><00:29:39.200><c> specification</c><00:29:40.240><c> part</c>

00:29:40.870 --> 00:29:40.880 align:start position:0%
so now inside of the specification part
 

00:29:40.880 --> 00:29:44.310 align:start position:0%
so now inside of the specification part
obviously<00:29:42.000><c> the</c><00:29:42.399><c> attributes</c><00:29:43.520><c> will</c><00:29:43.760><c> be</c>

00:29:44.310 --> 00:29:44.320 align:start position:0%
obviously the attributes will be
 

00:29:44.320 --> 00:29:47.590 align:start position:0%
obviously the attributes will be
specific<00:29:45.279><c> to</c><00:29:45.600><c> the</c><00:29:45.919><c> kind</c><00:29:46.559><c> of</c><00:29:46.799><c> a</c><00:29:46.880><c> component</c><00:29:47.440><c> that</c>

00:29:47.590 --> 00:29:47.600 align:start position:0%
specific to the kind of a component that
 

00:29:47.600 --> 00:29:50.230 align:start position:0%
specific to the kind of a component that
you're<00:29:47.919><c> creating</c><00:29:48.480><c> so</c><00:29:48.720><c> deployment</c><00:29:49.360><c> will</c><00:29:49.520><c> have</c>

00:29:50.230 --> 00:29:50.240 align:start position:0%
you're creating so deployment will have
 

00:29:50.240 --> 00:29:52.070 align:start position:0%
you're creating so deployment will have
its<00:29:50.480><c> own</c><00:29:50.799><c> attributes</c>

00:29:52.070 --> 00:29:52.080 align:start position:0%
its own attributes
 

00:29:52.080 --> 00:29:54.470 align:start position:0%
its own attributes
that<00:29:52.640><c> only</c><00:29:52.880><c> apply</c><00:29:53.279><c> for</c><00:29:53.440><c> deployment</c><00:29:54.159><c> and</c><00:29:54.320><c> the</c>

00:29:54.470 --> 00:29:54.480 align:start position:0%
that only apply for deployment and the
 

00:29:54.480 --> 00:29:57.110 align:start position:0%
that only apply for deployment and the
service<00:29:54.960><c> will</c><00:29:55.200><c> have</c><00:29:55.440><c> its</c><00:29:55.679><c> own</c><00:29:56.000><c> stuff</c><00:29:56.799><c> but</c><00:29:56.960><c> i</c>

00:29:57.110 --> 00:29:57.120 align:start position:0%
service will have its own stuff but i
 

00:29:57.120 --> 00:29:58.950 align:start position:0%
service will have its own stuff but i
said<00:29:57.360><c> there</c><00:29:57.520><c> are</c><00:29:57.760><c> three</c><00:29:58.320><c> parts</c><00:29:58.720><c> of</c><00:29:58.880><c> a</c>

00:29:58.950 --> 00:29:58.960 align:start position:0%
said there are three parts of a
 

00:29:58.960 --> 00:30:01.510 align:start position:0%
said there are three parts of a
configuration<00:29:59.760><c> file</c><00:30:00.480><c> and</c>

00:30:01.510 --> 00:30:01.520 align:start position:0%
configuration file and
 

00:30:01.520 --> 00:30:03.110 align:start position:0%
configuration file and
we<00:30:01.679><c> just</c><00:30:01.840><c> see</c><00:30:02.080><c> metadata</c><00:30:02.880><c> and</c><00:30:03.039><c> the</c>

00:30:03.110 --> 00:30:03.120 align:start position:0%
we just see metadata and the
 

00:30:03.120 --> 00:30:06.470 align:start position:0%
we just see metadata and the
specification<00:30:04.240><c> so</c><00:30:04.720><c> where's</c><00:30:05.039><c> the</c><00:30:05.279><c> third</c><00:30:05.679><c> part</c>

00:30:06.470 --> 00:30:06.480 align:start position:0%
specification so where's the third part
 

00:30:06.480 --> 00:30:09.669 align:start position:0%
specification so where's the third part
so<00:30:06.640><c> the</c><00:30:06.880><c> third</c><00:30:07.200><c> part</c><00:30:07.600><c> will</c><00:30:07.760><c> be</c><00:30:08.080><c> a</c><00:30:08.320><c> status</c><00:30:09.360><c> but</c>

00:30:09.669 --> 00:30:09.679 align:start position:0%
so the third part will be a status but
 

00:30:09.679 --> 00:30:11.990 align:start position:0%
so the third part will be a status but
it's<00:30:09.840><c> going</c><00:30:10.000><c> to</c><00:30:10.080><c> be</c><00:30:10.480><c> automatically</c><00:30:11.279><c> generated</c>

00:30:11.990 --> 00:30:12.000 align:start position:0%
it's going to be automatically generated
 

00:30:12.000 --> 00:30:15.029 align:start position:0%
it's going to be automatically generated
and<00:30:12.240><c> edit</c><00:30:12.720><c> by</c><00:30:13.039><c> kubernetes</c><00:30:14.320><c> so</c><00:30:14.480><c> the</c><00:30:14.640><c> way</c><00:30:14.880><c> it</c>

00:30:15.029 --> 00:30:15.039 align:start position:0%
and edit by kubernetes so the way it
 

00:30:15.039 --> 00:30:17.750 align:start position:0%
and edit by kubernetes so the way it
works<00:30:15.440><c> is</c><00:30:15.760><c> that</c><00:30:16.159><c> kubernetes</c><00:30:16.799><c> will</c><00:30:17.120><c> always</c>

00:30:17.750 --> 00:30:17.760 align:start position:0%
works is that kubernetes will always
 

00:30:17.760 --> 00:30:20.230 align:start position:0%
works is that kubernetes will always
compare<00:30:18.559><c> what</c><00:30:18.799><c> is</c><00:30:18.960><c> the</c><00:30:19.039><c> desired</c><00:30:19.600><c> state</c><00:30:20.080><c> and</c>

00:30:20.230 --> 00:30:20.240 align:start position:0%
compare what is the desired state and
 

00:30:20.240 --> 00:30:22.630 align:start position:0%
compare what is the desired state and
what<00:30:20.480><c> is</c><00:30:20.559><c> the</c><00:30:20.799><c> actual</c><00:30:21.200><c> state</c><00:30:21.760><c> or</c><00:30:21.919><c> the</c><00:30:22.080><c> status</c>

00:30:22.630 --> 00:30:22.640 align:start position:0%
what is the actual state or the status
 

00:30:22.640 --> 00:30:24.950 align:start position:0%
what is the actual state or the status
of<00:30:22.720><c> that</c><00:30:22.960><c> component</c><00:30:23.840><c> and</c><00:30:24.080><c> if</c><00:30:24.240><c> the</c><00:30:24.480><c> status</c><00:30:24.880><c> and</c>

00:30:24.950 --> 00:30:24.960 align:start position:0%
of that component and if the status and
 

00:30:24.960 --> 00:30:27.750 align:start position:0%
of that component and if the status and
desired<00:30:25.520><c> state</c><00:30:26.159><c> do</c><00:30:26.399><c> not</c><00:30:26.720><c> match</c><00:30:27.520><c> then</c>

00:30:27.750 --> 00:30:27.760 align:start position:0%
desired state do not match then
 

00:30:27.760 --> 00:30:29.590 align:start position:0%
desired state do not match then
kubernetes<00:30:28.399><c> knows</c><00:30:28.720><c> there's</c><00:30:28.960><c> something</c><00:30:29.279><c> to</c><00:30:29.440><c> be</c>

00:30:29.590 --> 00:30:29.600 align:start position:0%
kubernetes knows there's something to be
 

00:30:29.600 --> 00:30:32.549 align:start position:0%
kubernetes knows there's something to be
fixed<00:30:30.000><c> there</c><00:30:30.559><c> so</c><00:30:31.039><c> it's</c><00:30:31.200><c> gonna</c><00:30:31.440><c> try</c><00:30:31.600><c> to</c><00:30:31.760><c> fix</c><00:30:32.080><c> it</c>

00:30:32.549 --> 00:30:32.559 align:start position:0%
fixed there so it's gonna try to fix it
 

00:30:32.559 --> 00:30:35.029 align:start position:0%
fixed there so it's gonna try to fix it
and<00:30:32.720><c> this</c><00:30:33.120><c> is</c><00:30:33.440><c> the</c><00:30:33.679><c> basis</c><00:30:34.480><c> of</c><00:30:34.720><c> the</c>

00:30:35.029 --> 00:30:35.039 align:start position:0%
and this is the basis of the
 

00:30:35.039 --> 00:30:37.430 align:start position:0%
and this is the basis of the
self-healing<00:30:36.159><c> feature</c><00:30:36.640><c> that</c><00:30:36.799><c> kubernetes</c>

00:30:37.430 --> 00:30:37.440 align:start position:0%
self-healing feature that kubernetes
 

00:30:37.440 --> 00:30:40.310 align:start position:0%
self-healing feature that kubernetes
provides<00:30:38.080><c> for</c><00:30:38.240><c> example</c><00:30:39.200><c> here</c><00:30:39.440><c> you</c><00:30:39.679><c> specify</c>

00:30:40.310 --> 00:30:40.320 align:start position:0%
provides for example here you specify
 

00:30:40.320 --> 00:30:43.190 align:start position:0%
provides for example here you specify
you<00:30:40.480><c> want</c><00:30:40.880><c> two</c><00:30:41.120><c> replicas</c><00:30:42.080><c> of</c><00:30:42.720><c> nginx</c>

00:30:43.190 --> 00:30:43.200 align:start position:0%
you want two replicas of nginx
 

00:30:43.200 --> 00:30:46.470 align:start position:0%
you want two replicas of nginx
deployment<00:30:44.159><c> so</c><00:30:44.720><c> when</c><00:30:44.880><c> you</c><00:30:45.120><c> apply</c><00:30:45.520><c> this</c><00:30:46.240><c> when</c>

00:30:46.470 --> 00:30:46.480 align:start position:0%
deployment so when you apply this when
 

00:30:46.480 --> 00:30:48.389 align:start position:0%
deployment so when you apply this when
you<00:30:46.559><c> actually</c><00:30:46.880><c> create</c><00:30:47.120><c> the</c><00:30:47.279><c> deployment</c><00:30:48.080><c> using</c>

00:30:48.389 --> 00:30:48.399 align:start position:0%
you actually create the deployment using
 

00:30:48.399 --> 00:30:50.070 align:start position:0%
you actually create the deployment using
this<00:30:48.559><c> configuration</c><00:30:49.200><c> file</c><00:30:49.600><c> that's</c><00:30:49.840><c> what</c>

00:30:50.070 --> 00:30:50.080 align:start position:0%
this configuration file that's what
 

00:30:50.080 --> 00:30:52.950 align:start position:0%
this configuration file that's what
apply<00:30:50.480><c> means</c><00:30:50.799><c> kubernetes</c><00:30:51.440><c> will</c><00:30:52.000><c> add</c><00:30:52.320><c> here</c><00:30:52.720><c> the</c>

00:30:52.950 --> 00:30:52.960 align:start position:0%
apply means kubernetes will add here the
 

00:30:52.960 --> 00:30:56.070 align:start position:0%
apply means kubernetes will add here the
status<00:30:53.840><c> of</c><00:30:54.080><c> your</c><00:30:54.559><c> deployment</c><00:30:55.360><c> and</c><00:30:55.600><c> it</c><00:30:55.679><c> will</c>

00:30:56.070 --> 00:30:56.080 align:start position:0%
status of your deployment and it will
 

00:30:56.080 --> 00:30:59.110 align:start position:0%
status of your deployment and it will
update<00:30:56.559><c> that</c><00:30:56.799><c> state</c><00:30:57.600><c> continuously</c><00:30:58.720><c> so</c><00:30:58.960><c> for</c>

00:30:59.110 --> 00:30:59.120 align:start position:0%
update that state continuously so for
 

00:30:59.120 --> 00:31:01.590 align:start position:0%
update that state continuously so for
example<00:30:59.519><c> if</c><00:30:59.679><c> a</c><00:30:59.840><c> status</c><00:31:00.640><c> at</c><00:31:00.799><c> some</c><00:31:01.039><c> point</c><00:31:01.360><c> will</c>

00:31:01.590 --> 00:31:01.600 align:start position:0%
example if a status at some point will
 

00:31:01.600 --> 00:31:04.310 align:start position:0%
example if a status at some point will
say<00:31:02.159><c> just</c><00:31:02.480><c> one</c><00:31:02.720><c> replica</c><00:31:03.279><c> is</c><00:31:03.440><c> running</c><00:31:04.000><c> then</c>

00:31:04.310 --> 00:31:04.320 align:start position:0%
say just one replica is running then
 

00:31:04.320 --> 00:31:07.190 align:start position:0%
say just one replica is running then
kubernetes<00:31:04.880><c> will</c><00:31:05.600><c> compare</c><00:31:06.159><c> that</c><00:31:06.399><c> status</c><00:31:06.960><c> with</c>

00:31:07.190 --> 00:31:07.200 align:start position:0%
kubernetes will compare that status with
 

00:31:07.200 --> 00:31:09.750 align:start position:0%
kubernetes will compare that status with
the<00:31:07.360><c> specification</c><00:31:08.640><c> and</c><00:31:08.799><c> we'll</c><00:31:09.039><c> know</c><00:31:09.519><c> there</c>

00:31:09.750 --> 00:31:09.760 align:start position:0%
the specification and we'll know there
 

00:31:09.760 --> 00:31:12.149 align:start position:0%
the specification and we'll know there
is<00:31:10.080><c> a</c><00:31:10.320><c> problem</c><00:31:10.720><c> there</c><00:31:11.039><c> another</c><00:31:11.440><c> replica</c><00:31:11.919><c> needs</c>

00:31:12.149 --> 00:31:12.159 align:start position:0%
is a problem there another replica needs
 

00:31:12.159 --> 00:31:14.789 align:start position:0%
is a problem there another replica needs
to<00:31:12.240><c> be</c><00:31:12.399><c> created</c><00:31:12.960><c> sap</c><00:31:13.919><c> now</c><00:31:14.399><c> another</c>

00:31:14.789 --> 00:31:14.799 align:start position:0%
to be created sap now another
 

00:31:14.799 --> 00:31:16.789 align:start position:0%
to be created sap now another
interesting<00:31:15.279><c> question</c><00:31:15.679><c> here</c><00:31:16.000><c> is</c>

00:31:16.789 --> 00:31:16.799 align:start position:0%
interesting question here is
 

00:31:16.799 --> 00:31:18.870 align:start position:0%
interesting question here is
where<00:31:17.120><c> does</c><00:31:17.360><c> kubernetes</c><00:31:17.919><c> actually</c><00:31:18.320><c> get</c><00:31:18.559><c> the</c>

00:31:18.870 --> 00:31:18.880 align:start position:0%
where does kubernetes actually get the
 

00:31:18.880 --> 00:31:22.389 align:start position:0%
where does kubernetes actually get the
status<00:31:19.360><c> data</c><00:31:19.919><c> to</c><00:31:20.480><c> automatically</c><00:31:21.279><c> add</c><00:31:21.600><c> here</c><00:31:22.000><c> or</c>

00:31:22.389 --> 00:31:22.399 align:start position:0%
status data to automatically add here or
 

00:31:22.399 --> 00:31:24.710 align:start position:0%
status data to automatically add here or
update<00:31:22.880><c> continuously</c><00:31:23.760><c> that</c><00:31:24.080><c> information</c>

00:31:24.710 --> 00:31:24.720 align:start position:0%
update continuously that information
 

00:31:24.720 --> 00:31:27.669 align:start position:0%
update continuously that information
comes<00:31:25.120><c> from</c><00:31:25.360><c> the</c><00:31:25.760><c> icd</c><00:31:26.640><c> remember</c><00:31:27.039><c> the</c><00:31:27.200><c> cluster</c>

00:31:27.669 --> 00:31:27.679 align:start position:0%
comes from the icd remember the cluster
 

00:31:27.679 --> 00:31:30.310 align:start position:0%
comes from the icd remember the cluster
brain<00:31:28.480><c> one</c><00:31:28.640><c> of</c><00:31:28.799><c> the</c><00:31:28.960><c> master</c><00:31:29.440><c> processes</c><00:31:30.000><c> that</c>

00:31:30.310 --> 00:31:30.320 align:start position:0%
brain one of the master processes that
 

00:31:30.320 --> 00:31:33.509 align:start position:0%
brain one of the master processes that
actually<00:31:30.799><c> stores</c><00:31:31.600><c> the</c><00:31:31.840><c> cluster</c><00:31:32.320><c> data</c><00:31:32.960><c> so</c><00:31:33.360><c> it</c>

00:31:33.509 --> 00:31:33.519 align:start position:0%
actually stores the cluster data so it
 

00:31:33.519 --> 00:31:37.590 align:start position:0%
actually stores the cluster data so it
cd<00:31:34.320><c> holds</c><00:31:34.880><c> at</c><00:31:35.120><c> any</c><00:31:35.440><c> time</c><00:31:36.080><c> the</c><00:31:36.320><c> current</c><00:31:36.640><c> status</c>

00:31:37.590 --> 00:31:37.600 align:start position:0%
cd holds at any time the current status
 

00:31:37.600 --> 00:31:40.789 align:start position:0%
cd holds at any time the current status
of<00:31:38.159><c> any</c><00:31:38.640><c> kubernetes</c><00:31:39.279><c> component</c><00:31:40.240><c> and</c><00:31:40.480><c> that's</c>

00:31:40.789 --> 00:31:40.799 align:start position:0%
of any kubernetes component and that's
 

00:31:40.799 --> 00:31:46.789 align:start position:0%
of any kubernetes component and that's
where<00:31:41.039><c> the</c><00:31:41.600><c> status</c><00:31:42.159><c> information</c><00:31:43.039><c> comes</c><00:31:43.360><c> from</c>

00:31:46.789 --> 00:31:46.799 align:start position:0%
 
 

00:31:46.799 --> 00:31:48.630 align:start position:0%
 
so<00:31:47.039><c> as</c><00:31:47.200><c> you</c><00:31:47.360><c> see</c><00:31:47.600><c> the</c><00:31:47.919><c> format</c><00:31:48.399><c> of</c><00:31:48.480><c> the</c>

00:31:48.630 --> 00:31:48.640 align:start position:0%
so as you see the format of the
 

00:31:48.640 --> 00:31:51.430 align:start position:0%
so as you see the format of the
configuration<00:31:49.360><c> files</c><00:31:49.840><c> is</c><00:31:50.320><c> yemel</c>

00:31:51.430 --> 00:31:51.440 align:start position:0%
configuration files is yemel
 

00:31:51.440 --> 00:31:54.389 align:start position:0%
configuration files is yemel
that's<00:31:51.679><c> why</c><00:31:51.840><c> the</c><00:31:52.000><c> extension</c><00:31:52.559><c> here</c><00:31:53.279><c> and</c>

00:31:54.389 --> 00:31:54.399 align:start position:0%
that's why the extension here and
 

00:31:54.399 --> 00:31:56.149 align:start position:0%
that's why the extension here and
generally<00:31:54.880><c> it's</c><00:31:55.039><c> pretty</c><00:31:55.360><c> straightforward</c><00:31:56.000><c> to</c>

00:31:56.149 --> 00:31:56.159 align:start position:0%
generally it's pretty straightforward to
 

00:31:56.159 --> 00:31:58.710 align:start position:0%
generally it's pretty straightforward to
understand<00:31:56.799><c> it's</c><00:31:56.960><c> a</c><00:31:57.039><c> very</c><00:31:57.360><c> simple</c><00:31:57.760><c> format</c><00:31:58.399><c> but</c>

00:31:58.710 --> 00:31:58.720 align:start position:0%
understand it's a very simple format but
 

00:31:58.720 --> 00:32:00.950 align:start position:0%
understand it's a very simple format but
yaml<00:31:59.279><c> is</c><00:31:59.440><c> very</c><00:31:59.840><c> strict</c><00:32:00.320><c> about</c><00:32:00.559><c> the</c>

00:32:00.950 --> 00:32:00.960 align:start position:0%
yaml is very strict about the
 

00:32:00.960 --> 00:32:03.990 align:start position:0%
yaml is very strict about the
indentations<00:32:02.240><c> so</c><00:32:02.559><c> for</c><00:32:02.720><c> example</c><00:32:03.120><c> if</c><00:32:03.200><c> you</c><00:32:03.360><c> have</c>

00:32:03.990 --> 00:32:04.000 align:start position:0%
indentations so for example if you have
 

00:32:04.000 --> 00:32:06.710 align:start position:0%
indentations so for example if you have
something<00:32:04.960><c> wrongly</c><00:32:05.600><c> indented</c><00:32:06.080><c> here</c><00:32:06.480><c> your</c>

00:32:06.710 --> 00:32:06.720 align:start position:0%
something wrongly indented here your
 

00:32:06.720 --> 00:32:09.269 align:start position:0%
something wrongly indented here your
file<00:32:06.960><c> will</c><00:32:07.120><c> be</c><00:32:07.360><c> invalid</c><00:32:08.159><c> but</c><00:32:08.399><c> other</c><00:32:08.640><c> than</c><00:32:08.880><c> that</c>

00:32:09.269 --> 00:32:09.279 align:start position:0%
file will be invalid but other than that
 

00:32:09.279 --> 00:32:11.750 align:start position:0%
file will be invalid but other than that
it's<00:32:09.440><c> pretty</c><00:32:09.679><c> simple</c><00:32:10.399><c> another</c><00:32:10.799><c> thing</c><00:32:11.039><c> is</c>

00:32:11.750 --> 00:32:11.760 align:start position:0%
it's pretty simple another thing is
 

00:32:11.760 --> 00:32:13.750 align:start position:0%
it's pretty simple another thing is
where<00:32:12.000><c> do</c><00:32:12.159><c> you</c><00:32:12.399><c> actually</c><00:32:12.880><c> store</c><00:32:13.200><c> those</c>

00:32:13.750 --> 00:32:13.760 align:start position:0%
where do you actually store those
 

00:32:13.760 --> 00:32:16.950 align:start position:0%
where do you actually store those
configuration<00:32:14.399><c> files</c><00:32:15.200><c> a</c><00:32:15.360><c> usual</c><00:32:15.760><c> practice</c><00:32:16.480><c> is</c>

00:32:16.950 --> 00:32:16.960 align:start position:0%
configuration files a usual practice is
 

00:32:16.960 --> 00:32:19.669 align:start position:0%
configuration files a usual practice is
to<00:32:17.120><c> store</c><00:32:17.440><c> them</c><00:32:17.600><c> with</c><00:32:17.679><c> your</c><00:32:18.000><c> code</c><00:32:18.640><c> because</c>

00:32:19.669 --> 00:32:19.679 align:start position:0%
to store them with your code because
 

00:32:19.679 --> 00:32:22.149 align:start position:0%
to store them with your code because
since<00:32:20.000><c> the</c><00:32:20.080><c> deployment</c><00:32:20.640><c> and</c><00:32:20.799><c> service</c><00:32:21.519><c> is</c>

00:32:22.149 --> 00:32:22.159 align:start position:0%
since the deployment and service is
 

00:32:22.159 --> 00:32:24.630 align:start position:0%
since the deployment and service is
going<00:32:22.320><c> to</c><00:32:22.399><c> be</c><00:32:22.559><c> applied</c><00:32:22.960><c> to</c><00:32:23.039><c> your</c><00:32:23.360><c> application</c>

00:32:24.630 --> 00:32:24.640 align:start position:0%
going to be applied to your application
 

00:32:24.640 --> 00:32:26.470 align:start position:0%
going to be applied to your application
it's<00:32:24.880><c> a</c><00:32:24.960><c> good</c><00:32:25.200><c> practice</c><00:32:25.679><c> to</c><00:32:25.919><c> store</c><00:32:26.320><c> these</c>

00:32:26.470 --> 00:32:26.480 align:start position:0%
it's a good practice to store these
 

00:32:26.480 --> 00:32:28.789 align:start position:0%
it's a good practice to store these
configuration<00:32:27.120><c> files</c><00:32:27.840><c> in</c><00:32:28.000><c> your</c><00:32:28.159><c> application</c>

00:32:28.789 --> 00:32:28.799 align:start position:0%
configuration files in your application
 

00:32:28.799 --> 00:32:31.509 align:start position:0%
configuration files in your application
code<00:32:29.279><c> so</c><00:32:29.440><c> usually</c><00:32:30.000><c> it</c><00:32:30.159><c> will</c><00:32:30.320><c> be</c><00:32:30.559><c> part</c><00:32:30.799><c> of</c><00:32:31.279><c> the</c>

00:32:31.509 --> 00:32:31.519 align:start position:0%
code so usually it will be part of the
 

00:32:31.519 --> 00:32:34.710 align:start position:0%
code so usually it will be part of the
whole<00:32:32.000><c> infrastructure</c><00:32:32.799><c> as</c><00:32:33.039><c> a</c><00:32:33.200><c> code</c><00:32:33.840><c> concept</c>

00:32:34.710 --> 00:32:34.720 align:start position:0%
whole infrastructure as a code concept
 

00:32:34.720 --> 00:32:37.029 align:start position:0%
whole infrastructure as a code concept
or<00:32:34.960><c> you</c><00:32:35.120><c> can</c><00:32:35.279><c> also</c><00:32:35.600><c> have</c><00:32:36.159><c> its</c><00:32:36.480><c> own</c><00:32:36.799><c> git</c>

00:32:37.029 --> 00:32:37.039 align:start position:0%
or you can also have its own git
 

00:32:37.039 --> 00:32:39.190 align:start position:0%
or you can also have its own git
repository<00:32:38.000><c> just</c><00:32:38.159><c> for</c><00:32:38.320><c> the</c><00:32:38.480><c> configuration</c>

00:32:39.190 --> 00:32:39.200 align:start position:0%
repository just for the configuration
 

00:32:39.200 --> 00:32:41.350 align:start position:0%
repository just for the configuration
files

00:32:41.350 --> 00:32:41.360 align:start position:0%
files
 

00:32:41.360 --> 00:32:43.430 align:start position:0%
files
so<00:32:41.600><c> in</c><00:32:41.679><c> this</c><00:32:41.919><c> video</c><00:32:42.320><c> i'm</c><00:32:42.480><c> going</c><00:32:42.559><c> to</c><00:32:42.720><c> show</c><00:32:42.880><c> you</c>

00:32:43.430 --> 00:32:43.440 align:start position:0%
so in this video i'm going to show you
 

00:32:43.440 --> 00:32:46.230 align:start position:0%
so in this video i'm going to show you
what<00:32:43.760><c> mini</c><00:32:44.000><c> cube</c><00:32:44.320><c> and</c><00:32:44.399><c> cube</c><00:32:44.640><c> ctl</c><00:32:45.200><c> are</c><00:32:45.600><c> and</c><00:32:46.080><c> how</c>

00:32:46.230 --> 00:32:46.240 align:start position:0%
what mini cube and cube ctl are and how
 

00:32:46.240 --> 00:32:47.750 align:start position:0%
what mini cube and cube ctl are and how
to<00:32:46.480><c> set</c><00:32:46.720><c> them</c><00:32:46.960><c> up</c>

00:32:47.750 --> 00:32:47.760 align:start position:0%
to set them up
 

00:32:47.760 --> 00:32:49.830 align:start position:0%
to set them up
so<00:32:47.919><c> first</c><00:32:48.159><c> of</c><00:32:48.240><c> all</c><00:32:48.399><c> let's</c><00:32:48.559><c> see</c><00:32:48.880><c> what</c><00:32:49.120><c> is</c><00:32:49.519><c> mini</c>

00:32:49.830 --> 00:32:49.840 align:start position:0%
so first of all let's see what is mini
 

00:32:49.840 --> 00:32:52.870 align:start position:0%
so first of all let's see what is mini
cube<00:32:50.480><c> usually</c><00:32:51.200><c> in</c><00:32:51.679><c> kubernetes</c><00:32:52.399><c> world</c><00:32:52.720><c> when</c>

00:32:52.870 --> 00:32:52.880 align:start position:0%
cube usually in kubernetes world when
 

00:32:52.880 --> 00:32:55.350 align:start position:0%
cube usually in kubernetes world when
you<00:32:53.039><c> are</c><00:32:53.279><c> setting</c><00:32:53.600><c> up</c><00:32:53.760><c> a</c><00:32:53.919><c> production</c><00:32:54.480><c> cluster</c>

00:32:55.350 --> 00:32:55.360 align:start position:0%
you are setting up a production cluster
 

00:32:55.360 --> 00:32:57.110 align:start position:0%
you are setting up a production cluster
it<00:32:55.519><c> will</c><00:32:55.679><c> look</c><00:32:55.919><c> something</c><00:32:56.320><c> like</c><00:32:56.480><c> this</c><00:32:56.720><c> so</c><00:32:56.960><c> you</c>

00:32:57.110 --> 00:32:57.120 align:start position:0%
it will look something like this so you
 

00:32:57.120 --> 00:32:59.830 align:start position:0%
it will look something like this so you
would<00:32:57.279><c> have</c><00:32:57.600><c> multiple</c><00:32:58.159><c> masters</c><00:32:59.039><c> at</c><00:32:59.200><c> least</c><00:32:59.600><c> two</c>

00:32:59.830 --> 00:32:59.840 align:start position:0%
would have multiple masters at least two
 

00:32:59.840 --> 00:33:01.830 align:start position:0%
would have multiple masters at least two
in<00:33:00.000><c> a</c><00:33:00.080><c> production</c><00:33:00.640><c> setting</c><00:33:01.440><c> and</c><00:33:01.519><c> you</c><00:33:01.679><c> would</c>

00:33:01.830 --> 00:33:01.840 align:start position:0%
in a production setting and you would
 

00:33:01.840 --> 00:33:03.909 align:start position:0%
in a production setting and you would
have<00:33:02.080><c> multiple</c><00:33:02.559><c> worker</c><00:33:03.039><c> nodes</c>

00:33:03.909 --> 00:33:03.919 align:start position:0%
have multiple worker nodes
 

00:33:03.919 --> 00:33:06.630 align:start position:0%
have multiple worker nodes
and<00:33:04.640><c> master</c><00:33:05.120><c> nodes</c><00:33:05.760><c> and</c><00:33:05.919><c> the</c><00:33:06.000><c> worker</c><00:33:06.320><c> nodes</c>

00:33:06.630 --> 00:33:06.640 align:start position:0%
and master nodes and the worker nodes
 

00:33:06.640 --> 00:33:09.110 align:start position:0%
and master nodes and the worker nodes
have<00:33:06.799><c> their</c><00:33:07.120><c> own</c><00:33:07.440><c> separate</c><00:33:07.840><c> responsibility</c>

00:33:09.110 --> 00:33:09.120 align:start position:0%
have their own separate responsibility
 

00:33:09.120 --> 00:33:10.870 align:start position:0%
have their own separate responsibility
so<00:33:09.440><c> as</c><00:33:09.600><c> you</c><00:33:09.760><c> see</c><00:33:09.919><c> on</c><00:33:10.080><c> the</c><00:33:10.159><c> diagram</c><00:33:10.559><c> you</c><00:33:10.720><c> would</c>

00:33:10.870 --> 00:33:10.880 align:start position:0%
so as you see on the diagram you would
 

00:33:10.880 --> 00:33:13.750 align:start position:0%
so as you see on the diagram you would
have<00:33:11.200><c> actual</c><00:33:11.679><c> separate</c><00:33:12.640><c> virtual</c><00:33:13.200><c> or</c><00:33:13.360><c> physical</c>

00:33:13.750 --> 00:33:13.760 align:start position:0%
have actual separate virtual or physical
 

00:33:13.760 --> 00:33:17.430 align:start position:0%
have actual separate virtual or physical
machines<00:33:14.799><c> that</c><00:33:15.519><c> each</c><00:33:15.760><c> represent</c><00:33:16.320><c> a</c><00:33:16.559><c> note</c>

00:33:17.430 --> 00:33:17.440 align:start position:0%
machines that each represent a note
 

00:33:17.440 --> 00:33:19.430 align:start position:0%
machines that each represent a note
now<00:33:17.679><c> if</c><00:33:17.840><c> you</c><00:33:17.919><c> want</c><00:33:18.080><c> to</c><00:33:18.320><c> test</c><00:33:18.640><c> something</c><00:33:19.279><c> on</c>

00:33:19.430 --> 00:33:19.440 align:start position:0%
now if you want to test something on
 

00:33:19.440 --> 00:33:22.070 align:start position:0%
now if you want to test something on
your<00:33:19.760><c> local</c><00:33:20.159><c> environment</c><00:33:21.200><c> or</c><00:33:21.600><c> if</c><00:33:21.679><c> you</c><00:33:21.840><c> want</c><00:33:22.000><c> to</c>

00:33:22.070 --> 00:33:22.080 align:start position:0%
your local environment or if you want to
 

00:33:22.080 --> 00:33:23.909 align:start position:0%
your local environment or if you want to
try<00:33:22.480><c> something</c><00:33:22.880><c> out</c><00:33:23.039><c> very</c><00:33:23.360><c> quickly</c><00:33:23.679><c> for</c>

00:33:23.909 --> 00:33:23.919 align:start position:0%
try something out very quickly for
 

00:33:23.919 --> 00:33:27.110 align:start position:0%
try something out very quickly for
example<00:33:24.720><c> deploying</c><00:33:25.120><c> new</c><00:33:25.440><c> application</c><00:33:26.559><c> or</c><00:33:26.880><c> new</c>

00:33:27.110 --> 00:33:27.120 align:start position:0%
example deploying new application or new
 

00:33:27.120 --> 00:33:29.110 align:start position:0%
example deploying new application or new
components<00:33:28.000><c> and</c><00:33:28.159><c> you</c><00:33:28.320><c> want</c><00:33:28.399><c> to</c><00:33:28.559><c> test</c><00:33:28.880><c> it</c><00:33:29.039><c> on</c>

00:33:29.110 --> 00:33:29.120 align:start position:0%
components and you want to test it on
 

00:33:29.120 --> 00:33:31.590 align:start position:0%
components and you want to test it on
your<00:33:29.279><c> local</c><00:33:29.519><c> machine</c><00:33:30.000><c> obviously</c><00:33:30.960><c> setting</c><00:33:31.440><c> up</c>

00:33:31.590 --> 00:33:31.600 align:start position:0%
your local machine obviously setting up
 

00:33:31.600 --> 00:33:33.590 align:start position:0%
your local machine obviously setting up
a<00:33:31.679><c> cluster</c><00:33:32.240><c> like</c><00:33:32.559><c> this</c><00:33:32.880><c> will</c><00:33:33.039><c> be</c><00:33:33.279><c> pretty</c>

00:33:33.590 --> 00:33:33.600 align:start position:0%
a cluster like this will be pretty
 

00:33:33.600 --> 00:33:35.909 align:start position:0%
a cluster like this will be pretty
difficult<00:33:34.159><c> or</c><00:33:34.480><c> maybe</c><00:33:34.880><c> even</c><00:33:35.200><c> impossible</c><00:33:35.760><c> if</c>

00:33:35.909 --> 00:33:35.919 align:start position:0%
difficult or maybe even impossible if
 

00:33:35.919 --> 00:33:37.909 align:start position:0%
difficult or maybe even impossible if
you<00:33:36.000><c> don't</c><00:33:36.159><c> have</c><00:33:36.399><c> enough</c><00:33:36.640><c> resources</c><00:33:37.600><c> like</c>

00:33:37.909 --> 00:33:37.919 align:start position:0%
you don't have enough resources like
 

00:33:37.919 --> 00:33:41.110 align:start position:0%
you don't have enough resources like
memory<00:33:38.480><c> and</c><00:33:38.720><c> cpu</c><00:33:39.360><c> etc</c><00:33:40.080><c> and</c><00:33:40.320><c> exactly</c><00:33:40.720><c> for</c><00:33:40.880><c> the</c>

00:33:41.110 --> 00:33:41.120 align:start position:0%
memory and cpu etc and exactly for the
 

00:33:41.120 --> 00:33:42.310 align:start position:0%
memory and cpu etc and exactly for the
use<00:33:41.440><c> case</c>

00:33:42.310 --> 00:33:42.320 align:start position:0%
use case
 

00:33:42.320 --> 00:33:44.549 align:start position:0%
use case
there's<00:33:42.640><c> this</c><00:33:42.880><c> open</c><00:33:43.200><c> source</c><00:33:43.919><c> tool</c><00:33:44.159><c> that</c><00:33:44.399><c> is</c>

00:33:44.549 --> 00:33:44.559 align:start position:0%
there's this open source tool that is
 

00:33:44.559 --> 00:33:46.710 align:start position:0%
there's this open source tool that is
called<00:33:44.880><c> a</c><00:33:44.960><c> mini</c><00:33:45.279><c> cube</c><00:33:45.679><c> so</c><00:33:45.840><c> what</c><00:33:46.000><c> a</c><00:33:46.080><c> mini</c><00:33:46.399><c> cube</c>

00:33:46.710 --> 00:33:46.720 align:start position:0%
called a mini cube so what a mini cube
 

00:33:46.720 --> 00:33:50.230 align:start position:0%
called a mini cube so what a mini cube
is<00:33:47.120><c> is</c><00:33:47.279><c> basically</c><00:33:48.159><c> one</c><00:33:48.399><c> node</c><00:33:48.960><c> cluster</c><00:33:49.679><c> where</c>

00:33:50.230 --> 00:33:50.240 align:start position:0%
is is basically one node cluster where
 

00:33:50.240 --> 00:33:52.710 align:start position:0%
is is basically one node cluster where
the<00:33:50.399><c> master</c><00:33:50.880><c> processes</c><00:33:52.000><c> and</c><00:33:52.080><c> the</c><00:33:52.240><c> worker</c>

00:33:52.710 --> 00:33:52.720 align:start position:0%
the master processes and the worker
 

00:33:52.720 --> 00:33:56.549 align:start position:0%
the master processes and the worker
processes<00:33:53.760><c> both</c><00:33:54.080><c> run</c><00:33:54.720><c> on</c><00:33:55.039><c> one</c><00:33:55.760><c> node</c><00:33:56.240><c> and</c><00:33:56.320><c> this</c>

00:33:56.549 --> 00:33:56.559 align:start position:0%
processes both run on one node and this
 

00:33:56.559 --> 00:33:58.470 align:start position:0%
processes both run on one node and this
node<00:33:56.880><c> will</c><00:33:57.120><c> have</c><00:33:57.440><c> a</c><00:33:57.600><c> docker</c><00:33:58.000><c> container</c>

00:33:58.470 --> 00:33:58.480 align:start position:0%
node will have a docker container
 

00:33:58.480 --> 00:34:01.190 align:start position:0%
node will have a docker container
runtime<00:33:59.120><c> pre-installed</c><00:34:00.399><c> so</c><00:34:00.799><c> you</c><00:34:00.960><c> will</c><00:34:01.039><c> be</c>

00:34:01.190 --> 00:34:01.200 align:start position:0%
runtime pre-installed so you will be
 

00:34:01.200 --> 00:34:03.909 align:start position:0%
runtime pre-installed so you will be
able<00:34:01.360><c> to</c><00:34:01.600><c> run</c><00:34:01.840><c> the</c><00:34:02.000><c> containers</c><00:34:03.039><c> or</c><00:34:03.440><c> the</c><00:34:03.600><c> pods</c>

00:34:03.909 --> 00:34:03.919 align:start position:0%
able to run the containers or the pods
 

00:34:03.919 --> 00:34:07.590 align:start position:0%
able to run the containers or the pods
with<00:34:04.159><c> containers</c><00:34:04.960><c> on</c><00:34:05.039><c> this</c><00:34:05.279><c> node</c>

00:34:07.590 --> 00:34:07.600 align:start position:0%
with containers on this node
 

00:34:07.600 --> 00:34:10.149 align:start position:0%
with containers on this node
so<00:34:07.840><c> now</c><00:34:08.079><c> that</c><00:34:08.240><c> you</c><00:34:08.480><c> have</c><00:34:08.800><c> this</c><00:34:09.280><c> virtual</c><00:34:09.760><c> node</c>

00:34:10.149 --> 00:34:10.159 align:start position:0%
so now that you have this virtual node
 

00:34:10.159 --> 00:34:12.470 align:start position:0%
so now that you have this virtual node
on<00:34:10.320><c> your</c><00:34:10.480><c> local</c><00:34:10.800><c> machine</c><00:34:11.440><c> that</c><00:34:11.839><c> represents</c>

00:34:12.470 --> 00:34:12.480 align:start position:0%
on your local machine that represents
 

00:34:12.480 --> 00:34:15.270 align:start position:0%
on your local machine that represents
mini<00:34:12.800><c> cube</c><00:34:13.200><c> you</c><00:34:13.359><c> need</c><00:34:13.599><c> some</c><00:34:13.760><c> way</c><00:34:14.240><c> to</c><00:34:14.879><c> interact</c>

00:34:15.270 --> 00:34:15.280 align:start position:0%
mini cube you need some way to interact
 

00:34:15.280 --> 00:34:17.109 align:start position:0%
mini cube you need some way to interact
with<00:34:15.440><c> that</c><00:34:15.599><c> cluster</c><00:34:16.079><c> so</c><00:34:16.320><c> you</c><00:34:16.399><c> need</c><00:34:16.639><c> a</c><00:34:16.720><c> way</c><00:34:16.960><c> to</c>

00:34:17.109 --> 00:34:17.119 align:start position:0%
with that cluster so you need a way to
 

00:34:17.119 --> 00:34:18.550 align:start position:0%
with that cluster so you need a way to
create<00:34:17.599><c> pods</c>

00:34:18.550 --> 00:34:18.560 align:start position:0%
create pods
 

00:34:18.560 --> 00:34:20.790 align:start position:0%
create pods
and<00:34:18.960><c> other</c><00:34:19.200><c> kubernetes</c><00:34:19.760><c> components</c><00:34:20.399><c> on</c><00:34:20.560><c> the</c>

00:34:20.790 --> 00:34:20.800 align:start position:0%
and other kubernetes components on the
 

00:34:20.800 --> 00:34:23.109 align:start position:0%
and other kubernetes components on the
node<00:34:21.200><c> and</c><00:34:21.280><c> the</c><00:34:21.440><c> way</c><00:34:21.679><c> to</c><00:34:21.839><c> do</c><00:34:22.079><c> it</c><00:34:22.320><c> is</c><00:34:22.639><c> using</c>

00:34:23.109 --> 00:34:23.119 align:start position:0%
node and the way to do it is using
 

00:34:23.119 --> 00:34:25.990 align:start position:0%
node and the way to do it is using
cubectl<00:34:23.919><c> which</c><00:34:24.159><c> is</c><00:34:24.399><c> a</c><00:34:24.560><c> command</c><00:34:24.960><c> line</c><00:34:25.200><c> tool</c><00:34:25.760><c> for</c>

00:34:25.990 --> 00:34:26.000 align:start position:0%
cubectl which is a command line tool for
 

00:34:26.000 --> 00:34:28.230 align:start position:0%
cubectl which is a command line tool for
kubernetes<00:34:26.639><c> cluster</c><00:34:27.200><c> so</c><00:34:27.359><c> let's</c><00:34:27.599><c> see</c><00:34:27.760><c> how</c><00:34:28.000><c> it</c>

00:34:28.230 --> 00:34:28.240 align:start position:0%
kubernetes cluster so let's see how it
 

00:34:28.240 --> 00:34:30.069 align:start position:0%
kubernetes cluster so let's see how it
actually<00:34:28.639><c> works</c><00:34:29.119><c> remember</c><00:34:29.520><c> we</c><00:34:29.679><c> said</c><00:34:29.839><c> that</c>

00:34:30.069 --> 00:34:30.079 align:start position:0%
actually works remember we said that
 

00:34:30.079 --> 00:34:32.790 align:start position:0%
actually works remember we said that
minicube<00:34:30.720><c> runs</c><00:34:31.119><c> both</c><00:34:31.520><c> master</c><00:34:32.159><c> and</c><00:34:32.399><c> work</c>

00:34:32.790 --> 00:34:32.800 align:start position:0%
minicube runs both master and work
 

00:34:32.800 --> 00:34:35.430 align:start position:0%
minicube runs both master and work
processes<00:34:33.760><c> so</c><00:34:34.079><c> one</c><00:34:34.240><c> of</c><00:34:34.320><c> the</c><00:34:34.480><c> master</c><00:34:34.879><c> processes</c>

00:34:35.430 --> 00:34:35.440 align:start position:0%
processes so one of the master processes
 

00:34:35.440 --> 00:34:38.389 align:start position:0%
processes so one of the master processes
called<00:34:35.839><c> api</c><00:34:36.399><c> server</c><00:34:36.960><c> is</c><00:34:37.200><c> actually</c><00:34:37.839><c> the</c><00:34:38.000><c> main</c>

00:34:38.389 --> 00:34:38.399 align:start position:0%
called api server is actually the main
 

00:34:38.399 --> 00:34:40.550 align:start position:0%
called api server is actually the main
entry<00:34:38.800><c> point</c><00:34:39.119><c> into</c><00:34:39.359><c> the</c><00:34:39.440><c> kubernetes</c><00:34:40.079><c> cluster</c>

00:34:40.550 --> 00:34:40.560 align:start position:0%
entry point into the kubernetes cluster
 

00:34:40.560 --> 00:34:42.310 align:start position:0%
entry point into the kubernetes cluster
so<00:34:40.720><c> if</c><00:34:40.879><c> you</c><00:34:40.960><c> want</c><00:34:41.119><c> to</c><00:34:41.280><c> do</c><00:34:41.599><c> anything</c><00:34:42.159><c> in</c><00:34:42.240><c> the</c>

00:34:42.310 --> 00:34:42.320 align:start position:0%
so if you want to do anything in the
 

00:34:42.320 --> 00:34:43.990 align:start position:0%
so if you want to do anything in the
kubernetes<00:34:43.040><c> if</c><00:34:43.119><c> you</c><00:34:43.200><c> want</c><00:34:43.359><c> to</c><00:34:43.440><c> configure</c>

00:34:43.990 --> 00:34:44.000 align:start position:0%
kubernetes if you want to configure
 

00:34:44.000 --> 00:34:46.710 align:start position:0%
kubernetes if you want to configure
anything<00:34:44.480><c> create</c><00:34:44.879><c> any</c><00:34:45.200><c> component</c><00:34:46.159><c> you</c><00:34:46.399><c> first</c>

00:34:46.710 --> 00:34:46.720 align:start position:0%
anything create any component you first
 

00:34:46.720 --> 00:34:48.550 align:start position:0%
anything create any component you first
have<00:34:46.879><c> to</c><00:34:46.960><c> talk</c><00:34:47.200><c> to</c><00:34:47.280><c> the</c><00:34:47.440><c> api</c><00:34:47.839><c> server</c><00:34:48.320><c> and</c><00:34:48.399><c> the</c>

00:34:48.550 --> 00:34:48.560 align:start position:0%
have to talk to the api server and the
 

00:34:48.560 --> 00:34:50.550 align:start position:0%
have to talk to the api server and the
way<00:34:48.720><c> to</c><00:34:48.879><c> talk</c><00:34:49.119><c> to</c><00:34:49.200><c> the</c><00:34:49.359><c> api</c><00:34:49.760><c> server</c><00:34:50.159><c> is</c><00:34:50.399><c> through</c>

00:34:50.550 --> 00:34:50.560 align:start position:0%
way to talk to the api server is through
 

00:34:50.560 --> 00:34:52.550 align:start position:0%
way to talk to the api server is through
different<00:34:50.879><c> clients</c><00:34:51.280><c> so</c><00:34:51.440><c> you</c><00:34:51.599><c> can</c><00:34:51.760><c> have</c><00:34:51.919><c> a</c><00:34:52.079><c> ui</c>

00:34:52.550 --> 00:34:52.560 align:start position:0%
different clients so you can have a ui
 

00:34:52.560 --> 00:34:54.710 align:start position:0%
different clients so you can have a ui
like<00:34:52.800><c> a</c><00:34:52.879><c> dashboard</c><00:34:53.839><c> you</c><00:34:54.000><c> can</c><00:34:54.159><c> talk</c><00:34:54.399><c> to</c><00:34:54.560><c> it</c>

00:34:54.710 --> 00:34:54.720 align:start position:0%
like a dashboard you can talk to it
 

00:34:54.720 --> 00:34:56.629 align:start position:0%
like a dashboard you can talk to it
using<00:34:54.960><c> kubernetes</c><00:34:55.679><c> api</c>

00:34:56.629 --> 00:34:56.639 align:start position:0%
using kubernetes api
 

00:34:56.639 --> 00:35:00.150 align:start position:0%
using kubernetes api
or<00:34:56.960><c> a</c><00:34:57.040><c> command</c><00:34:57.440><c> line</c><00:34:57.760><c> tool</c><00:34:58.240><c> which</c><00:34:58.640><c> is</c><00:34:59.200><c> cubectl</c>

00:35:00.150 --> 00:35:00.160 align:start position:0%
or a command line tool which is cubectl
 

00:35:00.160 --> 00:35:02.390 align:start position:0%
or a command line tool which is cubectl
and<00:35:00.320><c> cubectl</c><00:35:01.119><c> is</c><00:35:01.280><c> actually</c><00:35:01.760><c> the</c><00:35:01.920><c> most</c>

00:35:02.390 --> 00:35:02.400 align:start position:0%
and cubectl is actually the most
 

00:35:02.400 --> 00:35:04.870 align:start position:0%
and cubectl is actually the most
powerful<00:35:03.119><c> of</c><00:35:03.359><c> all</c><00:35:03.520><c> the</c><00:35:03.680><c> three</c><00:35:04.000><c> clients</c>

00:35:04.870 --> 00:35:04.880 align:start position:0%
powerful of all the three clients
 

00:35:04.880 --> 00:35:06.870 align:start position:0%
powerful of all the three clients
because<00:35:05.280><c> with</c><00:35:05.440><c> cube</c><00:35:05.680><c> cdl</c><00:35:06.079><c> you</c><00:35:06.240><c> can</c><00:35:06.400><c> basically</c>

00:35:06.870 --> 00:35:06.880 align:start position:0%
because with cube cdl you can basically
 

00:35:06.880 --> 00:35:07.670 align:start position:0%
because with cube cdl you can basically
do

00:35:07.670 --> 00:35:07.680 align:start position:0%
do
 

00:35:07.680 --> 00:35:09.750 align:start position:0%
do
anything<00:35:08.320><c> in</c><00:35:08.400><c> the</c><00:35:08.480><c> kubernetes</c><00:35:09.040><c> that</c><00:35:09.200><c> you</c><00:35:09.359><c> want</c>

00:35:09.750 --> 00:35:09.760 align:start position:0%
anything in the kubernetes that you want
 

00:35:09.760 --> 00:35:11.510 align:start position:0%
anything in the kubernetes that you want
and<00:35:09.920><c> throughout</c><00:35:10.240><c> this</c><00:35:10.480><c> video</c><00:35:10.720><c> tutorials</c>

00:35:11.510 --> 00:35:11.520 align:start position:0%
and throughout this video tutorials
 

00:35:11.520 --> 00:35:14.150 align:start position:0%
and throughout this video tutorials
we're<00:35:11.839><c> going</c><00:35:11.920><c> to</c><00:35:12.000><c> be</c><00:35:12.079><c> using</c><00:35:12.480><c> cube</c><00:35:12.720><c> ctl</c><00:35:13.440><c> mostly</c>

00:35:14.150 --> 00:35:14.160 align:start position:0%
we're going to be using cube ctl mostly
 

00:35:14.160 --> 00:35:16.630 align:start position:0%
we're going to be using cube ctl mostly
so<00:35:14.400><c> once</c><00:35:14.640><c> the</c><00:35:14.720><c> cube</c><00:35:14.960><c> ctl</c><00:35:15.680><c> submits</c><00:35:16.079><c> commands</c><00:35:16.480><c> to</c>

00:35:16.630 --> 00:35:16.640 align:start position:0%
so once the cube ctl submits commands to
 

00:35:16.640 --> 00:35:18.950 align:start position:0%
so once the cube ctl submits commands to
the<00:35:16.720><c> api</c><00:35:17.200><c> server</c><00:35:17.760><c> to</c><00:35:18.000><c> create</c><00:35:18.400><c> components</c>

00:35:18.950 --> 00:35:18.960 align:start position:0%
the api server to create components
 

00:35:18.960 --> 00:35:22.310 align:start position:0%
the api server to create components
delete<00:35:19.359><c> components</c><00:35:19.920><c> etc</c><00:35:20.960><c> the</c><00:35:21.119><c> work</c><00:35:21.520><c> processes</c>

00:35:22.310 --> 00:35:22.320 align:start position:0%
delete components etc the work processes
 

00:35:22.320 --> 00:35:25.510 align:start position:0%
delete components etc the work processes
on<00:35:22.480><c> minicube</c><00:35:23.520><c> node</c><00:35:24.240><c> will</c><00:35:24.480><c> actually</c><00:35:25.040><c> make</c><00:35:25.359><c> it</c>

00:35:25.510 --> 00:35:25.520 align:start position:0%
on minicube node will actually make it
 

00:35:25.520 --> 00:35:27.270 align:start position:0%
on minicube node will actually make it
happen<00:35:25.920><c> so</c><00:35:26.079><c> they</c><00:35:26.240><c> will</c><00:35:26.480><c> be</c><00:35:26.800><c> actually</c>

00:35:27.270 --> 00:35:27.280 align:start position:0%
happen so they will be actually
 

00:35:27.280 --> 00:35:29.670 align:start position:0%
happen so they will be actually
executing<00:35:27.920><c> the</c><00:35:28.079><c> commands</c><00:35:28.800><c> to</c><00:35:29.200><c> create</c><00:35:29.520><c> the</c>

00:35:29.670 --> 00:35:29.680 align:start position:0%
executing the commands to create the
 

00:35:29.680 --> 00:35:31.829 align:start position:0%
executing the commands to create the
parts<00:35:30.400><c> to</c><00:35:30.560><c> destroy</c><00:35:30.960><c> the</c><00:35:31.119><c> parts</c><00:35:31.440><c> to</c><00:35:31.599><c> create</c>

00:35:31.829 --> 00:35:31.839 align:start position:0%
parts to destroy the parts to create
 

00:35:31.839 --> 00:35:34.470 align:start position:0%
parts to destroy the parts to create
services<00:35:32.560><c> etc</c><00:35:33.280><c> so</c><00:35:33.440><c> this</c><00:35:33.680><c> is</c><00:35:33.760><c> the</c><00:35:33.920><c> mini</c><00:35:34.160><c> cube</c>

00:35:34.470 --> 00:35:34.480 align:start position:0%
services etc so this is the mini cube
 

00:35:34.480 --> 00:35:37.670 align:start position:0%
services etc so this is the mini cube
setup<00:35:35.200><c> and</c><00:35:35.359><c> this</c><00:35:35.680><c> is</c><00:35:35.839><c> how</c><00:35:36.160><c> cubectl</c><00:35:36.960><c> is</c><00:35:37.119><c> used</c><00:35:37.440><c> to</c>

00:35:37.670 --> 00:35:37.680 align:start position:0%
setup and this is how cubectl is used to
 

00:35:37.680 --> 00:35:39.829 align:start position:0%
setup and this is how cubectl is used to
interact<00:35:38.079><c> with</c><00:35:38.240><c> the</c><00:35:38.400><c> cluster</c><00:35:39.200><c> an</c><00:35:39.359><c> important</c>

00:35:39.829 --> 00:35:39.839 align:start position:0%
interact with the cluster an important
 

00:35:39.839 --> 00:35:42.230 align:start position:0%
interact with the cluster an important
thing<00:35:40.079><c> to</c><00:35:40.240><c> note</c><00:35:40.560><c> here</c><00:35:40.800><c> is</c><00:35:40.960><c> that</c><00:35:41.200><c> kipctl</c><00:35:42.000><c> isn't</c>

00:35:42.230 --> 00:35:42.240 align:start position:0%
thing to note here is that kipctl isn't
 

00:35:42.240 --> 00:35:44.390 align:start position:0%
thing to note here is that kipctl isn't
just<00:35:42.480><c> for</c><00:35:42.640><c> minikube</c><00:35:43.200><c> cluster</c><00:35:43.920><c> if</c><00:35:44.079><c> you</c><00:35:44.160><c> have</c><00:35:44.320><c> a</c>

00:35:44.390 --> 00:35:44.400 align:start position:0%
just for minikube cluster if you have a
 

00:35:44.400 --> 00:35:47.270 align:start position:0%
just for minikube cluster if you have a
cloud<00:35:44.800><c> cluster</c><00:35:45.839><c> or</c><00:35:46.079><c> a</c><00:35:46.320><c> hybrid</c><00:35:46.800><c> cluster</c>

00:35:47.270 --> 00:35:47.280 align:start position:0%
cloud cluster or a hybrid cluster
 

00:35:47.280 --> 00:35:51.109 align:start position:0%
cloud cluster or a hybrid cluster
whatever<00:35:47.680><c> cube</c><00:35:47.920><c> ctl</c><00:35:48.640><c> is</c><00:35:48.880><c> the</c><00:35:49.040><c> tool</c><00:35:49.680><c> to</c><00:35:50.400><c> use</c><00:35:50.880><c> to</c>

00:35:51.109 --> 00:35:51.119 align:start position:0%
whatever cube ctl is the tool to use to
 

00:35:51.119 --> 00:35:53.589 align:start position:0%
whatever cube ctl is the tool to use to
interact<00:35:51.680><c> with</c><00:35:52.320><c> any</c><00:35:52.640><c> type</c><00:35:52.880><c> of</c><00:35:52.960><c> kubernetes</c>

00:35:53.589 --> 00:35:53.599 align:start position:0%
interact with any type of kubernetes
 

00:35:53.599 --> 00:35:55.510 align:start position:0%
interact with any type of kubernetes
cluster<00:35:54.079><c> setup</c><00:35:54.640><c> so</c><00:35:54.800><c> that's</c><00:35:55.040><c> important</c><00:35:55.359><c> to</c>

00:35:55.510 --> 00:35:55.520 align:start position:0%
cluster setup so that's important to
 

00:35:55.520 --> 00:35:57.510 align:start position:0%
cluster setup so that's important to
note<00:35:55.839><c> here</c><00:35:56.160><c> so</c><00:35:56.320><c> now</c><00:35:56.480><c> that</c><00:35:56.640><c> we</c><00:35:56.800><c> know</c><00:35:56.960><c> what</c><00:35:57.200><c> mini</c>

00:35:57.510 --> 00:35:57.520 align:start position:0%
note here so now that we know what mini
 

00:35:57.520 --> 00:35:59.750 align:start position:0%
note here so now that we know what mini
cube<00:35:57.839><c> and</c><00:35:58.000><c> cube</c><00:35:58.240><c> ctl</c><00:35:58.800><c> are</c><00:35:59.200><c> let's</c><00:35:59.440><c> actually</c>

00:35:59.750 --> 00:35:59.760 align:start position:0%
cube and cube ctl are let's actually
 

00:35:59.760 --> 00:36:04.310 align:start position:0%
cube and cube ctl are let's actually
install<00:36:00.079><c> them</c><00:36:00.240><c> to</c><00:36:00.480><c> see</c><00:36:00.640><c> them</c><00:36:00.880><c> in</c><00:36:01.040><c> practice</c>

00:36:04.310 --> 00:36:04.320 align:start position:0%
 
 

00:36:04.320 --> 00:36:07.270 align:start position:0%
 
now<00:36:04.560><c> let's</c><00:36:04.800><c> see</c><00:36:05.280><c> how</c><00:36:05.520><c> to</c><00:36:05.760><c> install</c><00:36:06.320><c> and</c><00:36:06.560><c> run</c>

00:36:07.270 --> 00:36:07.280 align:start position:0%
now let's see how to install and run
 

00:36:07.280 --> 00:36:09.990 align:start position:0%
now let's see how to install and run
mini<00:36:07.599><c> cube</c><00:36:08.240><c> there</c><00:36:08.560><c> are</c><00:36:08.800><c> many</c><00:36:09.119><c> different</c><00:36:09.599><c> ways</c>

00:36:09.990 --> 00:36:10.000 align:start position:0%
mini cube there are many different ways
 

00:36:10.000 --> 00:36:12.310 align:start position:0%
mini cube there are many different ways
depending<00:36:10.560><c> on</c><00:36:10.720><c> your</c><00:36:11.040><c> operating</c><00:36:11.520><c> system</c><00:36:12.160><c> and</c>

00:36:12.310 --> 00:36:12.320 align:start position:0%
depending on your operating system and
 

00:36:12.320 --> 00:36:15.030 align:start position:0%
depending on your operating system and
its<00:36:12.480><c> architecture</c><00:36:13.680><c> so</c><00:36:13.839><c> the</c><00:36:14.000><c> best</c><00:36:14.320><c> way</c><00:36:14.640><c> is</c><00:36:14.800><c> to</c>

00:36:15.030 --> 00:36:15.040 align:start position:0%
its architecture so the best way is to
 

00:36:15.040 --> 00:36:17.750 align:start position:0%
its architecture so the best way is to
reference<00:36:15.599><c> the</c><00:36:15.839><c> official</c><00:36:16.320><c> documentation</c><00:36:17.520><c> and</c>

00:36:17.750 --> 00:36:17.760 align:start position:0%
reference the official documentation and
 

00:36:17.760 --> 00:36:20.790 align:start position:0%
reference the official documentation and
here<00:36:18.079><c> as</c><00:36:18.240><c> you</c><00:36:18.480><c> see</c><00:36:19.040><c> minicube</c><00:36:19.680><c> can</c><00:36:19.920><c> run</c><00:36:20.320><c> either</c>

00:36:20.790 --> 00:36:20.800 align:start position:0%
here as you see minicube can run either
 

00:36:20.800 --> 00:36:24.390 align:start position:0%
here as you see minicube can run either
as<00:36:21.040><c> a</c><00:36:21.359><c> container</c><00:36:22.240><c> or</c><00:36:22.720><c> a</c><00:36:23.040><c> virtual</c><00:36:23.520><c> machine</c><00:36:24.240><c> and</c>

00:36:24.390 --> 00:36:24.400 align:start position:0%
as a container or a virtual machine and
 

00:36:24.400 --> 00:36:26.790 align:start position:0%
as a container or a virtual machine and
these<00:36:24.640><c> are</c><00:36:24.880><c> the</c><00:36:25.040><c> resource</c><00:36:25.599><c> requirements</c><00:36:26.560><c> to</c>

00:36:26.790 --> 00:36:26.800 align:start position:0%
these are the resource requirements to
 

00:36:26.800 --> 00:36:29.270 align:start position:0%
these are the resource requirements to
run<00:36:27.119><c> minicube</c><00:36:27.839><c> on</c><00:36:28.000><c> your</c><00:36:28.320><c> machine</c><00:36:28.960><c> so</c><00:36:29.119><c> make</c>

00:36:29.270 --> 00:36:29.280 align:start position:0%
run minicube on your machine so make
 

00:36:29.280 --> 00:36:31.510 align:start position:0%
run minicube on your machine so make
sure<00:36:29.520><c> you</c><00:36:29.680><c> have</c><00:36:29.920><c> enough</c><00:36:30.320><c> resources</c><00:36:31.200><c> for</c>

00:36:31.510 --> 00:36:31.520 align:start position:0%
sure you have enough resources for
 

00:36:31.520 --> 00:36:34.470 align:start position:0%
sure you have enough resources for
installation<00:36:32.480><c> you</c><00:36:32.640><c> just</c><00:36:32.880><c> select</c><00:36:33.440><c> the</c><00:36:33.680><c> correct</c>

00:36:34.470 --> 00:36:34.480 align:start position:0%
installation you just select the correct
 

00:36:34.480 --> 00:36:36.950 align:start position:0%
installation you just select the correct
data<00:36:34.880><c> for</c><00:36:35.040><c> your</c><00:36:35.200><c> machine</c><00:36:35.760><c> in</c><00:36:35.920><c> my</c><00:36:36.160><c> case</c><00:36:36.800><c> it's</c>

00:36:36.950 --> 00:36:36.960 align:start position:0%
data for your machine in my case it's
 

00:36:36.960 --> 00:36:39.349 align:start position:0%
data for your machine in my case it's
going<00:36:37.040><c> to</c><00:36:37.119><c> be</c><00:36:37.359><c> mac</c><00:36:37.599><c> os</c><00:36:38.400><c> with</c><00:36:38.640><c> a</c><00:36:38.800><c> home</c><00:36:38.800><c> homebrew</c>

00:36:39.349 --> 00:36:39.359 align:start position:0%
going to be mac os with a home homebrew
 

00:36:39.359 --> 00:36:41.190 align:start position:0%
going to be mac os with a home homebrew
installation

00:36:41.190 --> 00:36:41.200 align:start position:0%
installation
 

00:36:41.200 --> 00:36:43.910 align:start position:0%
installation
and<00:36:41.440><c> with</c><00:36:41.680><c> one</c><00:36:42.000><c> simple</c><00:36:42.880><c> brew</c><00:36:43.280><c> installed</c><00:36:43.680><c> mini</c>

00:36:43.910 --> 00:36:43.920 align:start position:0%
and with one simple brew installed mini
 

00:36:43.920 --> 00:36:45.990 align:start position:0%
and with one simple brew installed mini
cube<00:36:44.160><c> command</c><00:36:44.720><c> i</c><00:36:44.800><c> can</c><00:36:45.119><c> basically</c><00:36:45.599><c> install</c>

00:36:45.990 --> 00:36:46.000 align:start position:0%
cube command i can basically install
 

00:36:46.000 --> 00:36:48.870 align:start position:0%
cube command i can basically install
mini<00:36:46.240><c> cube</c>

00:36:48.870 --> 00:36:48.880 align:start position:0%
 
 

00:36:48.880 --> 00:36:51.349 align:start position:0%
 
like<00:36:49.119><c> this</c><00:36:49.839><c> and</c><00:36:50.079><c> as</c><00:36:50.240><c> you</c><00:36:50.320><c> see</c><00:36:50.560><c> the</c><00:36:50.720><c> latest</c><00:36:51.119><c> mini</c>

00:36:51.349 --> 00:36:51.359 align:start position:0%
like this and as you see the latest mini
 

00:36:51.359 --> 00:36:53.589 align:start position:0%
like this and as you see the latest mini
cube<00:36:51.599><c> version</c><00:36:52.079><c> has</c><00:36:52.240><c> been</c><00:36:52.480><c> installed</c><00:36:53.280><c> once</c>

00:36:53.589 --> 00:36:53.599 align:start position:0%
cube version has been installed once
 

00:36:53.599 --> 00:36:55.589 align:start position:0%
cube version has been installed once
minicube<00:36:54.160><c> is</c><00:36:54.400><c> installed</c><00:36:54.960><c> we</c><00:36:55.119><c> want</c><00:36:55.280><c> to</c>

00:36:55.589 --> 00:36:55.599 align:start position:0%
minicube is installed we want to
 

00:36:55.599 --> 00:36:57.990 align:start position:0%
minicube is installed we want to
actually<00:36:56.160><c> start</c><00:36:56.560><c> or</c><00:36:56.880><c> create</c><00:36:57.359><c> a</c><00:36:57.520><c> mini</c><00:36:57.760><c> cube</c>

00:36:57.990 --> 00:36:58.000 align:start position:0%
actually start or create a mini cube
 

00:36:58.000 --> 00:36:58.950 align:start position:0%
actually start or create a mini cube
cluster

00:36:58.950 --> 00:36:58.960 align:start position:0%
cluster
 

00:36:58.960 --> 00:37:01.910 align:start position:0%
cluster
which<00:36:59.280><c> is</c><00:36:59.680><c> also</c><00:37:00.079><c> super</c><00:37:00.480><c> easy</c><00:37:00.880><c> as</c><00:37:01.040><c> you</c><00:37:01.119><c> see</c>

00:37:01.910 --> 00:37:01.920 align:start position:0%
which is also super easy as you see
 

00:37:01.920 --> 00:37:04.069 align:start position:0%
which is also super easy as you see
we<00:37:02.160><c> simply</c><00:37:02.560><c> execute</c><00:37:03.040><c> a</c><00:37:03.200><c> mini</c><00:37:03.520><c> cube</c><00:37:03.839><c> start</c>

00:37:04.069 --> 00:37:04.079 align:start position:0%
we simply execute a mini cube start
 

00:37:04.079 --> 00:37:05.109 align:start position:0%
we simply execute a mini cube start
command

00:37:05.109 --> 00:37:05.119 align:start position:0%
command
 

00:37:05.119 --> 00:37:07.109 align:start position:0%
command
however<00:37:05.680><c> as</c><00:37:05.920><c> i</c><00:37:06.079><c> mentioned</c>

00:37:07.109 --> 00:37:07.119 align:start position:0%
however as i mentioned
 

00:37:07.119 --> 00:37:09.430 align:start position:0%
however as i mentioned
minicube<00:37:08.000><c> must</c><00:37:08.240><c> start</c><00:37:08.720><c> either</c><00:37:09.200><c> as</c><00:37:09.359><c> a</c>

00:37:09.430 --> 00:37:09.440 align:start position:0%
minicube must start either as a
 

00:37:09.440 --> 00:37:11.990 align:start position:0%
minicube must start either as a
container<00:37:10.079><c> or</c><00:37:10.400><c> a</c><00:37:10.640><c> virtual</c><00:37:11.040><c> machine</c><00:37:11.680><c> so</c><00:37:11.839><c> we</c>

00:37:11.990 --> 00:37:12.000 align:start position:0%
container or a virtual machine so we
 

00:37:12.000 --> 00:37:14.230 align:start position:0%
container or a virtual machine so we
need<00:37:12.240><c> either</c><00:37:12.640><c> a</c><00:37:12.800><c> container</c><00:37:13.440><c> or</c><00:37:13.680><c> a</c><00:37:13.839><c> virtual</c>

00:37:14.230 --> 00:37:14.240 align:start position:0%
need either a container or a virtual
 

00:37:14.240 --> 00:37:17.270 align:start position:0%
need either a container or a virtual
machine<00:37:14.800><c> tool</c><00:37:15.200><c> installed</c><00:37:16.079><c> on</c><00:37:16.400><c> our</c><00:37:16.640><c> laptop</c><00:37:17.119><c> to</c>

00:37:17.270 --> 00:37:17.280 align:start position:0%
machine tool installed on our laptop to
 

00:37:17.280 --> 00:37:19.270 align:start position:0%
machine tool installed on our laptop to
run<00:37:17.520><c> mini</c><00:37:17.760><c> cube</c><00:37:18.240><c> and</c><00:37:18.320><c> this</c><00:37:18.560><c> is</c><00:37:18.640><c> going</c><00:37:18.800><c> to</c><00:37:18.880><c> be</c>

00:37:19.270 --> 00:37:19.280 align:start position:0%
run mini cube and this is going to be
 

00:37:19.280 --> 00:37:21.990 align:start position:0%
run mini cube and this is going to be
the<00:37:19.520><c> driver</c><00:37:20.160><c> for</c><00:37:20.400><c> mini</c><00:37:20.640><c> cube</c><00:37:21.040><c> and</c><00:37:21.280><c> opening</c><00:37:21.760><c> the</c>

00:37:21.990 --> 00:37:22.000 align:start position:0%
the driver for mini cube and opening the
 

00:37:22.000 --> 00:37:23.750 align:start position:0%
the driver for mini cube and opening the
drivers<00:37:22.560><c> page</c>

00:37:23.750 --> 00:37:23.760 align:start position:0%
drivers page
 

00:37:23.760 --> 00:37:27.750 align:start position:0%
drivers page
you<00:37:23.920><c> see</c><00:37:24.079><c> the</c><00:37:24.320><c> list</c><00:37:24.800><c> of</c><00:37:25.280><c> supported</c><00:37:26.000><c> drivers</c>

00:37:27.750 --> 00:37:27.760 align:start position:0%
you see the list of supported drivers
 

00:37:27.760 --> 00:37:31.109 align:start position:0%
you see the list of supported drivers
for<00:37:28.480><c> linux</c><00:37:28.960><c> mac</c><00:37:29.200><c> os</c><00:37:29.599><c> and</c><00:37:29.760><c> windows</c><00:37:30.640><c> and</c><00:37:30.800><c> you</c><00:37:30.960><c> see</c>

00:37:31.109 --> 00:37:31.119 align:start position:0%
for linux mac os and windows and you see
 

00:37:31.119 --> 00:37:34.069 align:start position:0%
for linux mac os and windows and you see
that<00:37:31.680><c> docker</c><00:37:32.320><c> is</c><00:37:32.560><c> actually</c><00:37:33.119><c> the</c><00:37:33.359><c> preferred</c>

00:37:34.069 --> 00:37:34.079 align:start position:0%
that docker is actually the preferred
 

00:37:34.079 --> 00:37:36.310 align:start position:0%
that docker is actually the preferred
driver<00:37:34.560><c> for</c><00:37:34.720><c> running</c><00:37:35.040><c> mini</c><00:37:35.359><c> cube</c><00:37:35.680><c> on</c><00:37:36.000><c> all</c>

00:37:36.310 --> 00:37:36.320 align:start position:0%
driver for running mini cube on all
 

00:37:36.320 --> 00:37:38.790 align:start position:0%
driver for running mini cube on all
operating<00:37:36.800><c> systems</c><00:37:37.760><c> now</c><00:37:38.000><c> this</c><00:37:38.240><c> may</c><00:37:38.400><c> be</c><00:37:38.720><c> a</c>

00:37:38.790 --> 00:37:38.800 align:start position:0%
operating systems now this may be a
 

00:37:38.800 --> 00:37:41.270 align:start position:0%
operating systems now this may be a
little<00:37:39.040><c> bit</c><00:37:39.280><c> confusing</c><00:37:40.000><c> because</c><00:37:40.480><c> as</c><00:37:40.640><c> you</c><00:37:40.800><c> know</c>

00:37:41.270 --> 00:37:41.280 align:start position:0%
little bit confusing because as you know
 

00:37:41.280 --> 00:37:44.630 align:start position:0%
little bit confusing because as you know
inside<00:37:42.240><c> the</c><00:37:42.640><c> kubernetes</c><00:37:43.359><c> cluster</c><00:37:44.000><c> we</c><00:37:44.240><c> run</c>

00:37:44.630 --> 00:37:44.640 align:start position:0%
inside the kubernetes cluster we run
 

00:37:44.640 --> 00:37:46.870 align:start position:0%
inside the kubernetes cluster we run
docker<00:37:45.040><c> containers</c><00:37:46.079><c> and</c><00:37:46.240><c> it's</c><00:37:46.400><c> important</c><00:37:46.720><c> to</c>

00:37:46.870 --> 00:37:46.880 align:start position:0%
docker containers and it's important to
 

00:37:46.880 --> 00:37:49.270 align:start position:0%
docker containers and it's important to
note<00:37:47.119><c> here</c><00:37:47.359><c> that</c><00:37:47.680><c> mini</c><00:37:48.000><c> cube</c><00:37:48.240><c> insulation</c>

00:37:49.270 --> 00:37:49.280 align:start position:0%
note here that mini cube insulation
 

00:37:49.280 --> 00:37:51.750 align:start position:0%
note here that mini cube insulation
actually<00:37:49.680><c> comes</c><00:37:50.079><c> with</c><00:37:50.720><c> docker</c><00:37:51.280><c> already</c>

00:37:51.750 --> 00:37:51.760 align:start position:0%
actually comes with docker already
 

00:37:51.760 --> 00:37:54.870 align:start position:0%
actually comes with docker already
installed<00:37:52.640><c> to</c><00:37:52.960><c> run</c><00:37:53.359><c> those</c><00:37:53.599><c> containers</c><00:37:54.640><c> but</c>

00:37:54.870 --> 00:37:54.880 align:start position:0%
installed to run those containers but
 

00:37:54.880 --> 00:37:58.310 align:start position:0%
installed to run those containers but
docker<00:37:55.599><c> as</c><00:37:55.920><c> a</c><00:37:56.160><c> driver</c><00:37:56.640><c> from</c><00:37:56.880><c> minicube</c><00:37:57.920><c> means</c>

00:37:58.310 --> 00:37:58.320 align:start position:0%
docker as a driver from minicube means
 

00:37:58.320 --> 00:38:01.030 align:start position:0%
docker as a driver from minicube means
that<00:37:58.560><c> we</c><00:37:58.720><c> are</c><00:37:58.880><c> hosting</c><00:37:59.839><c> minicube</c><00:38:00.560><c> on</c><00:38:00.800><c> our</c>

00:38:01.030 --> 00:38:01.040 align:start position:0%
that we are hosting minicube on our
 

00:38:01.040 --> 00:38:03.270 align:start position:0%
that we are hosting minicube on our
local<00:38:01.359><c> machine</c><00:38:01.839><c> as</c><00:38:02.000><c> a</c><00:38:02.160><c> docker</c><00:38:02.560><c> container</c>

00:38:03.270 --> 00:38:03.280 align:start position:0%
local machine as a docker container
 

00:38:03.280 --> 00:38:06.310 align:start position:0%
local machine as a docker container
itself<00:38:03.760><c> so</c><00:38:03.920><c> we</c><00:38:04.079><c> have</c><00:38:04.720><c> two</c><00:38:05.040><c> layers</c><00:38:05.520><c> of</c><00:38:05.760><c> docker</c>

00:38:06.310 --> 00:38:06.320 align:start position:0%
itself so we have two layers of docker
 

00:38:06.320 --> 00:38:08.470 align:start position:0%
itself so we have two layers of docker
mini<00:38:06.640><c> cube</c><00:38:06.880><c> running</c><00:38:07.200><c> is</c><00:38:07.280><c> a</c><00:38:07.359><c> docker</c><00:38:07.680><c> container</c>

00:38:08.470 --> 00:38:08.480 align:start position:0%
mini cube running is a docker container
 

00:38:08.480 --> 00:38:11.990 align:start position:0%
mini cube running is a docker container
and<00:38:08.720><c> inside</c><00:38:09.520><c> mini</c><00:38:09.839><c> cube</c><00:38:10.400><c> we</c><00:38:10.640><c> have</c><00:38:11.119><c> docker</c>

00:38:11.990 --> 00:38:12.000 align:start position:0%
and inside mini cube we have docker
 

00:38:12.000 --> 00:38:14.310 align:start position:0%
and inside mini cube we have docker
packaged<00:38:12.560><c> in</c><00:38:12.720><c> minikube</c><00:38:13.520><c> to</c><00:38:13.760><c> run</c><00:38:14.000><c> our</c>

00:38:14.310 --> 00:38:14.320 align:start position:0%
packaged in minikube to run our
 

00:38:14.320 --> 00:38:17.109 align:start position:0%
packaged in minikube to run our
application<00:38:14.960><c> containers</c><00:38:16.000><c> and</c><00:38:16.160><c> for</c><00:38:16.320><c> hosting</c>

00:38:17.109 --> 00:38:17.119 align:start position:0%
application containers and for hosting
 

00:38:17.119 --> 00:38:19.589 align:start position:0%
application containers and for hosting
minicube<00:38:17.760><c> on</c><00:38:18.000><c> our</c><00:38:18.400><c> machine</c><00:38:18.800><c> we</c><00:38:18.960><c> can</c><00:38:19.119><c> use</c>

00:38:19.589 --> 00:38:19.599 align:start position:0%
minicube on our machine we can use
 

00:38:19.599 --> 00:38:21.910 align:start position:0%
minicube on our machine we can use
docker<00:38:20.320><c> so</c><00:38:20.640><c> if</c><00:38:20.800><c> you</c><00:38:20.880><c> have</c><00:38:21.119><c> docker</c><00:38:21.599><c> already</c>

00:38:21.910 --> 00:38:21.920 align:start position:0%
docker so if you have docker already
 

00:38:21.920 --> 00:38:24.390 align:start position:0%
docker so if you have docker already
installed<00:38:22.480><c> on</c><00:38:22.560><c> your</c><00:38:22.720><c> machine</c><00:38:23.359><c> you're</c><00:38:23.680><c> all</c><00:38:24.160><c> set</c>

00:38:24.390 --> 00:38:24.400 align:start position:0%
installed on your machine you're all set
 

00:38:24.400 --> 00:38:26.870 align:start position:0%
installed on your machine you're all set
up<00:38:24.800><c> to</c><00:38:25.040><c> start</c><00:38:25.359><c> a</c><00:38:25.440><c> mini</c><00:38:25.680><c> cube</c><00:38:25.920><c> cluster</c>

00:38:26.870 --> 00:38:26.880 align:start position:0%
up to start a mini cube cluster
 

00:38:26.880 --> 00:38:29.910 align:start position:0%
up to start a mini cube cluster
if<00:38:27.200><c> not</c><00:38:27.760><c> also</c><00:38:28.079><c> not</c><00:38:28.320><c> a</c><00:38:28.400><c> problem</c><00:38:28.800><c> you</c><00:38:28.960><c> can</c><00:38:29.359><c> easily</c>

00:38:29.910 --> 00:38:29.920 align:start position:0%
if not also not a problem you can easily
 

00:38:29.920 --> 00:38:31.670 align:start position:0%
if not also not a problem you can easily
install<00:38:30.320><c> it</c><00:38:30.480><c> from</c><00:38:30.800><c> here</c>

00:38:31.670 --> 00:38:31.680 align:start position:0%
install it from here
 

00:38:31.680 --> 00:38:34.470 align:start position:0%
install it from here
so<00:38:31.920><c> clicking</c><00:38:32.400><c> on</c><00:38:32.640><c> install</c><00:38:33.040><c> docker</c><00:38:33.680><c> link</c><00:38:34.320><c> this</c>

00:38:34.470 --> 00:38:34.480 align:start position:0%
so clicking on install docker link this
 

00:38:34.480 --> 00:38:37.430 align:start position:0%
so clicking on install docker link this
will<00:38:34.640><c> take</c><00:38:34.880><c> me</c><00:38:35.040><c> to</c><00:38:35.280><c> docker</c><00:38:35.599><c> hub</c><00:38:36.160><c> where</c><00:38:36.400><c> i</c><00:38:36.640><c> have</c>

00:38:37.430 --> 00:38:37.440 align:start position:0%
will take me to docker hub where i have
 

00:38:37.440 --> 00:38:40.790 align:start position:0%
will take me to docker hub where i have
docker<00:38:38.160><c> desktop</c><00:38:39.200><c> installation</c><00:38:39.920><c> for</c><00:38:40.160><c> windows</c>

00:38:40.790 --> 00:38:40.800 align:start position:0%
docker desktop installation for windows
 

00:38:40.800 --> 00:38:42.790 align:start position:0%
docker desktop installation for windows
and<00:38:40.960><c> mac</c>

00:38:42.790 --> 00:38:42.800 align:start position:0%
and mac
 

00:38:42.800 --> 00:38:44.790 align:start position:0%
and mac
so<00:38:42.960><c> i'm</c><00:38:43.040><c> simply</c><00:38:43.359><c> going</c><00:38:43.440><c> to</c><00:38:43.599><c> click</c><00:38:43.920><c> in</c>

00:38:44.790 --> 00:38:44.800 align:start position:0%
so i'm simply going to click in
 

00:38:44.800 --> 00:38:47.349 align:start position:0%
so i'm simply going to click in
in<00:38:44.960><c> my</c><00:38:45.200><c> case</c><00:38:45.599><c> docker</c><00:38:45.920><c> desktop</c><00:38:46.400><c> for</c><00:38:46.560><c> mac</c><00:38:47.119><c> and</c>

00:38:47.349 --> 00:38:47.359 align:start position:0%
in my case docker desktop for mac and
 

00:38:47.359 --> 00:38:50.230 align:start position:0%
in my case docker desktop for mac and
i'm<00:38:47.520><c> gonna</c><00:38:48.000><c> download</c><00:38:48.560><c> and</c><00:38:48.720><c> install</c><00:38:49.359><c> docker</c>

00:38:50.230 --> 00:38:50.240 align:start position:0%
i'm gonna download and install docker
 

00:38:50.240 --> 00:38:55.510 align:start position:0%
i'm gonna download and install docker
and<00:38:50.480><c> once</c><00:38:50.800><c> downloaded</c><00:38:51.839><c> just</c><00:38:52.160><c> install</c><00:38:52.640><c> it</c>

00:38:55.510 --> 00:38:55.520 align:start position:0%
 
 

00:38:55.520 --> 00:38:57.510 align:start position:0%
 
drag<00:38:55.839><c> and</c><00:38:55.920><c> drop</c><00:38:56.240><c> into</c><00:38:56.480><c> the</c><00:38:56.640><c> applications</c>

00:38:57.510 --> 00:38:57.520 align:start position:0%
drag and drop into the applications
 

00:38:57.520 --> 00:38:59.430 align:start position:0%
drag and drop into the applications
folder

00:38:59.430 --> 00:38:59.440 align:start position:0%
folder
 

00:38:59.440 --> 00:39:01.510 align:start position:0%
folder
and<00:38:59.599><c> now</c><00:38:59.760><c> we</c><00:38:59.920><c> can</c><00:39:00.160><c> start</c><00:39:00.640><c> the</c><00:39:00.800><c> docker</c><00:39:01.200><c> daemon</c>

00:39:01.510 --> 00:39:01.520 align:start position:0%
and now we can start the docker daemon
 

00:39:01.520 --> 00:39:04.870 align:start position:0%
and now we can start the docker daemon
from<00:39:01.680><c> the</c><00:39:01.760><c> applications</c>

00:39:04.870 --> 00:39:04.880 align:start position:0%
 
 

00:39:04.880 --> 00:39:07.670 align:start position:0%
 
and<00:39:05.119><c> as</c><00:39:05.280><c> you</c><00:39:05.359><c> see</c><00:39:05.680><c> docker</c><00:39:06.160><c> is</c><00:39:06.560><c> starting</c><00:39:07.040><c> up</c><00:39:07.520><c> so</c>

00:39:07.670 --> 00:39:07.680 align:start position:0%
and as you see docker is starting up so
 

00:39:07.680 --> 00:39:09.510 align:start position:0%
and as you see docker is starting up so
the<00:39:07.760><c> download</c><00:39:08.240><c> and</c><00:39:08.400><c> installation</c><00:39:09.040><c> may</c><00:39:09.280><c> take</c>

00:39:09.510 --> 00:39:09.520 align:start position:0%
the download and installation may take
 

00:39:09.520 --> 00:39:12.230 align:start position:0%
the download and installation may take
some<00:39:09.760><c> time</c><00:39:10.400><c> but</c><00:39:10.640><c> once</c><00:39:10.960><c> docker</c><00:39:11.520><c> is</c><00:39:11.680><c> installed</c>

00:39:12.230 --> 00:39:12.240 align:start position:0%
some time but once docker is installed
 

00:39:12.240 --> 00:39:14.790 align:start position:0%
some time but once docker is installed
and<00:39:12.480><c> running</c><00:39:13.200><c> we</c><00:39:13.359><c> can</c><00:39:13.520><c> switch</c><00:39:14.240><c> back</c><00:39:14.400><c> to</c><00:39:14.560><c> the</c>

00:39:14.790 --> 00:39:14.800 align:start position:0%
and running we can switch back to the
 

00:39:14.800 --> 00:39:17.430 align:start position:0%
and running we can switch back to the
terminal<00:39:15.599><c> and</c><00:39:15.839><c> start</c><00:39:16.160><c> the</c><00:39:16.320><c> mini</c><00:39:16.560><c> cube</c><00:39:16.800><c> cluster</c>

00:39:17.430 --> 00:39:17.440 align:start position:0%
terminal and start the mini cube cluster
 

00:39:17.440 --> 00:39:19.430 align:start position:0%
terminal and start the mini cube cluster
using<00:39:18.160><c> mini</c><00:39:18.480><c> cube</c>

00:39:19.430 --> 00:39:19.440 align:start position:0%
using mini cube
 

00:39:19.440 --> 00:39:23.030 align:start position:0%
using mini cube
start<00:39:19.839><c> command</c><00:39:20.720><c> passing</c><00:39:21.280><c> docker</c><00:39:22.000><c> as</c><00:39:22.320><c> a</c><00:39:22.560><c> driver</c>

00:39:23.030 --> 00:39:23.040 align:start position:0%
start command passing docker as a driver
 

00:39:23.040 --> 00:39:23.910 align:start position:0%
start command passing docker as a driver
option

00:39:23.910 --> 00:39:23.920 align:start position:0%
option
 

00:39:23.920 --> 00:39:27.430 align:start position:0%
option
using<00:39:24.400><c> the</c><00:39:24.640><c> driver</c><00:39:25.119><c> flag</c><00:39:25.839><c> with</c><00:39:26.400><c> docker</c><00:39:26.800><c> value</c>

00:39:27.430 --> 00:39:27.440 align:start position:0%
using the driver flag with docker value
 

00:39:27.440 --> 00:39:29.910 align:start position:0%
using the driver flag with docker value
and<00:39:27.680><c> let's</c><00:39:28.079><c> execute</c>

00:39:29.910 --> 00:39:29.920 align:start position:0%
and let's execute
 

00:39:29.920 --> 00:39:31.990 align:start position:0%
and let's execute
and<00:39:30.000><c> this</c><00:39:30.240><c> may</c><00:39:30.480><c> also</c><00:39:30.720><c> take</c><00:39:30.960><c> a</c><00:39:31.119><c> while</c><00:39:31.839><c> when</c>

00:39:31.990 --> 00:39:32.000 align:start position:0%
and this may also take a while when
 

00:39:32.000 --> 00:39:33.990 align:start position:0%
and this may also take a while when
you're<00:39:32.240><c> running</c><00:39:32.640><c> it</c><00:39:32.960><c> first</c><00:39:33.280><c> time</c><00:39:33.599><c> because</c><00:39:33.920><c> it</c>

00:39:33.990 --> 00:39:34.000 align:start position:0%
you're running it first time because it
 

00:39:34.000 --> 00:39:35.990 align:start position:0%
you're running it first time because it
needs<00:39:34.240><c> to</c><00:39:34.400><c> actually</c><00:39:34.640><c> create</c><00:39:34.880><c> the</c><00:39:35.040><c> cluster</c><00:39:35.839><c> and</c>

00:39:35.990 --> 00:39:36.000 align:start position:0%
needs to actually create the cluster and
 

00:39:36.000 --> 00:39:38.390 align:start position:0%
needs to actually create the cluster and
download<00:39:36.560><c> all</c><00:39:36.640><c> the</c><00:39:36.800><c> necessary</c><00:39:37.440><c> images</c><00:39:38.160><c> and</c>

00:39:38.390 --> 00:39:38.400 align:start position:0%
download all the necessary images and
 

00:39:38.400 --> 00:39:40.630 align:start position:0%
download all the necessary images and
components<00:39:39.359><c> so</c><00:39:39.520><c> the</c><00:39:39.680><c> next</c><00:39:39.839><c> time</c><00:39:40.079><c> you</c><00:39:40.240><c> do</c><00:39:40.400><c> mini</c>

00:39:40.630 --> 00:39:40.640 align:start position:0%
components so the next time you do mini
 

00:39:40.640 --> 00:39:43.270 align:start position:0%
components so the next time you do mini
cube<00:39:40.880><c> start</c><00:39:41.520><c> it</c><00:39:41.680><c> should</c><00:39:41.920><c> actually</c><00:39:42.240><c> go</c><00:39:42.480><c> faster</c>

00:39:43.270 --> 00:39:43.280 align:start position:0%
cube start it should actually go faster
 

00:39:43.280 --> 00:39:45.750 align:start position:0%
cube start it should actually go faster
and<00:39:43.520><c> as</c><00:39:43.680><c> you</c><00:39:43.839><c> see</c><00:39:44.400><c> this</c><00:39:44.640><c> command</c><00:39:45.040><c> created</c><00:39:45.599><c> a</c>

00:39:45.750 --> 00:39:45.760 align:start position:0%
and as you see this command created a
 

00:39:45.760 --> 00:39:49.109 align:start position:0%
and as you see this command created a
local<00:39:46.240><c> kubernetes</c><00:39:46.880><c> cluster</c><00:39:47.839><c> on</c><00:39:48.079><c> our</c><00:39:48.400><c> machine</c>

00:39:49.109 --> 00:39:49.119 align:start position:0%
local kubernetes cluster on our machine
 

00:39:49.119 --> 00:39:51.550 align:start position:0%
local kubernetes cluster on our machine
with<00:39:49.359><c> the</c><00:39:49.440><c> latest</c><00:39:49.839><c> kubernetes</c><00:39:50.400><c> version</c>

00:39:51.550 --> 00:39:51.560 align:start position:0%
with the latest kubernetes version
 

00:39:51.560 --> 00:39:54.630 align:start position:0%
with the latest kubernetes version
1.22<00:39:52.880><c> and</c><00:39:52.960><c> now</c><00:39:53.119><c> we</c><00:39:53.280><c> can</c><00:39:53.440><c> check</c><00:39:53.680><c> the</c><00:39:53.839><c> status</c><00:39:54.480><c> of</c>

00:39:54.630 --> 00:39:54.640 align:start position:0%
1.22 and now we can check the status of
 

00:39:54.640 --> 00:39:57.270 align:start position:0%
1.22 and now we can check the status of
the<00:39:54.800><c> cluster</c><00:39:55.440><c> using</c><00:39:56.000><c> minicube</c>

00:39:57.270 --> 00:39:57.280 align:start position:0%
the cluster using minicube
 

00:39:57.280 --> 00:39:58.790 align:start position:0%
the cluster using minicube
status<00:39:57.760><c> command</c>

00:39:58.790 --> 00:39:58.800 align:start position:0%
status command
 

00:39:58.800 --> 00:40:00.390 align:start position:0%
status command
and<00:39:58.960><c> we</c><00:39:59.119><c> see</c><00:39:59.280><c> that</c><00:39:59.520><c> all</c><00:39:59.680><c> the</c><00:39:59.760><c> components</c>

00:40:00.390 --> 00:40:00.400 align:start position:0%
and we see that all the components
 

00:40:00.400 --> 00:40:02.870 align:start position:0%
and we see that all the components
inside<00:40:00.800><c> are</c><00:40:00.960><c> running</c><00:40:01.839><c> and</c><00:40:02.079><c> everything</c><00:40:02.480><c> is</c>

00:40:02.870 --> 00:40:02.880 align:start position:0%
inside are running and everything is
 

00:40:02.880 --> 00:40:06.150 align:start position:0%
inside are running and everything is
configured<00:40:04.000><c> and</c><00:40:04.160><c> now</c><00:40:04.400><c> start</c><00:40:04.960><c> to</c><00:40:05.200><c> actually</c>

00:40:06.150 --> 00:40:06.160 align:start position:0%
configured and now start to actually
 

00:40:06.160 --> 00:40:09.670 align:start position:0%
configured and now start to actually
interact<00:40:06.800><c> with</c><00:40:07.119><c> our</c><00:40:07.359><c> cluster</c><00:40:08.160><c> using</c>

00:40:09.670 --> 00:40:09.680 align:start position:0%
interact with our cluster using
 

00:40:09.680 --> 00:40:12.390 align:start position:0%
interact with our cluster using
command<00:40:10.079><c> line</c><00:40:10.319><c> tool</c><00:40:10.960><c> and</c><00:40:11.200><c> cubectl</c><00:40:12.079><c> actually</c>

00:40:12.390 --> 00:40:12.400 align:start position:0%
command line tool and cubectl actually
 

00:40:12.400 --> 00:40:15.670 align:start position:0%
command line tool and cubectl actually
gets<00:40:12.960><c> installed</c><00:40:13.599><c> as</c><00:40:13.760><c> a</c><00:40:13.920><c> dependency</c><00:40:15.119><c> when</c><00:40:15.359><c> we</c>

00:40:15.670 --> 00:40:15.680 align:start position:0%
gets installed as a dependency when we
 

00:40:15.680 --> 00:40:18.870 align:start position:0%
gets installed as a dependency when we
install<00:40:16.319><c> minicube</c>

00:40:18.870 --> 00:40:18.880 align:start position:0%
install minicube
 

00:40:18.880 --> 00:40:20.710 align:start position:0%
install minicube
which<00:40:19.119><c> you</c><00:40:19.280><c> see</c><00:40:19.680><c> right</c><00:40:20.000><c> here</c><00:40:20.319><c> installing</c>

00:40:20.710 --> 00:40:20.720 align:start position:0%
which you see right here installing
 

00:40:20.720 --> 00:40:23.430 align:start position:0%
which you see right here installing
dependencies<00:40:21.359><c> for</c><00:40:21.520><c> minicube</c><00:40:22.319><c> and</c><00:40:22.560><c> kubernetes</c>

00:40:23.430 --> 00:40:23.440 align:start position:0%
dependencies for minicube and kubernetes
 

00:40:23.440 --> 00:40:26.630 align:start position:0%
dependencies for minicube and kubernetes
cli<00:40:24.160><c> is</c><00:40:24.560><c> actually</c><00:40:25.119><c> cube</c><00:40:25.359><c> ctl</c>

00:40:26.630 --> 00:40:26.640 align:start position:0%
cli is actually cube ctl
 

00:40:26.640 --> 00:40:28.790 align:start position:0%
cli is actually cube ctl
and<00:40:26.800><c> that</c><00:40:27.040><c> means</c><00:40:27.359><c> we</c><00:40:27.599><c> already</c><00:40:28.079><c> have</c><00:40:28.319><c> that</c>

00:40:28.790 --> 00:40:28.800 align:start position:0%
and that means we already have that
 

00:40:28.800 --> 00:40:31.190 align:start position:0%
and that means we already have that
available<00:40:29.520><c> we</c><00:40:29.680><c> don't</c><00:40:29.839><c> have</c><00:40:30.000><c> to</c><00:40:30.240><c> install</c><00:40:30.640><c> it</c><00:40:30.960><c> so</c>

00:40:31.190 --> 00:40:31.200 align:start position:0%
available we don't have to install it so
 

00:40:31.200 --> 00:40:35.349 align:start position:0%
available we don't have to install it so
now<00:40:31.440><c> i</c><00:40:31.520><c> can</c><00:40:31.680><c> do</c><00:40:31.920><c> cube</c><00:40:32.160><c> ctl</c><00:40:32.720><c> get</c><00:40:33.200><c> node</c>

00:40:35.349 --> 00:40:35.359 align:start position:0%
now i can do cube ctl get node
 

00:40:35.359 --> 00:40:37.190 align:start position:0%
now i can do cube ctl get node
and<00:40:35.520><c> this</c><00:40:35.680><c> will</c><00:40:35.920><c> display</c><00:40:36.480><c> all</c><00:40:36.640><c> the</c><00:40:36.800><c> nodes</c><00:40:37.119><c> in</c>

00:40:37.190 --> 00:40:37.200 align:start position:0%
and this will display all the nodes in
 

00:40:37.200 --> 00:40:39.430 align:start position:0%
and this will display all the nodes in
the<00:40:37.359><c> cluster</c><00:40:38.079><c> in</c><00:40:38.240><c> our</c><00:40:38.400><c> case</c><00:40:38.640><c> we</c><00:40:38.800><c> just</c><00:40:38.960><c> have</c><00:40:39.200><c> one</c>

00:40:39.430 --> 00:40:39.440 align:start position:0%
the cluster in our case we just have one
 

00:40:39.440 --> 00:40:41.750 align:start position:0%
the cluster in our case we just have one
node<00:40:39.920><c> which</c><00:40:40.160><c> is</c><00:40:40.480><c> control</c><00:40:40.880><c> plane</c><00:40:41.440><c> and</c><00:40:41.599><c> the</c>

00:40:41.750 --> 00:40:41.760 align:start position:0%
node which is control plane and the
 

00:40:41.760 --> 00:40:43.750 align:start position:0%
node which is control plane and the
worker<00:40:42.160><c> node</c><00:40:42.400><c> at</c><00:40:42.560><c> the</c><00:40:42.640><c> same</c><00:40:42.880><c> time</c>

00:40:43.750 --> 00:40:43.760 align:start position:0%
worker node at the same time
 

00:40:43.760 --> 00:40:46.630 align:start position:0%
worker node at the same time
and<00:40:43.920><c> we</c><00:40:44.079><c> see</c><00:40:44.800><c> information</c><00:40:45.599><c> for</c><00:40:45.839><c> each</c><00:40:46.160><c> node</c>

00:40:46.630 --> 00:40:46.640 align:start position:0%
and we see information for each node
 

00:40:46.640 --> 00:40:49.190 align:start position:0%
and we see information for each node
like<00:40:46.880><c> the</c><00:40:47.040><c> status</c><00:40:47.839><c> the</c><00:40:48.000><c> kubernetes</c><00:40:48.560><c> version</c>

00:40:49.190 --> 00:40:49.200 align:start position:0%
like the status the kubernetes version
 

00:40:49.200 --> 00:40:51.750 align:start position:0%
like the status the kubernetes version
that<00:40:49.359><c> it's</c><00:40:49.599><c> running</c><00:40:50.079><c> as</c><00:40:50.240><c> well</c><00:40:50.480><c> as</c><00:40:50.800><c> when</c><00:40:51.040><c> it</c><00:40:51.280><c> was</c>

00:40:51.750 --> 00:40:51.760 align:start position:0%
that it's running as well as when it was
 

00:40:51.760 --> 00:40:53.990 align:start position:0%
that it's running as well as when it was
added<00:40:52.160><c> to</c><00:40:52.319><c> the</c><00:40:52.480><c> cluster</c><00:40:53.119><c> so</c><00:40:53.280><c> with</c><00:40:53.440><c> this</c><00:40:53.599><c> we</c><00:40:53.760><c> now</c>

00:40:53.990 --> 00:40:54.000 align:start position:0%
added to the cluster so with this we now
 

00:40:54.000 --> 00:40:56.470 align:start position:0%
added to the cluster so with this we now
have<00:40:54.240><c> an</c><00:40:54.480><c> actual</c><00:40:54.800><c> kubernetes</c><00:40:55.520><c> cluster</c>

00:40:56.470 --> 00:40:56.480 align:start position:0%
have an actual kubernetes cluster
 

00:40:56.480 --> 00:40:59.349 align:start position:0%
have an actual kubernetes cluster
running<00:40:57.119><c> locally</c><00:40:57.760><c> on</c><00:40:58.000><c> our</c><00:40:58.240><c> machine</c><00:40:59.040><c> and</c><00:40:59.200><c> we</c>

00:40:59.349 --> 00:40:59.359 align:start position:0%
running locally on our machine and we
 

00:40:59.359 --> 00:41:01.750 align:start position:0%
running locally on our machine and we
can<00:40:59.520><c> start</c><00:40:59.760><c> deploying</c><00:41:00.319><c> applications</c><00:41:01.200><c> in</c><00:41:01.359><c> it</c>

00:41:01.750 --> 00:41:01.760 align:start position:0%
can start deploying applications in it
 

00:41:01.760 --> 00:41:03.829 align:start position:0%
can start deploying applications in it
so<00:41:02.000><c> from</c><00:41:02.160><c> this</c><00:41:02.400><c> point</c><00:41:02.800><c> on</c><00:41:03.200><c> we</c><00:41:03.359><c> are</c><00:41:03.440><c> going</c><00:41:03.599><c> to</c><00:41:03.680><c> be</c>

00:41:03.829 --> 00:41:03.839 align:start position:0%
so from this point on we are going to be
 

00:41:03.839 --> 00:41:05.750 align:start position:0%
so from this point on we are going to be
interacting<00:41:04.400><c> with</c><00:41:04.560><c> the</c><00:41:04.720><c> mini</c><00:41:04.960><c> cube</c><00:41:05.200><c> cluster</c>

00:41:05.750 --> 00:41:05.760 align:start position:0%
interacting with the mini cube cluster
 

00:41:05.760 --> 00:41:08.390 align:start position:0%
interacting with the mini cube cluster
using<00:41:06.160><c> cubectl</c><00:41:07.040><c> command</c><00:41:07.440><c> line</c><00:41:07.680><c> tool</c><00:41:08.160><c> so</c>

00:41:08.390 --> 00:41:08.400 align:start position:0%
using cubectl command line tool so
 

00:41:08.400 --> 00:41:09.990 align:start position:0%
using cubectl command line tool so
minicube<00:41:08.960><c> is</c><00:41:09.040><c> basically</c><00:41:09.520><c> just</c><00:41:09.680><c> for</c><00:41:09.839><c> the</c>

00:41:09.990 --> 00:41:10.000 align:start position:0%
minicube is basically just for the
 

00:41:10.000 --> 00:41:13.109 align:start position:0%
minicube is basically just for the
startup<00:41:10.720><c> and</c><00:41:11.040><c> for</c><00:41:11.440><c> deleting</c><00:41:11.920><c> the</c><00:41:12.079><c> cluster</c><00:41:12.880><c> but</c>

00:41:13.109 --> 00:41:13.119 align:start position:0%
startup and for deleting the cluster but
 

00:41:13.119 --> 00:41:15.430 align:start position:0%
startup and for deleting the cluster but
everything<00:41:13.520><c> else</c><00:41:14.000><c> configuring</c><00:41:15.119><c> we're</c><00:41:15.359><c> going</c>

00:41:15.430 --> 00:41:15.440 align:start position:0%
everything else configuring we're going
 

00:41:15.440 --> 00:41:18.069 align:start position:0%
everything else configuring we're going
to<00:41:15.520><c> be</c><00:41:15.680><c> doing</c><00:41:16.000><c> through</c><00:41:16.400><c> cubectl</c><00:41:17.440><c> now</c><00:41:17.599><c> we</c><00:41:17.760><c> have</c>

00:41:18.069 --> 00:41:18.079 align:start position:0%
to be doing through cubectl now we have
 

00:41:18.079 --> 00:41:20.790 align:start position:0%
to be doing through cubectl now we have
enough<00:41:18.560><c> knowledge</c><00:41:19.040><c> to</c><00:41:19.280><c> deploy</c><00:41:19.760><c> a</c><00:41:20.000><c> very</c><00:41:20.400><c> simple</c>

00:41:20.790 --> 00:41:20.800 align:start position:0%
enough knowledge to deploy a very simple
 

00:41:20.800 --> 00:41:23.510 align:start position:0%
enough knowledge to deploy a very simple
but<00:41:21.200><c> realistic</c><00:41:21.839><c> application</c><00:41:22.640><c> setup</c><00:41:23.280><c> in</c><00:41:23.440><c> a</c>

00:41:23.510 --> 00:41:23.520 align:start position:0%
but realistic application setup in a
 

00:41:23.520 --> 00:41:25.750 align:start position:0%
but realistic application setup in a
kubernetes<00:41:24.160><c> cluster</c><00:41:24.800><c> we</c><00:41:24.960><c> will</c><00:41:25.119><c> deploy</c><00:41:25.599><c> a</c>

00:41:25.750 --> 00:41:25.760 align:start position:0%
kubernetes cluster we will deploy a
 

00:41:25.760 --> 00:41:29.670 align:start position:0%
kubernetes cluster we will deploy a
mongodb<00:41:26.720><c> database</c><00:41:27.839><c> and</c><00:41:28.160><c> a</c><00:41:28.319><c> web</c><00:41:28.560><c> application</c>

00:41:29.670 --> 00:41:29.680 align:start position:0%
mongodb database and a web application
 

00:41:29.680 --> 00:41:32.150 align:start position:0%
mongodb database and a web application
which<00:41:29.920><c> will</c><00:41:30.160><c> connect</c><00:41:30.720><c> to</c><00:41:30.880><c> the</c><00:41:31.200><c> mongodb</c>

00:41:32.150 --> 00:41:32.160 align:start position:0%
which will connect to the mongodb
 

00:41:32.160 --> 00:41:35.349 align:start position:0%
which will connect to the mongodb
database<00:41:33.200><c> using</c><00:41:33.760><c> external</c><00:41:34.480><c> configuration</c>

00:41:35.349 --> 00:41:35.359 align:start position:0%
database using external configuration
 

00:41:35.359 --> 00:41:38.550 align:start position:0%
database using external configuration
data<00:41:36.079><c> from</c><00:41:36.400><c> config</c><00:41:36.880><c> map</c><00:41:37.280><c> and</c><00:41:37.440><c> the</c><00:41:37.599><c> secret</c><00:41:38.319><c> and</c>

00:41:38.550 --> 00:41:38.560 align:start position:0%
data from config map and the secret and
 

00:41:38.560 --> 00:41:42.150 align:start position:0%
data from config map and the secret and
finally<00:41:39.280><c> we</c><00:41:39.440><c> will</c><00:41:39.599><c> make</c><00:41:40.000><c> our</c><00:41:40.560><c> web</c><00:41:40.800><c> application</c>

00:41:42.150 --> 00:41:42.160 align:start position:0%
finally we will make our web application
 

00:41:42.160 --> 00:41:45.430 align:start position:0%
finally we will make our web application
accessible<00:41:42.960><c> externally</c><00:41:44.000><c> from</c><00:41:44.240><c> the</c><00:41:44.400><c> browser</c>

00:41:45.430 --> 00:41:45.440 align:start position:0%
accessible externally from the browser
 

00:41:45.440 --> 00:41:47.670 align:start position:0%
accessible externally from the browser
so<00:41:45.680><c> let's</c><00:41:46.000><c> get</c><00:41:46.319><c> right</c><00:41:46.560><c> in</c><00:41:47.119><c> so</c><00:41:47.280><c> i</c><00:41:47.359><c> have</c><00:41:47.520><c> two</c>

00:41:47.670 --> 00:41:47.680 align:start position:0%
so let's get right in so i have two
 

00:41:47.680 --> 00:41:49.349 align:start position:0%
so let's get right in so i have two
resources<00:41:48.240><c> here</c><00:41:48.480><c> we're</c><00:41:48.640><c> going</c><00:41:48.800><c> to</c><00:41:48.880><c> reference</c>

00:41:49.349 --> 00:41:49.359 align:start position:0%
resources here we're going to reference
 

00:41:49.359 --> 00:41:51.349 align:start position:0%
resources here we're going to reference
the<00:41:49.440><c> kubernetes</c><00:41:49.920><c> documentation</c><00:41:50.880><c> to</c><00:41:51.040><c> create</c>

00:41:51.349 --> 00:41:51.359 align:start position:0%
the kubernetes documentation to create
 

00:41:51.359 --> 00:41:53.349 align:start position:0%
the kubernetes documentation to create
our<00:41:51.440><c> components</c><00:41:52.000><c> which</c><00:41:52.160><c> is</c><00:41:52.400><c> a</c><00:41:52.480><c> realistic</c><00:41:53.119><c> way</c>

00:41:53.349 --> 00:41:53.359 align:start position:0%
our components which is a realistic way
 

00:41:53.359 --> 00:41:55.990 align:start position:0%
our components which is a realistic way
of<00:41:53.520><c> working</c><00:41:53.839><c> with</c><00:41:54.000><c> kubernetes</c><00:41:55.040><c> and</c><00:41:55.359><c> also</c><00:41:55.839><c> a</c>

00:41:55.990 --> 00:41:56.000 align:start position:0%
of working with kubernetes and also a
 

00:41:56.000 --> 00:41:58.069 align:start position:0%
of working with kubernetes and also a
docker<00:41:56.319><c> hub</c><00:41:56.640><c> where</c><00:41:56.960><c> i</c><00:41:57.200><c> have</c>

00:41:58.069 --> 00:41:58.079 align:start position:0%
docker hub where i have
 

00:41:58.079 --> 00:42:00.710 align:start position:0%
docker hub where i have
the<00:41:58.400><c> web</c><00:41:58.640><c> application</c><00:41:59.440><c> image</c><00:41:59.760><c> that</c><00:41:59.920><c> i</c><00:42:00.079><c> created</c>

00:42:00.710 --> 00:42:00.720 align:start position:0%
the web application image that i created
 

00:42:00.720 --> 00:42:02.950 align:start position:0%
the web application image that i created
which<00:42:00.960><c> is</c><00:42:01.200><c> publicly</c><00:42:01.839><c> accessible</c><00:42:02.400><c> so</c><00:42:02.560><c> you</c><00:42:02.720><c> can</c>

00:42:02.950 --> 00:42:02.960 align:start position:0%
which is publicly accessible so you can
 

00:42:02.960 --> 00:42:05.270 align:start position:0%
which is publicly accessible so you can
also<00:42:03.359><c> pull</c><00:42:03.599><c> it</c><00:42:04.079><c> directly</c><00:42:04.640><c> from</c><00:42:04.800><c> the</c><00:42:04.960><c> docker</c>

00:42:05.270 --> 00:42:05.280 align:start position:0%
also pull it directly from the docker
 

00:42:05.280 --> 00:42:08.390 align:start position:0%
also pull it directly from the docker
hub<00:42:05.680><c> in</c><00:42:05.839><c> your</c><00:42:06.240><c> kubernetes</c><00:42:06.880><c> cluster</c><00:42:07.680><c> so</c><00:42:08.000><c> first</c>

00:42:08.390 --> 00:42:08.400 align:start position:0%
hub in your kubernetes cluster so first
 

00:42:08.400 --> 00:42:10.710 align:start position:0%
hub in your kubernetes cluster so first
let's<00:42:08.640><c> go</c><00:42:08.800><c> ahead</c><00:42:09.200><c> and</c><00:42:09.520><c> create</c>

00:42:10.710 --> 00:42:10.720 align:start position:0%
let's go ahead and create
 

00:42:10.720 --> 00:42:13.589 align:start position:0%
let's go ahead and create
all<00:42:10.880><c> the</c><00:42:11.359><c> kubernetes</c><00:42:12.079><c> configuration</c><00:42:12.880><c> files</c>

00:42:13.589 --> 00:42:13.599 align:start position:0%
all the kubernetes configuration files
 

00:42:13.599 --> 00:42:16.390 align:start position:0%
all the kubernetes configuration files
that<00:42:13.920><c> we</c><00:42:14.079><c> need</c><00:42:14.720><c> for</c><00:42:15.359><c> deploying</c><00:42:16.079><c> our</c>

00:42:16.390 --> 00:42:16.400 align:start position:0%
that we need for deploying our
 

00:42:16.400 --> 00:42:18.870 align:start position:0%
that we need for deploying our
application<00:42:17.280><c> setup</c><00:42:17.839><c> and</c><00:42:18.000><c> for</c><00:42:18.160><c> that</c><00:42:18.560><c> i'm</c><00:42:18.720><c> going</c>

00:42:18.870 --> 00:42:18.880 align:start position:0%
application setup and for that i'm going
 

00:42:18.880 --> 00:42:21.829 align:start position:0%
application setup and for that i'm going
to<00:42:18.960><c> go</c><00:42:19.200><c> to</c><00:42:19.520><c> visual</c><00:42:19.920><c> studio</c><00:42:20.400><c> code</c><00:42:21.119><c> where</c><00:42:21.280><c> i</c><00:42:21.440><c> have</c>

00:42:21.829 --> 00:42:21.839 align:start position:0%
to go to visual studio code where i have
 

00:42:21.839 --> 00:42:24.710 align:start position:0%
to go to visual studio code where i have
a<00:42:21.920><c> kubernetes</c><00:42:22.560><c> demo</c><00:42:23.040><c> folder</c><00:42:23.599><c> open</c><00:42:24.319><c> and</c><00:42:24.560><c> in</c>

00:42:24.710 --> 00:42:24.720 align:start position:0%
a kubernetes demo folder open and in
 

00:42:24.720 --> 00:42:26.950 align:start position:0%
a kubernetes demo folder open and in
this<00:42:24.880><c> folder</c><00:42:25.280><c> we're</c><00:42:25.440><c> going</c><00:42:25.599><c> to</c><00:42:25.680><c> create</c><00:42:26.319><c> four</c>

00:42:26.950 --> 00:42:26.960 align:start position:0%
this folder we're going to create four
 

00:42:26.960 --> 00:42:28.630 align:start position:0%
this folder we're going to create four
kubernetes<00:42:27.440><c> configuration</c><00:42:28.079><c> files</c><00:42:28.400><c> that</c><00:42:28.560><c> we</c>

00:42:28.630 --> 00:42:28.640 align:start position:0%
kubernetes configuration files that we
 

00:42:28.640 --> 00:42:31.030 align:start position:0%
kubernetes configuration files that we
need<00:42:29.119><c> we're</c><00:42:29.280><c> going</c><00:42:29.359><c> to</c><00:42:29.520><c> create</c><00:42:29.760><c> a</c><00:42:29.920><c> config</c><00:42:30.400><c> map</c>

00:42:31.030 --> 00:42:31.040 align:start position:0%
need we're going to create a config map
 

00:42:31.040 --> 00:42:32.950 align:start position:0%
need we're going to create a config map
with<00:42:31.760><c> mongodb</c>

00:42:32.950 --> 00:42:32.960 align:start position:0%
with mongodb
 

00:42:32.960 --> 00:42:35.750 align:start position:0%
with mongodb
database<00:42:33.760><c> endpoint</c><00:42:34.880><c> we're</c><00:42:35.119><c> going</c><00:42:35.280><c> to</c><00:42:35.359><c> create</c>

00:42:35.750 --> 00:42:35.760 align:start position:0%
database endpoint we're going to create
 

00:42:35.760 --> 00:42:38.230 align:start position:0%
database endpoint we're going to create
a<00:42:35.920><c> secret</c><00:42:36.400><c> with</c><00:42:36.640><c> username</c><00:42:37.280><c> and</c><00:42:37.520><c> password</c><00:42:38.000><c> for</c>

00:42:38.230 --> 00:42:38.240 align:start position:0%
a secret with username and password for
 

00:42:38.240 --> 00:42:41.030 align:start position:0%
a secret with username and password for
mongodb<00:42:39.280><c> and</c><00:42:39.440><c> then</c><00:42:39.599><c> we're</c><00:42:39.839><c> going</c><00:42:39.920><c> to</c><00:42:40.480><c> create</c><00:42:40.960><c> a</c>

00:42:41.030 --> 00:42:41.040 align:start position:0%
mongodb and then we're going to create a
 

00:42:41.040 --> 00:42:42.710 align:start position:0%
mongodb and then we're going to create a
configuration<00:42:41.839><c> file</c><00:42:42.079><c> for</c><00:42:42.240><c> deploying</c><00:42:42.640><c> a</c>

00:42:42.710 --> 00:42:42.720 align:start position:0%
configuration file for deploying a
 

00:42:42.720 --> 00:42:44.390 align:start position:0%
configuration file for deploying a
mongodb<00:42:43.280><c> application</c>

00:42:44.390 --> 00:42:44.400 align:start position:0%
mongodb application
 

00:42:44.400 --> 00:42:46.790 align:start position:0%
mongodb application
and<00:42:44.880><c> its</c><00:42:45.200><c> service</c><00:42:45.920><c> and</c><00:42:46.079><c> then</c><00:42:46.240><c> we're</c><00:42:46.480><c> going</c><00:42:46.560><c> to</c>

00:42:46.790 --> 00:42:46.800 align:start position:0%
and its service and then we're going to
 

00:42:46.800 --> 00:42:49.349 align:start position:0%
and its service and then we're going to
create<00:42:47.359><c> kubernetes</c><00:42:48.000><c> configuration</c><00:42:48.720><c> file</c><00:42:49.119><c> for</c>

00:42:49.349 --> 00:42:49.359 align:start position:0%
create kubernetes configuration file for
 

00:42:49.359 --> 00:42:52.470 align:start position:0%
create kubernetes configuration file for
deploying<00:42:50.400><c> our</c><00:42:50.720><c> simple</c><00:42:51.599><c> demo</c><00:42:52.079><c> app</c>

00:42:52.470 --> 00:42:52.480 align:start position:0%
deploying our simple demo app
 

00:42:52.480 --> 00:42:57.750 align:start position:0%
deploying our simple demo app
application<00:42:53.520><c> with</c><00:42:53.920><c> its</c><00:42:54.400><c> service</c>

00:42:57.750 --> 00:42:57.760 align:start position:0%
 
 

00:42:57.760 --> 00:43:00.309 align:start position:0%
 
so<00:42:58.000><c> the</c><00:42:58.079><c> first</c><00:42:58.480><c> file</c><00:42:58.800><c> will</c><00:42:58.960><c> be</c><00:42:59.119><c> called</c>

00:43:00.309 --> 00:43:00.319 align:start position:0%
so the first file will be called
 

00:43:00.319 --> 00:43:03.030 align:start position:0%
so the first file will be called
config.yml

00:43:03.030 --> 00:43:03.040 align:start position:0%
config.yml
 

00:43:03.040 --> 00:43:05.190 align:start position:0%
config.yml
and<00:43:03.200><c> creating</c><00:43:03.599><c> a</c><00:43:03.760><c> config</c><00:43:04.160><c> map</c><00:43:04.400><c> in</c><00:43:04.480><c> kubernetes</c>

00:43:05.190 --> 00:43:05.200 align:start position:0%
and creating a config map in kubernetes
 

00:43:05.200 --> 00:43:08.790 align:start position:0%
and creating a config map in kubernetes
is<00:43:05.359><c> super</c><00:43:06.000><c> simple</c><00:43:06.800><c> for</c><00:43:06.960><c> the</c><00:43:07.119><c> syntax</c><00:43:07.839><c> we</c><00:43:08.000><c> can</c>

00:43:08.790 --> 00:43:08.800 align:start position:0%
is super simple for the syntax we can
 

00:43:08.800 --> 00:43:13.270 align:start position:0%
is super simple for the syntax we can
reference<00:43:09.599><c> kubernetes</c><00:43:10.160><c> documentation</c>

00:43:13.270 --> 00:43:13.280 align:start position:0%
 
 

00:43:13.280 --> 00:43:16.550 align:start position:0%
 
so<00:43:13.520><c> i'm</c><00:43:13.599><c> going</c><00:43:13.680><c> to</c><00:43:13.760><c> copy</c><00:43:14.160><c> the</c><00:43:14.240><c> first</c><00:43:14.640><c> part</c><00:43:14.960><c> here</c>

00:43:16.550 --> 00:43:16.560 align:start position:0%
so i'm going to copy the first part here
 

00:43:16.560 --> 00:43:17.670 align:start position:0%
so i'm going to copy the first part here
paste<00:43:16.880><c> it</c><00:43:17.040><c> in</c>

00:43:17.670 --> 00:43:17.680 align:start position:0%
paste it in
 

00:43:17.680 --> 00:43:19.589 align:start position:0%
paste it in
and<00:43:17.760><c> that's</c><00:43:18.000><c> basically</c><00:43:18.720><c> the</c><00:43:18.880><c> main</c><00:43:19.119><c> syntax</c>

00:43:19.589 --> 00:43:19.599 align:start position:0%
and that's basically the main syntax
 

00:43:19.599 --> 00:43:21.270 align:start position:0%
and that's basically the main syntax
we're<00:43:19.839><c> starting</c><00:43:20.160><c> from</c>

00:43:21.270 --> 00:43:21.280 align:start position:0%
we're starting from
 

00:43:21.280 --> 00:43:23.430 align:start position:0%
we're starting from
let's<00:43:21.520><c> call</c><00:43:21.920><c> our</c><00:43:22.160><c> config</c><00:43:22.640><c> map</c>

00:43:23.430 --> 00:43:24.710 align:start position:0%
let's call our config map
 

00:43:24.710 --> 00:43:24.720 align:start position:0%
 
 

00:43:24.720 --> 00:43:28.230 align:start position:0%
 
config

00:43:28.230 --> 00:43:28.240 align:start position:0%
 
 

00:43:28.240 --> 00:43:30.230 align:start position:0%
 
so<00:43:28.400><c> we</c><00:43:28.480><c> have</c><00:43:28.640><c> the</c><00:43:28.800><c> metadata</c><00:43:29.520><c> and</c><00:43:29.599><c> then</c><00:43:29.839><c> we</c><00:43:30.000><c> have</c>

00:43:30.230 --> 00:43:30.240 align:start position:0%
so we have the metadata and then we have
 

00:43:30.240 --> 00:43:31.670 align:start position:0%
so we have the metadata and then we have
the<00:43:30.480><c> actual</c>

00:43:31.670 --> 00:43:31.680 align:start position:0%
the actual
 

00:43:31.680 --> 00:43:34.710 align:start position:0%
the actual
contents<00:43:32.800><c> of</c><00:43:32.960><c> this</c><00:43:33.200><c> config</c><00:43:33.680><c> map</c><00:43:34.240><c> within</c><00:43:34.560><c> the</c>

00:43:34.710 --> 00:43:34.720 align:start position:0%
contents of this config map within the
 

00:43:34.720 --> 00:43:37.270 align:start position:0%
contents of this config map within the
data<00:43:35.040><c> attribute</c><00:43:35.680><c> we</c><00:43:35.839><c> have</c><00:43:36.319><c> all</c><00:43:36.480><c> the</c><00:43:36.640><c> key</c><00:43:36.880><c> value</c>

00:43:37.270 --> 00:43:37.280 align:start position:0%
data attribute we have all the key value
 

00:43:37.280 --> 00:43:40.150 align:start position:0%
data attribute we have all the key value
pairs<00:43:38.160><c> that</c><00:43:38.400><c> we</c><00:43:38.880><c> define</c><00:43:39.520><c> as</c><00:43:39.760><c> external</c>

00:43:40.150 --> 00:43:40.160 align:start position:0%
pairs that we define as external
 

00:43:40.160 --> 00:43:42.790 align:start position:0%
pairs that we define as external
configuration<00:43:41.280><c> within</c><00:43:41.680><c> this</c><00:43:41.920><c> config</c><00:43:42.319><c> map</c><00:43:42.640><c> in</c>

00:43:42.790 --> 00:43:42.800 align:start position:0%
configuration within this config map in
 

00:43:42.800 --> 00:43:44.790 align:start position:0%
configuration within this config map in
our<00:43:42.960><c> case</c><00:43:43.200><c> we</c><00:43:43.359><c> just</c><00:43:43.520><c> have</c><00:43:43.760><c> one</c><00:43:44.319><c> which</c><00:43:44.560><c> we're</c>

00:43:44.790 --> 00:43:44.800 align:start position:0%
our case we just have one which we're
 

00:43:44.800 --> 00:43:46.710 align:start position:0%
our case we just have one which we're
going<00:43:44.960><c> to</c><00:43:45.119><c> call</c>

00:43:46.710 --> 00:43:46.720 align:start position:0%
going to call
 

00:43:46.720 --> 00:43:49.750 align:start position:0%
going to call
url<00:43:47.520><c> as</c><00:43:47.839><c> a</c><00:43:48.000><c> key</c><00:43:48.640><c> and</c><00:43:48.880><c> of</c><00:43:48.960><c> course</c><00:43:49.200><c> we</c><00:43:49.359><c> need</c><00:43:49.599><c> a</c>

00:43:49.750 --> 00:43:49.760 align:start position:0%
url as a key and of course we need a
 

00:43:49.760 --> 00:43:53.430 align:start position:0%
url as a key and of course we need a
value<00:43:50.079><c> for</c><00:43:50.319><c> the</c><00:43:50.400><c> mongodb</c><00:43:50.960><c> url</c><00:43:51.760><c> and</c><00:43:52.400><c> the</c><00:43:52.640><c> value</c>

00:43:53.430 --> 00:43:53.440 align:start position:0%
value for the mongodb url and the value
 

00:43:53.440 --> 00:43:56.069 align:start position:0%
value for the mongodb url and the value
will<00:43:53.599><c> be</c><00:43:54.160><c> the</c><00:43:54.400><c> service</c><00:43:55.359><c> that</c><00:43:55.599><c> we're</c><00:43:55.839><c> going</c><00:43:55.920><c> to</c>

00:43:56.069 --> 00:43:56.079 align:start position:0%
will be the service that we're going to
 

00:43:56.079 --> 00:43:59.190 align:start position:0%
will be the service that we're going to
create<00:43:56.480><c> for</c><00:43:56.960><c> mongodb</c><00:43:58.000><c> application</c><00:43:58.800><c> and</c><00:43:58.960><c> we're</c>

00:43:59.190 --> 00:43:59.200 align:start position:0%
create for mongodb application and we're
 

00:43:59.200 --> 00:44:01.750 align:start position:0%
create for mongodb application and we're
going<00:43:59.280><c> to</c><00:43:59.359><c> call</c><00:43:59.599><c> that</c><00:43:59.839><c> service</c>

00:44:01.750 --> 00:44:01.760 align:start position:0%
going to call that service
 

00:44:01.760 --> 00:44:02.710 align:start position:0%
going to call that service
service

00:44:02.710 --> 00:44:02.720 align:start position:0%
service
 

00:44:02.720 --> 00:44:04.630 align:start position:0%
service
and<00:44:02.960><c> in</c><00:44:03.119><c> a</c><00:44:03.200><c> couple</c><00:44:03.440><c> of</c><00:44:03.599><c> minutes</c><00:44:04.240><c> you're</c><00:44:04.480><c> going</c>

00:44:04.630 --> 00:44:04.640 align:start position:0%
and in a couple of minutes you're going
 

00:44:04.640 --> 00:44:07.349 align:start position:0%
and in a couple of minutes you're going
to<00:44:04.720><c> see</c><00:44:05.119><c> how</c><00:44:05.280><c> to</c><00:44:05.440><c> create</c><00:44:05.760><c> this</c><00:44:06.319><c> service</c>

00:44:07.349 --> 00:44:07.359 align:start position:0%
to see how to create this service
 

00:44:07.359 --> 00:44:09.510 align:start position:0%
to see how to create this service
and<00:44:07.680><c> that</c><00:44:07.920><c> will</c><00:44:08.079><c> be</c><00:44:08.560><c> basically</c><00:44:09.280><c> all</c><00:44:09.440><c> the</c>

00:44:09.510 --> 00:44:09.520 align:start position:0%
and that will be basically all the
 

00:44:09.520 --> 00:44:11.430 align:start position:0%
and that will be basically all the
configuration<00:44:10.240><c> we</c><00:44:10.400><c> need</c><00:44:10.720><c> for</c><00:44:10.960><c> creating</c>

00:44:11.430 --> 00:44:11.440 align:start position:0%
configuration we need for creating
 

00:44:11.440 --> 00:44:15.190 align:start position:0%
configuration we need for creating
config<00:44:11.839><c> map</c>

00:44:15.190 --> 00:44:15.200 align:start position:0%
 
 

00:44:15.200 --> 00:44:17.670 align:start position:0%
 
so<00:44:15.359><c> that</c><00:44:15.599><c> one</c><00:44:15.920><c> is</c><00:44:16.240><c> done</c><00:44:16.800><c> let's</c><00:44:17.040><c> now</c><00:44:17.280><c> go</c><00:44:17.440><c> ahead</c>

00:44:17.670 --> 00:44:17.680 align:start position:0%
so that one is done let's now go ahead
 

00:44:17.680 --> 00:44:20.710 align:start position:0%
so that one is done let's now go ahead
and<00:44:17.760><c> create</c><00:44:19.200><c> secret</c>

00:44:20.710 --> 00:44:20.720 align:start position:0%
and create secret
 

00:44:20.720 --> 00:44:21.510 align:start position:0%
and create secret
dot

00:44:21.510 --> 00:44:21.520 align:start position:0%
dot
 

00:44:21.520 --> 00:44:24.390 align:start position:0%
dot
yaml<00:44:22.319><c> which</c><00:44:22.560><c> will</c><00:44:23.040><c> hold</c><00:44:23.359><c> the</c><00:44:23.520><c> username</c><00:44:24.160><c> and</c>

00:44:24.390 --> 00:44:24.400 align:start position:0%
yaml which will hold the username and
 

00:44:24.400 --> 00:44:28.069 align:start position:0%
yaml which will hold the username and
password<00:44:25.359><c> for</c><00:44:25.839><c> mongodb</c><00:44:26.400><c> application</c><00:44:27.359><c> again</c>

00:44:28.069 --> 00:44:28.079 align:start position:0%
password for mongodb application again
 

00:44:28.079 --> 00:44:29.670 align:start position:0%
password for mongodb application again
to<00:44:28.240><c> reference</c>

00:44:29.670 --> 00:44:29.680 align:start position:0%
to reference
 

00:44:29.680 --> 00:44:33.750 align:start position:0%
to reference
documentation

00:44:33.750 --> 00:44:33.760 align:start position:0%
 
 

00:44:33.760 --> 00:44:35.270 align:start position:0%
 
i'm<00:44:33.920><c> going</c><00:44:34.079><c> to</c><00:44:34.240><c> take</c><00:44:34.480><c> this</c><00:44:34.720><c> one</c><00:44:34.880><c> and</c><00:44:35.040><c> let's</c>

00:44:35.270 --> 00:44:35.280 align:start position:0%
i'm going to take this one and let's
 

00:44:35.280 --> 00:44:37.670 align:start position:0%
i'm going to take this one and let's
actually<00:44:35.680><c> copy</c><00:44:36.000><c> the</c><00:44:36.160><c> whole</c><00:44:36.400><c> thing</c>

00:44:37.670 --> 00:44:37.680 align:start position:0%
actually copy the whole thing
 

00:44:37.680 --> 00:44:39.990 align:start position:0%
actually copy the whole thing
so<00:44:37.920><c> we</c><00:44:38.000><c> have</c><00:44:38.160><c> the</c><00:44:38.319><c> secret</c><00:44:39.119><c> kind</c><00:44:39.520><c> instead</c><00:44:39.839><c> of</c>

00:44:39.990 --> 00:44:40.000 align:start position:0%
so we have the secret kind instead of
 

00:44:40.000 --> 00:44:44.309 align:start position:0%
so we have the secret kind instead of
config<00:44:40.400><c> map</c><00:44:41.040><c> let's</c><00:44:41.280><c> call</c><00:44:41.520><c> this</c><00:44:42.960><c> secret</c>

00:44:44.309 --> 00:44:44.319 align:start position:0%
config map let's call this secret
 

00:44:44.319 --> 00:44:47.589 align:start position:0%
config map let's call this secret
we<00:44:44.480><c> have</c><00:44:44.720><c> type</c><00:44:45.280><c> opaque</c><00:44:45.760><c> which</c><00:44:45.920><c> is</c><00:44:46.640><c> the</c><00:44:46.960><c> generic</c>

00:44:47.589 --> 00:44:47.599 align:start position:0%
we have type opaque which is the generic
 

00:44:47.599 --> 00:44:51.349 align:start position:0%
we have type opaque which is the generic
type<00:44:48.400><c> for</c><00:44:48.800><c> defining</c><00:44:49.599><c> secret</c><00:44:50.000><c> data</c><00:44:50.400><c> basically</c>

00:44:51.349 --> 00:44:51.359 align:start position:0%
type for defining secret data basically
 

00:44:51.359 --> 00:44:53.990 align:start position:0%
type for defining secret data basically
and<00:44:51.599><c> we</c><00:44:51.839><c> have</c><00:44:52.160><c> the</c><00:44:52.319><c> same</c><00:44:52.640><c> data</c><00:44:52.960><c> attribute</c><00:44:53.440><c> here</c>

00:44:53.990 --> 00:44:54.000 align:start position:0%
and we have the same data attribute here
 

00:44:54.000 --> 00:44:56.550 align:start position:0%
and we have the same data attribute here
and<00:44:54.079><c> let's</c><00:44:54.319><c> actually</c><00:44:54.880><c> create</c><00:44:55.200><c> our</c><00:44:55.440><c> own</c><00:44:55.680><c> values</c>

00:44:56.550 --> 00:44:56.560 align:start position:0%
and let's actually create our own values
 

00:44:56.560 --> 00:44:58.240 align:start position:0%
and let's actually create our own values
let's<00:44:56.800><c> call</c><00:44:57.040><c> this</c>

00:44:58.240 --> 00:44:58.250 align:start position:0%
let's call this
 

00:44:58.250 --> 00:44:59.589 align:start position:0%
let's call this
[Music]

00:44:59.589 --> 00:44:59.599 align:start position:0%
[Music]
 

00:44:59.599 --> 00:45:00.870 align:start position:0%
[Music]
user

00:45:00.870 --> 00:45:00.880 align:start position:0%
user
 

00:45:00.880 --> 00:45:03.109 align:start position:0%
user
and

00:45:03.109 --> 00:45:03.119 align:start position:0%
and
 

00:45:03.119 --> 00:45:06.950 align:start position:0%
and
password

00:45:06.950 --> 00:45:06.960 align:start position:0%
 
 

00:45:06.960 --> 00:45:09.270 align:start position:0%
 
and<00:45:07.359><c> as</c><00:45:07.520><c> you</c><00:45:07.680><c> already</c><00:45:08.079><c> learned</c><00:45:08.560><c> the</c><00:45:08.720><c> values</c><00:45:09.200><c> in</c>

00:45:09.270 --> 00:45:09.280 align:start position:0%
and as you already learned the values in
 

00:45:09.280 --> 00:45:12.550 align:start position:0%
and as you already learned the values in
secret<00:45:09.839><c> are</c><00:45:10.480><c> base64</c><00:45:11.359><c> encoded</c><00:45:11.920><c> so</c><00:45:12.079><c> we</c><00:45:12.160><c> can</c><00:45:12.400><c> just</c>

00:45:12.550 --> 00:45:12.560 align:start position:0%
secret are base64 encoded so we can just
 

00:45:12.560 --> 00:45:15.190 align:start position:0%
secret are base64 encoded so we can just
set<00:45:12.800><c> the</c><00:45:12.960><c> values</c><00:45:13.599><c> plain</c><00:45:13.920><c> text</c><00:45:14.560><c> we</c><00:45:14.800><c> have</c><00:45:14.960><c> to</c>

00:45:15.190 --> 00:45:15.200 align:start position:0%
set the values plain text we have to
 

00:45:15.200 --> 00:45:18.230 align:start position:0%
set the values plain text we have to
encode<00:45:15.599><c> them</c><00:45:15.839><c> first</c><00:45:16.480><c> and</c><00:45:16.800><c> encoding</c><00:45:17.680><c> values</c><00:45:18.160><c> is</c>

00:45:18.230 --> 00:45:18.240 align:start position:0%
encode them first and encoding values is
 

00:45:18.240 --> 00:45:21.910 align:start position:0%
encode them first and encoding values is
super<00:45:18.560><c> easy</c><00:45:18.800><c> we're</c><00:45:19.040><c> just</c><00:45:19.200><c> gonna</c><00:45:19.440><c> do</c><00:45:19.760><c> echo</c>

00:45:21.910 --> 00:45:21.920 align:start position:0%
super easy we're just gonna do echo
 

00:45:21.920 --> 00:45:24.550 align:start position:0%
super easy we're just gonna do echo
and<00:45:22.079><c> let's</c><00:45:22.319><c> call</c><00:45:22.560><c> it</c><00:45:23.280><c> user</c>

00:45:24.550 --> 00:45:24.560 align:start position:0%
and let's call it user
 

00:45:24.560 --> 00:45:25.510 align:start position:0%
and let's call it user
and

00:45:25.510 --> 00:45:25.520 align:start position:0%
and
 

00:45:25.520 --> 00:45:28.950 align:start position:0%
and
base<00:45:26.240><c> 64.</c><00:45:27.119><c> encode</c><00:45:27.520><c> it</c>

00:45:28.950 --> 00:45:28.960 align:start position:0%
base 64. encode it
 

00:45:28.960 --> 00:45:31.270 align:start position:0%
base 64. encode it
and<00:45:29.040><c> the</c><00:45:29.119><c> same</c><00:45:29.359><c> way</c><00:45:29.520><c> let's</c><00:45:29.760><c> do</c>

00:45:31.270 --> 00:45:31.280 align:start position:0%
and the same way let's do
 

00:45:31.280 --> 00:45:36.790 align:start position:0%
and the same way let's do
password

00:45:36.790 --> 00:45:36.800 align:start position:0%
 
 

00:45:36.800 --> 00:45:38.630 align:start position:0%
 
and

00:45:38.630 --> 00:45:38.640 align:start position:0%
and
 

00:45:38.640 --> 00:45:44.630 align:start position:0%
and
paste<00:45:39.440><c> those</c><00:45:39.839><c> values</c>

00:45:44.630 --> 00:45:44.640 align:start position:0%
 
 

00:45:44.640 --> 00:45:46.790 align:start position:0%
 
and<00:45:44.880><c> this</c><00:45:45.119><c> will</c><00:45:45.280><c> be</c><00:45:45.599><c> our</c><00:45:46.240><c> secret</c>

00:45:46.790 --> 00:45:46.800 align:start position:0%
and this will be our secret
 

00:45:46.800 --> 00:45:49.270 align:start position:0%
and this will be our secret
configuration<00:45:48.000><c> and</c><00:45:48.240><c> now</c><00:45:48.640><c> when</c><00:45:48.800><c> we</c><00:45:48.960><c> create</c>

00:45:49.270 --> 00:45:49.280 align:start position:0%
configuration and now when we create
 

00:45:49.280 --> 00:45:51.829 align:start position:0%
configuration and now when we create
deployments<00:45:50.319><c> for</c><00:45:50.640><c> our</c><00:45:50.800><c> applications</c><00:45:51.440><c> we</c><00:45:51.599><c> can</c>

00:45:51.829 --> 00:45:51.839 align:start position:0%
deployments for our applications we can
 

00:45:51.839 --> 00:45:52.950 align:start position:0%
deployments for our applications we can
reference

00:45:52.950 --> 00:45:52.960 align:start position:0%
reference
 

00:45:52.960 --> 00:45:55.670 align:start position:0%
reference
any<00:45:53.200><c> of</c><00:45:53.440><c> the</c><00:45:53.599><c> values</c><00:45:54.079><c> defined</c><00:45:54.880><c> in</c><00:45:54.960><c> the</c><00:45:55.119><c> secret</c>

00:45:55.670 --> 00:45:55.680 align:start position:0%
any of the values defined in the secret
 

00:45:55.680 --> 00:45:57.910 align:start position:0%
any of the values defined in the secret
or<00:45:56.000><c> config</c><00:45:56.319><c> map</c><00:45:56.800><c> so</c><00:45:57.040><c> let's</c><00:45:57.200><c> see</c><00:45:57.520><c> how</c><00:45:57.760><c> that</c>

00:45:57.910 --> 00:45:57.920 align:start position:0%
or config map so let's see how that
 

00:45:57.920 --> 00:46:01.270 align:start position:0%
or config map so let's see how that
works

00:46:01.270 --> 00:46:01.280 align:start position:0%
 
 

00:46:01.280 --> 00:46:03.750 align:start position:0%
 
again<00:46:01.920><c> let's</c><00:46:02.160><c> create</c><00:46:02.480><c> a</c><00:46:02.560><c> new</c><00:46:02.880><c> file</c><00:46:03.440><c> and</c><00:46:03.520><c> let's</c>

00:46:03.750 --> 00:46:03.760 align:start position:0%
again let's create a new file and let's
 

00:46:03.760 --> 00:46:07.349 align:start position:0%
again let's create a new file and let's
call<00:46:04.000><c> this</c><00:46:05.440><c> dot</c><00:46:06.000><c> yaml</c><00:46:06.800><c> this</c><00:46:07.040><c> is</c><00:46:07.200><c> going</c>

00:46:07.349 --> 00:46:07.359 align:start position:0%
call this dot yaml this is going
 

00:46:07.359 --> 00:46:09.750 align:start position:0%
call this dot yaml this is going
to<00:46:07.440><c> be</c><00:46:07.760><c> a</c><00:46:07.920><c> configuration</c><00:46:08.640><c> file</c><00:46:08.960><c> where</c>

00:46:09.750 --> 00:46:09.760 align:start position:0%
to be a configuration file where
 

00:46:09.760 --> 00:46:12.630 align:start position:0%
to be a configuration file where
we're<00:46:10.000><c> going</c><00:46:10.079><c> to</c><00:46:10.240><c> create</c><00:46:10.800><c> deployment</c><00:46:12.000><c> and</c>

00:46:12.630 --> 00:46:12.640 align:start position:0%
we're going to create deployment and
 

00:46:12.640 --> 00:46:15.190 align:start position:0%
we're going to create deployment and
service<00:46:13.440><c> for</c><00:46:13.760><c> mongodb</c><00:46:14.640><c> you</c><00:46:14.800><c> can</c><00:46:14.960><c> have</c>

00:46:15.190 --> 00:46:15.200 align:start position:0%
service for mongodb you can have
 

00:46:15.200 --> 00:46:17.589 align:start position:0%
service for mongodb you can have
separate<00:46:15.680><c> files</c><00:46:15.920><c> for</c><00:46:16.079><c> them</c><00:46:16.480><c> but</c><00:46:16.640><c> it's</c><00:46:16.880><c> a</c><00:46:17.040><c> very</c>

00:46:17.589 --> 00:46:17.599 align:start position:0%
separate files for them but it's a very
 

00:46:17.599 --> 00:46:19.750 align:start position:0%
separate files for them but it's a very
common<00:46:18.000><c> thing</c><00:46:18.319><c> to</c><00:46:18.880><c> put</c><00:46:19.119><c> them</c><00:46:19.280><c> together</c>

00:46:19.750 --> 00:46:19.760 align:start position:0%
common thing to put them together
 

00:46:19.760 --> 00:46:21.670 align:start position:0%
common thing to put them together
because<00:46:20.240><c> all</c><00:46:20.319><c> the</c><00:46:20.480><c> deployments</c><00:46:21.359><c> need</c>

00:46:21.670 --> 00:46:21.680 align:start position:0%
because all the deployments need
 

00:46:21.680 --> 00:46:24.309 align:start position:0%
because all the deployments need
services<00:46:22.240><c> so</c><00:46:22.400><c> you</c><00:46:22.480><c> have</c><00:46:22.720><c> them</c><00:46:23.119><c> grouped</c><00:46:23.599><c> in</c><00:46:23.920><c> one</c>

00:46:24.309 --> 00:46:24.319 align:start position:0%
services so you have them grouped in one
 

00:46:24.319 --> 00:46:25.589 align:start position:0%
services so you have them grouped in one
yaml<00:46:24.640><c> file</c>

00:46:25.589 --> 00:46:25.599 align:start position:0%
yaml file
 

00:46:25.599 --> 00:46:26.870 align:start position:0%
yaml file
and<00:46:26.000><c> again</c>

00:46:26.870 --> 00:46:26.880 align:start position:0%
and again
 

00:46:26.880 --> 00:46:31.270 align:start position:0%
and again
let's<00:46:27.359><c> reference</c><00:46:28.000><c> the</c><00:46:28.160><c> documentation</c><00:46:29.280><c> for</c>

00:46:31.270 --> 00:46:31.280 align:start position:0%
let's reference the documentation for
 

00:46:31.280 --> 00:46:34.550 align:start position:0%
let's reference the documentation for
the<00:46:31.440><c> deployment</c><00:46:32.240><c> example</c><00:46:32.800><c> syntax</c>

00:46:34.550 --> 00:46:34.560 align:start position:0%
the deployment example syntax
 

00:46:34.560 --> 00:46:36.550 align:start position:0%
the deployment example syntax
and<00:46:34.720><c> we</c><00:46:34.880><c> can</c><00:46:34.960><c> then</c><00:46:35.280><c> adjust</c><00:46:35.680><c> the</c><00:46:35.839><c> values</c><00:46:36.240><c> as</c><00:46:36.400><c> we</c>

00:46:36.550 --> 00:46:36.560 align:start position:0%
and we can then adjust the values as we
 

00:46:36.560 --> 00:46:37.670 align:start position:0%
and we can then adjust the values as we
need

00:46:37.670 --> 00:46:37.680 align:start position:0%
need
 

00:46:37.680 --> 00:46:39.670 align:start position:0%
need
and<00:46:37.920><c> as</c><00:46:38.079><c> you</c><00:46:38.240><c> see</c><00:46:38.480><c> deployment</c><00:46:39.040><c> configuration</c>

00:46:39.670 --> 00:46:39.680 align:start position:0%
and as you see deployment configuration
 

00:46:39.680 --> 00:46:42.470 align:start position:0%
and as you see deployment configuration
file<00:46:40.000><c> looks</c><00:46:40.319><c> a</c><00:46:40.480><c> little</c><00:46:40.720><c> bit</c><00:46:41.040><c> more</c><00:46:41.359><c> complex</c>

00:46:42.470 --> 00:46:42.480 align:start position:0%
file looks a little bit more complex
 

00:46:42.480 --> 00:46:45.030 align:start position:0%
file looks a little bit more complex
than<00:46:42.800><c> configmap</c><00:46:43.520><c> or</c><00:46:43.680><c> a</c><00:46:43.760><c> secret</c><00:46:44.400><c> so</c><00:46:44.640><c> let's</c><00:46:44.800><c> go</c>

00:46:45.030 --> 00:46:45.040 align:start position:0%
than configmap or a secret so let's go
 

00:46:45.040 --> 00:46:47.670 align:start position:0%
than configmap or a secret so let's go
through<00:46:45.200><c> the</c><00:46:45.359><c> configuration</c><00:46:46.560><c> and</c><00:46:47.119><c> understand</c>

00:46:47.670 --> 00:46:47.680 align:start position:0%
through the configuration and understand
 

00:46:47.680 --> 00:46:49.349 align:start position:0%
through the configuration and understand
all<00:46:47.839><c> these</c><00:46:48.079><c> attributes</c><00:46:48.880><c> so</c><00:46:49.040><c> we</c><00:46:49.119><c> have</c><00:46:49.280><c> the</c>

00:46:49.349 --> 00:46:49.359 align:start position:0%
all these attributes so we have the
 

00:46:49.359 --> 00:46:51.030 align:start position:0%
all these attributes so we have the
metadata<00:46:50.000><c> section</c>

00:46:51.030 --> 00:46:51.040 align:start position:0%
metadata section
 

00:46:51.040 --> 00:46:53.430 align:start position:0%
metadata section
and<00:46:51.280><c> the</c><00:46:51.440><c> specification</c><00:46:52.640><c> and</c><00:46:52.800><c> these</c><00:46:53.040><c> are</c>

00:46:53.430 --> 00:46:53.440 align:start position:0%
and the specification and these are
 

00:46:53.440 --> 00:46:56.390 align:start position:0%
and the specification and these are
basically<00:46:54.319><c> deployment</c><00:46:55.040><c> specific</c>

00:46:56.390 --> 00:46:56.400 align:start position:0%
basically deployment specific
 

00:46:56.400 --> 00:46:58.550 align:start position:0%
basically deployment specific
configuration<00:46:57.119><c> that</c><00:46:57.280><c> we</c><00:46:57.440><c> have</c><00:46:57.920><c> in</c><00:46:58.079><c> the</c>

00:46:58.550 --> 00:46:58.560 align:start position:0%
configuration that we have in the
 

00:46:58.560 --> 00:47:01.109 align:start position:0%
configuration that we have in the
specification<00:46:59.440><c> section</c><00:47:00.240><c> and</c><00:47:00.400><c> let's</c><00:47:00.640><c> start</c>

00:47:01.109 --> 00:47:01.119 align:start position:0%
specification section and let's start
 

00:47:01.119 --> 00:47:02.950 align:start position:0%
specification section and let's start
with<00:47:01.359><c> the</c><00:47:01.599><c> main</c><00:47:01.920><c> part</c><00:47:02.160><c> of</c><00:47:02.240><c> the</c><00:47:02.400><c> deployment</c>

00:47:02.950 --> 00:47:02.960 align:start position:0%
with the main part of the deployment
 

00:47:02.960 --> 00:47:05.990 align:start position:0%
with the main part of the deployment
which<00:47:03.200><c> defines</c><00:47:03.680><c> the</c><00:47:03.839><c> blueprint</c><00:47:04.800><c> for</c><00:47:05.040><c> the</c><00:47:05.280><c> pots</c>

00:47:05.990 --> 00:47:06.000 align:start position:0%
which defines the blueprint for the pots
 

00:47:06.000 --> 00:47:08.870 align:start position:0%
which defines the blueprint for the pots
and<00:47:06.240><c> that</c><00:47:06.560><c> blueprint</c><00:47:07.280><c> is</c><00:47:07.440><c> defined</c><00:47:08.240><c> as</c><00:47:08.560><c> a</c>

00:47:08.870 --> 00:47:08.880 align:start position:0%
and that blueprint is defined as a
 

00:47:08.880 --> 00:47:11.270 align:start position:0%
and that blueprint is defined as a
template<00:47:09.680><c> so</c><00:47:10.079><c> template</c>

00:47:11.270 --> 00:47:11.280 align:start position:0%
template so template
 

00:47:11.280 --> 00:47:15.109 align:start position:0%
template so template
basically<00:47:12.000><c> is</c><00:47:12.640><c> a</c><00:47:12.880><c> configuration</c><00:47:14.000><c> of</c><00:47:14.160><c> the</c><00:47:14.400><c> part</c>

00:47:15.109 --> 00:47:15.119 align:start position:0%
basically is a configuration of the part
 

00:47:15.119 --> 00:47:17.990 align:start position:0%
basically is a configuration of the part
within<00:47:15.599><c> the</c><00:47:15.839><c> configuration</c><00:47:16.800><c> of</c><00:47:17.040><c> deployment</c>

00:47:17.990 --> 00:47:18.000 align:start position:0%
within the configuration of deployment
 

00:47:18.000 --> 00:47:20.710 align:start position:0%
within the configuration of deployment
and<00:47:18.160><c> you</c><00:47:18.400><c> see</c><00:47:18.560><c> that</c><00:47:18.960><c> template</c><00:47:19.920><c> section</c><00:47:20.400><c> has</c>

00:47:20.710 --> 00:47:20.720 align:start position:0%
and you see that template section has
 

00:47:20.720 --> 00:47:24.069 align:start position:0%
and you see that template section has
its<00:47:20.960><c> own</c><00:47:21.200><c> metadata</c><00:47:22.240><c> and</c><00:47:22.559><c> own</c><00:47:22.960><c> spec</c><00:47:23.920><c> or</c>

00:47:24.069 --> 00:47:24.079 align:start position:0%
its own metadata and own spec or
 

00:47:24.079 --> 00:47:26.630 align:start position:0%
its own metadata and own spec or
specification<00:47:25.359><c> just</c><00:47:25.520><c> like</c><00:47:25.839><c> deployment</c><00:47:26.400><c> has</c>

00:47:26.630 --> 00:47:26.640 align:start position:0%
specification just like deployment has
 

00:47:26.640 --> 00:47:29.910 align:start position:0%
specification just like deployment has
its<00:47:26.880><c> metadata</c><00:47:27.440><c> and</c><00:47:27.599><c> specification</c><00:47:28.640><c> right</c><00:47:29.280><c> so</c>

00:47:29.910 --> 00:47:29.920 align:start position:0%
its metadata and specification right so
 

00:47:29.920 --> 00:47:33.270 align:start position:0%
its metadata and specification right so
this<00:47:30.240><c> part</c><00:47:30.640><c> actually</c><00:47:31.040><c> configures</c><00:47:32.079><c> the</c><00:47:32.400><c> pod</c>

00:47:33.270 --> 00:47:33.280 align:start position:0%
this part actually configures the pod
 

00:47:33.280 --> 00:47:35.270 align:start position:0%
this part actually configures the pod
within<00:47:33.839><c> a</c><00:47:33.920><c> deployment</c><00:47:34.800><c> and</c><00:47:35.040><c> in</c><00:47:35.119><c> the</c>

00:47:35.270 --> 00:47:35.280 align:start position:0%
within a deployment and in the
 

00:47:35.280 --> 00:47:37.910 align:start position:0%
within a deployment and in the
specification<00:47:36.319><c> of</c><00:47:36.480><c> the</c><00:47:36.640><c> pod</c><00:47:37.200><c> we</c><00:47:37.440><c> have</c><00:47:37.680><c> the</c>

00:47:37.910 --> 00:47:37.920 align:start position:0%
specification of the pod we have the
 

00:47:37.920 --> 00:47:40.710 align:start position:0%
specification of the pod we have the
definition<00:47:38.800><c> of</c><00:47:39.040><c> containers</c><00:47:40.000><c> so</c><00:47:40.160><c> this</c><00:47:40.400><c> is</c><00:47:40.559><c> a</c>

00:47:40.710 --> 00:47:40.720 align:start position:0%
definition of containers so this is a
 

00:47:40.720 --> 00:47:42.710 align:start position:0%
definition of containers so this is a
list<00:47:41.119><c> of</c><00:47:41.280><c> containers</c><00:47:41.920><c> as</c><00:47:42.079><c> you</c><00:47:42.240><c> learned</c><00:47:42.640><c> you</c>

00:47:42.710 --> 00:47:42.720 align:start position:0%
list of containers as you learned you
 

00:47:42.720 --> 00:47:45.430 align:start position:0%
list of containers as you learned you
can<00:47:42.880><c> have</c><00:47:43.119><c> multiple</c><00:47:43.680><c> containers</c><00:47:44.319><c> in</c><00:47:44.640><c> a</c><00:47:44.800><c> pot</c>

00:47:45.430 --> 00:47:45.440 align:start position:0%
can have multiple containers in a pot
 

00:47:45.440 --> 00:47:49.349 align:start position:0%
can have multiple containers in a pot
but<00:47:46.079><c> mostly</c><00:47:47.040><c> one</c><00:47:47.280><c> main</c><00:47:47.599><c> application</c><00:47:48.400><c> per</c><00:47:48.720><c> pot</c>

00:47:49.349 --> 00:47:49.359 align:start position:0%
but mostly one main application per pot
 

00:47:49.359 --> 00:47:52.309 align:start position:0%
but mostly one main application per pot
and<00:47:49.520><c> this</c><00:47:49.760><c> is</c><00:47:49.920><c> where</c><00:47:50.079><c> we</c><00:47:50.319><c> define</c><00:47:50.880><c> which</c><00:47:51.520><c> image</c>

00:47:52.309 --> 00:47:52.319 align:start position:0%
and this is where we define which image
 

00:47:52.319 --> 00:47:55.270 align:start position:0%
and this is where we define which image
will<00:47:52.559><c> be</c><00:47:52.720><c> used</c><00:47:53.040><c> to</c><00:47:53.280><c> create</c><00:47:53.920><c> this</c><00:47:54.240><c> pod</c><00:47:54.880><c> in</c><00:47:55.119><c> our</c>

00:47:55.270 --> 00:47:55.280 align:start position:0%
will be used to create this pod in our
 

00:47:55.280 --> 00:47:58.950 align:start position:0%
will be used to create this pod in our
case<00:47:55.520><c> this</c><00:47:55.760><c> is</c><00:47:55.839><c> going</c><00:47:56.079><c> to</c><00:47:56.240><c> be</c><00:47:56.720><c> a</c><00:47:56.880><c> mongodb</c><00:47:57.599><c> image</c>

00:47:58.950 --> 00:47:58.960 align:start position:0%
case this is going to be a mongodb image
 

00:47:58.960 --> 00:48:00.230 align:start position:0%
case this is going to be a mongodb image
and<00:47:59.200><c> if</c><00:47:59.440><c> we</c>

00:48:00.230 --> 00:48:00.240 align:start position:0%
and if we
 

00:48:00.240 --> 00:48:01.349 align:start position:0%
and if we
search<00:48:00.640><c> for</c>

00:48:01.349 --> 00:48:01.359 align:start position:0%
search for
 

00:48:01.359 --> 00:48:04.549 align:start position:0%
search for
 in<00:48:02.400><c> docker</c><00:48:02.800><c> hub</c>

00:48:04.549 --> 00:48:04.559 align:start position:0%
 in docker hub
 

00:48:04.559 --> 00:48:07.510 align:start position:0%
 in docker hub
that's<00:48:04.880><c> basically</c><00:48:05.920><c> the</c><00:48:06.079><c> image</c><00:48:06.480><c> name</c><00:48:07.200><c> and</c><00:48:07.440><c> you</c>

00:48:07.510 --> 00:48:07.520 align:start position:0%
that's basically the image name and you
 

00:48:07.520 --> 00:48:09.589 align:start position:0%
that's basically the image name and you
can<00:48:07.760><c> find</c><00:48:08.160><c> all</c><00:48:08.400><c> the</c><00:48:08.640><c> text</c>

00:48:09.589 --> 00:48:09.599 align:start position:0%
can find all the text
 

00:48:09.599 --> 00:48:11.510 align:start position:0%
can find all the text
in<00:48:09.760><c> the</c><00:48:09.920><c> text</c><00:48:10.240><c> section</c><00:48:10.960><c> and</c><00:48:11.119><c> we're</c><00:48:11.280><c> going</c><00:48:11.440><c> to</c>

00:48:11.510 --> 00:48:11.520 align:start position:0%
in the text section and we're going to
 

00:48:11.520 --> 00:48:14.950 align:start position:0%
in the text section and we're going to
use<00:48:11.680><c> the</c><00:48:11.920><c> tag</c><00:48:12.559><c> 5.0</c>

00:48:14.950 --> 00:48:14.960 align:start position:0%
use the tag 5.0
 

00:48:14.960 --> 00:48:17.309 align:start position:0%
use the tag 5.0
so<00:48:15.599><c> one</c><00:48:15.839><c> go</c>

00:48:17.309 --> 00:48:17.319 align:start position:0%
so one go
 

00:48:17.319 --> 00:48:20.470 align:start position:0%
so one go
5.0<00:48:18.400><c> that's</c><00:48:18.640><c> where</c><00:48:18.800><c> we</c><00:48:18.960><c> define</c><00:48:19.280><c> the</c><00:48:19.520><c> image</c>

00:48:20.470 --> 00:48:20.480 align:start position:0%
5.0 that's where we define the image
 

00:48:20.480 --> 00:48:22.630 align:start position:0%
5.0 that's where we define the image
of<00:48:20.640><c> the</c><00:48:20.800><c> container</c><00:48:21.359><c> within</c><00:48:21.680><c> the</c><00:48:21.839><c> pot</c><00:48:22.240><c> we</c><00:48:22.400><c> can</c>

00:48:22.630 --> 00:48:22.640 align:start position:0%
of the container within the pot we can
 

00:48:22.640 --> 00:48:23.829 align:start position:0%
of the container within the pot we can
name<00:48:22.880><c> this</c>

00:48:23.829 --> 00:48:23.839 align:start position:0%
name this
 

00:48:23.839 --> 00:48:26.150 align:start position:0%
name this
mongodb<00:48:24.880><c> this</c><00:48:25.119><c> is</c><00:48:25.280><c> just</c><00:48:25.440><c> the</c><00:48:25.599><c> name</c><00:48:25.920><c> of</c><00:48:26.000><c> the</c>

00:48:26.150 --> 00:48:26.160 align:start position:0%
mongodb this is just the name of the
 

00:48:26.160 --> 00:48:28.309 align:start position:0%
mongodb this is just the name of the
container<00:48:26.960><c> and</c><00:48:27.119><c> we</c><00:48:27.200><c> also</c><00:48:27.440><c> have</c><00:48:27.680><c> the</c><00:48:28.000><c> port</c>

00:48:28.309 --> 00:48:28.319 align:start position:0%
container and we also have the port
 

00:48:28.319 --> 00:48:30.630 align:start position:0%
container and we also have the port
where<00:48:28.559><c> the</c><00:48:28.720><c> container</c><00:48:29.359><c> will</c><00:48:29.599><c> listen</c><00:48:30.400><c> and</c>

00:48:30.630 --> 00:48:30.640 align:start position:0%
where the container will listen and
 

00:48:30.640 --> 00:48:33.030 align:start position:0%
where the container will listen and
let's<00:48:30.960><c> check</c><00:48:31.440><c> our</c><00:48:31.680><c> image</c><00:48:32.240><c> and</c><00:48:32.400><c> as</c><00:48:32.480><c> you</c><00:48:32.640><c> see</c>

00:48:33.030 --> 00:48:33.040 align:start position:0%
let's check our image and as you see
 

00:48:33.040 --> 00:48:35.430 align:start position:0%
let's check our image and as you see
mongodb<00:48:33.680><c> starts</c><00:48:34.079><c> at</c><00:48:34.240><c> this</c><00:48:34.640><c> port</c><00:48:35.040><c> so</c><00:48:35.200><c> we</c><00:48:35.280><c> can</c>

00:48:35.430 --> 00:48:35.440 align:start position:0%
mongodb starts at this port so we can
 

00:48:35.440 --> 00:48:38.230 align:start position:0%
mongodb starts at this port so we can
just<00:48:35.680><c> copy</c><00:48:36.000><c> it</c><00:48:36.400><c> and</c><00:48:36.559><c> paste</c><00:48:36.880><c> it</c><00:48:37.040><c> in</c><00:48:37.200><c> here</c><00:48:37.760><c> so</c>

00:48:38.230 --> 00:48:38.240 align:start position:0%
just copy it and paste it in here so
 

00:48:38.240 --> 00:48:39.990 align:start position:0%
just copy it and paste it in here so
this<00:48:38.559><c> basically</c>

00:48:39.990 --> 00:48:40.000 align:start position:0%
this basically
 

00:48:40.000 --> 00:48:43.190 align:start position:0%
this basically
just<00:48:40.480><c> configures</c><00:48:41.440><c> our</c><00:48:41.680><c> deployment</c><00:48:42.480><c> to</c><00:48:42.720><c> create</c>

00:48:43.190 --> 00:48:43.200 align:start position:0%
just configures our deployment to create
 

00:48:43.200 --> 00:48:46.829 align:start position:0%
just configures our deployment to create
pods<00:48:43.920><c> with</c><00:48:44.160><c> a</c><00:48:44.319><c> mongodb</c><00:48:45.040><c> image</c><00:48:45.920><c> version</c>

00:48:46.829 --> 00:48:46.839 align:start position:0%
pods with a mongodb image version
 

00:48:46.839 --> 00:48:50.150 align:start position:0%
pods with a mongodb image version
5.0<00:48:47.920><c> so</c><00:48:48.079><c> that's</c><00:48:48.400><c> the</c><00:48:48.640><c> core</c><00:48:48.960><c> of</c><00:48:49.119><c> a</c><00:48:49.200><c> deployment</c>

00:48:50.150 --> 00:48:50.160 align:start position:0%
5.0 so that's the core of a deployment
 

00:48:50.160 --> 00:48:51.829 align:start position:0%
5.0 so that's the core of a deployment
now<00:48:50.319><c> let's</c><00:48:50.480><c> see</c><00:48:50.640><c> what</c><00:48:50.880><c> is</c><00:48:51.119><c> all</c><00:48:51.280><c> this</c><00:48:51.599><c> other</c>

00:48:51.829 --> 00:48:51.839 align:start position:0%
now let's see what is all this other
 

00:48:51.839 --> 00:48:54.309 align:start position:0%
now let's see what is all this other
stuff<00:48:52.160><c> here</c><00:48:52.720><c> first</c><00:48:52.960><c> of</c><00:48:53.040><c> all</c><00:48:53.200><c> we</c><00:48:53.359><c> have</c><00:48:53.920><c> this</c>

00:48:54.309 --> 00:48:54.319 align:start position:0%
stuff here first of all we have this
 

00:48:54.319 --> 00:48:58.309 align:start position:0%
stuff here first of all we have this
labels<00:48:54.800><c> attribute</c><00:48:55.680><c> in</c><00:48:56.240><c> the</c><00:48:56.480><c> metadata</c><00:48:57.200><c> section</c>

00:48:58.309 --> 00:48:58.319 align:start position:0%
labels attribute in the metadata section
 

00:48:58.319 --> 00:49:00.790 align:start position:0%
labels attribute in the metadata section
and<00:48:58.480><c> then</c><00:48:58.800><c> we</c><00:48:58.960><c> also</c><00:48:59.359><c> have</c><00:49:00.000><c> match</c><00:49:00.319><c> labels</c>

00:49:00.790 --> 00:49:00.800 align:start position:0%
and then we also have match labels
 

00:49:00.800 --> 00:49:03.270 align:start position:0%
and then we also have match labels
attribute<00:49:01.599><c> so</c><00:49:01.760><c> what</c><00:49:02.000><c> is</c><00:49:02.079><c> this</c><00:49:02.319><c> about</c><00:49:03.119><c> in</c>

00:49:03.270 --> 00:49:03.280 align:start position:0%
attribute so what is this about in
 

00:49:03.280 --> 00:49:06.710 align:start position:0%
attribute so what is this about in
kubernetes<00:49:04.240><c> you</c><00:49:04.400><c> can</c><00:49:04.640><c> give</c><00:49:05.200><c> any</c><00:49:05.520><c> component</c>

00:49:06.710 --> 00:49:06.720 align:start position:0%
kubernetes you can give any component
 

00:49:06.720 --> 00:49:10.710 align:start position:0%
kubernetes you can give any component
a<00:49:06.960><c> key</c><00:49:07.280><c> value</c><00:49:07.680><c> pair</c><00:49:08.319><c> labels</c><00:49:09.200><c> so</c><00:49:09.440><c> you</c><00:49:09.520><c> can</c><00:49:09.839><c> label</c>

00:49:10.710 --> 00:49:10.720 align:start position:0%
a key value pair labels so you can label
 

00:49:10.720 --> 00:49:12.790 align:start position:0%
a key value pair labels so you can label
anything<00:49:11.280><c> from</c><00:49:11.680><c> pod</c><00:49:12.000><c> to</c><00:49:12.160><c> deployment</c><00:49:12.640><c> to</c>

00:49:12.790 --> 00:49:12.800 align:start position:0%
anything from pod to deployment to
 

00:49:12.800 --> 00:49:16.230 align:start position:0%
anything from pod to deployment to
configmap<00:49:13.520><c> etc</c><00:49:14.480><c> and</c><00:49:14.640><c> labels</c><00:49:15.040><c> basically</c><00:49:15.680><c> are</c>

00:49:16.230 --> 00:49:16.240 align:start position:0%
configmap etc and labels basically are
 

00:49:16.240 --> 00:49:18.950 align:start position:0%
configmap etc and labels basically are
additional<00:49:16.800><c> identifiers</c><00:49:17.839><c> of</c><00:49:18.000><c> the</c><00:49:18.160><c> components</c>

00:49:18.950 --> 00:49:18.960 align:start position:0%
additional identifiers of the components
 

00:49:18.960 --> 00:49:21.589 align:start position:0%
additional identifiers of the components
in<00:49:19.119><c> addition</c><00:49:19.599><c> to</c><00:49:19.839><c> the</c><00:49:20.079><c> name</c><00:49:20.400><c> for</c><00:49:20.559><c> example</c>

00:49:21.589 --> 00:49:21.599 align:start position:0%
in addition to the name for example
 

00:49:21.599 --> 00:49:22.790 align:start position:0%
in addition to the name for example
so<00:49:21.839><c> you</c><00:49:22.000><c> can</c>

00:49:22.790 --> 00:49:22.800 align:start position:0%
so you can
 

00:49:22.800 --> 00:49:26.069 align:start position:0%
so you can
identify<00:49:23.599><c> and</c><00:49:23.920><c> address</c><00:49:24.880><c> specific</c><00:49:25.440><c> components</c>

00:49:26.069 --> 00:49:26.079 align:start position:0%
identify and address specific components
 

00:49:26.079 --> 00:49:27.750 align:start position:0%
identify and address specific components
using<00:49:26.480><c> their</c><00:49:26.800><c> labels</c>

00:49:27.750 --> 00:49:27.760 align:start position:0%
using their labels
 

00:49:27.760 --> 00:49:30.630 align:start position:0%
using their labels
now<00:49:28.400><c> why</c><00:49:28.559><c> do</c><00:49:28.720><c> we</c><00:49:28.880><c> need</c><00:49:29.040><c> them</c><00:49:29.680><c> first</c><00:49:30.000><c> of</c><00:49:30.160><c> all</c>

00:49:30.630 --> 00:49:30.640 align:start position:0%
now why do we need them first of all
 

00:49:30.640 --> 00:49:32.950 align:start position:0%
now why do we need them first of all
when<00:49:30.800><c> we</c><00:49:30.960><c> have</c><00:49:31.280><c> multiple</c><00:49:31.920><c> replicas</c><00:49:32.559><c> of</c><00:49:32.800><c> the</c>

00:49:32.950 --> 00:49:32.960 align:start position:0%
when we have multiple replicas of the
 

00:49:32.960 --> 00:49:34.390 align:start position:0%
when we have multiple replicas of the
same<00:49:33.280><c> part</c>

00:49:34.390 --> 00:49:34.400 align:start position:0%
same part
 

00:49:34.400 --> 00:49:36.549 align:start position:0%
same part
each<00:49:34.800><c> part</c><00:49:35.119><c> will</c><00:49:35.280><c> get</c><00:49:35.440><c> a</c><00:49:35.599><c> unique</c>

00:49:36.549 --> 00:49:36.559 align:start position:0%
each part will get a unique
 

00:49:36.559 --> 00:49:38.309 align:start position:0%
each part will get a unique
name<00:49:37.280><c> however</c>

00:49:38.309 --> 00:49:38.319 align:start position:0%
name however
 

00:49:38.319 --> 00:49:41.190 align:start position:0%
name however
they<00:49:38.559><c> can</c><00:49:38.960><c> share</c><00:49:39.359><c> the</c><00:49:39.599><c> same</c><00:49:40.000><c> label</c><00:49:40.559><c> so</c><00:49:40.720><c> we</c><00:49:40.880><c> can</c>

00:49:41.190 --> 00:49:41.200 align:start position:0%
they can share the same label so we can
 

00:49:41.200 --> 00:49:43.589 align:start position:0%
they can share the same label so we can
identify<00:49:42.160><c> all</c><00:49:42.319><c> the</c><00:49:42.480><c> part</c><00:49:42.800><c> replicas</c><00:49:43.359><c> of</c><00:49:43.440><c> the</c>

00:49:43.589 --> 00:49:43.599 align:start position:0%
identify all the part replicas of the
 

00:49:43.599 --> 00:49:47.109 align:start position:0%
identify all the part replicas of the
same<00:49:43.839><c> application</c><00:49:44.960><c> using</c><00:49:45.760><c> a</c><00:49:45.920><c> specific</c><00:49:46.720><c> label</c>

00:49:47.109 --> 00:49:47.119 align:start position:0%
same application using a specific label
 

00:49:47.119 --> 00:49:49.750 align:start position:0%
same application using a specific label
that<00:49:47.440><c> all</c><00:49:47.599><c> of</c><00:49:47.760><c> them</c><00:49:48.319><c> share</c><00:49:48.960><c> and</c><00:49:49.040><c> that's</c><00:49:49.359><c> why</c><00:49:49.599><c> in</c>

00:49:49.750 --> 00:49:49.760 align:start position:0%
that all of them share and that's why in
 

00:49:49.760 --> 00:49:52.870 align:start position:0%
that all of them share and that's why in
the<00:49:50.160><c> metadata</c><00:49:50.960><c> of</c><00:49:51.200><c> the</c><00:49:51.359><c> pod</c><00:49:52.079><c> we</c><00:49:52.319><c> always</c><00:49:52.640><c> have</c>

00:49:52.870 --> 00:49:52.880 align:start position:0%
the metadata of the pod we always have
 

00:49:52.880 --> 00:49:55.750 align:start position:0%
the metadata of the pod we always have
this<00:49:53.280><c> label</c><00:49:53.839><c> so</c><00:49:54.079><c> for</c><00:49:54.319><c> pods</c><00:49:54.880><c> labels</c><00:49:55.440><c> is</c><00:49:55.680><c> a</c>

00:49:55.750 --> 00:49:55.760 align:start position:0%
this label so for pods labels is a
 

00:49:55.760 --> 00:49:58.549 align:start position:0%
this label so for pods labels is a
required<00:49:56.400><c> field</c><00:49:57.119><c> for</c><00:49:57.520><c> other</c><00:49:57.839><c> components</c><00:49:58.400><c> like</c>

00:49:58.549 --> 00:49:58.559 align:start position:0%
required field for other components like
 

00:49:58.559 --> 00:50:01.750 align:start position:0%
required field for other components like
deployment<00:49:59.599><c> configmap</c><00:50:00.319><c> etc</c><00:50:01.119><c> labels</c><00:50:01.520><c> is</c>

00:50:01.750 --> 00:50:01.760 align:start position:0%
deployment configmap etc labels is
 

00:50:01.760 --> 00:50:04.390 align:start position:0%
deployment configmap etc labels is
optional<00:50:02.240><c> but</c><00:50:02.480><c> it</c><00:50:02.720><c> is</c><00:50:02.880><c> a</c><00:50:03.040><c> good</c><00:50:03.280><c> practice</c><00:50:04.079><c> to</c>

00:50:04.390 --> 00:50:04.400 align:start position:0%
optional but it is a good practice to
 

00:50:04.400 --> 00:50:05.349 align:start position:0%
optional but it is a good practice to
set<00:50:04.640><c> them</c>

00:50:05.349 --> 00:50:05.359 align:start position:0%
set them
 

00:50:05.359 --> 00:50:06.150 align:start position:0%
set them
now

00:50:06.150 --> 00:50:06.160 align:start position:0%
now
 

00:50:06.160 --> 00:50:08.950 align:start position:0%
now
when<00:50:06.400><c> we</c><00:50:06.559><c> create</c><00:50:07.200><c> pod</c><00:50:07.599><c> replicas</c><00:50:08.559><c> how</c><00:50:08.720><c> does</c>

00:50:08.950 --> 00:50:08.960 align:start position:0%
when we create pod replicas how does
 

00:50:08.960 --> 00:50:11.430 align:start position:0%
when we create pod replicas how does
deployment<00:50:09.680><c> know</c><00:50:10.079><c> which</c><00:50:10.640><c> parts</c><00:50:11.119><c> actually</c>

00:50:11.430 --> 00:50:11.440 align:start position:0%
deployment know which parts actually
 

00:50:11.440 --> 00:50:13.829 align:start position:0%
deployment know which parts actually
belong<00:50:11.839><c> to</c><00:50:12.079><c> it</c><00:50:12.480><c> or</c><00:50:12.640><c> how</c><00:50:12.880><c> does</c><00:50:13.040><c> kubernetes</c><00:50:13.599><c> know</c>

00:50:13.829 --> 00:50:13.839 align:start position:0%
belong to it or how does kubernetes know
 

00:50:13.839 --> 00:50:16.150 align:start position:0%
belong to it or how does kubernetes know
which<00:50:14.079><c> pods</c><00:50:14.400><c> belong</c><00:50:14.640><c> to</c><00:50:14.800><c> which</c><00:50:15.040><c> deployments</c>

00:50:16.150 --> 00:50:16.160 align:start position:0%
which pods belong to which deployments
 

00:50:16.160 --> 00:50:19.190 align:start position:0%
which pods belong to which deployments
and<00:50:16.480><c> that</c><00:50:16.800><c> is</c><00:50:17.359><c> defined</c><00:50:18.240><c> using</c>

00:50:19.190 --> 00:50:19.200 align:start position:0%
and that is defined using
 

00:50:19.200 --> 00:50:21.430 align:start position:0%
and that is defined using
this<00:50:19.440><c> part</c><00:50:19.760><c> right</c><00:50:20.000><c> here</c><00:50:20.720><c> so</c>

00:50:21.430 --> 00:50:21.440 align:start position:0%
this part right here so
 

00:50:21.440 --> 00:50:23.430 align:start position:0%
this part right here so
selector<00:50:22.079><c> match</c><00:50:22.400><c> labels</c><00:50:22.960><c> is</c><00:50:23.200><c> in</c><00:50:23.280><c> the</c>

00:50:23.430 --> 00:50:23.440 align:start position:0%
selector match labels is in the
 

00:50:23.440 --> 00:50:25.430 align:start position:0%
selector match labels is in the
specification<00:50:24.240><c> of</c><00:50:24.319><c> the</c><00:50:24.480><c> deployment</c><00:50:25.119><c> as</c><00:50:25.280><c> you</c>

00:50:25.430 --> 00:50:25.440 align:start position:0%
specification of the deployment as you
 

00:50:25.440 --> 00:50:27.589 align:start position:0%
specification of the deployment as you
see<00:50:26.000><c> and</c><00:50:26.160><c> this</c><00:50:26.480><c> defines</c>

00:50:27.589 --> 00:50:27.599 align:start position:0%
see and this defines
 

00:50:27.599 --> 00:50:30.710 align:start position:0%
see and this defines
that<00:50:28.000><c> all</c><00:50:28.160><c> the</c><00:50:28.319><c> parts</c><00:50:29.200><c> that</c><00:50:29.599><c> match</c>

00:50:30.710 --> 00:50:30.720 align:start position:0%
that all the parts that match
 

00:50:30.720 --> 00:50:33.270 align:start position:0%
that all the parts that match
this<00:50:30.960><c> label</c><00:50:31.760><c> belong</c><00:50:32.240><c> to</c>

00:50:33.270 --> 00:50:33.280 align:start position:0%
this label belong to
 

00:50:33.280 --> 00:50:36.309 align:start position:0%
this label belong to
this<00:50:33.920><c> deployment</c><00:50:34.800><c> so</c><00:50:34.960><c> that's</c><00:50:35.200><c> why</c><00:50:35.440><c> we</c><00:50:35.599><c> have</c>

00:50:36.309 --> 00:50:36.319 align:start position:0%
this deployment so that's why we have
 

00:50:36.319 --> 00:50:37.990 align:start position:0%
this deployment so that's why we have
match<00:50:36.640><c> labels</c><00:50:37.040><c> here</c>

00:50:37.990 --> 00:50:38.000 align:start position:0%
match labels here
 

00:50:38.000 --> 00:50:39.109 align:start position:0%
match labels here
so<00:50:38.240><c> this</c>

00:50:39.109 --> 00:50:39.119 align:start position:0%
so this
 

00:50:39.119 --> 00:50:42.230 align:start position:0%
so this
selector<00:50:39.760><c> will</c><00:50:40.079><c> match</c><00:50:40.720><c> the</c><00:50:40.960><c> pods</c><00:50:41.760><c> created</c>

00:50:42.230 --> 00:50:42.240 align:start position:0%
selector will match the pods created
 

00:50:42.240 --> 00:50:44.069 align:start position:0%
selector will match the pods created
with<00:50:42.480><c> this</c><00:50:42.800><c> configuration</c>

00:50:44.069 --> 00:50:44.079 align:start position:0%
with this configuration
 

00:50:44.079 --> 00:50:47.270 align:start position:0%
with this configuration
because<00:50:44.480><c> they</c><00:50:44.720><c> have</c><00:50:45.359><c> label</c><00:50:46.000><c> app</c><00:50:46.319><c> engine</c><00:50:46.640><c> x</c><00:50:47.040><c> now</c>

00:50:47.270 --> 00:50:47.280 align:start position:0%
because they have label app engine x now
 

00:50:47.280 --> 00:50:48.710 align:start position:0%
because they have label app engine x now
are<00:50:47.440><c> these</c><00:50:47.599><c> labels</c>

00:50:48.710 --> 00:50:48.720 align:start position:0%
are these labels
 

00:50:48.720 --> 00:50:51.030 align:start position:0%
are these labels
given<00:50:49.200><c> or</c><00:50:49.359><c> can</c><00:50:49.520><c> you</c><00:50:49.680><c> select</c><00:50:50.240><c> any</c><00:50:50.559><c> key</c><00:50:50.720><c> value</c>

00:50:51.030 --> 00:50:51.040 align:start position:0%
given or can you select any key value
 

00:50:51.040 --> 00:50:53.670 align:start position:0%
given or can you select any key value
pairs<00:50:51.520><c> well</c><00:50:51.680><c> these</c><00:50:51.920><c> are</c><00:50:52.480><c> totally</c><00:50:53.040><c> up</c><00:50:53.119><c> to</c><00:50:53.359><c> you</c>

00:50:53.670 --> 00:50:53.680 align:start position:0%
pairs well these are totally up to you
 

00:50:53.680 --> 00:50:55.910 align:start position:0%
pairs well these are totally up to you
you<00:50:53.839><c> can</c><00:50:54.079><c> call</c><00:50:54.319><c> it</c><00:50:54.480><c> whatever</c><00:50:54.880><c> you</c><00:50:55.040><c> want</c>

00:50:55.910 --> 00:50:55.920 align:start position:0%
you can call it whatever you want
 

00:50:55.920 --> 00:50:58.549 align:start position:0%
you can call it whatever you want
you<00:50:56.000><c> can</c><00:50:56.160><c> call</c><00:50:56.400><c> it</c><00:50:56.640><c> my</c><00:50:56.880><c> key</c>

00:50:58.549 --> 00:50:58.559 align:start position:0%
you can call it my key
 

00:50:58.559 --> 00:51:00.710 align:start position:0%
you can call it my key
my<00:50:58.800><c> value</c><00:50:59.520><c> it</c><00:50:59.680><c> doesn't</c><00:50:59.920><c> really</c><00:51:00.160><c> matter</c>

00:51:00.710 --> 00:51:00.720 align:start position:0%
my value it doesn't really matter
 

00:51:00.720 --> 00:51:02.549 align:start position:0%
my value it doesn't really matter
however<00:51:01.200><c> the</c><00:51:01.440><c> standard</c><00:51:02.000><c> and</c><00:51:02.160><c> a</c><00:51:02.240><c> common</c>

00:51:02.549 --> 00:51:02.559 align:start position:0%
however the standard and a common
 

00:51:02.559 --> 00:51:06.069 align:start position:0%
however the standard and a common
practice<00:51:02.960><c> in</c><00:51:03.119><c> kubernetes</c><00:51:04.160><c> is</c><00:51:04.559><c> to</c><00:51:04.800><c> use</c><00:51:05.280><c> app</c>

00:51:06.069 --> 00:51:06.079 align:start position:0%
practice in kubernetes is to use app
 

00:51:06.079 --> 00:51:08.710 align:start position:0%
practice in kubernetes is to use app
key<00:51:06.559><c> in</c><00:51:06.800><c> the</c><00:51:06.880><c> labels</c><00:51:07.599><c> when</c><00:51:07.839><c> labeling</c><00:51:08.319><c> your</c>

00:51:08.710 --> 00:51:08.720 align:start position:0%
key in the labels when labeling your
 

00:51:08.720 --> 00:51:10.790 align:start position:0%
key in the labels when labeling your
applications<00:51:09.920><c> and</c><00:51:10.079><c> the</c><00:51:10.240><c> value</c><00:51:10.559><c> will</c>

00:51:10.790 --> 00:51:10.800 align:start position:0%
applications and the value will
 

00:51:10.800 --> 00:51:12.470 align:start position:0%
applications and the value will
obviously<00:51:11.200><c> be</c><00:51:11.440><c> whatever</c><00:51:11.839><c> application</c><00:51:12.400><c> you</c>

00:51:12.470 --> 00:51:12.480 align:start position:0%
obviously be whatever application you
 

00:51:12.480 --> 00:51:15.349 align:start position:0%
obviously be whatever application you
have<00:51:13.040><c> so</c><00:51:13.200><c> let's</c><00:51:13.440><c> actually</c><00:51:13.920><c> change</c><00:51:14.720><c> and</c><00:51:14.960><c> set</c>

00:51:15.349 --> 00:51:15.359 align:start position:0%
have so let's actually change and set
 

00:51:15.359 --> 00:51:17.190 align:start position:0%
have so let's actually change and set
the<00:51:15.520><c> values</c>

00:51:17.190 --> 00:51:17.200 align:start position:0%
the values
 

00:51:17.200 --> 00:51:19.670 align:start position:0%
the values
to<00:51:18.160><c> instead</c><00:51:18.400><c> of</c><00:51:18.559><c> nginx</c>

00:51:19.670 --> 00:51:19.680 align:start position:0%
to instead of nginx
 

00:51:19.680 --> 00:51:21.589 align:start position:0%
to instead of nginx
because<00:51:20.000><c> that's</c><00:51:20.319><c> our</c><00:51:20.480><c> application</c><00:51:21.280><c> and</c><00:51:21.440><c> of</c>

00:51:21.589 --> 00:51:21.599 align:start position:0%
because that's our application and of
 

00:51:21.599 --> 00:51:25.430 align:start position:0%
because that's our application and of
course<00:51:21.839><c> we</c><00:51:22.079><c> want</c><00:51:22.319><c> to</c><00:51:22.640><c> match</c><00:51:23.359><c> label</c><00:51:24.160><c> app</c>

00:51:25.430 --> 00:51:25.440 align:start position:0%
course we want to match label app
 

00:51:25.440 --> 00:51:27.349 align:start position:0%
course we want to match label app
and<00:51:25.680><c> let's</c><00:51:25.920><c> also</c><00:51:26.319><c> change</c>

00:51:27.349 --> 00:51:27.359 align:start position:0%
and let's also change
 

00:51:27.359 --> 00:51:29.190 align:start position:0%
and let's also change
this<00:51:27.599><c> one</c><00:51:28.160><c> right</c><00:51:28.400><c> here</c>

00:51:29.190 --> 00:51:29.200 align:start position:0%
this one right here
 

00:51:29.200 --> 00:51:31.990 align:start position:0%
this one right here
to<00:51:29.760><c> deployment</c><00:51:30.640><c> and</c><00:51:30.960><c> finally</c><00:51:31.680><c> last</c>

00:51:31.990 --> 00:51:32.000 align:start position:0%
to deployment and finally last
 

00:51:32.000 --> 00:51:35.510 align:start position:0%
to deployment and finally last
attribute<00:51:32.880><c> we</c><00:51:33.119><c> have</c><00:51:33.359><c> here</c><00:51:33.760><c> is</c><00:51:34.400><c> replicas</c><00:51:35.200><c> which</c>

00:51:35.510 --> 00:51:35.520 align:start position:0%
attribute we have here is replicas which
 

00:51:35.520 --> 00:51:37.990 align:start position:0%
attribute we have here is replicas which
is<00:51:35.760><c> super</c><00:51:36.160><c> simple</c><00:51:36.720><c> and</c><00:51:36.880><c> straightforward</c><00:51:37.760><c> this</c>

00:51:37.990 --> 00:51:38.000 align:start position:0%
is super simple and straightforward this
 

00:51:38.000 --> 00:51:40.309 align:start position:0%
is super simple and straightforward this
just<00:51:38.240><c> defines</c><00:51:39.040><c> how</c><00:51:39.200><c> many</c><00:51:39.520><c> pods</c><00:51:39.839><c> you</c><00:51:39.920><c> want</c><00:51:40.160><c> to</c>

00:51:40.309 --> 00:51:40.319 align:start position:0%
just defines how many pods you want to
 

00:51:40.319 --> 00:51:43.589 align:start position:0%
just defines how many pods you want to
create<00:51:41.040><c> using</c><00:51:41.440><c> this</c><00:51:42.000><c> blueprint</c><00:51:42.960><c> in</c><00:51:43.040><c> our</c><00:51:43.280><c> case</c>

00:51:43.589 --> 00:51:43.599 align:start position:0%
create using this blueprint in our case
 

00:51:43.599 --> 00:51:46.150 align:start position:0%
create using this blueprint in our case
let's<00:51:43.839><c> do</c><00:51:44.160><c> just</c><00:51:44.480><c> one</c><00:51:44.720><c> replica</c><00:51:45.599><c> because</c><00:51:45.920><c> it's</c><00:51:46.079><c> a</c>

00:51:46.150 --> 00:51:46.160 align:start position:0%
let's do just one replica because it's a
 

00:51:46.160 --> 00:51:48.069 align:start position:0%
let's do just one replica because it's a
database<00:51:47.040><c> and</c><00:51:47.200><c> as</c><00:51:47.359><c> you</c><00:51:47.440><c> learned</c><00:51:47.680><c> if</c><00:51:47.839><c> you</c><00:51:47.920><c> want</c>

00:51:48.069 --> 00:51:48.079 align:start position:0%
database and as you learned if you want
 

00:51:48.079 --> 00:51:50.870 align:start position:0%
database and as you learned if you want
to<00:51:48.240><c> scale</c><00:51:48.880><c> databases</c><00:51:49.680><c> in</c><00:51:49.760><c> kubernetes</c><00:51:50.720><c> you</c>

00:51:50.870 --> 00:51:50.880 align:start position:0%
to scale databases in kubernetes you
 

00:51:50.880 --> 00:51:52.950 align:start position:0%
to scale databases in kubernetes you
should<00:51:51.119><c> use</c><00:51:51.680><c> stateful</c><00:51:52.240><c> set</c><00:51:52.559><c> and</c><00:51:52.640><c> not</c><00:51:52.880><c> a</c>

00:51:52.950 --> 00:51:52.960 align:start position:0%
should use stateful set and not a
 

00:51:52.960 --> 00:51:54.870 align:start position:0%
should use stateful set and not a
deployment<00:51:53.520><c> to</c><00:51:53.760><c> keep</c><00:51:54.000><c> everything</c><00:51:54.480><c> simple</c>

00:51:54.870 --> 00:51:54.880 align:start position:0%
deployment to keep everything simple
 

00:51:54.880 --> 00:51:57.190 align:start position:0%
deployment to keep everything simple
we're<00:51:55.040><c> going</c><00:51:55.119><c> to</c><00:51:55.280><c> stick</c><00:51:55.599><c> to</c><00:51:56.079><c> one</c><00:51:56.319><c> replica</c><00:51:56.960><c> and</c>

00:51:57.190 --> 00:51:57.200 align:start position:0%
we're going to stick to one replica and
 

00:51:57.200 --> 00:52:00.230 align:start position:0%
we're going to stick to one replica and
that<00:51:57.440><c> basically</c><00:51:58.319><c> configures</c><00:51:59.200><c> our</c><00:51:59.440><c> mongodb</c>

00:52:00.230 --> 00:52:00.240 align:start position:0%
that basically configures our mongodb
 

00:52:00.240 --> 00:52:01.430 align:start position:0%
that basically configures our mongodb
deployment

00:52:01.430 --> 00:52:01.440 align:start position:0%
deployment
 

00:52:01.440 --> 00:52:04.470 align:start position:0%
deployment
and<00:52:01.839><c> the</c><00:52:02.079><c> pod</c><00:52:02.319><c> blueprint</c><00:52:03.200><c> now</c><00:52:03.359><c> let's</c><00:52:03.599><c> add</c><00:52:04.319><c> a</c>

00:52:04.470 --> 00:52:04.480 align:start position:0%
and the pod blueprint now let's add a
 

00:52:04.480 --> 00:52:06.470 align:start position:0%
and the pod blueprint now let's add a
service<00:52:04.880><c> configuration</c><00:52:05.760><c> because</c><00:52:06.160><c> every</c>

00:52:06.470 --> 00:52:06.480 align:start position:0%
service configuration because every
 

00:52:06.480 --> 00:52:07.829 align:start position:0%
service configuration because every
application<00:52:06.960><c> needs</c><00:52:07.200><c> a</c><00:52:07.359><c> service</c><00:52:07.760><c> in</c>

00:52:07.829 --> 00:52:07.839 align:start position:0%
application needs a service in
 

00:52:07.839 --> 00:52:10.390 align:start position:0%
application needs a service in
kubernetes<00:52:08.880><c> and</c>

00:52:10.390 --> 00:52:10.400 align:start position:0%
kubernetes and
 

00:52:10.400 --> 00:52:12.549 align:start position:0%
kubernetes and
that's<00:52:10.640><c> going</c><00:52:10.800><c> to</c><00:52:10.880><c> be</c><00:52:11.200><c> a</c><00:52:11.440><c> separate</c>

00:52:12.549 --> 00:52:12.559 align:start position:0%
that's going to be a separate
 

00:52:12.559 --> 00:52:13.510 align:start position:0%
that's going to be a separate
yaml

00:52:13.510 --> 00:52:13.520 align:start position:0%
yaml
 

00:52:13.520 --> 00:52:15.910 align:start position:0%
yaml
unit<00:52:14.079><c> or</c><00:52:14.240><c> yaml</c><00:52:14.640><c> section</c><00:52:15.359><c> and</c><00:52:15.520><c> we're</c><00:52:15.680><c> going</c><00:52:15.839><c> to</c>

00:52:15.910 --> 00:52:15.920 align:start position:0%
unit or yaml section and we're going to
 

00:52:15.920 --> 00:52:17.670 align:start position:0%
unit or yaml section and we're going to
separate<00:52:16.400><c> it</c><00:52:16.720><c> using</c>

00:52:17.670 --> 00:52:17.680 align:start position:0%
separate it using
 

00:52:17.680 --> 00:52:20.470 align:start position:0%
separate it using
three<00:52:18.000><c> dashes</c><00:52:18.400><c> which</c><00:52:18.640><c> is</c><00:52:19.040><c> basic</c><00:52:19.599><c> yaml</c><00:52:20.000><c> syntax</c>

00:52:20.470 --> 00:52:20.480 align:start position:0%
three dashes which is basic yaml syntax
 

00:52:20.480 --> 00:52:23.589 align:start position:0%
three dashes which is basic yaml syntax
nothing<00:52:20.800><c> specific</c><00:52:21.359><c> to</c><00:52:21.440><c> kubernetes</c><00:52:22.480><c> and</c><00:52:22.880><c> again</c>

00:52:23.589 --> 00:52:23.599 align:start position:0%
nothing specific to kubernetes and again
 

00:52:23.599 --> 00:52:25.349 align:start position:0%
nothing specific to kubernetes and again
let's

00:52:25.349 --> 00:52:25.359 align:start position:0%
let's
 

00:52:25.359 --> 00:52:34.309 align:start position:0%
let's
grab<00:52:25.760><c> a</c><00:52:26.000><c> service</c><00:52:26.880><c> example</c>

00:52:34.309 --> 00:52:34.319 align:start position:0%
 
 

00:52:34.319 --> 00:52:36.870 align:start position:0%
 
and<00:52:34.640><c> adjust</c><00:52:35.119><c> it</c><00:52:35.440><c> as</c><00:52:35.599><c> we</c><00:52:35.760><c> need</c><00:52:36.319><c> now</c><00:52:36.559><c> service</c>

00:52:36.870 --> 00:52:36.880 align:start position:0%
and adjust it as we need now service
 

00:52:36.880 --> 00:52:38.630 align:start position:0%
and adjust it as we need now service
configuration<00:52:37.520><c> is</c><00:52:37.760><c> much</c><00:52:38.000><c> easier</c><00:52:38.400><c> than</c><00:52:38.559><c> the</c>

00:52:38.630 --> 00:52:38.640 align:start position:0%
configuration is much easier than the
 

00:52:38.640 --> 00:52:41.030 align:start position:0%
configuration is much easier than the
deployment<00:52:39.280><c> as</c><00:52:39.359><c> you</c><00:52:39.520><c> see</c><00:52:40.240><c> first</c><00:52:40.480><c> let's</c><00:52:40.800><c> change</c>

00:52:41.030 --> 00:52:41.040 align:start position:0%
deployment as you see first let's change
 

00:52:41.040 --> 00:52:44.230 align:start position:0%
deployment as you see first let's change
the<00:52:41.200><c> name</c><00:52:41.680><c> let's</c><00:52:41.920><c> call</c><00:52:42.160><c> it</c><00:52:42.720><c> service</c><00:52:43.680><c> and</c>

00:52:44.230 --> 00:52:44.240 align:start position:0%
the name let's call it service and
 

00:52:44.240 --> 00:52:47.589 align:start position:0%
the name let's call it service and
remember<00:52:44.960><c> this</c><00:52:45.280><c> is</c><00:52:45.760><c> the</c><00:52:46.079><c> end</c><00:52:46.400><c> point</c>

00:52:47.589 --> 00:52:47.599 align:start position:0%
remember this is the end point
 

00:52:47.599 --> 00:52:48.710 align:start position:0%
remember this is the end point
which

00:52:48.710 --> 00:52:48.720 align:start position:0%
which
 

00:52:48.720 --> 00:52:50.950 align:start position:0%
which
we<00:52:48.880><c> will</c><00:52:49.040><c> use</c><00:52:49.359><c> to</c><00:52:49.680><c> access</c><00:52:50.640><c> and</c><00:52:50.720><c> that's</c>

00:52:50.950 --> 00:52:50.960 align:start position:0%
we will use to access and that's
 

00:52:50.960 --> 00:52:53.910 align:start position:0%
we will use to access and that's
what<00:52:51.200><c> we</c><00:52:51.359><c> defined</c><00:52:52.000><c> right</c><00:52:52.240><c> here</c><00:52:52.800><c> so</c><00:52:53.040><c> this</c><00:52:53.359><c> is</c>

00:52:53.910 --> 00:52:53.920 align:start position:0%
what we defined right here so this is
 

00:52:53.920 --> 00:52:57.750 align:start position:0%
what we defined right here so this is
the<00:52:54.240><c> name</c><00:52:54.800><c> of</c><00:52:54.960><c> the</c><00:52:55.119><c> service</c>

00:52:57.750 --> 00:52:57.760 align:start position:0%
 
 

00:52:57.760 --> 00:53:00.390 align:start position:0%
 
and<00:52:58.160><c> in</c><00:52:58.240><c> the</c><00:52:58.400><c> specification</c><00:52:59.520><c> we</c><00:52:59.760><c> have</c>

00:53:00.390 --> 00:53:00.400 align:start position:0%
and in the specification we have
 

00:53:00.400 --> 00:53:03.510 align:start position:0%
and in the specification we have
service<00:53:00.880><c> specific</c><00:53:01.680><c> attributes</c><00:53:02.720><c> first</c><00:53:02.960><c> of</c><00:53:03.119><c> all</c>

00:53:03.510 --> 00:53:03.520 align:start position:0%
service specific attributes first of all
 

00:53:03.520 --> 00:53:06.069 align:start position:0%
service specific attributes first of all
we<00:53:03.760><c> have</c><00:53:04.319><c> the</c><00:53:04.559><c> selector</c><00:53:05.200><c> attribute</c><00:53:05.760><c> which</c><00:53:05.920><c> you</c>

00:53:06.069 --> 00:53:06.079 align:start position:0%
we have the selector attribute which you
 

00:53:06.079 --> 00:53:08.630 align:start position:0%
we have the selector attribute which you
already<00:53:06.400><c> know</c><00:53:06.559><c> from</c><00:53:06.800><c> here</c><00:53:07.599><c> now</c><00:53:08.240><c> why</c><00:53:08.400><c> do</c><00:53:08.559><c> we</c>

00:53:08.630 --> 00:53:08.640 align:start position:0%
already know from here now why do we
 

00:53:08.640 --> 00:53:11.349 align:start position:0%
already know from here now why do we
need<00:53:08.880><c> a</c><00:53:09.040><c> selector</c><00:53:09.680><c> in</c><00:53:09.920><c> service</c><00:53:10.640><c> because</c><00:53:11.200><c> as</c>

00:53:11.349 --> 00:53:11.359 align:start position:0%
need a selector in service because as
 

00:53:11.359 --> 00:53:14.150 align:start position:0%
need a selector in service because as
you<00:53:11.520><c> know</c><00:53:12.160><c> service</c><00:53:13.040><c> needs</c><00:53:13.359><c> to</c><00:53:13.599><c> forward</c><00:53:14.000><c> the</c>

00:53:14.150 --> 00:53:14.160 align:start position:0%
you know service needs to forward the
 

00:53:14.160 --> 00:53:17.030 align:start position:0%
you know service needs to forward the
request<00:53:15.040><c> that</c><00:53:15.280><c> it</c><00:53:15.440><c> gets</c><00:53:16.079><c> to</c>

00:53:17.030 --> 00:53:17.040 align:start position:0%
request that it gets to
 

00:53:17.040 --> 00:53:20.390 align:start position:0%
request that it gets to
its<00:53:17.440><c> endpoint</c><00:53:18.559><c> pods</c><00:53:19.359><c> how</c><00:53:19.520><c> does</c><00:53:19.839><c> service</c><00:53:20.160><c> know</c>

00:53:20.390 --> 00:53:20.400 align:start position:0%
its endpoint pods how does service know
 

00:53:20.400 --> 00:53:23.030 align:start position:0%
its endpoint pods how does service know
which<00:53:20.960><c> pods</c><00:53:21.359><c> belong</c><00:53:21.760><c> to</c><00:53:22.000><c> it</c><00:53:22.160><c> and</c><00:53:22.319><c> which</c><00:53:22.640><c> ones</c>

00:53:23.030 --> 00:53:23.040 align:start position:0%
which pods belong to it and which ones
 

00:53:23.040 --> 00:53:25.910 align:start position:0%
which pods belong to it and which ones
it<00:53:23.280><c> should</c><00:53:23.839><c> forward</c><00:53:24.240><c> the</c><00:53:24.400><c> requests</c><00:53:24.960><c> to</c><00:53:25.520><c> well</c>

00:53:25.910 --> 00:53:25.920 align:start position:0%
it should forward the requests to well
 

00:53:25.920 --> 00:53:29.109 align:start position:0%
it should forward the requests to well
using<00:53:26.559><c> the</c><00:53:26.720><c> same</c><00:53:27.359><c> label</c><00:53:27.760><c> selector</c><00:53:28.480><c> as</c><00:53:28.640><c> we</c><00:53:28.800><c> saw</c>

00:53:29.109 --> 00:53:29.119 align:start position:0%
using the same label selector as we saw
 

00:53:29.119 --> 00:53:32.390 align:start position:0%
using the same label selector as we saw
on<00:53:29.280><c> deployment</c><00:53:30.319><c> so</c><00:53:30.960><c> this</c><00:53:31.200><c> should</c><00:53:31.520><c> match</c>

00:53:32.390 --> 00:53:32.400 align:start position:0%
on deployment so this should match
 

00:53:32.400 --> 00:53:33.510 align:start position:0%
on deployment so this should match
the<00:53:32.559><c> label</c>

00:53:33.510 --> 00:53:33.520 align:start position:0%
the label
 

00:53:33.520 --> 00:53:35.990 align:start position:0%
the label
of<00:53:33.680><c> the</c><00:53:34.079><c> pods</c><00:53:34.960><c> that</c><00:53:35.200><c> will</c><00:53:35.359><c> belong</c><00:53:35.680><c> to</c><00:53:35.839><c> the</c>

00:53:35.990 --> 00:53:36.000 align:start position:0%
of the pods that will belong to the
 

00:53:36.000 --> 00:53:37.910 align:start position:0%
of the pods that will belong to the
service<00:53:36.480><c> which</c><00:53:36.720><c> is</c>

00:53:37.910 --> 00:53:37.920 align:start position:0%
service which is
 

00:53:37.920 --> 00:53:41.030 align:start position:0%
service which is
 and<00:53:38.960><c> that's</c><00:53:39.200><c> how</c><00:53:39.520><c> service</c><00:53:40.079><c> and</c><00:53:40.240><c> pods</c>

00:53:41.030 --> 00:53:41.040 align:start position:0%
 and that's how service and pods
 

00:53:41.040 --> 00:53:43.750 align:start position:0%
 and that's how service and pods
will<00:53:41.839><c> find</c><00:53:42.160><c> each</c><00:53:42.319><c> other</c><00:53:42.800><c> and</c><00:53:42.960><c> then</c><00:53:43.119><c> we</c><00:53:43.359><c> have</c>

00:53:43.750 --> 00:53:43.760 align:start position:0%
will find each other and then we have
 

00:53:43.760 --> 00:53:46.150 align:start position:0%
will find each other and then we have
the<00:53:43.920><c> ports</c><00:53:44.319><c> configuration</c><00:53:45.359><c> which</c><00:53:45.599><c> is</c><00:53:45.760><c> also</c>

00:53:46.150 --> 00:53:46.160 align:start position:0%
the ports configuration which is also
 

00:53:46.160 --> 00:53:48.870 align:start position:0%
the ports configuration which is also
super<00:53:46.480><c> simple</c><00:53:47.200><c> service</c><00:53:47.760><c> is</c><00:53:48.079><c> accessible</c>

00:53:48.870 --> 00:53:48.880 align:start position:0%
super simple service is accessible
 

00:53:48.880 --> 00:53:51.990 align:start position:0%
super simple service is accessible
within<00:53:49.200><c> the</c><00:53:49.359><c> cluster</c><00:53:50.240><c> using</c><00:53:51.119><c> its</c><00:53:51.440><c> own</c><00:53:51.680><c> ip</c>

00:53:51.990 --> 00:53:52.000 align:start position:0%
within the cluster using its own ip
 

00:53:52.000 --> 00:53:55.030 align:start position:0%
within the cluster using its own ip
address<00:53:52.559><c> and</c><00:53:52.800><c> the</c><00:53:53.040><c> port</c><00:53:53.599><c> and</c><00:53:53.760><c> we</c><00:53:53.920><c> define</c><00:53:54.400><c> its</c>

00:53:55.030 --> 00:53:55.040 align:start position:0%
address and the port and we define its
 

00:53:55.040 --> 00:53:56.630 align:start position:0%
address and the port and we define its
port<00:53:55.599><c> right</c><00:53:55.839><c> here</c>

00:53:56.630 --> 00:53:56.640 align:start position:0%
port right here
 

00:53:56.640 --> 00:53:58.870 align:start position:0%
port right here
and<00:53:56.800><c> this</c><00:53:56.960><c> can</c><00:53:57.119><c> be</c><00:53:57.359><c> any</c><00:53:57.599><c> port</c><00:53:58.079><c> that</c><00:53:58.319><c> we</c><00:53:58.480><c> decide</c>

00:53:58.870 --> 00:53:58.880 align:start position:0%
and this can be any port that we decide
 

00:53:58.880 --> 00:54:01.670 align:start position:0%
and this can be any port that we decide
on<00:53:59.040><c> this</c><00:53:59.200><c> could</c><00:53:59.359><c> be</c><00:53:59.599><c> 80</c><00:54:00.400><c> 8080</c><00:54:01.200><c> doesn't</c><00:54:01.440><c> really</c>

00:54:01.670 --> 00:54:01.680 align:start position:0%
on this could be 80 8080 doesn't really
 

00:54:01.680 --> 00:54:02.630 align:start position:0%
on this could be 80 8080 doesn't really
matter

00:54:02.630 --> 00:54:02.640 align:start position:0%
matter
 

00:54:02.640 --> 00:54:06.390 align:start position:0%
matter
and<00:54:03.359><c> we</c><00:54:03.520><c> have</c><00:54:03.760><c> the</c><00:54:04.000><c> target</c><00:54:04.480><c> port</c><00:54:05.200><c> which</c><00:54:05.440><c> is</c><00:54:06.079><c> the</c>

00:54:06.390 --> 00:54:06.400 align:start position:0%
and we have the target port which is the
 

00:54:06.400 --> 00:54:09.190 align:start position:0%
and we have the target port which is the
port<00:54:06.800><c> of</c><00:54:07.440><c> the</c><00:54:07.760><c> pods</c><00:54:08.400><c> that</c><00:54:08.640><c> belong</c><00:54:08.960><c> to</c><00:54:09.119><c> the</c>

00:54:09.190 --> 00:54:09.200 align:start position:0%
port of the pods that belong to the
 

00:54:09.200 --> 00:54:12.790 align:start position:0%
port of the pods that belong to the
service<00:54:10.000><c> and</c><00:54:10.720><c> logically</c><00:54:11.359><c> enough</c><00:54:12.079><c> the</c><00:54:12.319><c> target</c>

00:54:12.790 --> 00:54:12.800 align:start position:0%
service and logically enough the target
 

00:54:12.800 --> 00:54:15.109 align:start position:0%
service and logically enough the target
port<00:54:13.440><c> should</c><00:54:13.760><c> always</c><00:54:14.079><c> be</c><00:54:14.240><c> the</c><00:54:14.480><c> same</c><00:54:14.800><c> as</c><00:54:15.040><c> the</c>

00:54:15.109 --> 00:54:15.119 align:start position:0%
port should always be the same as the
 

00:54:15.119 --> 00:54:17.910 align:start position:0%
port should always be the same as the
container<00:54:15.680><c> port</c><00:54:16.160><c> because</c><00:54:16.480><c> that's</c><00:54:16.800><c> where</c><00:54:17.040><c> the</c>

00:54:17.910 --> 00:54:17.920 align:start position:0%
container port because that's where the
 

00:54:17.920 --> 00:54:20.870 align:start position:0%
container port because that's where the
application<00:54:19.119><c> in</c><00:54:19.280><c> the</c><00:54:19.440><c> pod</c><00:54:19.760><c> is</c><00:54:19.920><c> accessible</c>

00:54:20.870 --> 00:54:20.880 align:start position:0%
application in the pod is accessible
 

00:54:20.880 --> 00:54:23.430 align:start position:0%
application in the pod is accessible
that's<00:54:21.280><c> where</c><00:54:21.920><c> the</c><00:54:22.160><c> service</c><00:54:22.720><c> should</c><00:54:23.040><c> forward</c>

00:54:23.430 --> 00:54:23.440 align:start position:0%
that's where the service should forward
 

00:54:23.440 --> 00:54:26.950 align:start position:0%
that's where the service should forward
the<00:54:23.599><c> request</c><00:54:24.160><c> to</c><00:54:24.800><c> so</c><00:54:25.040><c> again</c><00:54:25.760><c> very</c><00:54:26.079><c> important</c>

00:54:26.950 --> 00:54:26.960 align:start position:0%
the request to so again very important
 

00:54:26.960 --> 00:54:29.829 align:start position:0%
the request to so again very important
port<00:54:27.280><c> attribute</c><00:54:28.240><c> sets</c><00:54:28.559><c> the</c><00:54:28.800><c> port</c><00:54:29.200><c> of</c><00:54:29.599><c> the</c>

00:54:29.829 --> 00:54:29.839 align:start position:0%
port attribute sets the port of the
 

00:54:29.839 --> 00:54:33.750 align:start position:0%
port attribute sets the port of the
service<00:54:30.720><c> and</c><00:54:30.960><c> target</c><00:54:31.440><c> port</c><00:54:32.160><c> tells</c><00:54:32.640><c> service</c>

00:54:33.750 --> 00:54:33.760 align:start position:0%
service and target port tells service
 

00:54:33.760 --> 00:54:36.470 align:start position:0%
service and target port tells service
to<00:54:34.079><c> which</c><00:54:34.800><c> port</c><00:54:35.440><c> it</c><00:54:35.680><c> should</c><00:54:36.000><c> forward</c><00:54:36.319><c> the</c>

00:54:36.470 --> 00:54:36.480 align:start position:0%
to which port it should forward the
 

00:54:36.480 --> 00:54:39.349 align:start position:0%
to which port it should forward the
request<00:54:37.440><c> to</c><00:54:37.599><c> the</c><00:54:37.760><c> pods</c><00:54:38.559><c> and</c><00:54:38.720><c> this</c><00:54:38.960><c> should</c><00:54:39.119><c> be</c>

00:54:39.349 --> 00:54:39.359 align:start position:0%
request to the pods and this should be
 

00:54:39.359 --> 00:54:41.750 align:start position:0%
request to the pods and this should be
same<00:54:39.680><c> as</c><00:54:39.920><c> the</c><00:54:40.079><c> container</c><00:54:40.640><c> port</c><00:54:41.280><c> port</c><00:54:41.599><c> and</c>

00:54:41.750 --> 00:54:41.760 align:start position:0%
same as the container port port and
 

00:54:41.760 --> 00:54:44.789 align:start position:0%
same as the container port port and
target<00:54:42.079><c> port</c><00:54:42.799><c> values</c><00:54:43.200><c> can</c><00:54:43.359><c> be</c><00:54:43.520><c> different</c><00:54:44.400><c> or</c>

00:54:44.789 --> 00:54:44.799 align:start position:0%
target port values can be different or
 

00:54:44.799 --> 00:54:46.950 align:start position:0%
target port values can be different or
again<00:54:45.200><c> it's</c><00:54:45.440><c> a</c><00:54:45.520><c> common</c><00:54:45.920><c> standard</c>

00:54:46.950 --> 00:54:46.960 align:start position:0%
again it's a common standard
 

00:54:46.960 --> 00:54:47.750 align:start position:0%
again it's a common standard
to

00:54:47.750 --> 00:54:47.760 align:start position:0%
to
 

00:54:47.760 --> 00:54:49.829 align:start position:0%
to
select<00:54:48.240><c> the</c><00:54:48.480><c> same</c><00:54:48.720><c> port</c><00:54:48.960><c> for</c><00:54:49.119><c> the</c><00:54:49.280><c> service</c><00:54:49.680><c> as</c>

00:54:49.829 --> 00:54:49.839 align:start position:0%
select the same port for the service as
 

00:54:49.839 --> 00:54:52.710 align:start position:0%
select the same port for the service as
well<00:54:50.240><c> just</c><00:54:50.480><c> to</c><00:54:50.640><c> keep</c><00:54:50.960><c> things</c><00:54:51.440><c> simple</c><00:54:52.319><c> so</c><00:54:52.480><c> let's</c>

00:54:52.710 --> 00:54:52.720 align:start position:0%
well just to keep things simple so let's
 

00:54:52.720 --> 00:54:55.589 align:start position:0%
well just to keep things simple so let's
save<00:54:52.960><c> this</c><00:54:53.440><c> and</c><00:54:53.599><c> that's</c><00:54:54.079><c> our</c><00:54:54.640><c> configuration</c>

00:54:55.589 --> 00:54:55.599 align:start position:0%
save this and that's our configuration
 

00:54:55.599 --> 00:55:00.789 align:start position:0%
save this and that's our configuration
for<00:54:55.839><c> mongodb</c><00:54:56.559><c> deployment</c><00:54:57.119><c> and</c><00:54:57.359><c> service</c>

00:55:00.789 --> 00:55:00.799 align:start position:0%
 
 

00:55:00.799 --> 00:55:03.430 align:start position:0%
 
now<00:55:01.119><c> i'm</c><00:55:01.280><c> going</c><00:55:01.359><c> to</c><00:55:01.440><c> copy</c><00:55:01.760><c> this</c><00:55:02.000><c> whole</c><00:55:02.240><c> thing</c>

00:55:03.430 --> 00:55:03.440 align:start position:0%
now i'm going to copy this whole thing
 

00:55:03.440 --> 00:55:04.230 align:start position:0%
now i'm going to copy this whole thing
and

00:55:04.230 --> 00:55:04.240 align:start position:0%
and
 

00:55:04.240 --> 00:55:05.349 align:start position:0%
and
create

00:55:05.349 --> 00:55:05.359 align:start position:0%
create
 

00:55:05.359 --> 00:55:07.990 align:start position:0%
create
a<00:55:05.520><c> deployment</c><00:55:06.079><c> in</c><00:55:06.240><c> service</c><00:55:06.960><c> for</c><00:55:07.599><c> web</c>

00:55:07.990 --> 00:55:08.000 align:start position:0%
a deployment in service for web
 

00:55:08.000 --> 00:55:11.270 align:start position:0%
a deployment in service for web
application<00:55:09.040><c> for</c><00:55:09.440><c> our</c><00:55:09.920><c> kubernetes</c><00:55:10.640><c> demo</c>

00:55:11.270 --> 00:55:11.280 align:start position:0%
application for our kubernetes demo
 

00:55:11.280 --> 00:55:14.230 align:start position:0%
application for our kubernetes demo
application<00:55:12.240><c> and</c><00:55:12.319><c> let's</c><00:55:12.559><c> call</c><00:55:12.720><c> this</c><00:55:13.200><c> webapp</c>

00:55:14.230 --> 00:55:14.240 align:start position:0%
application and let's call this webapp
 

00:55:14.240 --> 00:55:16.549 align:start position:0%
application and let's call this webapp
dot<00:55:14.559><c> yaml</c>

00:55:16.549 --> 00:55:16.559 align:start position:0%
dot yaml
 

00:55:16.559 --> 00:55:17.750 align:start position:0%
dot yaml
paste

00:55:17.750 --> 00:55:17.760 align:start position:0%
paste
 

00:55:17.760 --> 00:55:19.190 align:start position:0%
paste
everything<00:55:18.319><c> in</c>

00:55:19.190 --> 00:55:19.200 align:start position:0%
everything in
 

00:55:19.200 --> 00:55:21.990 align:start position:0%
everything in
and<00:55:19.599><c> we</c><00:55:19.760><c> can</c><00:55:19.920><c> just</c><00:55:20.240><c> adjust</c><00:55:20.880><c> all</c><00:55:21.040><c> these</c>

00:55:21.990 --> 00:55:22.000 align:start position:0%
and we can just adjust all these
 

00:55:22.000 --> 00:55:29.990 align:start position:0%
and we can just adjust all these
values

00:55:29.990 --> 00:55:30.000 align:start position:0%
 
 

00:55:30.000 --> 00:55:31.829 align:start position:0%
 
in<00:55:30.160><c> the</c><00:55:30.319><c> service</c>

00:55:31.829 --> 00:55:31.839 align:start position:0%
in the service
 

00:55:31.839 --> 00:55:33.270 align:start position:0%
in the service
and<00:55:32.000><c> deployment</c>

00:55:33.270 --> 00:55:33.280 align:start position:0%
and deployment
 

00:55:33.280 --> 00:55:35.430 align:start position:0%
and deployment
all<00:55:33.359><c> the</c><00:55:33.599><c> labels</c><00:55:34.160><c> and</c><00:55:34.400><c> label</c><00:55:34.720><c> selectors</c><00:55:35.280><c> of</c>

00:55:35.430 --> 00:55:35.440 align:start position:0%
all the labels and label selectors of
 

00:55:35.440 --> 00:55:36.710 align:start position:0%
all the labels and label selectors of
course

00:55:36.710 --> 00:55:36.720 align:start position:0%
course
 

00:55:36.720 --> 00:55:39.109 align:start position:0%
course
and<00:55:37.200><c> right</c><00:55:37.520><c> here</c><00:55:37.839><c> we</c><00:55:38.079><c> of</c><00:55:38.160><c> course</c><00:55:38.480><c> need</c><00:55:38.960><c> the</c>

00:55:39.109 --> 00:55:39.119 align:start position:0%
and right here we of course need the
 

00:55:39.119 --> 00:55:42.470 align:start position:0%
and right here we of course need the
correct<00:55:39.839><c> image</c><00:55:40.720><c> of</c><00:55:40.960><c> our</c><00:55:41.280><c> web</c><00:55:41.520><c> application</c>

00:55:42.470 --> 00:55:42.480 align:start position:0%
correct image of our web application
 

00:55:42.480 --> 00:55:44.710 align:start position:0%
correct image of our web application
going<00:55:42.799><c> back</c><00:55:43.040><c> to</c><00:55:43.359><c> our</c><00:55:43.520><c> docker</c><00:55:43.839><c> hub</c>

00:55:44.710 --> 00:55:44.720 align:start position:0%
going back to our docker hub
 

00:55:44.720 --> 00:55:45.750 align:start position:0%
going back to our docker hub
this<00:55:44.960><c> is</c>

00:55:45.750 --> 00:55:45.760 align:start position:0%
this is
 

00:55:45.760 --> 00:55:48.630 align:start position:0%
this is
the<00:55:46.000><c> name</c><00:55:46.400><c> of</c><00:55:46.559><c> my</c><00:55:46.799><c> image</c><00:55:47.520><c> and</c><00:55:47.680><c> again</c><00:55:48.000><c> this</c><00:55:48.319><c> is</c>

00:55:48.630 --> 00:55:48.640 align:start position:0%
the name of my image and again this is
 

00:55:48.640 --> 00:55:51.190 align:start position:0%
the name of my image and again this is
publicly<00:55:49.119><c> accessible</c><00:55:49.680><c> so</c><00:55:49.839><c> you</c><00:55:50.000><c> can</c><00:55:50.559><c> use</c><00:55:50.799><c> it</c><00:55:51.040><c> as</c>

00:55:51.190 --> 00:55:51.200 align:start position:0%
publicly accessible so you can use it as
 

00:55:51.200 --> 00:55:52.309 align:start position:0%
publicly accessible so you can use it as
well

00:55:52.309 --> 00:55:52.319 align:start position:0%
well
 

00:55:52.319 --> 00:55:53.270 align:start position:0%
well
and

00:55:53.270 --> 00:55:53.280 align:start position:0%
and
 

00:55:53.280 --> 00:55:55.750 align:start position:0%
and
the<00:55:53.599><c> tag</c><00:55:54.079><c> is</c><00:55:54.799><c> v</c>

00:55:55.750 --> 00:55:55.760 align:start position:0%
the tag is v
 

00:55:55.760 --> 00:55:57.510 align:start position:0%
the tag is v
1.0

00:55:57.510 --> 00:55:57.520 align:start position:0%
1.0
 

00:55:57.520 --> 00:55:59.670 align:start position:0%
1.0
and<00:55:57.680><c> there</c><00:55:57.839><c> you</c><00:55:57.920><c> go</c><00:55:58.559><c> so</c><00:55:58.799><c> this</c><00:55:58.960><c> is</c><00:55:59.119><c> a</c><00:55:59.359><c> very</c>

00:55:59.670 --> 00:55:59.680 align:start position:0%
and there you go so this is a very
 

00:55:59.680 --> 00:56:02.870 align:start position:0%
and there you go so this is a very
simple<00:56:00.480><c> node.js</c><00:56:01.119><c> application</c><00:56:02.160><c> which</c><00:56:02.480><c> starts</c>

00:56:02.870 --> 00:56:02.880 align:start position:0%
simple node.js application which starts
 

00:56:02.880 --> 00:56:05.670 align:start position:0%
simple node.js application which starts
on<00:56:03.119><c> port</c><00:56:03.599><c> 3000</c><00:56:04.559><c> so</c><00:56:04.799><c> that's</c><00:56:05.040><c> why</c><00:56:05.200><c> we</c><00:56:05.359><c> need</c><00:56:05.520><c> to</c>

00:56:05.670 --> 00:56:05.680 align:start position:0%
on port 3000 so that's why we need to
 

00:56:05.680 --> 00:56:08.630 align:start position:0%
on port 3000 so that's why we need to
define<00:56:06.160><c> container</c><00:56:06.799><c> port</c><00:56:07.200><c> on</c><00:56:07.440><c> 3000</c><00:56:08.400><c> and</c>

00:56:08.630 --> 00:56:08.640 align:start position:0%
define container port on 3000 and
 

00:56:08.640 --> 00:56:11.430 align:start position:0%
define container port on 3000 and
container<00:56:09.119><c> port</c><00:56:09.520><c> is</c><00:56:09.680><c> same</c><00:56:09.920><c> as</c><00:56:10.160><c> target</c><00:56:10.640><c> port</c>

00:56:11.430 --> 00:56:11.440 align:start position:0%
container port is same as target port
 

00:56:11.440 --> 00:56:13.750 align:start position:0%
container port is same as target port
on<00:56:11.599><c> the</c><00:56:11.760><c> service</c><00:56:12.640><c> and</c><00:56:12.799><c> we</c><00:56:12.960><c> can</c><00:56:13.119><c> set</c><00:56:13.359><c> the</c>

00:56:13.750 --> 00:56:13.760 align:start position:0%
on the service and we can set the
 

00:56:13.760 --> 00:56:16.470 align:start position:0%
on the service and we can set the
service<00:56:14.240><c> port</c><00:56:14.720><c> to</c><00:56:14.960><c> the</c><00:56:15.040><c> same</c><00:56:15.359><c> value</c><00:56:16.160><c> and</c><00:56:16.319><c> this</c>

00:56:16.470 --> 00:56:16.480 align:start position:0%
service port to the same value and this
 

00:56:16.480 --> 00:56:17.829 align:start position:0%
service port to the same value and this
will<00:56:16.720><c> configure</c>

00:56:17.829 --> 00:56:17.839 align:start position:0%
will configure
 

00:56:17.839 --> 00:56:19.270 align:start position:0%
will configure
deployment

00:56:19.270 --> 00:56:19.280 align:start position:0%
deployment
 

00:56:19.280 --> 00:56:20.549 align:start position:0%
deployment
and

00:56:20.549 --> 00:56:20.559 align:start position:0%
and
 

00:56:20.559 --> 00:56:23.349 align:start position:0%
and
service<00:56:21.280><c> for</c><00:56:21.520><c> our</c><00:56:21.760><c> web</c><00:56:22.079><c> application</c>

00:56:23.349 --> 00:56:23.359 align:start position:0%
service for our web application
 

00:56:23.359 --> 00:56:24.789 align:start position:0%
service for our web application
so<00:56:23.599><c> this</c><00:56:23.920><c> is</c>

00:56:24.789 --> 00:56:24.799 align:start position:0%
so this is
 

00:56:24.799 --> 00:56:27.829 align:start position:0%
so this is
the<00:56:25.040><c> basic</c><00:56:25.680><c> configuration</c><00:56:26.799><c> for</c><00:56:27.200><c> deployment</c>

00:56:27.829 --> 00:56:27.839 align:start position:0%
the basic configuration for deployment
 

00:56:27.839 --> 00:56:29.990 align:start position:0%
the basic configuration for deployment
and<00:56:28.000><c> service</c><00:56:28.559><c> for</c><00:56:28.880><c> any</c><00:56:29.119><c> application</c><00:56:29.839><c> in</c>

00:56:29.990 --> 00:56:30.000 align:start position:0%
and service for any application in
 

00:56:30.000 --> 00:56:34.390 align:start position:0%
and service for any application in
kubernetes<00:56:30.559><c> cluster</c>

00:56:34.390 --> 00:56:34.400 align:start position:0%
 
 

00:56:34.400 --> 00:56:37.109 align:start position:0%
 
but<00:56:34.559><c> we</c><00:56:34.720><c> have</c><00:56:34.960><c> one</c><00:56:35.200><c> more</c><00:56:35.359><c> thing</c><00:56:35.599><c> to</c><00:56:36.079><c> configure</c>

00:56:37.109 --> 00:56:37.119 align:start position:0%
but we have one more thing to configure
 

00:56:37.119 --> 00:56:40.470 align:start position:0%
but we have one more thing to configure
in<00:56:37.440><c> our</c><00:56:37.680><c> deployment</c><00:56:38.880><c> components</c><00:56:39.839><c> for</c><00:56:40.079><c> both</c>

00:56:40.470 --> 00:56:40.480 align:start position:0%
in our deployment components for both
 

00:56:40.480 --> 00:56:43.190 align:start position:0%
in our deployment components for both
 and<00:56:41.280><c> web</c><00:56:41.520><c> app</c><00:56:41.839><c> which</c><00:56:42.079><c> is</c><00:56:42.640><c> we</c><00:56:42.799><c> need</c><00:56:42.960><c> to</c>

00:56:43.190 --> 00:56:43.200 align:start position:0%
 and web app which is we need to
 

00:56:43.200 --> 00:56:47.270 align:start position:0%
 and web app which is we need to
pass<00:56:44.240><c> the</c><00:56:44.480><c> data</c><00:56:44.960><c> defined</c><00:56:45.839><c> in</c><00:56:46.000><c> the</c><00:56:46.160><c> config</c><00:56:46.799><c> and</c>

00:56:47.270 --> 00:56:47.280 align:start position:0%
pass the data defined in the config and
 

00:56:47.280 --> 00:56:48.950 align:start position:0%
pass the data defined in the config and
secret<00:56:47.680><c> components</c>

00:56:48.950 --> 00:56:48.960 align:start position:0%
secret components
 

00:56:48.960 --> 00:56:51.190 align:start position:0%
secret components
first<00:56:49.200><c> of</c><00:56:49.359><c> all</c><00:56:49.920><c> when</c><00:56:50.160><c> starting</c><00:56:50.480><c> a</c><00:56:50.559><c> mongodb</c>

00:56:51.190 --> 00:56:51.200 align:start position:0%
first of all when starting a mongodb
 

00:56:51.200 --> 00:56:54.309 align:start position:0%
first of all when starting a mongodb
application<00:56:52.240><c> we</c><00:56:52.400><c> need</c><00:56:52.559><c> to</c><00:56:52.799><c> set</c><00:56:53.440><c> user</c><00:56:53.760><c> name</c><00:56:54.079><c> and</c>

00:56:54.309 --> 00:56:54.319 align:start position:0%
application we need to set user name and
 

00:56:54.319 --> 00:56:56.390 align:start position:0%
application we need to set user name and
password<00:56:54.960><c> so</c><00:56:55.119><c> when</c><00:56:55.280><c> mongodb</c><00:56:55.839><c> application</c>

00:56:56.390 --> 00:56:56.400 align:start position:0%
password so when mongodb application
 

00:56:56.400 --> 00:56:58.309 align:start position:0%
password so when mongodb application
starts<00:56:56.799><c> it</c><00:56:56.880><c> will</c><00:56:57.119><c> automatically</c><00:56:57.760><c> generate</c>

00:56:58.309 --> 00:56:58.319 align:start position:0%
starts it will automatically generate
 

00:56:58.319 --> 00:57:00.870 align:start position:0%
starts it will automatically generate
username<00:56:58.799><c> and</c><00:56:58.960><c> password</c><00:56:59.760><c> for</c><00:56:59.920><c> mongodb</c><00:57:00.640><c> and</c><00:57:00.720><c> we</c>

00:57:00.870 --> 00:57:00.880 align:start position:0%
username and password for mongodb and we
 

00:57:00.880 --> 00:57:03.750 align:start position:0%
username and password for mongodb and we
can<00:57:01.040><c> then</c><00:57:01.280><c> use</c><00:57:01.520><c> that</c><00:57:02.160><c> to</c><00:57:02.640><c> access</c><00:57:03.119><c> it</c><00:57:03.359><c> in</c><00:57:03.520><c> our</c>

00:57:03.750 --> 00:57:03.760 align:start position:0%
can then use that to access it in our
 

00:57:03.760 --> 00:57:04.789 align:start position:0%
can then use that to access it in our
cluster

00:57:04.789 --> 00:57:04.799 align:start position:0%
cluster
 

00:57:04.799 --> 00:57:06.710 align:start position:0%
cluster
now<00:57:05.359><c> how</c><00:57:05.520><c> do</c><00:57:05.680><c> we</c><00:57:05.839><c> know</c>

00:57:06.710 --> 00:57:06.720 align:start position:0%
now how do we know
 

00:57:06.720 --> 00:57:08.950 align:start position:0%
now how do we know
how<00:57:07.119><c> username</c><00:57:07.680><c> and</c><00:57:07.760><c> password</c><00:57:08.400><c> can</c><00:57:08.559><c> be</c>

00:57:08.950 --> 00:57:08.960 align:start position:0%
how username and password can be
 

00:57:08.960 --> 00:57:11.829 align:start position:0%
how username and password can be
configured<00:57:09.599><c> in</c><00:57:09.680><c> a</c><00:57:09.760><c> mongodb</c><00:57:10.400><c> on</c><00:57:10.640><c> startup</c><00:57:11.440><c> well</c>

00:57:11.829 --> 00:57:11.839 align:start position:0%
configured in a mongodb on startup well
 

00:57:11.839 --> 00:57:14.630 align:start position:0%
configured in a mongodb on startup well
we<00:57:12.000><c> go</c><00:57:12.240><c> to</c><00:57:12.640><c> the</c><00:57:12.799><c> image</c><00:57:13.119><c> documentation</c><00:57:14.400><c> and</c>

00:57:14.630 --> 00:57:14.640 align:start position:0%
we go to the image documentation and
 

00:57:14.640 --> 00:57:16.710 align:start position:0%
we go to the image documentation and
right<00:57:14.880><c> here</c><00:57:15.119><c> we</c><00:57:15.280><c> see</c><00:57:15.839><c> the</c><00:57:16.160><c> environment</c>

00:57:16.710 --> 00:57:16.720 align:start position:0%
right here we see the environment
 

00:57:16.720 --> 00:57:18.630 align:start position:0%
right here we see the environment
variable<00:57:17.599><c> names</c>

00:57:18.630 --> 00:57:18.640 align:start position:0%
variable names
 

00:57:18.640 --> 00:57:21.190 align:start position:0%
variable names
for<00:57:18.960><c> username</c><00:57:19.520><c> and</c><00:57:19.680><c> password</c><00:57:20.480><c> and</c><00:57:20.640><c> these</c><00:57:20.880><c> are</c>

00:57:21.190 --> 00:57:21.200 align:start position:0%
for username and password and these are
 

00:57:21.200 --> 00:57:23.670 align:start position:0%
for username and password and these are
actually<00:57:21.680><c> required</c><00:57:22.559><c> fields</c><00:57:23.040><c> in</c><00:57:23.200><c> most</c><00:57:23.440><c> of</c><00:57:23.599><c> the</c>

00:57:23.670 --> 00:57:23.680 align:start position:0%
actually required fields in most of the
 

00:57:23.680 --> 00:57:26.309 align:start position:0%
actually required fields in most of the
databases<00:57:24.640><c> we</c><00:57:24.880><c> have</c><00:57:25.119><c> to</c><00:57:25.440><c> set</c><00:57:25.680><c> them</c><00:57:25.920><c> otherwise</c>

00:57:26.309 --> 00:57:26.319 align:start position:0%
databases we have to set them otherwise
 

00:57:26.319 --> 00:57:28.390 align:start position:0%
databases we have to set them otherwise
we<00:57:26.480><c> won't</c><00:57:26.640><c> be</c><00:57:26.799><c> able</c><00:57:27.040><c> to</c><00:57:27.200><c> access</c><00:57:27.520><c> them</c><00:57:28.079><c> so</c><00:57:28.240><c> the</c>

00:57:28.390 --> 00:57:28.400 align:start position:0%
we won't be able to access them so the
 

00:57:28.400 --> 00:57:30.789 align:start position:0%
we won't be able to access them so the
next<00:57:28.720><c> question</c><00:57:29.119><c> is</c><00:57:29.680><c> how</c><00:57:29.839><c> do</c><00:57:30.000><c> we</c><00:57:30.160><c> configure</c>

00:57:30.789 --> 00:57:30.799 align:start position:0%
next question is how do we configure
 

00:57:30.799 --> 00:57:33.750 align:start position:0%
next question is how do we configure
environment<00:57:31.440><c> variables</c><00:57:32.319><c> in</c><00:57:32.720><c> a</c><00:57:32.880><c> container</c>

00:57:33.750 --> 00:57:33.760 align:start position:0%
environment variables in a container
 

00:57:33.760 --> 00:57:35.910 align:start position:0%
environment variables in a container
configuration<00:57:34.960><c> so</c><00:57:35.200><c> how</c><00:57:35.359><c> do</c><00:57:35.440><c> we</c><00:57:35.599><c> pass</c>

00:57:35.910 --> 00:57:35.920 align:start position:0%
configuration so how do we pass
 

00:57:35.920 --> 00:57:37.670 align:start position:0%
configuration so how do we pass
environment<00:57:36.400><c> variables</c><00:57:37.119><c> to</c><00:57:37.359><c> this</c>

00:57:37.670 --> 00:57:37.680 align:start position:0%
environment variables to this
 

00:57:37.680 --> 00:57:40.630 align:start position:0%
environment variables to this
application<00:57:38.799><c> running</c><00:57:39.200><c> inside</c><00:57:39.520><c> the</c><00:57:39.680><c> container</c>

00:57:40.630 --> 00:57:40.640 align:start position:0%
application running inside the container
 

00:57:40.640 --> 00:57:44.390 align:start position:0%
application running inside the container
well<00:57:41.200><c> that's</c><00:57:41.520><c> also</c><00:57:42.319><c> very</c><00:57:42.640><c> easy</c><00:57:43.280><c> we</c><00:57:43.520><c> have</c><00:57:43.839><c> n</c>

00:57:44.390 --> 00:57:44.400 align:start position:0%
well that's also very easy we have n
 

00:57:44.400 --> 00:57:46.390 align:start position:0%
well that's also very easy we have n
attribute<00:57:44.880><c> for</c><00:57:45.040><c> that</c>

00:57:46.390 --> 00:57:46.400 align:start position:0%
attribute for that
 

00:57:46.400 --> 00:57:49.109 align:start position:0%
attribute for that
which<00:57:46.640><c> is</c><00:57:46.880><c> a</c><00:57:47.040><c> list</c><00:57:47.440><c> of</c><00:57:47.680><c> environment</c><00:57:48.160><c> variables</c>

00:57:49.109 --> 00:57:49.119 align:start position:0%
which is a list of environment variables
 

00:57:49.119 --> 00:57:50.710 align:start position:0%
which is a list of environment variables
with<00:57:49.599><c> names</c>

00:57:50.710 --> 00:57:50.720 align:start position:0%
with names
 

00:57:50.720 --> 00:57:52.630 align:start position:0%
with names
and

00:57:52.630 --> 00:57:52.640 align:start position:0%
and
 

00:57:52.640 --> 00:57:54.630 align:start position:0%
and
values<00:57:53.359><c> that's</c><00:57:53.680><c> it</c>

00:57:54.630 --> 00:57:54.640 align:start position:0%
values that's it
 

00:57:54.640 --> 00:57:55.589 align:start position:0%
values that's it
so

00:57:55.589 --> 00:57:55.599 align:start position:0%
so
 

00:57:55.599 --> 00:57:58.150 align:start position:0%
so
very<00:57:55.839><c> simple</c><00:57:56.480><c> so</c><00:57:56.720><c> name</c><00:57:57.040><c> is</c><00:57:57.520><c> the</c><00:57:57.680><c> environment</c>

00:57:58.150 --> 00:57:58.160 align:start position:0%
very simple so name is the environment
 

00:57:58.160 --> 00:58:00.470 align:start position:0%
very simple so name is the environment
variable<00:57:58.559><c> name</c><00:57:58.880><c> and</c><00:57:59.119><c> value</c><00:57:59.599><c> is</c>

00:58:00.470 --> 00:58:00.480 align:start position:0%
variable name and value is
 

00:58:00.480 --> 00:58:03.109 align:start position:0%
variable name and value is
the<00:58:00.720><c> environment</c><00:58:01.200><c> variable</c><00:58:01.920><c> value</c><00:58:02.720><c> so</c><00:58:02.880><c> let's</c>

00:58:03.109 --> 00:58:03.119 align:start position:0%
the environment variable value so let's
 

00:58:03.119 --> 00:58:05.750 align:start position:0%
the environment variable value so let's
copy<00:58:03.440><c> the</c><00:58:03.599><c> name</c>

00:58:05.750 --> 00:58:05.760 align:start position:0%
copy the name
 

00:58:05.760 --> 00:58:07.910 align:start position:0%
copy the name
so<00:58:05.920><c> this</c><00:58:06.160><c> is</c><00:58:06.559><c> the</c><00:58:06.799><c> environment</c><00:58:07.200><c> variable</c><00:58:07.680><c> name</c>

00:58:07.910 --> 00:58:07.920 align:start position:0%
so this is the environment variable name
 

00:58:07.920 --> 00:58:10.710 align:start position:0%
so this is the environment variable name
that<00:58:08.160><c> mongodb</c><00:58:09.040><c> expects</c><00:58:09.599><c> and</c><00:58:09.680><c> we</c><00:58:09.839><c> have</c><00:58:10.000><c> to</c><00:58:10.240><c> set</c>

00:58:10.710 --> 00:58:10.720 align:start position:0%
that mongodb expects and we have to set
 

00:58:10.720 --> 00:58:13.190 align:start position:0%
that mongodb expects and we have to set
a<00:58:10.880><c> value</c><00:58:11.599><c> whatever</c><00:58:12.000><c> we</c><00:58:12.160><c> want</c><00:58:12.400><c> the</c><00:58:12.480><c> username</c><00:58:13.040><c> to</c>

00:58:13.190 --> 00:58:13.200 align:start position:0%
a value whatever we want the username to
 

00:58:13.200 --> 00:58:16.069 align:start position:0%
a value whatever we want the username to
be<00:58:13.680><c> now</c><00:58:13.839><c> we</c><00:58:13.920><c> can</c><00:58:14.240><c> directly</c><00:58:14.799><c> set</c>

00:58:16.069 --> 00:58:16.079 align:start position:0%
be now we can directly set
 

00:58:16.079 --> 00:58:19.030 align:start position:0%
be now we can directly set
the<00:58:16.240><c> username</c><00:58:17.040><c> right</c><00:58:17.280><c> here</c><00:58:18.000><c> like</c><00:58:18.240><c> this</c>

00:58:19.030 --> 00:58:19.040 align:start position:0%
the username right here like this
 

00:58:19.040 --> 00:58:21.109 align:start position:0%
the username right here like this
or<00:58:19.359><c> in</c><00:58:19.599><c> our</c><00:58:19.760><c> case</c><00:58:20.000><c> we're</c><00:58:20.160><c> going</c><00:58:20.319><c> to</c><00:58:20.480><c> reference</c>

00:58:21.109 --> 00:58:21.119 align:start position:0%
or in our case we're going to reference
 

00:58:21.119 --> 00:58:24.309 align:start position:0%
or in our case we're going to reference
them<00:58:21.680><c> from</c><00:58:22.160><c> secret</c><00:58:22.880><c> and</c><00:58:23.200><c> config</c>

00:58:24.309 --> 00:58:24.319 align:start position:0%
them from secret and config
 

00:58:24.319 --> 00:58:25.990 align:start position:0%
them from secret and config
components

00:58:25.990 --> 00:58:26.000 align:start position:0%
components
 

00:58:26.000 --> 00:58:28.230 align:start position:0%
components
how<00:58:26.160><c> do</c><00:58:26.319><c> we</c><00:58:26.400><c> do</c><00:58:26.559><c> that</c><00:58:27.040><c> also</c><00:58:27.359><c> pretty</c><00:58:27.680><c> simple</c><00:58:28.079><c> we</c>

00:58:28.230 --> 00:58:28.240 align:start position:0%
how do we do that also pretty simple we
 

00:58:28.240 --> 00:58:31.030 align:start position:0%
how do we do that also pretty simple we
do<00:58:28.640><c> value</c><00:58:29.040><c> from</c>

00:58:31.030 --> 00:58:31.040 align:start position:0%
do value from
 

00:58:31.040 --> 00:58:32.950 align:start position:0%
do value from
and<00:58:31.119><c> we</c><00:58:31.280><c> want</c><00:58:31.440><c> to</c><00:58:31.520><c> reference</c><00:58:32.000><c> it</c>

00:58:32.950 --> 00:58:32.960 align:start position:0%
and we want to reference it
 

00:58:32.960 --> 00:58:36.549 align:start position:0%
and we want to reference it
from<00:58:33.200><c> the</c><00:58:33.359><c> secret</c><00:58:34.079><c> so</c><00:58:34.240><c> we</c><00:58:34.400><c> do</c><00:58:34.960><c> secret</c>

00:58:36.549 --> 00:58:36.559 align:start position:0%
from the secret so we do secret
 

00:58:36.559 --> 00:58:38.630 align:start position:0%
from the secret so we do secret
key

00:58:38.630 --> 00:58:38.640 align:start position:0%
key
 

00:58:38.640 --> 00:58:40.390 align:start position:0%
key
ref

00:58:40.390 --> 00:58:40.400 align:start position:0%
ref
 

00:58:40.400 --> 00:58:42.230 align:start position:0%
ref
and<00:58:40.720><c> under</c><00:58:40.960><c> that</c><00:58:41.119><c> we</c><00:58:41.280><c> have</c><00:58:41.440><c> the</c><00:58:41.680><c> name</c><00:58:42.000><c> of</c><00:58:42.079><c> the</c>

00:58:42.230 --> 00:58:42.240 align:start position:0%
and under that we have the name of the
 

00:58:42.240 --> 00:58:43.430 align:start position:0%
and under that we have the name of the
secret

00:58:43.430 --> 00:58:43.440 align:start position:0%
secret
 

00:58:43.440 --> 00:58:46.630 align:start position:0%
secret
which<00:58:43.680><c> we</c><00:58:43.920><c> called</c><00:58:45.040><c> secret</c>

00:58:46.630 --> 00:58:46.640 align:start position:0%
which we called secret
 

00:58:46.640 --> 00:58:50.150 align:start position:0%
which we called secret
and<00:58:47.200><c> the</c><00:58:47.520><c> key</c>

00:58:50.150 --> 00:58:50.160 align:start position:0%
and the key
 

00:58:50.160 --> 00:58:53.430 align:start position:0%
and the key
which<00:58:50.480><c> is</c><00:58:51.839><c> user</c>

00:58:53.430 --> 00:58:53.440 align:start position:0%
which is user
 

00:58:53.440 --> 00:58:55.270 align:start position:0%
which is user
so<00:58:53.680><c> kubernetes</c><00:58:54.319><c> will</c><00:58:54.480><c> basically</c><00:58:54.960><c> find</c><00:58:55.200><c> a</c>

00:58:55.270 --> 00:58:55.280 align:start position:0%
so kubernetes will basically find a
 

00:58:55.280 --> 00:58:57.030 align:start position:0%
so kubernetes will basically find a
secret<00:58:55.680><c> with</c><00:58:55.839><c> this</c><00:58:56.079><c> name</c>

00:58:57.030 --> 00:58:57.040 align:start position:0%
secret with this name
 

00:58:57.040 --> 00:58:59.910 align:start position:0%
secret with this name
and<00:58:57.520><c> get</c><00:58:57.760><c> the</c><00:58:57.920><c> value</c><00:58:58.559><c> set</c><00:58:58.960><c> for</c><00:58:59.200><c> this</c><00:58:59.440><c> key</c><00:58:59.680><c> and</c>

00:58:59.910 --> 00:58:59.920 align:start position:0%
and get the value set for this key and
 

00:58:59.920 --> 00:59:02.549 align:start position:0%
and get the value set for this key and
substitute<00:59:00.559><c> it</c><00:59:00.720><c> as</c><00:59:00.960><c> a</c><00:59:01.040><c> value</c><00:59:01.599><c> for</c><00:59:02.240><c> this</c>

00:59:02.549 --> 00:59:02.559 align:start position:0%
substitute it as a value for this
 

00:59:02.559 --> 00:59:04.870 align:start position:0%
substitute it as a value for this
environment<00:59:03.040><c> variable</c><00:59:04.079><c> and</c><00:59:04.240><c> the</c><00:59:04.400><c> same</c><00:59:04.640><c> way</c>

00:59:04.870 --> 00:59:04.880 align:start position:0%
environment variable and the same way
 

00:59:04.880 --> 00:59:06.549 align:start position:0%
environment variable and the same way
we're<00:59:05.119><c> gonna</c>

00:59:06.549 --> 00:59:06.559 align:start position:0%
we're gonna
 

00:59:06.559 --> 00:59:08.390 align:start position:0%
we're gonna
configure

00:59:08.390 --> 00:59:08.400 align:start position:0%
configure
 

00:59:08.400 --> 00:59:09.589 align:start position:0%
configure
a<00:59:08.559><c> password</c>

00:59:09.589 --> 00:59:09.599 align:start position:0%
a password
 

00:59:09.599 --> 00:59:12.230 align:start position:0%
a password
so<00:59:09.839><c> let's</c><00:59:10.319><c> take</c><00:59:10.559><c> the</c><00:59:10.720><c> password</c><00:59:11.760><c> that's</c><00:59:12.079><c> the</c>

00:59:12.230 --> 00:59:12.240 align:start position:0%
so let's take the password that's the
 

00:59:12.240 --> 00:59:14.549 align:start position:0%
so let's take the password that's the
name<00:59:12.960><c> of</c><00:59:13.040><c> the</c><00:59:13.200><c> environment</c><00:59:13.599><c> variable</c>

00:59:14.549 --> 00:59:14.559 align:start position:0%
name of the environment variable
 

00:59:14.559 --> 00:59:16.710 align:start position:0%
name of the environment variable
same<00:59:15.280><c> secrets</c>

00:59:16.710 --> 00:59:16.720 align:start position:0%
same secrets
 

00:59:16.720 --> 00:59:19.829 align:start position:0%
same secrets
component

00:59:19.829 --> 00:59:19.839 align:start position:0%
 
 

00:59:19.839 --> 00:59:22.309 align:start position:0%
 
this<00:59:20.079><c> time</c><00:59:20.319><c> with</c><00:59:20.559><c> a</c><00:59:20.640><c> different</c><00:59:21.119><c> key</c>

00:59:22.309 --> 00:59:22.319 align:start position:0%
this time with a different key
 

00:59:22.319 --> 00:59:23.750 align:start position:0%
this time with a different key
and<00:59:22.559><c> that's</c><00:59:22.880><c> it</c>

00:59:23.750 --> 00:59:23.760 align:start position:0%
and that's it
 

00:59:23.760 --> 00:59:26.390 align:start position:0%
and that's it
so<00:59:24.079><c> our</c><00:59:24.319><c> mongodb</c><00:59:24.880><c> configuration</c><00:59:25.599><c> file</c><00:59:26.000><c> is</c>

00:59:26.390 --> 00:59:26.400 align:start position:0%
so our mongodb configuration file is
 

00:59:26.400 --> 00:59:28.150 align:start position:0%
so our mongodb configuration file is
complete

00:59:28.150 --> 00:59:28.160 align:start position:0%
complete
 

00:59:28.160 --> 00:59:30.630 align:start position:0%
complete
and<00:59:28.319><c> when</c><00:59:28.559><c> it</c><00:59:28.640><c> starts</c><00:59:29.520><c> a</c><00:59:29.680><c> user</c><00:59:30.160><c> with</c><00:59:30.319><c> these</c>

00:59:30.630 --> 00:59:30.640 align:start position:0%
and when it starts a user with these
 

00:59:30.640 --> 00:59:35.510 align:start position:0%
and when it starts a user with these
credentials<00:59:31.440><c> will</c><00:59:31.680><c> be</c><00:59:31.920><c> created</c>

00:59:35.510 --> 00:59:35.520 align:start position:0%
 
 

00:59:35.520 --> 00:59:38.230 align:start position:0%
 
when<00:59:35.760><c> our</c><00:59:36.000><c> web</c><00:59:36.240><c> application</c><00:59:36.960><c> starts</c><00:59:37.760><c> it</c><00:59:38.000><c> will</c>

00:59:38.230 --> 00:59:38.240 align:start position:0%
when our web application starts it will
 

00:59:38.240 --> 00:59:40.950 align:start position:0%
when our web application starts it will
need<00:59:38.400><c> to</c><00:59:38.640><c> connect</c><00:59:39.119><c> to</c><00:59:39.520><c> the</c><00:59:39.680><c> database</c><00:59:40.559><c> so</c><00:59:40.799><c> we</c>

00:59:40.950 --> 00:59:40.960 align:start position:0%
need to connect to the database so we
 

00:59:40.960 --> 00:59:43.510 align:start position:0%
need to connect to the database so we
need<00:59:41.119><c> to</c><00:59:41.440><c> give</c><00:59:41.680><c> this</c><00:59:42.160><c> web</c><00:59:42.400><c> application</c>

00:59:43.510 --> 00:59:43.520 align:start position:0%
need to give this web application
 

00:59:43.520 --> 00:59:46.950 align:start position:0%
need to give this web application
information<00:59:44.400><c> about</c><00:59:45.040><c> the</c><00:59:45.200><c> database</c><00:59:46.000><c> endpoint</c>

00:59:46.950 --> 00:59:46.960 align:start position:0%
information about the database endpoint
 

00:59:46.960 --> 00:59:49.190 align:start position:0%
information about the database endpoint
where<00:59:47.200><c> can</c><00:59:47.440><c> it</c><00:59:47.599><c> access</c><00:59:48.000><c> the</c><00:59:48.160><c> database</c>

00:59:49.190 --> 00:59:49.200 align:start position:0%
where can it access the database
 

00:59:49.200 --> 00:59:52.230 align:start position:0%
where can it access the database
and<00:59:49.680><c> which</c><00:59:50.000><c> username</c><00:59:50.640><c> and</c><00:59:50.880><c> password</c><00:59:51.359><c> to</c><00:59:51.599><c> use</c>

00:59:52.230 --> 00:59:52.240 align:start position:0%
and which username and password to use
 

00:59:52.240 --> 00:59:54.950 align:start position:0%
and which username and password to use
to<00:59:52.559><c> authenticate</c><00:59:53.440><c> with</c><00:59:53.599><c> the</c><00:59:53.760><c> database</c><00:59:54.559><c> and</c><00:59:54.799><c> i</c>

00:59:54.950 --> 00:59:54.960 align:start position:0%
to authenticate with the database and i
 

00:59:54.960 --> 00:59:57.430 align:start position:0%
to authenticate with the database and i
have<00:59:55.200><c> already</c><00:59:55.839><c> configured</c><00:59:56.400><c> this</c><00:59:56.640><c> application</c>

00:59:57.430 --> 00:59:57.440 align:start position:0%
have already configured this application
 

00:59:57.440 --> 01:00:00.710 align:start position:0%
have already configured this application
inside<00:59:58.240><c> to</c><00:59:58.559><c> expect</c><00:59:59.520><c> all</c><00:59:59.680><c> these</c><00:59:59.920><c> values</c><01:00:00.480><c> as</c>

01:00:00.710 --> 01:00:00.720 align:start position:0%
inside to expect all these values as
 

01:00:00.720 --> 01:00:03.349 align:start position:0%
inside to expect all these values as
environment<01:00:01.280><c> variables</c><01:00:02.160><c> with</c><01:00:02.480><c> specific</c>

01:00:03.349 --> 01:00:03.359 align:start position:0%
environment variables with specific
 

01:00:03.359 --> 01:00:05.750 align:start position:0%
environment variables with specific
names<01:00:04.079><c> so</c><01:00:04.240><c> we're</c><01:00:04.400><c> going</c><01:00:04.559><c> to</c><01:00:04.880><c> pass</c>

01:00:05.750 --> 01:00:05.760 align:start position:0%
names so we're going to pass
 

01:00:05.760 --> 01:00:07.829 align:start position:0%
names so we're going to pass
these<01:00:06.079><c> three</c><01:00:06.319><c> pieces</c><01:00:06.720><c> of</c><01:00:06.880><c> data</c><01:00:07.520><c> as</c>

01:00:07.829 --> 01:00:07.839 align:start position:0%
these three pieces of data as
 

01:00:07.839 --> 01:00:09.349 align:start position:0%
these three pieces of data as
environment<01:00:08.319><c> variables</c>

01:00:09.349 --> 01:00:09.359 align:start position:0%
environment variables
 

01:00:09.359 --> 01:00:13.030 align:start position:0%
environment variables
to<01:00:10.000><c> the</c><01:00:10.720><c> web</c><01:00:11.040><c> app</c><01:00:11.520><c> application</c><01:00:12.480><c> so</c><01:00:12.640><c> let's</c><01:00:12.880><c> do</c>

01:00:13.030 --> 01:00:13.040 align:start position:0%
to the web app application so let's do
 

01:00:13.040 --> 01:00:16.390 align:start position:0%
to the web app application so let's do
that

01:00:16.390 --> 01:00:16.400 align:start position:0%
 
 

01:00:16.400 --> 01:00:17.190 align:start position:0%
 
again

01:00:17.190 --> 01:00:17.200 align:start position:0%
again
 

01:00:17.200 --> 01:00:18.950 align:start position:0%
again
the<01:00:17.359><c> name</c><01:00:17.680><c> of</c><01:00:17.760><c> the</c><01:00:17.920><c> environment</c><01:00:18.400><c> variable</c><01:00:18.799><c> the</c>

01:00:18.950 --> 01:00:18.960 align:start position:0%
the name of the environment variable the
 

01:00:18.960 --> 01:00:22.789 align:start position:0%
the name of the environment variable the
first<01:00:19.280><c> one</c><01:00:19.520><c> i</c><01:00:19.839><c> actually</c><01:00:20.240><c> called</c><01:00:20.880><c> username</c>

01:00:22.789 --> 01:00:22.799 align:start position:0%
first one i actually called username
 

01:00:22.799 --> 01:00:25.589 align:start position:0%
first one i actually called username
and<01:00:23.119><c> we</c><01:00:23.280><c> can</c><01:00:24.000><c> actually</c><01:00:24.480><c> copy</c>

01:00:25.589 --> 01:00:25.599 align:start position:0%
and we can actually copy
 

01:00:25.599 --> 01:00:28.150 align:start position:0%
and we can actually copy
the<01:00:25.760><c> same</c><01:00:26.079><c> configuration</c><01:00:27.040><c> and</c><01:00:27.200><c> paste</c><01:00:27.520><c> it</c><01:00:27.599><c> here</c>

01:00:28.150 --> 01:00:28.160 align:start position:0%
the same configuration and paste it here
 

01:00:28.160 --> 01:00:30.549 align:start position:0%
the same configuration and paste it here
and<01:00:28.319><c> you</c><01:00:28.400><c> already</c><01:00:28.720><c> see</c><01:00:28.880><c> an</c><01:00:29.040><c> advantage</c><01:00:30.000><c> of</c>

01:00:30.549 --> 01:00:30.559 align:start position:0%
and you already see an advantage of
 

01:00:30.559 --> 01:00:31.589 align:start position:0%
and you already see an advantage of
using

01:00:31.589 --> 01:00:31.599 align:start position:0%
using
 

01:00:31.599 --> 01:00:33.990 align:start position:0%
using
configuration<01:00:32.400><c> from</c><01:00:32.640><c> secret</c><01:00:33.040><c> or</c><01:00:33.200><c> config</c>

01:00:33.990 --> 01:00:34.000 align:start position:0%
configuration from secret or config
 

01:00:34.000 --> 01:00:37.190 align:start position:0%
configuration from secret or config
because<01:00:34.720><c> if</c><01:00:34.880><c> you</c><01:00:34.960><c> need</c><01:00:35.359><c> the</c><01:00:35.599><c> same</c><01:00:36.160><c> information</c>

01:00:37.190 --> 01:00:37.200 align:start position:0%
because if you need the same information
 

01:00:37.200 --> 01:00:39.670 align:start position:0%
because if you need the same information
in<01:00:37.440><c> 10</c><01:00:37.680><c> different</c><01:00:38.000><c> applications</c><01:00:39.200><c> you</c><01:00:39.359><c> create</c>

01:00:39.670 --> 01:00:39.680 align:start position:0%
in 10 different applications you create
 

01:00:39.680 --> 01:00:43.510 align:start position:0%
in 10 different applications you create
it<01:00:39.920><c> once</c><01:00:40.559><c> and</c><01:00:41.040><c> reference</c><01:00:41.599><c> it</c><01:00:41.760><c> 10</c><01:00:42.000><c> times</c>

01:00:43.510 --> 01:00:43.520 align:start position:0%
it once and reference it 10 times
 

01:00:43.520 --> 01:00:44.710 align:start position:0%
it once and reference it 10 times
the<01:00:43.680><c> second</c>

01:00:44.710 --> 01:00:44.720 align:start position:0%
the second
 

01:00:44.720 --> 01:00:49.270 align:start position:0%
the second
environment<01:00:45.200><c> variable</c><01:00:46.000><c> is</c><01:00:46.480><c> for</c><01:00:46.960><c> password</c>

01:00:49.270 --> 01:00:49.280 align:start position:0%
environment variable is for password
 

01:00:49.280 --> 01:00:53.109 align:start position:0%
environment variable is for password
and<01:00:49.520><c> i</c><01:00:49.760><c> called</c><01:00:50.160><c> this</c><01:00:50.400><c> one</c><01:00:50.720><c> user</c><01:00:51.119><c> pwd</c>

01:00:53.109 --> 01:00:53.119 align:start position:0%
and i called this one user pwd
 

01:00:53.119 --> 01:00:56.789 align:start position:0%
and i called this one user pwd
and<01:00:53.359><c> finally</c><01:00:54.319><c> our</c><01:00:54.559><c> application</c><01:00:55.599><c> needs</c>

01:00:56.789 --> 01:00:56.799 align:start position:0%
and finally our application needs
 

01:00:56.799 --> 01:01:01.270 align:start position:0%
and finally our application needs
the<01:00:57.040><c> database</c><01:00:57.680><c> endpoint</c><01:00:58.640><c> which</c>

01:01:01.270 --> 01:01:01.280 align:start position:0%
 
 

01:01:01.280 --> 01:01:04.390 align:start position:0%
 
will<01:01:01.520><c> be</c><01:01:01.760><c> db</c><01:01:02.319><c> url</c>

01:01:04.390 --> 01:01:04.400 align:start position:0%
will be db url
 

01:01:04.400 --> 01:01:07.670 align:start position:0%
will be db url
and<01:01:04.720><c> this</c><01:01:05.359><c> value</c><01:01:05.920><c> is</c><01:01:06.160><c> not</c><01:01:06.400><c> in</c><01:01:06.480><c> the</c><01:01:06.640><c> secret</c>

01:01:07.670 --> 01:01:07.680 align:start position:0%
and this value is not in the secret
 

01:01:07.680 --> 01:01:10.950 align:start position:0%
and this value is not in the secret
but<01:01:08.000><c> in</c><01:01:08.240><c> configmap</c><01:01:09.280><c> and</c><01:01:09.520><c> how</c><01:01:09.680><c> do</c><01:01:09.839><c> we</c><01:01:10.160><c> access</c>

01:01:10.950 --> 01:01:10.960 align:start position:0%
but in configmap and how do we access
 

01:01:10.960 --> 01:01:14.549 align:start position:0%
but in configmap and how do we access
value<01:01:11.760><c> from</c><01:01:12.000><c> config</c><01:01:12.480><c> map</c><01:01:13.200><c> very</c><01:01:13.520><c> similar</c><01:01:14.319><c> as</c>

01:01:14.549 --> 01:01:14.559 align:start position:0%
value from config map very similar as
 

01:01:14.559 --> 01:01:16.870 align:start position:0%
value from config map very similar as
the<01:01:14.720><c> secret</c><01:01:15.200><c> so</c><01:01:15.359><c> we</c><01:01:15.520><c> have</c><01:01:15.680><c> the</c><01:01:15.839><c> same</c><01:01:16.480><c> value</c>

01:01:16.870 --> 01:01:16.880 align:start position:0%
the secret so we have the same value
 

01:01:16.880 --> 01:01:19.190 align:start position:0%
the secret so we have the same value
from

01:01:19.190 --> 01:01:19.200 align:start position:0%
from
 

01:01:19.200 --> 01:01:21.750 align:start position:0%
from
and<01:01:19.359><c> instead</c><01:01:19.599><c> of</c><01:01:19.760><c> secret</c><01:01:20.240><c> key</c><01:01:20.480><c> ref</c><01:01:20.799><c> we</c><01:01:20.960><c> have</c>

01:01:21.750 --> 01:01:21.760 align:start position:0%
and instead of secret key ref we have
 

01:01:21.760 --> 01:01:23.270 align:start position:0%
and instead of secret key ref we have
config

01:01:23.270 --> 01:01:23.280 align:start position:0%
config
 

01:01:23.280 --> 01:01:24.549 align:start position:0%
config
map

01:01:24.549 --> 01:01:24.559 align:start position:0%
map
 

01:01:24.559 --> 01:01:25.829 align:start position:0%
map
kirev

01:01:25.829 --> 01:01:25.839 align:start position:0%
kirev
 

01:01:25.839 --> 01:01:27.349 align:start position:0%
kirev
or<01:01:26.079><c> key</c><01:01:26.319><c> reference</c>

01:01:27.349 --> 01:01:27.359 align:start position:0%
or key reference
 

01:01:27.359 --> 01:01:28.710 align:start position:0%
or key reference
and<01:01:27.440><c> then</c><01:01:27.680><c> we</c><01:01:27.839><c> have</c>

01:01:28.710 --> 01:01:28.720 align:start position:0%
and then we have
 

01:01:28.720 --> 01:01:33.829 align:start position:0%
and then we have
name<01:01:29.440><c> which</c><01:01:29.680><c> we</c><01:01:29.839><c> called</c><01:01:31.440><c> config</c>

01:01:33.829 --> 01:01:33.839 align:start position:0%
name which we called config
 

01:01:33.839 --> 01:01:36.230 align:start position:0%
name which we called config
and<01:01:34.480><c> key</c>

01:01:36.230 --> 01:01:36.240 align:start position:0%
and key
 

01:01:36.240 --> 01:01:39.510 align:start position:0%
and key
which<01:01:36.480><c> is</c><01:01:36.640><c> the</c><01:01:36.799><c> name</c><01:01:37.200><c> of</c><01:01:37.440><c> the</c><01:01:37.680><c> key</c>

01:01:39.510 --> 01:01:39.520 align:start position:0%
which is the name of the key
 

01:01:39.520 --> 01:01:41.910 align:start position:0%
which is the name of the key
and<01:01:39.680><c> that's</c><01:01:39.920><c> it</c><01:01:40.319><c> so</c><01:01:40.480><c> we</c><01:01:40.640><c> don't</c><01:01:40.880><c> have</c><01:01:41.440><c> any</c><01:01:41.760><c> of</c>

01:01:41.910 --> 01:01:41.920 align:start position:0%
and that's it so we don't have any of
 

01:01:41.920 --> 01:01:44.630 align:start position:0%
and that's it so we don't have any of
the<01:01:42.000><c> configuration</c><01:01:42.720><c> values</c><01:01:43.440><c> hard</c><01:01:43.760><c> coded</c><01:01:44.319><c> in</c>

01:01:44.630 --> 01:01:44.640 align:start position:0%
the configuration values hard coded in
 

01:01:44.640 --> 01:01:45.430 align:start position:0%
the configuration values hard coded in
our

01:01:45.430 --> 01:01:45.440 align:start position:0%
our
 

01:01:45.440 --> 01:01:48.150 align:start position:0%
our
kubernetes<01:01:46.000><c> configuration</c><01:01:46.720><c> files</c><01:01:47.599><c> we</c><01:01:47.839><c> only</c>

01:01:48.150 --> 01:01:48.160 align:start position:0%
kubernetes configuration files we only
 

01:01:48.160 --> 01:01:49.990 align:start position:0%
kubernetes configuration files we only
have<01:01:48.559><c> references</c><01:01:49.280><c> which</c><01:01:49.520><c> makes</c><01:01:49.839><c> our</c>

01:01:49.990 --> 01:01:50.000 align:start position:0%
have references which makes our
 

01:01:50.000 --> 01:01:52.390 align:start position:0%
have references which makes our
configuration<01:01:51.119><c> way</c><01:01:51.359><c> cleaner</c><01:01:52.079><c> so</c><01:01:52.240><c> if</c>

01:01:52.390 --> 01:01:52.400 align:start position:0%
configuration way cleaner so if
 

01:01:52.400 --> 01:01:54.950 align:start position:0%
configuration way cleaner so if
something<01:01:52.799><c> changes</c><01:01:53.520><c> or</c><01:01:53.680><c> the</c><01:01:53.839><c> values</c><01:01:54.559><c> change</c>

01:01:54.950 --> 01:01:54.960 align:start position:0%
something changes or the values change
 

01:01:54.960 --> 01:01:57.750 align:start position:0%
something changes or the values change
here<01:01:55.440><c> we</c><01:01:55.599><c> don't</c><01:01:55.839><c> have</c><01:01:56.000><c> to</c><01:01:56.400><c> adjust</c><01:01:57.039><c> anything</c><01:01:57.599><c> in</c>

01:01:57.750 --> 01:01:57.760 align:start position:0%
here we don't have to adjust anything in
 

01:01:57.760 --> 01:02:01.589 align:start position:0%
here we don't have to adjust anything in
our<01:01:57.839><c> deployments</c>

01:02:01.589 --> 01:02:01.599 align:start position:0%
 
 

01:02:01.599 --> 01:02:03.670 align:start position:0%
 
so<01:02:01.920><c> connectivity</c><01:02:02.640><c> with</c><01:02:02.799><c> the</c><01:02:02.960><c> database</c><01:02:03.520><c> is</c>

01:02:03.670 --> 01:02:03.680 align:start position:0%
so connectivity with the database is
 

01:02:03.680 --> 01:02:06.390 align:start position:0%
so connectivity with the database is
configured<01:02:04.559><c> and</c><01:02:04.720><c> there</c><01:02:04.880><c> is</c><01:02:05.119><c> one</c><01:02:05.440><c> last</c><01:02:06.079><c> thing</c>

01:02:06.390 --> 01:02:06.400 align:start position:0%
configured and there is one last thing
 

01:02:06.400 --> 01:02:07.990 align:start position:0%
configured and there is one last thing
missing<01:02:06.799><c> in</c><01:02:06.960><c> our</c><01:02:07.119><c> web</c><01:02:07.359><c> application</c>

01:02:07.990 --> 01:02:08.000 align:start position:0%
missing in our web application
 

01:02:08.000 --> 01:02:10.789 align:start position:0%
missing in our web application
configuration<01:02:08.960><c> before</c><01:02:09.200><c> we</c><01:02:09.440><c> deploy</c><01:02:10.000><c> all</c><01:02:10.240><c> this</c>

01:02:10.789 --> 01:02:10.799 align:start position:0%
configuration before we deploy all this
 

01:02:10.799 --> 01:02:13.589 align:start position:0%
configuration before we deploy all this
which<01:02:11.119><c> is</c><01:02:11.599><c> making</c><01:02:12.000><c> it</c><01:02:12.240><c> accessible</c><01:02:13.200><c> from</c><01:02:13.440><c> the</c>

01:02:13.589 --> 01:02:13.599 align:start position:0%
which is making it accessible from the
 

01:02:13.599 --> 01:02:16.470 align:start position:0%
which is making it accessible from the
browser<01:02:14.400><c> we</c><01:02:14.559><c> want</c><01:02:14.720><c> to</c><01:02:14.799><c> be</c><01:02:15.039><c> able</c><01:02:15.359><c> to</c><01:02:16.079><c> type</c><01:02:16.400><c> in</c>

01:02:16.470 --> 01:02:16.480 align:start position:0%
browser we want to be able to type in
 

01:02:16.480 --> 01:02:19.670 align:start position:0%
browser we want to be able to type in
some<01:02:16.720><c> url</c><01:02:17.440><c> and</c><01:02:17.760><c> access</c><01:02:18.240><c> our</c><01:02:18.480><c> web</c><01:02:18.720><c> application</c>

01:02:19.670 --> 01:02:19.680 align:start position:0%
some url and access our web application
 

01:02:19.680 --> 01:02:22.230 align:start position:0%
some url and access our web application
from<01:02:19.920><c> the</c><01:02:20.079><c> browser</c><01:02:20.720><c> right</c><01:02:21.359><c> and</c><01:02:21.839><c> as</c><01:02:22.000><c> you</c>

01:02:22.230 --> 01:02:22.240 align:start position:0%
from the browser right and as you
 

01:02:22.240 --> 01:02:24.630 align:start position:0%
from the browser right and as you
learned<01:02:22.799><c> we</c><01:02:22.960><c> have</c><01:02:23.280><c> external</c><01:02:23.839><c> services</c><01:02:24.400><c> for</c>

01:02:24.630 --> 01:02:24.640 align:start position:0%
learned we have external services for
 

01:02:24.640 --> 01:02:27.109 align:start position:0%
learned we have external services for
that<01:02:25.119><c> so</c><01:02:25.359><c> we</c><01:02:25.520><c> will</c><01:02:25.680><c> need</c><01:02:25.839><c> to</c><01:02:26.079><c> adjust</c>

01:02:27.109 --> 01:02:27.119 align:start position:0%
that so we will need to adjust
 

01:02:27.119 --> 01:02:29.349 align:start position:0%
that so we will need to adjust
the<01:02:27.280><c> service</c><01:02:27.680><c> configuration</c><01:02:28.400><c> a</c><01:02:28.480><c> little</c><01:02:28.720><c> bit</c>

01:02:29.349 --> 01:02:29.359 align:start position:0%
the service configuration a little bit
 

01:02:29.359 --> 01:02:30.710 align:start position:0%
the service configuration a little bit
right<01:02:29.599><c> now</c>

01:02:30.710 --> 01:02:30.720 align:start position:0%
right now
 

01:02:30.720 --> 01:02:32.870 align:start position:0%
right now
these<01:02:31.039><c> service</c><01:02:31.440><c> configurations</c><01:02:32.480><c> both</c><01:02:32.720><c> of</c>

01:02:32.870 --> 01:02:32.880 align:start position:0%
these service configurations both of
 

01:02:32.880 --> 01:02:35.670 align:start position:0%
these service configurations both of
them<01:02:33.520><c> are</c><01:02:33.839><c> internal</c><01:02:34.400><c> services</c>

01:02:35.670 --> 01:02:35.680 align:start position:0%
them are internal services
 

01:02:35.680 --> 01:02:37.750 align:start position:0%
them are internal services
so<01:02:35.839><c> to</c><01:02:36.000><c> make</c><01:02:36.319><c> it</c><01:02:36.640><c> external</c>

01:02:37.750 --> 01:02:37.760 align:start position:0%
so to make it external
 

01:02:37.760 --> 01:02:40.150 align:start position:0%
so to make it external
all<01:02:37.920><c> we</c><01:02:38.079><c> need</c><01:02:38.240><c> to</c><01:02:38.400><c> do</c><01:02:38.799><c> is</c>

01:02:40.150 --> 01:02:40.160 align:start position:0%
all we need to do is
 

01:02:40.160 --> 01:02:43.430 align:start position:0%
all we need to do is
set<01:02:40.480><c> a</c><01:02:40.720><c> type</c><01:02:41.359><c> which</c><01:02:41.599><c> is</c><01:02:41.839><c> by</c><01:02:42.079><c> default</c><01:02:42.960><c> cluster</c>

01:02:43.430 --> 01:02:43.440 align:start position:0%
set a type which is by default cluster
 

01:02:43.440 --> 01:02:45.190 align:start position:0%
set a type which is by default cluster
ip

01:02:45.190 --> 01:02:45.200 align:start position:0%
ip
 

01:02:45.200 --> 01:02:47.029 align:start position:0%
ip
so<01:02:45.359><c> that's</c><01:02:45.599><c> the</c><01:02:45.680><c> default</c><01:02:46.079><c> type</c><01:02:46.319><c> if</c><01:02:46.480><c> we</c><01:02:46.640><c> don't</c>

01:02:47.029 --> 01:02:47.039 align:start position:0%
so that's the default type if we don't
 

01:02:47.039 --> 01:02:49.270 align:start position:0%
so that's the default type if we don't
specify<01:02:47.599><c> the</c><01:02:47.680><c> type</c><01:02:48.319><c> but</c><01:02:48.559><c> we're</c><01:02:48.720><c> going</c><01:02:48.880><c> to</c><01:02:49.039><c> set</c>

01:02:49.270 --> 01:02:49.280 align:start position:0%
specify the type but we're going to set
 

01:02:49.280 --> 01:02:50.549 align:start position:0%
specify the type but we're going to set
it<01:02:49.440><c> to</c>

01:02:50.549 --> 01:02:50.559 align:start position:0%
it to
 

01:02:50.559 --> 01:02:52.390 align:start position:0%
it to
node<01:02:51.280><c> port</c>

01:02:52.390 --> 01:02:52.400 align:start position:0%
node port
 

01:02:52.400 --> 01:02:55.270 align:start position:0%
node port
so<01:02:52.640><c> node</c><01:02:52.960><c> port</c><01:02:53.280><c> is</c><01:02:53.440><c> an</c><01:02:53.599><c> external</c><01:02:54.000><c> service</c><01:02:54.559><c> type</c>

01:02:55.270 --> 01:02:55.280 align:start position:0%
so node port is an external service type
 

01:02:55.280 --> 01:02:58.150 align:start position:0%
so node port is an external service type
and<01:02:55.440><c> it</c><01:02:55.839><c> requires</c><01:02:56.640><c> a</c><01:02:56.880><c> third</c><01:02:57.280><c> port</c><01:02:57.760><c> which</c><01:02:58.000><c> is</c>

01:02:58.150 --> 01:02:58.160 align:start position:0%
and it requires a third port which is
 

01:02:58.160 --> 01:02:59.029 align:start position:0%
and it requires a third port which is
called

01:02:59.029 --> 01:02:59.039 align:start position:0%
called
 

01:02:59.039 --> 01:03:03.109 align:start position:0%
called
a<01:02:59.200><c> node</c><01:02:59.599><c> port</c>

01:03:03.109 --> 01:03:03.119 align:start position:0%
 
 

01:03:03.119 --> 01:03:05.750 align:start position:0%
 
so<01:03:03.280><c> what</c><01:03:03.440><c> is</c><01:03:03.599><c> a</c><01:03:03.760><c> node</c><01:03:04.079><c> port</c><01:03:04.799><c> port</c>

01:03:05.750 --> 01:03:05.760 align:start position:0%
so what is a node port port
 

01:03:05.760 --> 01:03:08.549 align:start position:0%
so what is a node port port
this<01:03:06.000><c> is</c><01:03:06.160><c> a</c><01:03:06.240><c> port</c><01:03:06.559><c> which</c><01:03:06.799><c> will</c><01:03:07.119><c> open</c><01:03:07.680><c> on</c><01:03:08.400><c> the</c>

01:03:08.549 --> 01:03:08.559 align:start position:0%
this is a port which will open on the
 

01:03:08.559 --> 01:03:11.270 align:start position:0%
this is a port which will open on the
kubernetes<01:03:09.760><c> nodes</c><01:03:10.400><c> on</c><01:03:10.640><c> which</c><01:03:11.039><c> the</c>

01:03:11.270 --> 01:03:11.280 align:start position:0%
kubernetes nodes on which the
 

01:03:11.280 --> 01:03:13.990 align:start position:0%
kubernetes nodes on which the
application<01:03:11.839><c> will</c><01:03:12.079><c> be</c><01:03:12.240><c> accessible</c><01:03:13.280><c> so</c><01:03:13.599><c> on</c><01:03:13.760><c> the</c>

01:03:13.990 --> 01:03:14.000 align:start position:0%
application will be accessible so on the
 

01:03:14.000 --> 01:03:17.670 align:start position:0%
application will be accessible so on the
node<01:03:14.400><c> ip</c><01:03:14.640><c> address</c><01:03:15.440><c> in</c><01:03:15.760><c> node</c><01:03:16.079><c> port</c><01:03:16.640><c> combination</c>

01:03:17.670 --> 01:03:17.680 align:start position:0%
node ip address in node port combination
 

01:03:17.680 --> 01:03:20.069 align:start position:0%
node ip address in node port combination
we<01:03:17.839><c> will</c><01:03:18.000><c> be</c><01:03:18.240><c> able</c><01:03:18.480><c> to</c><01:03:18.880><c> access</c>

01:03:20.069 --> 01:03:20.079 align:start position:0%
we will be able to access
 

01:03:20.079 --> 01:03:23.990 align:start position:0%
we will be able to access
this<01:03:20.799><c> service</c><01:03:21.520><c> which</c><01:03:21.760><c> will</c><01:03:22.000><c> then</c><01:03:22.640><c> access</c>

01:03:23.990 --> 01:03:24.000 align:start position:0%
this service which will then access
 

01:03:24.000 --> 01:03:27.270 align:start position:0%
this service which will then access
the<01:03:24.240><c> pods</c><01:03:24.559><c> behind</c><01:03:24.960><c> it</c><01:03:25.359><c> and</c><01:03:25.920><c> node</c><01:03:26.319><c> port</c><01:03:26.880><c> range</c>

01:03:27.270 --> 01:03:27.280 align:start position:0%
the pods behind it and node port range
 

01:03:27.280 --> 01:03:29.829 align:start position:0%
the pods behind it and node port range
is<01:03:27.440><c> actually</c><01:03:27.839><c> defined</c><01:03:28.480><c> in</c><01:03:28.640><c> kubernetes</c><01:03:29.520><c> so</c><01:03:29.680><c> we</c>

01:03:29.829 --> 01:03:29.839 align:start position:0%
is actually defined in kubernetes so we
 

01:03:29.839 --> 01:03:34.069 align:start position:0%
is actually defined in kubernetes so we
can't<01:03:30.160><c> just</c><01:03:30.720><c> type</c><01:03:31.200><c> anything</c><01:03:31.599><c> we</c><01:03:31.760><c> want</c><01:03:32.079><c> here</c>

01:03:34.069 --> 01:03:34.079 align:start position:0%
can't just type anything we want here
 

01:03:34.079 --> 01:03:36.309 align:start position:0%
can't just type anything we want here
like<01:03:34.319><c> this</c><01:03:34.799><c> it</c><01:03:34.960><c> has</c><01:03:35.200><c> to</c><01:03:35.280><c> be</c><01:03:35.440><c> within</c><01:03:35.839><c> the</c><01:03:36.000><c> range</c>

01:03:36.309 --> 01:03:36.319 align:start position:0%
like this it has to be within the range
 

01:03:36.319 --> 01:03:38.789 align:start position:0%
like this it has to be within the range
of<01:03:36.799><c> thirty</c><01:03:37.119><c> thousand</c><01:03:37.839><c> and</c><01:03:38.079><c> thirty</c><01:03:38.400><c> two</c>

01:03:38.789 --> 01:03:38.799 align:start position:0%
of thirty thousand and thirty two
 

01:03:38.799 --> 01:03:41.990 align:start position:0%
of thirty thousand and thirty two
thousand<01:03:39.760><c> seven</c><01:03:40.079><c> hundred</c><01:03:40.720><c> sixty</c><01:03:41.200><c> seven</c><01:03:41.760><c> so</c>

01:03:41.990 --> 01:03:42.000 align:start position:0%
thousand seven hundred sixty seven so
 

01:03:42.000 --> 01:03:44.789 align:start position:0%
thousand seven hundred sixty seven so
anything<01:03:42.319><c> within</c><01:03:43.200><c> this</c><01:03:43.520><c> range</c><01:03:43.920><c> is</c><01:03:44.160><c> fine</c><01:03:44.559><c> as</c><01:03:44.720><c> a</c>

01:03:44.789 --> 01:03:44.799 align:start position:0%
anything within this range is fine as a
 

01:03:44.799 --> 01:03:48.950 align:start position:0%
anything within this range is fine as a
value<01:03:45.520><c> so</c><01:03:45.680><c> we</c><01:03:45.839><c> can</c><01:03:46.000><c> do</c><01:03:46.640><c> 30</c><01:03:47.039><c> 000</c><01:03:47.599><c> or</c><01:03:48.160><c> 30</c>

01:03:48.950 --> 01:03:48.960 align:start position:0%
value so we can do 30 000 or 30
 

01:03:48.960 --> 01:03:51.029 align:start position:0%
value so we can do 30 000 or 30
100<01:03:49.599><c> doesn't</c><01:03:49.920><c> really</c><01:03:50.160><c> matter</c>

01:03:51.029 --> 01:03:51.039 align:start position:0%
100 doesn't really matter
 

01:03:51.039 --> 01:03:53.990 align:start position:0%
100 doesn't really matter
so<01:03:51.599><c> let's</c><01:03:51.839><c> set</c><01:03:52.079><c> this</c><01:03:52.319><c> as</c><01:03:52.480><c> a</c><01:03:52.559><c> value</c><01:03:53.440><c> and</c><01:03:53.680><c> this</c>

01:03:53.990 --> 01:03:54.000 align:start position:0%
so let's set this as a value and this
 

01:03:54.000 --> 01:03:59.910 align:start position:0%
so let's set this as a value and this
completes<01:03:54.960><c> the</c><01:03:55.200><c> web</c><01:03:55.440><c> app</c><01:03:55.920><c> configuration</c><01:03:56.720><c> file</c>

01:03:59.910 --> 01:03:59.920 align:start position:0%
 
 

01:03:59.920 --> 01:04:02.470 align:start position:0%
 
now<01:04:00.079><c> we</c><01:04:00.240><c> have</c><01:04:00.480><c> a</c><01:04:00.880><c> very</c><01:04:01.200><c> simple</c><01:04:01.599><c> but</c><01:04:01.839><c> also</c>

01:04:02.470 --> 01:04:02.480 align:start position:0%
now we have a very simple but also
 

01:04:02.480 --> 01:04:04.390 align:start position:0%
now we have a very simple but also
pretty<01:04:03.119><c> realistic</c>

01:04:04.390 --> 01:04:04.400 align:start position:0%
pretty realistic
 

01:04:04.400 --> 01:04:05.829 align:start position:0%
pretty realistic
configuration

01:04:05.829 --> 01:04:05.839 align:start position:0%
configuration
 

01:04:05.839 --> 01:04:07.910 align:start position:0%
configuration
for<01:04:06.079><c> deploying</c><01:04:06.480><c> an</c><01:04:06.640><c> application</c><01:04:07.359><c> with</c><01:04:07.680><c> its</c>

01:04:07.910 --> 01:04:07.920 align:start position:0%
for deploying an application with its
 

01:04:07.920 --> 01:04:09.190 align:start position:0%
for deploying an application with its
database

01:04:09.190 --> 01:04:09.200 align:start position:0%
database
 

01:04:09.200 --> 01:04:11.109 align:start position:0%
database
with<01:04:09.520><c> external</c><01:04:10.000><c> configuration</c><01:04:10.880><c> in</c><01:04:11.039><c> the</c>

01:04:11.109 --> 01:04:11.119 align:start position:0%
with external configuration in the
 

01:04:11.119 --> 01:04:13.990 align:start position:0%
with external configuration in the
cluster<01:04:12.000><c> so</c><01:04:12.480><c> as</c><01:04:12.640><c> a</c><01:04:12.720><c> final</c><01:04:13.039><c> step</c><01:04:13.599><c> we're</c><01:04:13.760><c> just</c>

01:04:13.990 --> 01:04:14.000 align:start position:0%
cluster so as a final step we're just
 

01:04:14.000 --> 01:04:16.470 align:start position:0%
cluster so as a final step we're just
gonna<01:04:14.720><c> create</c><01:04:15.119><c> all</c><01:04:15.200><c> these</c><01:04:15.440><c> components</c><01:04:16.079><c> one</c><01:04:16.240><c> by</c>

01:04:16.470 --> 01:04:16.480 align:start position:0%
gonna create all these components one by
 

01:04:16.480 --> 01:04:19.029 align:start position:0%
gonna create all these components one by
one<01:04:16.799><c> in</c><01:04:16.960><c> kubernetes</c><01:04:17.920><c> so</c><01:04:18.160><c> i'm</c><01:04:18.240><c> gonna</c><01:04:18.559><c> open</c><01:04:18.880><c> a</c>

01:04:19.029 --> 01:04:19.039 align:start position:0%
one in kubernetes so i'm gonna open a
 

01:04:19.039 --> 01:04:22.230 align:start position:0%
one in kubernetes so i'm gonna open a
terminal<01:04:20.000><c> and</c><01:04:20.240><c> we</c><01:04:20.400><c> already</c><01:04:20.799><c> have</c><01:04:21.520><c> a</c><01:04:21.680><c> mini</c><01:04:22.000><c> cube</c>

01:04:22.230 --> 01:04:22.240 align:start position:0%
terminal and we already have a mini cube
 

01:04:22.240 --> 01:04:27.750 align:start position:0%
terminal and we already have a mini cube
cluster<01:04:23.119><c> running</c>

01:04:27.750 --> 01:04:27.760 align:start position:0%
 
 

01:04:27.760 --> 01:04:30.230 align:start position:0%
 
but<01:04:27.920><c> there</c><01:04:28.079><c> are</c><01:04:28.240><c> no</c><01:04:28.559><c> components</c><01:04:29.200><c> inside</c><01:04:29.920><c> so</c>

01:04:30.230 --> 01:04:30.240 align:start position:0%
but there are no components inside so
 

01:04:30.240 --> 01:04:32.309 align:start position:0%
but there are no components inside so
first<01:04:30.960><c> we</c><01:04:31.119><c> need</c><01:04:31.280><c> to</c><01:04:31.440><c> create</c><01:04:31.680><c> the</c><01:04:31.839><c> external</c>

01:04:32.309 --> 01:04:32.319 align:start position:0%
first we need to create the external
 

01:04:32.319 --> 01:04:34.470 align:start position:0%
first we need to create the external
configurations<01:04:33.440><c> because</c>

01:04:34.470 --> 01:04:34.480 align:start position:0%
configurations because
 

01:04:34.480 --> 01:04:36.630 align:start position:0%
configurations because
they<01:04:34.640><c> need</c><01:04:34.799><c> to</c><01:04:34.960><c> be</c><01:04:35.200><c> there</c><01:04:35.760><c> when</c><01:04:36.000><c> we</c><01:04:36.240><c> create</c>

01:04:36.630 --> 01:04:36.640 align:start position:0%
they need to be there when we create
 

01:04:36.640 --> 01:04:40.069 align:start position:0%
they need to be there when we create
mongodb<01:04:37.359><c> and</c><01:04:37.520><c> web</c><01:04:37.760><c> application</c><01:04:38.839><c> deployments</c>

01:04:40.069 --> 01:04:40.079 align:start position:0%
mongodb and web application deployments
 

01:04:40.079 --> 01:04:41.750 align:start position:0%
mongodb and web application deployments
because<01:04:40.400><c> they</c><01:04:40.960><c> reference</c><01:04:41.520><c> those</c>

01:04:41.750 --> 01:04:41.760 align:start position:0%
because they reference those
 

01:04:41.760 --> 01:04:44.309 align:start position:0%
because they reference those
configurations<01:04:42.880><c> so</c><01:04:43.119><c> let's</c><01:04:43.359><c> create</c>

01:04:44.309 --> 01:04:44.319 align:start position:0%
configurations so let's create
 

01:04:44.319 --> 01:04:47.349 align:start position:0%
configurations so let's create
 config<01:04:45.200><c> and</c><01:04:45.359><c> secret</c><01:04:46.160><c> first</c><01:04:46.799><c> to</c><01:04:46.960><c> do</c><01:04:47.119><c> that</c>

01:04:47.349 --> 01:04:47.359 align:start position:0%
 config and secret first to do that
 

01:04:47.359 --> 01:04:50.390 align:start position:0%
 config and secret first to do that
we<01:04:47.599><c> have</c><01:04:48.079><c> cube</c><01:04:48.319><c> ctl</c><01:04:48.799><c> apply</c><01:04:49.200><c> command</c><01:04:49.920><c> with</c>

01:04:50.390 --> 01:04:50.400 align:start position:0%
we have cube ctl apply command with
 

01:04:50.400 --> 01:04:53.029 align:start position:0%
we have cube ctl apply command with
minus<01:04:50.960><c> f</c><01:04:51.359><c> which</c><01:04:51.599><c> stands</c><01:04:51.920><c> for</c><01:04:52.240><c> file</c><01:04:52.799><c> which</c>

01:04:53.029 --> 01:04:53.039 align:start position:0%
minus f which stands for file which
 

01:04:53.039 --> 01:04:55.270 align:start position:0%
minus f which stands for file which
takes<01:04:53.359><c> a</c><01:04:53.440><c> kubernetes</c><01:04:54.079><c> configuration</c><01:04:54.799><c> file</c><01:04:55.119><c> as</c>

01:04:55.270 --> 01:04:55.280 align:start position:0%
takes a kubernetes configuration file as
 

01:04:55.280 --> 01:04:57.430 align:start position:0%
takes a kubernetes configuration file as
an<01:04:55.520><c> input</c>

01:04:57.430 --> 01:04:57.440 align:start position:0%
an input
 

01:04:57.440 --> 01:04:58.630 align:start position:0%
an input
like<01:04:57.680><c> this</c>

01:04:58.630 --> 01:04:58.640 align:start position:0%
like this
 

01:04:58.640 --> 01:05:01.589 align:start position:0%
like this
and<01:04:59.039><c> creates</c><01:04:59.440><c> whatever</c><01:05:00.000><c> is</c><01:05:00.160><c> defined</c><01:05:00.720><c> inside</c>

01:05:01.589 --> 01:05:01.599 align:start position:0%
and creates whatever is defined inside
 

01:05:01.599 --> 01:05:04.549 align:start position:0%
and creates whatever is defined inside
and<01:05:01.760><c> as</c><01:05:01.920><c> you</c><01:05:02.079><c> see</c><01:05:03.039><c> config</c><01:05:03.440><c> was</c><01:05:03.599><c> created</c>

01:05:04.549 --> 01:05:04.559 align:start position:0%
and as you see config was created
 

01:05:04.559 --> 01:05:07.990 align:start position:0%
and as you see config was created
now<01:05:04.799><c> let's</c><01:05:05.039><c> create</c><01:05:05.760><c> longer</c><01:05:06.160><c> secret</c>

01:05:07.990 --> 01:05:08.000 align:start position:0%
now let's create longer secret
 

01:05:08.000 --> 01:05:10.470 align:start position:0%
now let's create longer secret
next<01:05:08.559><c> we're</c><01:05:08.799><c> gonna</c><01:05:09.039><c> create</c><01:05:09.359><c> a</c><01:05:09.520><c> database</c>

01:05:10.470 --> 01:05:10.480 align:start position:0%
next we're gonna create a database
 

01:05:10.480 --> 01:05:12.630 align:start position:0%
next we're gonna create a database
because<01:05:10.960><c> our</c><01:05:11.200><c> web</c><01:05:11.440><c> application</c><01:05:11.920><c> depends</c><01:05:12.400><c> on</c>

01:05:12.630 --> 01:05:12.640 align:start position:0%
because our web application depends on
 

01:05:12.640 --> 01:05:13.990 align:start position:0%
because our web application depends on
it

01:05:13.990 --> 01:05:14.000 align:start position:0%
it
 

01:05:14.000 --> 01:05:16.230 align:start position:0%
it
so<01:05:14.319><c> it</c><01:05:14.480><c> should</c><01:05:14.799><c> start</c><01:05:15.280><c> first</c>

01:05:16.230 --> 01:05:16.240 align:start position:0%
so it should start first
 

01:05:16.240 --> 01:05:19.829 align:start position:0%
so it should start first
and<01:05:16.640><c> again</c><01:05:16.960><c> let's</c><01:05:17.200><c> do</c><01:05:17.520><c> cube</c><01:05:17.680><c> ctl</c><01:05:18.160><c> apply</c>

01:05:19.829 --> 01:05:19.839 align:start position:0%
and again let's do cube ctl apply
 

01:05:19.839 --> 01:05:23.109 align:start position:0%
and again let's do cube ctl apply
with<01:05:20.319><c> mongo.yaml</c><01:05:21.520><c> as</c><01:05:21.760><c> an</c><01:05:22.079><c> input</c><01:05:22.640><c> and</c><01:05:22.799><c> as</c><01:05:22.960><c> you</c>

01:05:23.109 --> 01:05:23.119 align:start position:0%
with mongo.yaml as an input and as you
 

01:05:23.119 --> 01:05:24.950 align:start position:0%
with mongo.yaml as an input and as you
see<01:05:23.599><c> deployment</c>

01:05:24.950 --> 01:05:24.960 align:start position:0%
see deployment
 

01:05:24.960 --> 01:05:28.390 align:start position:0%
see deployment
and<01:05:25.280><c> service</c><01:05:25.760><c> were</c><01:05:26.079><c> created</c><01:05:26.880><c> and</c><01:05:27.039><c> finally</c>

01:05:28.390 --> 01:05:28.400 align:start position:0%
and service were created and finally
 

01:05:28.400 --> 01:05:30.950 align:start position:0%
and service were created and finally
let's<01:05:28.640><c> deploy</c><01:05:29.200><c> our</c><01:05:29.440><c> web</c><01:05:29.760><c> application</c><01:05:30.799><c> and</c>

01:05:30.950 --> 01:05:30.960 align:start position:0%
let's deploy our web application and
 

01:05:30.960 --> 01:05:33.430 align:start position:0%
let's deploy our web application and
there<01:05:31.119><c> you</c><01:05:31.200><c> go</c><01:05:31.599><c> so</c><01:05:31.839><c> everything</c><01:05:32.319><c> seems</c><01:05:32.960><c> fine</c>

01:05:33.430 --> 01:05:33.440 align:start position:0%
there you go so everything seems fine
 

01:05:33.440 --> 01:05:35.670 align:start position:0%
there you go so everything seems fine
but<01:05:33.680><c> of</c><01:05:33.760><c> course</c><01:05:34.240><c> we</c><01:05:34.400><c> want</c><01:05:34.559><c> to</c><01:05:34.799><c> check</c><01:05:35.280><c> all</c><01:05:35.440><c> the</c>

01:05:35.670 --> 01:05:35.680 align:start position:0%
but of course we want to check all the
 

01:05:35.680 --> 01:05:37.910 align:start position:0%
but of course we want to check all the
parts<01:05:36.160><c> and</c><01:05:36.400><c> all</c><01:05:36.559><c> the</c><01:05:36.720><c> components</c>

01:05:37.910 --> 01:05:37.920 align:start position:0%
parts and all the components
 

01:05:37.920 --> 01:05:42.789 align:start position:0%
parts and all the components
that<01:05:38.160><c> were</c><01:05:38.400><c> created</c><01:05:38.960><c> in</c><01:05:39.119><c> the</c><01:05:39.200><c> cluster</c>

01:05:42.789 --> 01:05:42.799 align:start position:0%
 
 

01:05:42.799 --> 01:05:44.710 align:start position:0%
 
so<01:05:42.960><c> for</c><01:05:43.119><c> that</c><01:05:43.359><c> i'm</c><01:05:43.520><c> going</c><01:05:43.599><c> to</c><01:05:43.760><c> actually</c><01:05:44.160><c> switch</c>

01:05:44.710 --> 01:05:44.720 align:start position:0%
so for that i'm going to actually switch
 

01:05:44.720 --> 01:05:46.630 align:start position:0%
so for that i'm going to actually switch
to<01:05:44.880><c> command</c><01:05:45.280><c> line</c><01:05:45.680><c> so</c><01:05:45.839><c> that</c><01:05:46.079><c> we</c><01:05:46.240><c> can</c><01:05:46.400><c> see</c><01:05:46.559><c> it</c>

01:05:46.630 --> 01:05:46.640 align:start position:0%
to command line so that we can see it
 

01:05:46.640 --> 01:05:47.589 align:start position:0%
to command line so that we can see it
better

01:05:47.589 --> 01:05:47.599 align:start position:0%
better
 

01:05:47.599 --> 01:05:51.029 align:start position:0%
better
and<01:05:48.000><c> first</c><01:05:48.559><c> we're</c><01:05:48.799><c> going</c><01:05:48.880><c> to</c><01:05:49.039><c> do</c><01:05:49.440><c> cube</c><01:05:49.680><c> ctl</c><01:05:50.400><c> get</c>

01:05:51.029 --> 01:05:51.039 align:start position:0%
and first we're going to do cube ctl get
 

01:05:51.039 --> 01:05:52.230 align:start position:0%
and first we're going to do cube ctl get
all

01:05:52.230 --> 01:05:52.240 align:start position:0%
all
 

01:05:52.240 --> 01:05:54.630 align:start position:0%
all
which<01:05:52.559><c> gives</c><01:05:52.880><c> you</c><01:05:53.359><c> all</c><01:05:53.520><c> the</c><01:05:53.680><c> components</c>

01:05:54.630 --> 01:05:54.640 align:start position:0%
which gives you all the components
 

01:05:54.640 --> 01:05:56.789 align:start position:0%
which gives you all the components
created<01:05:55.119><c> in</c><01:05:55.200><c> the</c><01:05:55.359><c> cluster</c><01:05:56.160><c> which</c><01:05:56.400><c> includes</c>

01:05:56.789 --> 01:05:56.799 align:start position:0%
created in the cluster which includes
 

01:05:56.799 --> 01:05:58.230 align:start position:0%
created in the cluster which includes
deployments

01:05:58.230 --> 01:05:58.240 align:start position:0%
deployments
 

01:05:58.240 --> 01:05:59.510 align:start position:0%
deployments
the<01:05:58.480><c> pods</c>

01:05:59.510 --> 01:05:59.520 align:start position:0%
the pods
 

01:05:59.520 --> 01:06:01.510 align:start position:0%
the pods
behind<01:05:59.839><c> the</c><01:06:00.000><c> deployment</c><01:06:00.799><c> and</c><01:06:01.200><c> all</c><01:06:01.359><c> the</c>

01:06:01.510 --> 01:06:01.520 align:start position:0%
behind the deployment and all the
 

01:06:01.520 --> 01:06:04.630 align:start position:0%
behind the deployment and all the
services<01:06:02.480><c> and</c><01:06:02.559><c> as</c><01:06:02.720><c> you</c><01:06:02.880><c> see</c><01:06:03.119><c> we</c><01:06:03.280><c> have</c>

01:06:04.630 --> 01:06:04.640 align:start position:0%
services and as you see we have
 

01:06:04.640 --> 01:06:07.510 align:start position:0%
services and as you see we have
deployment<01:06:05.280><c> and</c><01:06:05.520><c> web</c><01:06:05.760><c> app</c><01:06:06.000><c> deployment</c><01:06:06.720><c> parts</c>

01:06:07.510 --> 01:06:07.520 align:start position:0%
deployment and web app deployment parts
 

01:06:07.520 --> 01:06:10.630 align:start position:0%
deployment and web app deployment parts
each<01:06:07.760><c> one</c><01:06:08.000><c> with</c><01:06:08.319><c> one</c><01:06:08.559><c> replica</c><01:06:09.359><c> running</c><01:06:10.240><c> and</c><01:06:10.480><c> we</c>

01:06:10.630 --> 01:06:10.640 align:start position:0%
each one with one replica running and we
 

01:06:10.640 --> 01:06:13.109 align:start position:0%
each one with one replica running and we
have<01:06:10.880><c> the</c><01:06:11.039><c> services</c><01:06:12.160><c> for</c>

01:06:13.109 --> 01:06:13.119 align:start position:0%
have the services for
 

01:06:13.119 --> 01:06:15.029 align:start position:0%
have the services for
mongodb<01:06:13.920><c> and</c><01:06:14.079><c> web</c><01:06:14.319><c> app</c>

01:06:15.029 --> 01:06:15.039 align:start position:0%
mongodb and web app
 

01:06:15.039 --> 01:06:18.150 align:start position:0%
mongodb and web app
and<01:06:15.200><c> web</c><01:06:15.440><c> app</c><01:06:15.599><c> service</c><01:06:16.079><c> is</c><01:06:16.400><c> of</c><01:06:16.720><c> node</c><01:06:17.119><c> port</c><01:06:17.520><c> type</c>

01:06:18.150 --> 01:06:18.160 align:start position:0%
and web app service is of node port type
 

01:06:18.160 --> 01:06:20.789 align:start position:0%
and web app service is of node port type
which<01:06:18.400><c> means</c><01:06:18.640><c> we</c><01:06:18.799><c> can</c><01:06:19.119><c> access</c><01:06:19.520><c> it</c><01:06:19.760><c> externally</c>

01:06:20.789 --> 01:06:20.799 align:start position:0%
which means we can access it externally
 

01:06:20.799 --> 01:06:22.870 align:start position:0%
which means we can access it externally
however<01:06:21.200><c> we</c><01:06:21.359><c> don't</c><01:06:21.599><c> see</c><01:06:22.000><c> configmap</c><01:06:22.720><c> and</c>

01:06:22.870 --> 01:06:22.880 align:start position:0%
however we don't see configmap and
 

01:06:22.880 --> 01:06:25.029 align:start position:0%
however we don't see configmap and
secret<01:06:23.280><c> here</c><01:06:23.599><c> we</c><01:06:23.760><c> can</c><01:06:23.920><c> get</c><01:06:24.160><c> them</c><01:06:24.640><c> using</c>

01:06:25.029 --> 01:06:25.039 align:start position:0%
secret here we can get them using
 

01:06:25.039 --> 01:06:28.150 align:start position:0%
secret here we can get them using
kubectl<01:06:25.760><c> get</c><01:06:26.319><c> config</c><01:06:26.880><c> map</c>

01:06:28.150 --> 01:06:28.160 align:start position:0%
kubectl get config map
 

01:06:28.160 --> 01:06:30.309 align:start position:0%
kubectl get config map
and<01:06:28.480><c> cubectl</c><01:06:29.520><c> get</c>

01:06:30.309 --> 01:06:30.319 align:start position:0%
and cubectl get
 

01:06:30.319 --> 01:06:33.029 align:start position:0%
and cubectl get
secret<01:06:30.799><c> commands</c><01:06:31.760><c> so</c><01:06:32.000><c> as</c><01:06:32.160><c> you</c><01:06:32.319><c> see</c><01:06:32.480><c> displaying</c>

01:06:33.029 --> 01:06:33.039 align:start position:0%
secret commands so as you see displaying
 

01:06:33.039 --> 01:06:35.589 align:start position:0%
secret commands so as you see displaying
any<01:06:33.520><c> component</c><01:06:34.160><c> is</c><01:06:34.319><c> pretty</c><01:06:34.640><c> easy</c><01:06:35.119><c> using</c><01:06:35.359><c> cube</c>

01:06:35.589 --> 01:06:35.599 align:start position:0%
any component is pretty easy using cube
 

01:06:35.599 --> 01:06:38.870 align:start position:0%
any component is pretty easy using cube
ctl<01:06:36.400><c> you</c><01:06:36.559><c> just</c><01:06:36.720><c> do</c><01:06:37.039><c> kubectl</c><01:06:37.839><c> get</c><01:06:38.319><c> and</c><01:06:38.480><c> the</c><01:06:38.640><c> name</c>

01:06:38.870 --> 01:06:38.880 align:start position:0%
ctl you just do kubectl get and the name
 

01:06:38.880 --> 01:06:41.990 align:start position:0%
ctl you just do kubectl get and the name
of<01:06:38.960><c> the</c><01:06:39.119><c> component</c><01:06:39.839><c> like</c><01:06:40.079><c> pod</c><01:06:40.880><c> and</c><01:06:41.039><c> you</c><01:06:41.200><c> get</c>

01:06:41.990 --> 01:06:42.000 align:start position:0%
of the component like pod and you get
 

01:06:42.000 --> 01:06:44.789 align:start position:0%
of the component like pod and you get
a<01:06:42.160><c> list</c><01:06:42.640><c> of</c><01:06:43.280><c> those</c><01:06:43.599><c> components</c>

01:06:44.789 --> 01:06:44.799 align:start position:0%
a list of those components
 

01:06:44.799 --> 01:06:46.789 align:start position:0%
a list of those components
with<01:06:45.039><c> some</c><01:06:45.359><c> additional</c><01:06:45.839><c> data</c>

01:06:46.789 --> 01:06:46.799 align:start position:0%
with some additional data
 

01:06:46.799 --> 01:06:49.510 align:start position:0%
with some additional data
and<01:06:47.119><c> cubesatl</c><01:06:47.839><c> is</c><01:06:48.000><c> actually</c><01:06:48.400><c> a</c><01:06:48.559><c> very</c><01:06:48.960><c> powerful</c>

01:06:49.510 --> 01:06:49.520 align:start position:0%
and cubesatl is actually a very powerful
 

01:06:49.520 --> 01:06:52.150 align:start position:0%
and cubesatl is actually a very powerful
tool<01:06:49.920><c> and</c><01:06:50.000><c> it</c><01:06:50.079><c> has</c><01:06:50.319><c> a</c><01:06:50.480><c> bunch</c><01:06:50.720><c> of</c><01:06:51.039><c> sub-commands</c>

01:06:52.150 --> 01:06:52.160 align:start position:0%
tool and it has a bunch of sub-commands
 

01:06:52.160 --> 01:06:54.870 align:start position:0%
tool and it has a bunch of sub-commands
so<01:06:52.799><c> as</c><01:06:53.039><c> a</c><01:06:53.200><c> natural</c><01:06:53.760><c> documentation</c><01:06:54.640><c> for</c>

01:06:54.870 --> 01:06:54.880 align:start position:0%
so as a natural documentation for
 

01:06:54.880 --> 01:06:57.589 align:start position:0%
so as a natural documentation for
cubectl<01:06:56.000><c> to</c><01:06:56.160><c> basically</c><01:06:56.720><c> have</c><01:06:56.880><c> an</c><01:06:57.039><c> overview</c>

01:06:57.589 --> 01:06:57.599 align:start position:0%
cubectl to basically have an overview
 

01:06:57.599 --> 01:07:00.150 align:start position:0%
cubectl to basically have an overview
and<01:06:57.760><c> see</c><01:06:58.559><c> what</c><01:06:58.720><c> you</c><01:06:58.880><c> can</c><01:06:59.039><c> do</c><01:06:59.200><c> with</c><01:06:59.520><c> it</c><01:06:59.839><c> you</c><01:07:00.000><c> can</c>

01:07:00.150 --> 01:07:00.160 align:start position:0%
and see what you can do with it you can
 

01:07:00.160 --> 01:07:03.349 align:start position:0%
and see what you can do with it you can
always<01:07:00.480><c> use</c><01:07:00.880><c> cubectl</c>

01:07:03.349 --> 01:07:03.359 align:start position:0%
always use cubectl
 

01:07:03.359 --> 01:07:06.309 align:start position:0%
always use cubectl
help<01:07:03.680><c> as</c><01:07:03.839><c> a</c><01:07:03.920><c> documentation</c><01:07:04.960><c> which</c><01:07:05.280><c> lists</c><01:07:06.160><c> all</c>

01:07:06.309 --> 01:07:06.319 align:start position:0%
help as a documentation which lists all
 

01:07:06.319 --> 01:07:09.029 align:start position:0%
help as a documentation which lists all
the<01:07:06.480><c> sub-commands</c><01:07:07.680><c> you</c><01:07:07.839><c> can</c><01:07:08.079><c> use</c><01:07:08.319><c> with</c><01:07:08.559><c> it</c><01:07:08.799><c> one</c>

01:07:09.029 --> 01:07:09.039 align:start position:0%
the sub-commands you can use with it one
 

01:07:09.039 --> 01:07:11.190 align:start position:0%
the sub-commands you can use with it one
of<01:07:09.119><c> them</c><01:07:09.280><c> which</c><01:07:09.520><c> we</c><01:07:09.680><c> already</c><01:07:10.079><c> used</c>

01:07:11.190 --> 01:07:11.200 align:start position:0%
of them which we already used
 

01:07:11.200 --> 01:07:14.309 align:start position:0%
of them which we already used
get<01:07:11.760><c> and</c><01:07:12.000><c> for</c><01:07:12.240><c> each</c><01:07:12.559><c> sub-command</c>

01:07:14.309 --> 01:07:14.319 align:start position:0%
get and for each sub-command
 

01:07:14.319 --> 01:07:17.029 align:start position:0%
get and for each sub-command
like<01:07:14.559><c> cube</c><01:07:14.720><c> ctl</c><01:07:15.200><c> get</c><01:07:15.760><c> you</c><01:07:15.920><c> can</c><01:07:16.240><c> also</c><01:07:16.640><c> get</c><01:07:16.799><c> some</c>

01:07:17.029 --> 01:07:17.039 align:start position:0%
like cube ctl get you can also get some
 

01:07:17.039 --> 01:07:18.230 align:start position:0%
like cube ctl get you can also get some
help

01:07:18.230 --> 01:07:18.240 align:start position:0%
help
 

01:07:18.240 --> 01:07:20.789 align:start position:0%
help
and<01:07:18.400><c> basically</c><01:07:18.960><c> see</c><01:07:19.359><c> all</c><01:07:19.520><c> the</c><01:07:19.680><c> examples</c>

01:07:20.789 --> 01:07:20.799 align:start position:0%
and basically see all the examples
 

01:07:20.799 --> 01:07:23.349 align:start position:0%
and basically see all the examples
plus<01:07:21.359><c> all</c><01:07:21.599><c> the</c><01:07:21.920><c> available</c><01:07:22.480><c> options</c><01:07:23.119><c> so</c><01:07:23.280><c> you</c>

01:07:23.349 --> 01:07:23.359 align:start position:0%
plus all the available options so you
 

01:07:23.359 --> 01:07:25.589 align:start position:0%
plus all the available options so you
can<01:07:23.520><c> navigate</c><01:07:24.480><c> all</c><01:07:24.640><c> the</c><01:07:24.799><c> options</c><01:07:25.200><c> you</c><01:07:25.359><c> have</c>

01:07:25.589 --> 01:07:25.599 align:start position:0%
can navigate all the options you have
 

01:07:25.599 --> 01:07:28.309 align:start position:0%
can navigate all the options you have
here<01:07:26.079><c> so</c><01:07:26.319><c> cube</c><01:07:26.559><c> ctl</c><01:07:27.119><c> get</c><01:07:27.440><c> is</c><01:07:27.760><c> obviously</c><01:07:28.160><c> the</c>

01:07:28.309 --> 01:07:28.319 align:start position:0%
here so cube ctl get is obviously the
 

01:07:28.319 --> 01:07:30.470 align:start position:0%
here so cube ctl get is obviously the
most<01:07:28.640><c> common</c><01:07:29.119><c> command</c><01:07:29.440><c> you're</c><01:07:29.680><c> going</c><01:07:29.839><c> to</c><01:07:29.920><c> use</c>

01:07:30.470 --> 01:07:30.480 align:start position:0%
most common command you're going to use
 

01:07:30.480 --> 01:07:33.109 align:start position:0%
most common command you're going to use
to<01:07:30.720><c> list</c><01:07:31.200><c> all</c><01:07:31.359><c> the</c><01:07:31.920><c> components</c>

01:07:33.109 --> 01:07:33.119 align:start position:0%
to list all the components
 

01:07:33.119 --> 01:07:35.430 align:start position:0%
to list all the components
if<01:07:33.200><c> you</c><01:07:33.359><c> want</c><01:07:33.520><c> to</c><01:07:33.599><c> see</c><01:07:33.839><c> more</c><01:07:34.319><c> details</c><01:07:35.039><c> about</c><01:07:35.359><c> a</c>

01:07:35.430 --> 01:07:35.440 align:start position:0%
if you want to see more details about a
 

01:07:35.440 --> 01:07:37.029 align:start position:0%
if you want to see more details about a
certain<01:07:35.839><c> component</c>

01:07:37.029 --> 01:07:37.039 align:start position:0%
certain component
 

01:07:37.039 --> 01:07:40.230 align:start position:0%
certain component
you<01:07:37.200><c> can</c><01:07:37.359><c> use</c><01:07:38.000><c> cube</c><01:07:38.240><c> ctl</c><01:07:38.720><c> describe</c><01:07:39.680><c> command</c>

01:07:40.230 --> 01:07:40.240 align:start position:0%
you can use cube ctl describe command
 

01:07:40.240 --> 01:07:42.870 align:start position:0%
you can use cube ctl describe command
for<01:07:40.480><c> it</c><01:07:41.039><c> a</c><01:07:41.200><c> name</c><01:07:41.520><c> of</c><01:07:41.599><c> the</c><01:07:41.839><c> component</c><01:07:42.480><c> like</c><01:07:42.720><c> a</c>

01:07:42.870 --> 01:07:42.880 align:start position:0%
for it a name of the component like a
 

01:07:42.880 --> 01:07:44.630 align:start position:0%
for it a name of the component like a
service<01:07:43.200><c> for</c><01:07:43.440><c> example</c>

01:07:44.630 --> 01:07:44.640 align:start position:0%
service for example
 

01:07:44.640 --> 01:07:47.349 align:start position:0%
service for example
and<01:07:45.359><c> the</c><01:07:45.680><c> actual</c><01:07:46.240><c> instance</c><01:07:46.960><c> of</c><01:07:47.119><c> that</c>

01:07:47.349 --> 01:07:47.359 align:start position:0%
and the actual instance of that
 

01:07:47.359 --> 01:07:50.069 align:start position:0%
and the actual instance of that
component<01:07:48.160><c> like</c><01:07:48.480><c> web</c><01:07:48.720><c> app</c><01:07:48.880><c> service</c><01:07:49.760><c> and</c><01:07:49.839><c> this</c>

01:07:50.069 --> 01:07:50.079 align:start position:0%
component like web app service and this
 

01:07:50.079 --> 01:07:52.789 align:start position:0%
component like web app service and this
will<01:07:50.240><c> give</c><01:07:50.480><c> you</c><01:07:51.039><c> more</c><01:07:51.280><c> detailed</c><01:07:51.920><c> output</c><01:07:52.480><c> about</c>

01:07:52.789 --> 01:07:52.799 align:start position:0%
will give you more detailed output about
 

01:07:52.799 --> 01:07:55.109 align:start position:0%
will give you more detailed output about
that<01:07:53.039><c> specific</c><01:07:53.599><c> component</c><01:07:54.319><c> same</c><01:07:54.559><c> way</c><01:07:54.799><c> you</c><01:07:54.880><c> can</c>

01:07:55.109 --> 01:07:55.119 align:start position:0%
that specific component same way you can
 

01:07:55.119 --> 01:07:59.029 align:start position:0%
that specific component same way you can
also<01:07:55.359><c> do</c><01:07:55.839><c> cube</c><01:07:56.079><c> ctl</c><01:07:56.480><c> describe</c><01:07:57.359><c> pod</c><01:07:58.079><c> and</c><01:07:58.240><c> then</c>

01:07:59.029 --> 01:07:59.039 align:start position:0%
also do cube ctl describe pod and then
 

01:07:59.039 --> 01:08:02.789 align:start position:0%
also do cube ctl describe pod and then
name<01:07:59.359><c> of</c><01:07:59.520><c> the</c><01:07:59.680><c> pod</c>

01:08:02.789 --> 01:08:02.799 align:start position:0%
 
 

01:08:02.799 --> 01:08:05.829 align:start position:0%
 
like<01:08:03.119><c> this</c><01:08:03.359><c> one</c>

01:08:05.829 --> 01:08:05.839 align:start position:0%
 
 

01:08:05.839 --> 01:08:08.150 align:start position:0%
 
and<01:08:06.000><c> this</c><01:08:06.160><c> will</c><01:08:06.319><c> give</c><01:08:06.559><c> you</c><01:08:07.119><c> details</c><01:08:07.839><c> about</c>

01:08:08.150 --> 01:08:08.160 align:start position:0%
and this will give you details about
 

01:08:08.160 --> 01:08:11.910 align:start position:0%
and this will give you details about
your<01:08:08.480><c> pot</c><01:08:09.200><c> including</c><01:08:10.240><c> the</c><01:08:10.480><c> status</c><01:08:11.359><c> of</c><01:08:11.520><c> how</c><01:08:11.760><c> the</c>

01:08:11.910 --> 01:08:11.920 align:start position:0%
your pot including the status of how the
 

01:08:11.920 --> 01:08:13.750 align:start position:0%
your pot including the status of how the
pod<01:08:12.240><c> was</c><01:08:12.640><c> scheduled</c>

01:08:13.750 --> 01:08:13.760 align:start position:0%
pod was scheduled
 

01:08:13.760 --> 01:08:15.990 align:start position:0%
pod was scheduled
the<01:08:13.920><c> container</c><01:08:14.480><c> configuration</c>

01:08:15.990 --> 01:08:16.000 align:start position:0%
the container configuration
 

01:08:16.000 --> 01:08:18.149 align:start position:0%
the container configuration
labels<01:08:16.960><c> etc</c>

01:08:18.149 --> 01:08:18.159 align:start position:0%
labels etc
 

01:08:18.159 --> 01:08:22.070 align:start position:0%
labels etc
and<01:08:18.640><c> finally</c>

01:08:22.070 --> 01:08:22.080 align:start position:0%
 
 

01:08:22.080 --> 01:08:24.550 align:start position:0%
 
of<01:08:22.239><c> course</c><01:08:22.640><c> when</c><01:08:22.799><c> you</c><01:08:23.040><c> have</c><01:08:23.600><c> applications</c>

01:08:24.550 --> 01:08:24.560 align:start position:0%
of course when you have applications
 

01:08:24.560 --> 01:08:26.870 align:start position:0%
of course when you have applications
running<01:08:25.120><c> in</c><01:08:25.199><c> your</c><01:08:25.440><c> cluster</c><01:08:26.239><c> you</c><01:08:26.480><c> want</c><01:08:26.640><c> to</c>

01:08:26.870 --> 01:08:26.880 align:start position:0%
running in your cluster you want to
 

01:08:26.880 --> 01:08:29.590 align:start position:0%
running in your cluster you want to
check<01:08:27.120><c> the</c><01:08:27.359><c> logs</c><01:08:27.920><c> to</c><01:08:28.159><c> troubleshoot</c><01:08:28.960><c> debug</c><01:08:29.440><c> or</c>

01:08:29.590 --> 01:08:29.600 align:start position:0%
check the logs to troubleshoot debug or
 

01:08:29.600 --> 01:08:31.349 align:start position:0%
check the logs to troubleshoot debug or
just<01:08:29.839><c> make</c><01:08:30.000><c> sure</c><01:08:30.239><c> that</c><01:08:30.480><c> everything</c><01:08:30.880><c> is</c><01:08:31.120><c> fine</c>

01:08:31.349 --> 01:08:31.359 align:start position:0%
just make sure that everything is fine
 

01:08:31.359 --> 01:08:33.990 align:start position:0%
just make sure that everything is fine
within<01:08:31.759><c> the</c><01:08:31.920><c> pod</c><01:08:32.719><c> and</c><01:08:32.880><c> you</c><01:08:33.040><c> can</c><01:08:33.199><c> do</c><01:08:33.359><c> that</c><01:08:33.679><c> very</c>

01:08:33.990 --> 01:08:34.000 align:start position:0%
within the pod and you can do that very
 

01:08:34.000 --> 01:08:37.430 align:start position:0%
within the pod and you can do that very
easily<01:08:34.480><c> using</c><01:08:34.799><c> kubectl</c><01:08:35.839><c> locks</c><01:08:36.480><c> command</c>

01:08:37.430 --> 01:08:37.440 align:start position:0%
easily using kubectl locks command
 

01:08:37.440 --> 01:08:41.990 align:start position:0%
easily using kubectl locks command
and<01:08:38.159><c> just</c><01:08:38.400><c> specifying</c><01:08:39.600><c> name</c><01:08:40.000><c> of</c><01:08:40.640><c> the</c><01:08:40.960><c> pot</c><01:08:41.759><c> like</c>

01:08:41.990 --> 01:08:42.000 align:start position:0%
and just specifying name of the pot like
 

01:08:42.000 --> 01:08:42.950 align:start position:0%
and just specifying name of the pot like
this

01:08:42.950 --> 01:08:42.960 align:start position:0%
this
 

01:08:42.960 --> 01:08:44.229 align:start position:0%
this
this<01:08:43.199><c> gives</c><01:08:43.440><c> you</c>

01:08:44.229 --> 01:08:44.239 align:start position:0%
this gives you
 

01:08:44.239 --> 01:08:46.709 align:start position:0%
this gives you
logs<01:08:44.640><c> of</c><01:08:44.799><c> the</c><01:08:45.120><c> container</c><01:08:45.679><c> inside</c>

01:08:46.709 --> 01:08:46.719 align:start position:0%
logs of the container inside
 

01:08:46.719 --> 01:08:49.749 align:start position:0%
logs of the container inside
and<01:08:46.880><c> you</c><01:08:47.040><c> can</c><01:08:47.199><c> even</c><01:08:47.600><c> stream</c><01:08:48.000><c> the</c><01:08:48.239><c> logs</c><01:08:49.040><c> using</c>

01:08:49.749 --> 01:08:49.759 align:start position:0%
and you can even stream the logs using
 

01:08:49.759 --> 01:08:53.990 align:start position:0%
and you can even stream the logs using
minus<01:08:50.319><c> f</c><01:08:50.640><c> option</c>

01:08:53.990 --> 01:08:54.000 align:start position:0%
 
 

01:08:54.000 --> 01:08:56.390 align:start position:0%
 
so<01:08:54.239><c> the</c><01:08:54.400><c> final</c><01:08:54.799><c> step</c><01:08:55.120><c> we</c><01:08:55.279><c> want</c><01:08:55.520><c> to</c><01:08:55.679><c> validate</c>

01:08:56.390 --> 01:08:56.400 align:start position:0%
so the final step we want to validate
 

01:08:56.400 --> 01:08:58.870 align:start position:0%
so the final step we want to validate
that<01:08:56.640><c> our</c><01:08:56.960><c> application</c><01:08:57.600><c> is</c><01:08:57.839><c> also</c><01:08:58.080><c> accessible</c>

01:08:58.870 --> 01:08:58.880 align:start position:0%
that our application is also accessible
 

01:08:58.880 --> 01:09:01.030 align:start position:0%
that our application is also accessible
from<01:08:59.040><c> the</c><01:08:59.199><c> browser</c><01:09:00.080><c> and</c><01:09:00.239><c> for</c><01:09:00.480><c> that</c><01:09:00.719><c> we</c>

01:09:01.030 --> 01:09:01.040 align:start position:0%
from the browser and for that we
 

01:09:01.040 --> 01:09:03.349 align:start position:0%
from the browser and for that we
actually<01:09:01.359><c> configured</c><01:09:02.000><c> the</c><01:09:02.159><c> service</c><01:09:03.040><c> and</c><01:09:03.199><c> we</c>

01:09:03.349 --> 01:09:03.359 align:start position:0%
actually configured the service and we
 

01:09:03.359 --> 01:09:05.669 align:start position:0%
actually configured the service and we
can<01:09:03.600><c> actually</c><01:09:04.000><c> get</c><01:09:04.159><c> the</c><01:09:04.319><c> service</c><01:09:04.799><c> using</c>

01:09:05.669 --> 01:09:05.679 align:start position:0%
can actually get the service using
 

01:09:05.679 --> 01:09:08.709 align:start position:0%
can actually get the service using
service<01:09:06.159><c> or</c><01:09:06.480><c> svc</c>

01:09:08.709 --> 01:09:08.719 align:start position:0%
service or svc
 

01:09:08.719 --> 01:09:11.829 align:start position:0%
service or svc
comment<01:09:09.440><c> so</c><01:09:09.600><c> how</c><01:09:09.759><c> do</c><01:09:09.920><c> we</c><01:09:10.159><c> access</c><01:09:10.640><c> this</c><01:09:10.960><c> service</c>

01:09:11.829 --> 01:09:11.839 align:start position:0%
comment so how do we access this service
 

01:09:11.839 --> 01:09:13.430 align:start position:0%
comment so how do we access this service
from<01:09:12.000><c> the</c><01:09:12.159><c> browser</c><01:09:12.719><c> because</c><01:09:12.960><c> this</c><01:09:13.199><c> is</c><01:09:13.279><c> the</c>

01:09:13.430 --> 01:09:13.440 align:start position:0%
from the browser because this is the
 

01:09:13.440 --> 01:09:15.349 align:start position:0%
from the browser because this is the
port<01:09:13.759><c> we're</c><01:09:13.920><c> going</c><01:09:14.080><c> to</c><01:09:14.159><c> use</c><01:09:14.400><c> to</c><01:09:14.560><c> access</c><01:09:14.960><c> it</c><01:09:15.120><c> but</c>

01:09:15.349 --> 01:09:15.359 align:start position:0%
port we're going to use to access it but
 

01:09:15.359 --> 01:09:18.149 align:start position:0%
port we're going to use to access it but
which<01:09:15.759><c> ip</c><01:09:16.080><c> address</c><01:09:16.719><c> is</c><01:09:16.880><c> it</c><01:09:17.040><c> accessible</c><01:09:17.600><c> at</c>

01:09:18.149 --> 01:09:18.159 align:start position:0%
which ip address is it accessible at
 

01:09:18.159 --> 01:09:20.470 align:start position:0%
which ip address is it accessible at
well<01:09:18.400><c> the</c><01:09:18.640><c> node</c><01:09:18.960><c> port</c><01:09:19.279><c> service</c><01:09:19.759><c> is</c><01:09:20.159><c> always</c>

01:09:20.470 --> 01:09:20.480 align:start position:0%
well the node port service is always
 

01:09:20.480 --> 01:09:23.030 align:start position:0%
well the node port service is always
accessible<01:09:21.199><c> at</c><01:09:21.279><c> the</c><01:09:21.440><c> ip</c><01:09:21.759><c> address</c><01:09:22.239><c> of</c><01:09:22.799><c> the</c>

01:09:23.030 --> 01:09:23.040 align:start position:0%
accessible at the ip address of the
 

01:09:23.040 --> 01:09:26.149 align:start position:0%
accessible at the ip address of the
cluster<01:09:24.080><c> node</c><01:09:24.560><c> so</c><01:09:24.799><c> all</c><01:09:24.880><c> the</c><01:09:25.040><c> work</c><01:09:25.440><c> nodes</c><01:09:26.000><c> that</c>

01:09:26.149 --> 01:09:26.159 align:start position:0%
cluster node so all the work nodes that
 

01:09:26.159 --> 01:09:28.470 align:start position:0%
cluster node so all the work nodes that
the<01:09:26.319><c> cluster</c><01:09:26.799><c> has</c><01:09:27.359><c> in</c><01:09:27.520><c> our</c><01:09:27.679><c> case</c><01:09:27.920><c> we</c><01:09:28.080><c> just</c><01:09:28.239><c> have</c>

01:09:28.470 --> 01:09:28.480 align:start position:0%
the cluster has in our case we just have
 

01:09:28.480 --> 01:09:30.870 align:start position:0%
the cluster has in our case we just have
one<01:09:28.719><c> which</c><01:09:28.880><c> is</c><01:09:29.040><c> the</c><01:09:29.199><c> mini</c><01:09:29.440><c> cube</c><01:09:30.159><c> so</c><01:09:30.480><c> we</c><01:09:30.640><c> need</c>

01:09:30.870 --> 01:09:30.880 align:start position:0%
one which is the mini cube so we need
 

01:09:30.880 --> 01:09:33.430 align:start position:0%
one which is the mini cube so we need
the<01:09:31.120><c> ip</c><01:09:31.520><c> address</c><01:09:32.000><c> of</c><01:09:32.159><c> the</c><01:09:32.319><c> mini</c><01:09:32.560><c> cube</c><01:09:33.040><c> to</c><01:09:33.279><c> get</c>

01:09:33.430 --> 01:09:33.440 align:start position:0%
the ip address of the mini cube to get
 

01:09:33.440 --> 01:09:34.390 align:start position:0%
the ip address of the mini cube to get
that

01:09:34.390 --> 01:09:34.400 align:start position:0%
that
 

01:09:34.400 --> 01:09:37.430 align:start position:0%
that
we<01:09:34.560><c> just</c><01:09:34.799><c> do</c><01:09:35.279><c> mini</c><01:09:35.520><c> cube</c><01:09:36.239><c> ip</c>

01:09:37.430 --> 01:09:37.440 align:start position:0%
we just do mini cube ip
 

01:09:37.440 --> 01:09:40.390 align:start position:0%
we just do mini cube ip
or<01:09:37.839><c> using</c><01:09:38.159><c> kubernetes</c><01:09:38.799><c> we</c><01:09:38.960><c> can</c><01:09:39.120><c> also</c><01:09:39.440><c> get</c>

01:09:40.390 --> 01:09:40.400 align:start position:0%
or using kubernetes we can also get
 

01:09:40.400 --> 01:09:43.990 align:start position:0%
or using kubernetes we can also get
get<01:09:41.120><c> node</c><01:09:41.759><c> which</c><01:09:42.000><c> gives</c><01:09:42.239><c> you</c><01:09:42.799><c> mini</c><01:09:43.120><c> cube</c>

01:09:43.990 --> 01:09:44.000 align:start position:0%
get node which gives you mini cube
 

01:09:44.000 --> 01:09:45.110 align:start position:0%
get node which gives you mini cube
and

01:09:45.110 --> 01:09:45.120 align:start position:0%
and
 

01:09:45.120 --> 01:09:47.030 align:start position:0%
and
a<01:09:45.359><c> white</c><01:09:45.759><c> output</c>

01:09:47.030 --> 01:09:47.040 align:start position:0%
a white output
 

01:09:47.040 --> 01:09:49.510 align:start position:0%
a white output
or<01:09:47.279><c> a</c><01:09:47.600><c> longer</c><01:09:48.080><c> output</c><01:09:48.719><c> than</c><01:09:48.960><c> what</c><01:09:49.120><c> you</c><01:09:49.279><c> see</c>

01:09:49.510 --> 01:09:49.520 align:start position:0%
or a longer output than what you see
 

01:09:49.520 --> 01:09:50.470 align:start position:0%
or a longer output than what you see
here

01:09:50.470 --> 01:09:50.480 align:start position:0%
here
 

01:09:50.480 --> 01:09:51.829 align:start position:0%
here
which<01:09:50.719><c> will</c><01:09:50.960><c> give</c><01:09:51.120><c> you</c>

01:09:51.829 --> 01:09:51.839 align:start position:0%
which will give you
 

01:09:51.839 --> 01:09:53.990 align:start position:0%
which will give you
the<01:09:52.319><c> ip</c><01:09:52.719><c> address</c>

01:09:53.990 --> 01:09:54.000 align:start position:0%
the ip address
 

01:09:54.000 --> 01:09:57.189 align:start position:0%
the ip address
of<01:09:54.239><c> the</c><01:09:54.400><c> node</c><01:09:54.880><c> which</c><01:09:55.120><c> is</c><01:09:55.840><c> the</c><01:09:56.000><c> same</c><01:09:56.400><c> as</c><01:09:56.960><c> this</c>

01:09:57.189 --> 01:09:57.199 align:start position:0%
of the node which is the same as this
 

01:09:57.199 --> 01:09:59.430 align:start position:0%
of the node which is the same as this
one<01:09:57.440><c> right</c><01:09:57.679><c> here</c><01:09:58.400><c> and</c><01:09:58.640><c> by</c><01:09:58.800><c> the</c><01:09:58.880><c> way</c><01:09:59.040><c> you</c><01:09:59.199><c> can</c>

01:09:59.430 --> 01:09:59.440 align:start position:0%
one right here and by the way you can
 

01:09:59.440 --> 01:10:02.709 align:start position:0%
one right here and by the way you can
use<01:09:59.760><c> the</c><01:10:00.320><c> all</c><01:10:00.560><c> white</c><01:10:00.880><c> option</c><01:10:01.280><c> for</c><01:10:01.600><c> any</c><01:10:01.920><c> other</c>

01:10:02.709 --> 01:10:02.719 align:start position:0%
use the all white option for any other
 

01:10:02.719 --> 01:10:06.070 align:start position:0%
use the all white option for any other
get<01:10:03.120><c> command</c><01:10:04.000><c> for</c><01:10:04.159><c> services</c><01:10:04.880><c> pods</c><01:10:05.199><c> etc</c><01:10:05.760><c> to</c><01:10:05.920><c> get</c>

01:10:06.070 --> 01:10:06.080 align:start position:0%
get command for services pods etc to get
 

01:10:06.080 --> 01:10:09.030 align:start position:0%
get command for services pods etc to get
some<01:10:06.400><c> additional</c><01:10:06.880><c> information</c><01:10:07.679><c> like</c><01:10:07.920><c> this</c>

01:10:09.030 --> 01:10:09.040 align:start position:0%
some additional information like this
 

01:10:09.040 --> 01:10:12.470 align:start position:0%
some additional information like this
so<01:10:09.280><c> let's</c><01:10:09.520><c> grab</c><01:10:10.159><c> the</c><01:10:10.400><c> mini</c><01:10:10.719><c> cube</c><01:10:11.040><c> ip</c><01:10:11.280><c> address</c>

01:10:12.470 --> 01:10:12.480 align:start position:0%
so let's grab the mini cube ip address
 

01:10:12.480 --> 01:10:18.149 align:start position:0%
so let's grab the mini cube ip address
and<01:10:12.800><c> access</c><01:10:13.199><c> the</c><01:10:13.280><c> application</c><01:10:13.920><c> at</c><01:10:14.080><c> this</c><01:10:14.400><c> port</c>

01:10:18.149 --> 01:10:18.159 align:start position:0%
 
 

01:10:18.159 --> 01:10:20.149 align:start position:0%
 
which<01:10:18.400><c> is</c><01:10:18.880><c> 30</c>

01:10:20.149 --> 01:10:20.159 align:start position:0%
which is 30
 

01:10:20.159 --> 01:10:22.550 align:start position:0%
which is 30
100

01:10:22.550 --> 01:10:22.560 align:start position:0%
100
 

01:10:22.560 --> 01:10:24.550 align:start position:0%
100
and<01:10:23.040><c> there</c><01:10:23.199><c> you</c><01:10:23.280><c> go</c><01:10:23.679><c> this</c><01:10:23.920><c> is</c><01:10:24.080><c> our</c><01:10:24.320><c> web</c>

01:10:24.550 --> 01:10:24.560 align:start position:0%
and there you go this is our web
 

01:10:24.560 --> 01:10:27.030 align:start position:0%
and there you go this is our web
application<01:10:25.199><c> which</c><01:10:25.440><c> is</c><01:10:25.760><c> connected</c><01:10:26.800><c> to</c>

01:10:27.030 --> 01:10:27.040 align:start position:0%
application which is connected to
 

01:10:27.040 --> 01:10:30.149 align:start position:0%
application which is connected to
mongodb<01:10:27.920><c> and</c><01:10:28.000><c> we</c><01:10:28.159><c> can</c><01:10:28.320><c> also</c><01:10:28.719><c> validate</c><01:10:29.280><c> that</c><01:10:29.520><c> by</c>

01:10:30.149 --> 01:10:30.159 align:start position:0%
mongodb and we can also validate that by
 

01:10:30.159 --> 01:10:36.630 align:start position:0%
mongodb and we can also validate that by
editing<01:10:30.719><c> something</c>

01:10:36.630 --> 01:10:36.640 align:start position:0%
 
 

01:10:36.640 --> 01:10:39.350 align:start position:0%
 
and<01:10:37.360><c> saving</c><01:10:37.760><c> because</c><01:10:38.159><c> this</c><01:10:38.400><c> request</c><01:10:38.880><c> goes</c><01:10:39.120><c> to</c>

01:10:39.350 --> 01:10:39.360 align:start position:0%
and saving because this request goes to
 

01:10:39.360 --> 01:10:40.630 align:start position:0%
and saving because this request goes to
database

01:10:40.630 --> 01:10:40.640 align:start position:0%
database
 

01:10:40.640 --> 01:10:42.550 align:start position:0%
database
and<01:10:41.040><c> if</c><01:10:41.199><c> we</c><01:10:41.440><c> refresh</c>

01:10:42.550 --> 01:10:42.560 align:start position:0%
and if we refresh
 

01:10:42.560 --> 01:10:45.430 align:start position:0%
and if we refresh
the<01:10:42.840><c> changes</c><01:10:43.920><c> should</c><01:10:44.159><c> still</c><01:10:44.400><c> be</c><01:10:44.560><c> there</c>

01:10:45.430 --> 01:10:45.440 align:start position:0%
the changes should still be there
 

01:10:45.440 --> 01:10:47.590 align:start position:0%
the changes should still be there
awesome<01:10:46.080><c> so</c><01:10:46.239><c> we</c><01:10:46.400><c> deployed</c><01:10:46.880><c> an</c><01:10:47.040><c> application</c>

01:10:47.590 --> 01:10:47.600 align:start position:0%
awesome so we deployed an application
 

01:10:47.600 --> 01:10:50.229 align:start position:0%
awesome so we deployed an application
with<01:10:47.840><c> its</c><01:10:48.000><c> database</c><01:10:48.719><c> in</c><01:10:48.880><c> kubernetes</c><01:10:49.760><c> which</c><01:10:49.920><c> is</c>

01:10:50.229 --> 01:10:50.239 align:start position:0%
with its database in kubernetes which is
 

01:10:50.239 --> 01:10:53.030 align:start position:0%
with its database in kubernetes which is
a<01:10:50.400><c> blueprint</c><01:10:51.120><c> configuration</c><01:10:52.159><c> for</c><01:10:52.640><c> most</c>

01:10:53.030 --> 01:10:53.040 align:start position:0%
a blueprint configuration for most
 

01:10:53.040 --> 01:10:54.630 align:start position:0%
a blueprint configuration for most
common<01:10:53.440><c> application</c>

01:10:54.630 --> 01:10:54.640 align:start position:0%
common application
 

01:10:54.640 --> 01:10:56.950 align:start position:0%
common application
setups<01:10:55.280><c> you're</c><01:10:55.520><c> gonna</c><01:10:55.760><c> have</c><01:10:56.320><c> plus</c><01:10:56.560><c> you</c><01:10:56.719><c> also</c>

01:10:56.950 --> 01:10:56.960 align:start position:0%
setups you're gonna have plus you also
 

01:10:56.960 --> 01:10:59.350 align:start position:0%
setups you're gonna have plus you also
learn<01:10:57.199><c> a</c><01:10:57.280><c> couple</c><01:10:57.600><c> of</c><01:10:57.760><c> cubesitl</c><01:10:58.400><c> commands</c><01:10:59.120><c> as</c>

01:10:59.350 --> 01:10:59.360 align:start position:0%
learn a couple of cubesitl commands as
 

01:10:59.360 --> 01:11:01.590 align:start position:0%
learn a couple of cubesitl commands as
well<01:10:59.600><c> as</c><01:11:00.080><c> how</c><01:11:00.239><c> to</c><01:11:00.480><c> reference</c><01:11:00.960><c> the</c><01:11:01.120><c> kubernetes</c>

01:11:01.590 --> 01:11:01.600 align:start position:0%
well as how to reference the kubernetes
 

01:11:01.600 --> 01:11:04.390 align:start position:0%
well as how to reference the kubernetes
official<01:11:01.920><c> documentation</c><01:11:03.040><c> to</c><01:11:03.280><c> help</c><01:11:03.520><c> you</c>

01:11:04.390 --> 01:11:04.400 align:start position:0%
official documentation to help you
 

01:11:04.400 --> 01:11:07.430 align:start position:0%
official documentation to help you
configure<01:11:05.120><c> and</c><01:11:05.360><c> create</c><01:11:06.000><c> all</c><01:11:06.159><c> the</c><01:11:06.320><c> components</c>

01:11:07.430 --> 01:11:07.440 align:start position:0%
configure and create all the components
 

01:11:07.440 --> 01:11:09.510 align:start position:0%
configure and create all the components
i<01:11:07.600><c> hope</c><01:11:07.840><c> i</c><01:11:08.000><c> helped</c><01:11:08.320><c> you</c><01:11:08.560><c> learn</c><01:11:08.880><c> a</c><01:11:09.040><c> lot</c><01:11:09.280><c> about</c>

01:11:09.510 --> 01:11:09.520 align:start position:0%
i hope i helped you learn a lot about
 

01:11:09.520 --> 01:11:11.510 align:start position:0%
i hope i helped you learn a lot about
kubernetes<01:11:10.159><c> with</c><01:11:10.320><c> this</c><01:11:10.480><c> crash</c><01:11:10.880><c> course</c><01:11:11.440><c> and</c>

01:11:11.510 --> 01:11:11.520 align:start position:0%
kubernetes with this crash course and
 

01:11:11.520 --> 01:11:13.350 align:start position:0%
kubernetes with this crash course and
you<01:11:11.760><c> feel</c><01:11:12.080><c> much</c><01:11:12.400><c> more</c><01:11:12.640><c> confident</c><01:11:13.199><c> with</c>

01:11:13.350 --> 01:11:13.360 align:start position:0%
you feel much more confident with
 

01:11:13.360 --> 01:11:15.990 align:start position:0%
you feel much more confident with
kubernetes<01:11:14.400><c> now</c><01:11:14.719><c> if</c><01:11:14.880><c> you're</c><01:11:15.199><c> serious</c><01:11:15.600><c> about</c>

01:11:15.990 --> 01:11:16.000 align:start position:0%
kubernetes now if you're serious about
 

01:11:16.000 --> 01:11:18.229 align:start position:0%
kubernetes now if you're serious about
learning<01:11:16.320><c> kubernetes</c><01:11:17.040><c> in</c><01:11:17.199><c> depth</c><01:11:17.760><c> i</c><01:11:17.920><c> actually</c>

01:11:18.229 --> 01:11:18.239 align:start position:0%
learning kubernetes in depth i actually
 

01:11:18.239 --> 01:11:20.709 align:start position:0%
learning kubernetes in depth i actually
have<01:11:18.719><c> two</c><01:11:18.960><c> more</c><01:11:19.199><c> resources</c><01:11:19.760><c> for</c><01:11:20.000><c> you</c>

01:11:20.709 --> 01:11:20.719 align:start position:0%
have two more resources for you
 

01:11:20.719 --> 01:11:22.709 align:start position:0%
have two more resources for you
as<01:11:20.960><c> i</c><01:11:21.120><c> mentioned</c><01:11:21.600><c> at</c><01:11:21.760><c> the</c><01:11:21.840><c> beginning</c><01:11:22.400><c> if</c><01:11:22.560><c> you</c>

01:11:22.709 --> 01:11:22.719 align:start position:0%
as i mentioned at the beginning if you
 

01:11:22.719 --> 01:11:24.550 align:start position:0%
as i mentioned at the beginning if you
want<01:11:22.880><c> to</c><01:11:23.120><c> really</c><01:11:23.440><c> become</c><01:11:23.760><c> an</c><01:11:24.000><c> expert</c><01:11:24.480><c> in</c>

01:11:24.550 --> 01:11:24.560 align:start position:0%
want to really become an expert in
 

01:11:24.560 --> 01:11:27.030 align:start position:0%
want to really become an expert in
kubernetes<01:11:25.520><c> and</c><01:11:25.679><c> learn</c><01:11:26.080><c> how</c><01:11:26.239><c> to</c><01:11:26.480><c> build</c><01:11:26.880><c> and</c>

01:11:27.030 --> 01:11:27.040 align:start position:0%
kubernetes and learn how to build and
 

01:11:27.040 --> 01:11:29.990 align:start position:0%
kubernetes and learn how to build and
administer<01:11:27.920><c> a</c><01:11:28.080><c> cluster</c><01:11:28.719><c> from</c><01:11:29.040><c> scratch</c><01:11:29.840><c> then</c>

01:11:29.990 --> 01:11:30.000 align:start position:0%
administer a cluster from scratch then
 

01:11:30.000 --> 01:11:32.310 align:start position:0%
administer a cluster from scratch then
my<01:11:30.239><c> complete</c><01:11:30.800><c> kubernetes</c><01:11:31.520><c> administrator</c>

01:11:32.310 --> 01:11:32.320 align:start position:0%
my complete kubernetes administrator
 

01:11:32.320 --> 01:11:34.950 align:start position:0%
my complete kubernetes administrator
course<01:11:32.960><c> will</c><01:11:33.199><c> be</c><01:11:33.440><c> a</c><01:11:33.600><c> perfect</c><01:11:34.239><c> resource</c><01:11:34.800><c> for</c>

01:11:34.950 --> 01:11:34.960 align:start position:0%
course will be a perfect resource for
 

01:11:34.960 --> 01:11:37.350 align:start position:0%
course will be a perfect resource for
you<01:11:35.520><c> but</c><01:11:35.760><c> if</c><01:11:35.840><c> your</c><01:11:36.080><c> goal</c><01:11:36.400><c> is</c><01:11:36.640><c> rather</c><01:11:36.960><c> to</c><01:11:37.120><c> become</c>

01:11:37.350 --> 01:11:37.360 align:start position:0%
you but if your goal is rather to become
 

01:11:37.360 --> 01:11:39.910 align:start position:0%
you but if your goal is rather to become
a<01:11:37.520><c> devops</c><01:11:38.000><c> engineer</c><01:11:38.800><c> then</c><01:11:39.040><c> our</c><01:11:39.360><c> complete</c>

01:11:39.910 --> 01:11:39.920 align:start position:0%
a devops engineer then our complete
 

01:11:39.920 --> 01:11:42.550 align:start position:0%
a devops engineer then our complete
devops<01:11:40.480><c> educational</c><01:11:41.199><c> program</c><01:11:42.000><c> will</c><01:11:42.159><c> be</c><01:11:42.320><c> the</c>

01:11:42.550 --> 01:11:42.560 align:start position:0%
devops educational program will be the
 

01:11:42.560 --> 01:11:44.790 align:start position:0%
devops educational program will be the
best<01:11:42.960><c> fit</c><01:11:43.199><c> for</c><01:11:43.360><c> you</c><01:11:43.760><c> where</c><01:11:44.080><c> during</c><01:11:44.560><c> a</c>

01:11:44.790 --> 01:11:44.800 align:start position:0%
best fit for you where during a
 

01:11:44.800 --> 01:11:47.270 align:start position:0%
best fit for you where during a
six-month<01:11:45.600><c> program</c><01:11:46.320><c> you</c><01:11:46.560><c> learn</c><01:11:46.960><c> all</c><01:11:47.120><c> the</c>

01:11:47.270 --> 01:11:47.280 align:start position:0%
six-month program you learn all the
 

01:11:47.280 --> 01:11:49.590 align:start position:0%
six-month program you learn all the
necessary<01:11:47.920><c> concepts</c><01:11:48.560><c> and</c><01:11:48.719><c> technologies</c>

01:11:49.590 --> 01:11:49.600 align:start position:0%
necessary concepts and technologies
 

01:11:49.600 --> 01:11:51.990 align:start position:0%
necessary concepts and technologies
including<01:11:50.159><c> kubernetes</c><01:11:51.120><c> which</c><01:11:51.440><c> you</c><01:11:51.600><c> need</c><01:11:51.840><c> to</c>

01:11:51.990 --> 01:11:52.000 align:start position:0%
including kubernetes which you need to
 

01:11:52.000 --> 01:11:54.149 align:start position:0%
including kubernetes which you need to
get<01:11:52.239><c> started</c><01:11:52.719><c> in</c><01:11:52.960><c> devops</c><01:11:53.520><c> or</c><01:11:53.760><c> cloud</c>

01:11:54.149 --> 01:11:54.159 align:start position:0%
get started in devops or cloud
 

01:11:54.159 --> 01:11:55.270 align:start position:0%
get started in devops or cloud
engineering

01:11:55.270 --> 01:11:55.280 align:start position:0%
engineering
 

01:11:55.280 --> 01:11:57.030 align:start position:0%
engineering
if<01:11:55.360><c> you're</c><01:11:55.600><c> interested</c><01:11:56.159><c> you</c><01:11:56.320><c> can</c><01:11:56.560><c> find</c><01:11:56.800><c> the</c>

01:11:57.030 --> 01:11:57.040 align:start position:0%
if you're interested you can find the
 

01:11:57.040 --> 01:11:59.350 align:start position:0%
if you're interested you can find the
links<01:11:57.440><c> in</c><01:11:57.520><c> the</c><01:11:57.679><c> video</c><01:11:58.000><c> description</c><01:11:58.560><c> below</c><01:11:59.199><c> and</c>

01:11:59.350 --> 01:11:59.360 align:start position:0%
links in the video description below and
 

01:11:59.360 --> 01:12:00.390 align:start position:0%
links in the video description below and
with<01:11:59.600><c> that</c>

01:12:00.390 --> 01:12:00.400 align:start position:0%
with that
 

01:12:00.400 --> 01:12:02.229 align:start position:0%
with that
thank<01:12:00.560><c> you</c><01:12:00.719><c> for</c><01:12:00.880><c> watching</c><01:12:01.520><c> and</c><01:12:01.679><c> see</c><01:12:01.920><c> you</c><01:12:02.159><c> in</c>

01:12:02.229 --> 01:12:02.239 align:start position:0%
thank you for watching and see you in
 

01:12:02.239 --> 01:12:04.880 align:start position:0%
thank you for watching and see you in
the<01:12:02.320><c> next</c><01:12:02.560><c> video</c>

