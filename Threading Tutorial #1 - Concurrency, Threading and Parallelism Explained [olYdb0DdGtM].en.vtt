WEBVTT



00:00:01.070 --> 00:00:03.740 align:start position:0%
 
hello<00:00:02.070><c> everybody</c><00:00:02.280><c> and</c><00:00:02.429><c> welcome</c><00:00:02.939><c> back</c><00:00:03.149><c> so</c><00:00:03.659><c> in</c>

00:00:03.740 --> 00:00:03.750 align:start position:0%
hello everybody and welcome back so in
 

00:00:03.750 --> 00:00:05.420 align:start position:0%
hello everybody and welcome back so in
this<00:00:03.990><c> video</c><00:00:04.319><c> we're</c><00:00:04.560><c> gonna</c><00:00:04.620><c> be</c><00:00:04.859><c> talking</c><00:00:05.339><c> about</c>

00:00:05.420 --> 00:00:05.430 align:start position:0%
this video we're gonna be talking about
 

00:00:05.430 --> 00:00:06.829 align:start position:0%
this video we're gonna be talking about
threading<00:00:06.060><c> so</c><00:00:06.390><c> it's</c><00:00:06.509><c> actually</c><00:00:06.750><c> the</c>

00:00:06.829 --> 00:00:06.839 align:start position:0%
threading so it's actually the
 

00:00:06.839 --> 00:00:09.169 align:start position:0%
threading so it's actually the
introduction<00:00:07.529><c> to</c><00:00:07.649><c> this</c><00:00:07.770><c> reading</c><00:00:08.309><c> in</c><00:00:08.519><c> Python</c>

00:00:09.169 --> 00:00:09.179 align:start position:0%
introduction to this reading in Python
 

00:00:09.179 --> 00:00:11.120 align:start position:0%
introduction to this reading in Python
tutorial<00:00:09.780><c> series</c><00:00:09.960><c> in</c><00:00:10.230><c> this</c><00:00:10.650><c> video</c><00:00:10.980><c> I</c><00:00:11.010><c> will</c>

00:00:11.120 --> 00:00:11.130 align:start position:0%
tutorial series in this video I will
 

00:00:11.130 --> 00:00:12.230 align:start position:0%
tutorial series in this video I will
warn<00:00:11.460><c> you</c><00:00:11.550><c> we're</c><00:00:11.700><c> not</c><00:00:11.730><c> actually</c><00:00:11.880><c> gonna</c><00:00:12.090><c> be</c>

00:00:12.230 --> 00:00:12.240 align:start position:0%
warn you we're not actually gonna be
 

00:00:12.240 --> 00:00:13.700 align:start position:0%
warn you we're not actually gonna be
doing<00:00:12.420><c> any</c><00:00:12.509><c> coding</c><00:00:12.900><c> we're</c><00:00:13.320><c> just</c><00:00:13.469><c> gonna</c><00:00:13.559><c> be</c>

00:00:13.700 --> 00:00:13.710 align:start position:0%
doing any coding we're just gonna be
 

00:00:13.710 --> 00:00:15.860 align:start position:0%
doing any coding we're just gonna be
talking<00:00:14.099><c> about</c><00:00:14.190><c> the</c><00:00:14.400><c> theory</c><00:00:14.820><c> so</c><00:00:15.089><c> what</c><00:00:15.750><c> is</c><00:00:15.839><c> a</c>

00:00:15.860 --> 00:00:15.870 align:start position:0%
talking about the theory so what is a
 

00:00:15.870 --> 00:00:17.990 align:start position:0%
talking about the theory so what is a
thread<00:00:16.260><c> how</c><00:00:16.680><c> do</c><00:00:16.740><c> we</c><00:00:16.920><c> run</c><00:00:17.130><c> threads</c><00:00:17.580><c> what's</c><00:00:17.910><c> the</c>

00:00:17.990 --> 00:00:18.000 align:start position:0%
thread how do we run threads what's the
 

00:00:18.000 --> 00:00:19.790 align:start position:0%
thread how do we run threads what's the
difference<00:00:18.270><c> between</c><00:00:18.359><c> threads</c><00:00:18.930><c> and</c><00:00:19.170><c> processes</c>

00:00:19.790 --> 00:00:19.800 align:start position:0%
difference between threads and processes
 

00:00:19.800 --> 00:00:21.769 align:start position:0%
difference between threads and processes
and<00:00:20.010><c> really</c><00:00:20.490><c> understanding</c><00:00:21.150><c> why</c><00:00:21.359><c> we</c><00:00:21.570><c> even</c>

00:00:21.769 --> 00:00:21.779 align:start position:0%
and really understanding why we even
 

00:00:21.779 --> 00:00:23.570 align:start position:0%
and really understanding why we even
need<00:00:22.080><c> to</c><00:00:22.199><c> use</c><00:00:22.439><c> these</c><00:00:22.650><c> things</c><00:00:22.859><c> so</c><00:00:23.400><c> I'm</c><00:00:23.460><c> just</c>

00:00:23.570 --> 00:00:23.580 align:start position:0%
need to use these things so I'm just
 

00:00:23.580 --> 00:00:25.160 align:start position:0%
need to use these things so I'm just
gonna<00:00:23.699><c> warn</c><00:00:23.939><c> you</c><00:00:24.090><c> if</c><00:00:24.269><c> you</c><00:00:24.359><c> don't</c><00:00:24.660><c> understand</c>

00:00:25.160 --> 00:00:25.170 align:start position:0%
gonna warn you if you don't understand
 

00:00:25.170 --> 00:00:26.870 align:start position:0%
gonna warn you if you don't understand
that<00:00:25.350><c> please</c><00:00:25.710><c> don't</c><00:00:26.070><c> skip</c><00:00:26.340><c> forward</c><00:00:26.730><c> to</c><00:00:26.820><c> the</c>

00:00:26.870 --> 00:00:26.880 align:start position:0%
that please don't skip forward to the
 

00:00:26.880 --> 00:00:28.400 align:start position:0%
that please don't skip forward to the
next<00:00:27.029><c> video</c><00:00:27.359><c> because</c><00:00:27.599><c> there's</c><00:00:27.869><c> no</c><00:00:28.019><c> point</c><00:00:28.289><c> in</c>

00:00:28.400 --> 00:00:28.410 align:start position:0%
next video because there's no point in
 

00:00:28.410 --> 00:00:30.259 align:start position:0%
next video because there's no point in
learning<00:00:28.560><c> threading</c><00:00:29.189><c> unless</c><00:00:29.609><c> you</c><00:00:29.760><c> understand</c>

00:00:30.259 --> 00:00:30.269 align:start position:0%
learning threading unless you understand
 

00:00:30.269 --> 00:00:32.299 align:start position:0%
learning threading unless you understand
what<00:00:30.510><c> the</c><00:00:30.660><c> heck</c><00:00:30.810><c> it</c><00:00:31.050><c> actually</c><00:00:31.529><c> is</c><00:00:31.679><c> so</c><00:00:31.949><c> I'm</c>

00:00:32.299 --> 00:00:32.309 align:start position:0%
what the heck it actually is so I'm
 

00:00:32.309 --> 00:00:33.590 align:start position:0%
what the heck it actually is so I'm
gonna<00:00:32.399><c> hop</c><00:00:32.610><c> onto</c><00:00:32.790><c> the</c><00:00:32.880><c> whiteboard</c><00:00:33.090><c> now</c><00:00:33.420><c> and</c>

00:00:33.590 --> 00:00:33.600 align:start position:0%
gonna hop onto the whiteboard now and
 

00:00:33.600 --> 00:00:35.270 align:start position:0%
gonna hop onto the whiteboard now and
we'll<00:00:33.719><c> get</c><00:00:33.840><c> started</c><00:00:34.290><c> and</c><00:00:34.440><c> talk</c><00:00:34.680><c> about</c><00:00:34.980><c> what</c><00:00:35.190><c> is</c>

00:00:35.270 --> 00:00:35.280 align:start position:0%
we'll get started and talk about what is
 

00:00:35.280 --> 00:00:37.250 align:start position:0%
we'll get started and talk about what is
a<00:00:35.309><c> thread</c><00:00:35.640><c> what</c><00:00:35.969><c> is</c><00:00:36.090><c> threading</c><00:00:36.450><c> and</c><00:00:36.660><c> why</c><00:00:36.930><c> do</c><00:00:36.989><c> we</c>

00:00:37.250 --> 00:00:37.260 align:start position:0%
a thread what is threading and why do we
 

00:00:37.260 --> 00:00:39.319 align:start position:0%
a thread what is threading and why do we
use<00:00:37.290><c> it</c><00:00:37.620><c> okay</c><00:00:38.250><c> so</c><00:00:38.489><c> what</c><00:00:38.670><c> I'm</c><00:00:38.790><c> drawn</c><00:00:39.090><c> on</c><00:00:39.239><c> the</c>

00:00:39.319 --> 00:00:39.329 align:start position:0%
use it okay so what I'm drawn on the
 

00:00:39.329 --> 00:00:41.209 align:start position:0%
use it okay so what I'm drawn on the
screen<00:00:39.480><c> right</c><00:00:39.870><c> now</c><00:00:40.020><c> is</c><00:00:40.290><c> kind</c><00:00:40.680><c> of</c><00:00:40.710><c> a</c><00:00:40.829><c> classic</c>

00:00:41.209 --> 00:00:41.219 align:start position:0%
screen right now is kind of a classic
 

00:00:41.219 --> 00:00:44.840 align:start position:0%
screen right now is kind of a classic
processor<00:00:42.180><c> in</c><00:00:42.329><c> 2020</c><00:00:43.079><c> we</c><00:00:43.500><c> have</c><00:00:43.530><c> 4</c><00:00:44.190><c> cores</c><00:00:44.550><c> which</c>

00:00:44.840 --> 00:00:44.850 align:start position:0%
processor in 2020 we have 4 cores which
 

00:00:44.850 --> 00:00:46.580 align:start position:0%
processor in 2020 we have 4 cores which
are<00:00:45.030><c> all</c><00:00:45.120><c> these</c><00:00:45.270><c> red</c><00:00:45.600><c> boxes</c><00:00:45.899><c> here</c><00:00:46.379><c> that</c><00:00:46.500><c> I'm</c>

00:00:46.580 --> 00:00:46.590 align:start position:0%
are all these red boxes here that I'm
 

00:00:46.590 --> 00:00:48.350 align:start position:0%
are all these red boxes here that I'm
kind<00:00:46.800><c> of</c><00:00:46.829><c> drawing</c><00:00:47.100><c> on</c><00:00:47.309><c> and</c><00:00:47.489><c> then</c><00:00:47.850><c> the</c><00:00:47.969><c> actual</c>

00:00:48.350 --> 00:00:48.360 align:start position:0%
kind of drawing on and then the actual
 

00:00:48.360 --> 00:00:50.779 align:start position:0%
kind of drawing on and then the actual
black<00:00:48.719><c> box</c><00:00:49.050><c> that's</c><00:00:49.350><c> a</c><00:00:49.469><c> note</c><00:00:49.649><c> it</c><00:00:49.739><c> by</c><00:00:49.860><c> CPU</c><00:00:50.399><c> is</c><00:00:50.610><c> the</c>

00:00:50.779 --> 00:00:50.789 align:start position:0%
black box that's a note it by CPU is the
 

00:00:50.789 --> 00:00:53.810 align:start position:0%
black box that's a note it by CPU is the
entire<00:00:51.239><c> central</c><00:00:51.870><c> processing</c><00:00:52.350><c> unit</c><00:00:52.800><c> so</c><00:00:53.370><c> back</c>

00:00:53.810 --> 00:00:53.820 align:start position:0%
entire central processing unit so back
 

00:00:53.820 --> 00:00:55.069 align:start position:0%
entire central processing unit so back
in<00:00:54.030><c> the</c><00:00:54.120><c> old</c><00:00:54.270><c> days</c><00:00:54.510><c> we</c><00:00:54.780><c> used</c><00:00:54.809><c> to</c><00:00:55.020><c> have</c>

00:00:55.069 --> 00:00:55.079 align:start position:0%
in the old days we used to have
 

00:00:55.079 --> 00:00:57.380 align:start position:0%
in the old days we used to have
processors<00:00:55.739><c> that</c><00:00:55.770><c> just</c><00:00:56.160><c> had</c><00:00:56.309><c> one</c><00:00:56.640><c> processing</c>

00:00:57.380 --> 00:00:57.390 align:start position:0%
processors that just had one processing
 

00:00:57.390 --> 00:01:00.319 align:start position:0%
processors that just had one processing
core<00:00:57.750><c> now</c><00:00:58.440><c> we</c><00:00:58.500><c> have</c><00:00:59.010><c> processors</c><00:00:59.579><c> with</c><00:00:59.820><c> 4</c><00:01:00.090><c> cores</c>

00:01:00.319 --> 00:01:00.329 align:start position:0%
core now we have processors with 4 cores
 

00:01:00.329 --> 00:01:04.100 align:start position:0%
core now we have processors with 4 cores
8<00:01:00.629><c> cores</c><00:01:01.020><c> 2</c><00:01:01.410><c> cores</c><00:01:01.680><c> 16</c><00:01:02.129><c> cores</c><00:01:02.370><c> 32</c><00:01:02.910><c> cores</c><00:01:03.210><c> and</c><00:01:03.420><c> it</c>

00:01:04.100 --> 00:01:04.110 align:start position:0%
8 cores 2 cores 16 cores 32 cores and it
 

00:01:04.110 --> 00:01:06.080 align:start position:0%
8 cores 2 cores 16 cores 32 cores and it
goes<00:01:04.290><c> pretty</c><00:01:04.500><c> crazy</c><00:01:04.860><c> right</c><00:01:05.159><c> so</c><00:01:05.220><c> computing</c><00:01:05.909><c> has</c>

00:01:06.080 --> 00:01:06.090 align:start position:0%
goes pretty crazy right so computing has
 

00:01:06.090 --> 00:01:08.210 align:start position:0%
goes pretty crazy right so computing has
expanded<00:01:06.720><c> a</c><00:01:06.869><c> ton</c><00:01:07.140><c> now</c><00:01:07.710><c> the</c><00:01:07.830><c> reason</c><00:01:08.100><c> I'm</c>

00:01:08.210 --> 00:01:08.220 align:start position:0%
expanded a ton now the reason I'm
 

00:01:08.220 --> 00:01:09.679 align:start position:0%
expanded a ton now the reason I'm
starting<00:01:08.640><c> with</c><00:01:08.760><c> this</c><00:01:08.970><c> is</c><00:01:09.240><c> because</c><00:01:09.570><c> we</c>

00:01:09.679 --> 00:01:09.689 align:start position:0%
starting with this is because we
 

00:01:09.689 --> 00:01:11.179 align:start position:0%
starting with this is because we
actually<00:01:09.960><c> need</c><00:01:10.350><c> to</c><00:01:10.470><c> understand</c><00:01:10.979><c> how</c><00:01:11.159><c> our</c>

00:01:11.179 --> 00:01:11.189 align:start position:0%
actually need to understand how our
 

00:01:11.189 --> 00:01:14.120 align:start position:0%
actually need to understand how our
processor<00:01:12.119><c> works</c><00:01:12.540><c> to</c><00:01:13.170><c> understand</c><00:01:13.770><c> what</c><00:01:14.100><c> a</c>

00:01:14.120 --> 00:01:14.130 align:start position:0%
processor works to understand what a
 

00:01:14.130 --> 00:01:16.520 align:start position:0%
processor works to understand what a
thread<00:01:14.580><c> is</c><00:01:14.760><c> and</c><00:01:15.030><c> why</c><00:01:15.570><c> we</c><00:01:15.600><c> have</c><00:01:16.049><c> you</c><00:01:16.409><c> know</c>

00:01:16.520 --> 00:01:16.530 align:start position:0%
thread is and why we have you know
 

00:01:16.530 --> 00:01:18.679 align:start position:0%
thread is and why we have you know
thousands<00:01:17.250><c> of</c><00:01:17.340><c> them</c><00:01:17.520><c> and</c><00:01:17.700><c> why</c><00:01:17.820><c> we</c><00:01:18.030><c> create</c><00:01:18.450><c> them</c>

00:01:18.679 --> 00:01:18.689 align:start position:0%
thousands of them and why we create them
 

00:01:18.689 --> 00:01:21.289 align:start position:0%
thousands of them and why we create them
in<00:01:18.810><c> our</c><00:01:19.049><c> programs</c><00:01:19.530><c> so</c><00:01:19.799><c> the</c><00:01:20.400><c> idea</c><00:01:20.700><c> here</c><00:01:20.790><c> is</c><00:01:21.000><c> that</c>

00:01:21.289 --> 00:01:21.299 align:start position:0%
in our programs so the idea here is that
 

00:01:21.299 --> 00:01:23.510 align:start position:0%
in our programs so the idea here is that
the<00:01:21.509><c> amount</c><00:01:21.750><c> of</c><00:01:21.869><c> cores</c><00:01:22.259><c> you</c><00:01:22.500><c> have</c><00:01:22.770><c> on</c><00:01:23.040><c> your</c>

00:01:23.510 --> 00:01:23.520 align:start position:0%
the amount of cores you have on your
 

00:01:23.520 --> 00:01:26.030 align:start position:0%
the amount of cores you have on your
processor<00:01:24.150><c> is</c><00:01:24.299><c> the</c><00:01:24.630><c> amount</c><00:01:25.080><c> of</c><00:01:25.380><c> things</c><00:01:25.890><c> that</c>

00:01:26.030 --> 00:01:26.040 align:start position:0%
processor is the amount of things that
 

00:01:26.040 --> 00:01:28.730 align:start position:0%
processor is the amount of things that
can<00:01:26.310><c> happen</c><00:01:26.490><c> at</c><00:01:26.790><c> the</c><00:01:27.030><c> exact</c><00:01:27.450><c> same</c><00:01:27.750><c> time</c><00:01:28.110><c> yes</c>

00:01:28.730 --> 00:01:28.740 align:start position:0%
can happen at the exact same time yes
 

00:01:28.740 --> 00:01:30.020 align:start position:0%
can happen at the exact same time yes
that's<00:01:29.130><c> what</c><00:01:29.280><c> I</c><00:01:29.310><c> mean</c><00:01:29.460><c> if</c><00:01:29.670><c> we're</c><00:01:29.909><c> talking</c>

00:01:30.020 --> 00:01:30.030 align:start position:0%
that's what I mean if we're talking
 

00:01:30.030 --> 00:01:32.929 align:start position:0%
that's what I mean if we're talking
about<00:01:30.360><c> actual</c><00:01:31.079><c> time</c><00:01:31.409><c> you</c><00:01:31.710><c> know</c><00:01:31.799><c> like</c><00:01:32.040><c> theory</c>

00:01:32.929 --> 00:01:32.939 align:start position:0%
about actual time you know like theory
 

00:01:32.939 --> 00:01:34.370 align:start position:0%
about actual time you know like theory
of<00:01:33.090><c> relativity</c><00:01:33.509><c> whatever</c><00:01:33.960><c> you</c><00:01:34.049><c> want</c><00:01:34.200><c> to</c><00:01:34.259><c> put</c>

00:01:34.370 --> 00:01:34.380 align:start position:0%
of relativity whatever you want to put
 

00:01:34.380 --> 00:01:37.130 align:start position:0%
of relativity whatever you want to put
it<00:01:34.500><c> out</c><00:01:34.619><c> if</c><00:01:34.770><c> we</c><00:01:35.220><c> have</c><00:01:35.340><c> four</c><00:01:35.880><c> cores</c><00:01:36.270><c> that</c><00:01:36.810><c> means</c>

00:01:37.130 --> 00:01:37.140 align:start position:0%
it out if we have four cores that means
 

00:01:37.140 --> 00:01:40.429 align:start position:0%
it out if we have four cores that means
at<00:01:37.470><c> any</c><00:01:38.189><c> point</c><00:01:38.490><c> in</c><00:01:38.579><c> time</c><00:01:38.759><c> we</c><00:01:39.210><c> can</c><00:01:39.390><c> do</c><00:01:39.600><c> at</c><00:01:39.869><c> most</c>

00:01:40.429 --> 00:01:40.439 align:start position:0%
at any point in time we can do at most
 

00:01:40.439 --> 00:01:42.980 align:start position:0%
at any point in time we can do at most
four<00:01:40.950><c> operations</c><00:01:41.729><c> at</c><00:01:41.880><c> the</c><00:01:42.090><c> exact</c><00:01:42.450><c> same</c><00:01:42.689><c> time</c>

00:01:42.980 --> 00:01:42.990 align:start position:0%
four operations at the exact same time
 

00:01:42.990 --> 00:01:45.499 align:start position:0%
four operations at the exact same time
and<00:01:43.229><c> these</c><00:01:43.770><c> operations</c><00:01:44.490><c> are</c><00:01:44.759><c> really</c>

00:01:45.499 --> 00:01:45.509 align:start position:0%
and these operations are really
 

00:01:45.509 --> 00:01:47.480 align:start position:0%
and these operations are really
low-level<00:01:45.770><c> computational</c><00:01:46.770><c> operations</c><00:01:47.250><c> there</c>

00:01:47.480 --> 00:01:47.490 align:start position:0%
low-level computational operations there
 

00:01:47.490 --> 00:01:49.010 align:start position:0%
low-level computational operations there
so<00:01:47.610><c> you</c><00:01:47.670><c> know</c><00:01:47.759><c> millions</c><00:01:48.210><c> of</c><00:01:48.390><c> them</c><00:01:48.509><c> happening</c><00:01:48.960><c> a</c>

00:01:49.010 --> 00:01:49.020 align:start position:0%
so you know millions of them happening a
 

00:01:49.020 --> 00:01:51.590 align:start position:0%
so you know millions of them happening a
second<00:01:49.409><c> but</c><00:01:49.920><c> in</c><00:01:50.250><c> these</c><00:01:50.520><c> tiny</c><00:01:50.850><c> nano</c><00:01:51.060><c> seconds</c>

00:01:51.590 --> 00:01:51.600 align:start position:0%
second but in these tiny nano seconds
 

00:01:51.600 --> 00:01:53.060 align:start position:0%
second but in these tiny nano seconds
that<00:01:51.689><c> it</c><00:01:51.780><c> takes</c><00:01:51.960><c> to</c><00:01:52.140><c> do</c><00:01:52.229><c> an</c><00:01:52.320><c> operation</c><00:01:52.829><c> we</c><00:01:53.040><c> can</c>

00:01:53.060 --> 00:01:53.070 align:start position:0%
that it takes to do an operation we can
 

00:01:53.070 --> 00:01:54.679 align:start position:0%
that it takes to do an operation we can
only<00:01:53.399><c> do</c><00:01:53.610><c> four</c><00:01:53.939><c> of</c><00:01:53.970><c> them</c><00:01:54.210><c> at</c><00:01:54.329><c> the</c><00:01:54.450><c> same</c><00:01:54.479><c> time</c>

00:01:54.679 --> 00:01:54.689 align:start position:0%
only do four of them at the same time
 

00:01:54.689 --> 00:01:57.530 align:start position:0%
only do four of them at the same time
because<00:01:55.680><c> we</c><00:01:55.950><c> have</c><00:01:56.130><c> four</c><00:01:56.399><c> cores</c><00:01:56.670><c> and</c><00:01:56.880><c> this</c><00:01:57.390><c> is</c>

00:01:57.530 --> 00:01:57.540 align:start position:0%
because we have four cores and this is
 

00:01:57.540 --> 00:02:00.170 align:start position:0%
because we have four cores and this is
called<00:01:57.840><c> parallelism</c><00:01:58.469><c> if</c><00:01:58.829><c> we</c><00:01:59.310><c> have</c><00:01:59.490><c> multiple</c>

00:02:00.170 --> 00:02:00.180 align:start position:0%
called parallelism if we have multiple
 

00:02:00.180 --> 00:02:02.539 align:start position:0%
called parallelism if we have multiple
things<00:02:00.450><c> happening</c><00:02:00.600><c> at</c><00:02:01.140><c> the</c><00:02:01.290><c> exact</c><00:02:01.770><c> same</c><00:02:02.130><c> time</c>

00:02:02.539 --> 00:02:02.549 align:start position:0%
things happening at the exact same time
 

00:02:02.549 --> 00:02:05.630 align:start position:0%
things happening at the exact same time
then<00:02:03.360><c> that</c><00:02:03.570><c> is</c><00:02:03.869><c> a</c><00:02:03.899><c> parallel</c><00:02:04.740><c> operation</c><00:02:05.460><c> right</c>

00:02:05.630 --> 00:02:05.640 align:start position:0%
then that is a parallel operation right
 

00:02:05.640 --> 00:02:07.819 align:start position:0%
then that is a parallel operation right
we<00:02:06.060><c> can</c><00:02:06.210><c> think</c><00:02:06.420><c> about</c><00:02:06.659><c> like</c><00:02:06.869><c> if</c><00:02:07.020><c> we</c><00:02:07.140><c> have</c><00:02:07.320><c> four</c>

00:02:07.819 --> 00:02:07.829 align:start position:0%
we can think about like if we have four
 

00:02:07.829 --> 00:02:10.999 align:start position:0%
we can think about like if we have four
roads<00:02:08.220><c> and</c><00:02:08.580><c> we</c><00:02:08.849><c> have</c><00:02:09.060><c> four</c><00:02:09.660><c> cars</c><00:02:09.989><c> driving</c><00:02:10.679><c> on</c>

00:02:10.999 --> 00:02:11.009 align:start position:0%
roads and we have four cars driving on
 

00:02:11.009 --> 00:02:12.190 align:start position:0%
roads and we have four cars driving on
these<00:02:11.220><c> roads</c><00:02:11.489><c> right</c><00:02:11.730><c> moving</c>

00:02:12.190 --> 00:02:12.200 align:start position:0%
these roads right moving
 

00:02:12.200 --> 00:02:14.020 align:start position:0%
these roads right moving
at<00:02:12.530><c> the</c><00:02:12.590><c> same</c><00:02:12.830><c> time</c><00:02:13.099><c> they're</c><00:02:13.610><c> driving</c>

00:02:14.020 --> 00:02:14.030 align:start position:0%
at the same time they're driving
 

00:02:14.030 --> 00:02:15.790 align:start position:0%
at the same time they're driving
parallel<00:02:14.360><c> to</c><00:02:14.750><c> each</c><00:02:14.840><c> other</c><00:02:15.020><c> at</c><00:02:15.230><c> the</c><00:02:15.379><c> same</c><00:02:15.530><c> time</c>

00:02:15.790 --> 00:02:15.800 align:start position:0%
parallel to each other at the same time
 

00:02:15.800 --> 00:02:18.339 align:start position:0%
parallel to each other at the same time
whereas<00:02:16.610><c> if</c><00:02:16.819><c> I</c><00:02:17.030><c> have</c><00:02:17.300><c> you</c><00:02:17.690><c> know</c><00:02:17.810><c> a</c><00:02:17.989><c> bunch</c><00:02:18.260><c> of</c>

00:02:18.339 --> 00:02:18.349 align:start position:0%
whereas if I have you know a bunch of
 

00:02:18.349 --> 00:02:20.259 align:start position:0%
whereas if I have you know a bunch of
cars<00:02:18.590><c> beside</c><00:02:19.010><c> each</c><00:02:19.040><c> other</c><00:02:19.400><c> on</c><00:02:19.640><c> the</c><00:02:19.790><c> same</c><00:02:20.000><c> road</c>

00:02:20.259 --> 00:02:20.269 align:start position:0%
cars beside each other on the same road
 

00:02:20.269 --> 00:02:22.089 align:start position:0%
cars beside each other on the same road
or<00:02:20.690><c> a</c><00:02:20.780><c> bunch</c><00:02:21.110><c> of</c><00:02:21.200><c> cars</c><00:02:21.379><c> behind</c><00:02:21.650><c> each</c><00:02:21.860><c> other</c>

00:02:22.089 --> 00:02:22.099 align:start position:0%
or a bunch of cars behind each other
 

00:02:22.099 --> 00:02:24.220 align:start position:0%
or a bunch of cars behind each other
they<00:02:22.430><c> can</c><00:02:22.489><c> only</c><00:02:22.760><c> go</c><00:02:22.940><c> as</c><00:02:22.970><c> fast</c><00:02:23.269><c> as</c><00:02:23.540><c> the</c><00:02:23.840><c> car</c><00:02:24.050><c> in</c>

00:02:24.220 --> 00:02:24.230 align:start position:0%
they can only go as fast as the car in
 

00:02:24.230 --> 00:02:25.449 align:start position:0%
they can only go as fast as the car in
front<00:02:24.379><c> of</c><00:02:24.530><c> them</c><00:02:24.620><c> right</c><00:02:24.650><c> or</c><00:02:24.920><c> they</c><00:02:25.040><c> need</c><00:02:25.190><c> to</c><00:02:25.280><c> wait</c>

00:02:25.449 --> 00:02:25.459 align:start position:0%
front of them right or they need to wait
 

00:02:25.459 --> 00:02:26.800 align:start position:0%
front of them right or they need to wait
for<00:02:25.489><c> the</c><00:02:25.790><c> car</c><00:02:25.910><c> in</c><00:02:26.030><c> front</c><00:02:26.120><c> of</c><00:02:26.239><c> them</c><00:02:26.390><c> to</c><00:02:26.510><c> get</c><00:02:26.690><c> off</c>

00:02:26.800 --> 00:02:26.810 align:start position:0%
for the car in front of them to get off
 

00:02:26.810 --> 00:02:28.839 align:start position:0%
for the car in front of them to get off
the<00:02:26.959><c> road</c><00:02:27.110><c> before</c><00:02:27.620><c> they</c><00:02:27.980><c> can</c><00:02:28.190><c> start</c><00:02:28.430><c> driving</c>

00:02:28.839 --> 00:02:28.849 align:start position:0%
the road before they can start driving
 

00:02:28.849 --> 00:02:30.339 align:start position:0%
the road before they can start driving
on<00:02:28.970><c> it</c><00:02:29.120><c> right</c><00:02:29.330><c> and</c><00:02:29.510><c> that's</c><00:02:29.660><c> kind</c><00:02:29.900><c> of</c><00:02:29.930><c> the</c><00:02:29.989><c> idea</c>

00:02:30.339 --> 00:02:30.349 align:start position:0%
on it right and that's kind of the idea
 

00:02:30.349 --> 00:02:31.960 align:start position:0%
on it right and that's kind of the idea
so<00:02:30.590><c> we'll</c><00:02:30.739><c> use</c><00:02:30.860><c> some</c><00:02:31.040><c> examples</c><00:02:31.459><c> like</c><00:02:31.580><c> this</c><00:02:31.760><c> to</c>

00:02:31.960 --> 00:02:31.970 align:start position:0%
so we'll use some examples like this to
 

00:02:31.970 --> 00:02:33.520 align:start position:0%
so we'll use some examples like this to
make<00:02:32.090><c> things</c><00:02:32.330><c> more</c><00:02:32.510><c> clear</c><00:02:32.720><c> but</c><00:02:33.290><c> just</c>

00:02:33.520 --> 00:02:33.530 align:start position:0%
make things more clear but just
 

00:02:33.530 --> 00:02:35.290 align:start position:0%
make things more clear but just
understand<00:02:34.010><c> that</c><00:02:34.160><c> the</c><00:02:34.489><c> amount</c><00:02:34.700><c> of</c><00:02:34.790><c> cores</c><00:02:35.060><c> in</c>

00:02:35.290 --> 00:02:35.300 align:start position:0%
understand that the amount of cores in
 

00:02:35.300 --> 00:02:37.390 align:start position:0%
understand that the amount of cores in
your<00:02:35.420><c> processor</c><00:02:35.930><c> really</c><00:02:36.500><c> matters</c><00:02:36.860><c> right</c><00:02:37.130><c> and</c>

00:02:37.390 --> 00:02:37.400 align:start position:0%
your processor really matters right and
 

00:02:37.400 --> 00:02:39.850 align:start position:0%
your processor really matters right and
when<00:02:37.819><c> we</c><00:02:37.880><c> think</c><00:02:38.090><c> about</c><00:02:38.209><c> clock</c><00:02:38.780><c> speed</c><00:02:39.200><c> so</c><00:02:39.680><c> if</c><00:02:39.739><c> we</c>

00:02:39.850 --> 00:02:39.860 align:start position:0%
when we think about clock speed so if we
 

00:02:39.860 --> 00:02:42.490 align:start position:0%
when we think about clock speed so if we
have<00:02:39.980><c> something</c><00:02:40.190><c> like</c><00:02:40.420><c> 2.6</c><00:02:41.420><c> gigahertz</c><00:02:41.870><c> is</c><00:02:42.260><c> the</c>

00:02:42.490 --> 00:02:42.500 align:start position:0%
have something like 2.6 gigahertz is the
 

00:02:42.500 --> 00:02:44.949 align:start position:0%
have something like 2.6 gigahertz is the
clock<00:02:43.099><c> speed</c><00:02:43.400><c> of</c><00:02:43.459><c> your</c><00:02:43.640><c> processor</c><00:02:44.209><c> what</c><00:02:44.780><c> that</c>

00:02:44.949 --> 00:02:44.959 align:start position:0%
clock speed of your processor what that
 

00:02:44.959 --> 00:02:46.990 align:start position:0%
clock speed of your processor what that
means<00:02:45.260><c> is</c><00:02:45.500><c> each</c><00:02:45.680><c> one</c><00:02:45.739><c> of</c><00:02:46.040><c> your</c><00:02:46.250><c> cores</c><00:02:46.489><c> can</c><00:02:46.790><c> run</c>

00:02:46.990 --> 00:02:47.000 align:start position:0%
means is each one of your cores can run
 

00:02:47.000 --> 00:02:49.690 align:start position:0%
means is each one of your cores can run
at<00:02:47.180><c> 2.6</c><00:02:47.840><c> gigahertz</c><00:02:48.170><c> so</c><00:02:48.799><c> each</c><00:02:49.099><c> one</c><00:02:49.459><c> of</c><00:02:49.580><c> those</c>

00:02:49.690 --> 00:02:49.700 align:start position:0%
at 2.6 gigahertz so each one of those
 

00:02:49.700 --> 00:02:52.870 align:start position:0%
at 2.6 gigahertz so each one of those
cores<00:02:50.030><c> is</c><00:02:50.329><c> able</c><00:02:50.780><c> to</c><00:02:50.959><c> do</c><00:02:51.340><c> 2.6</c><00:02:52.340><c> I</c><00:02:52.549><c> think</c><00:02:52.790><c> it's</c>

00:02:52.870 --> 00:02:52.880 align:start position:0%
cores is able to do 2.6 I think it's
 

00:02:52.880 --> 00:02:55.660 align:start position:0%
cores is able to do 2.6 I think it's
like<00:02:53.030><c> million</c><00:02:53.799><c> operations</c><00:02:54.799><c> per</c><00:02:55.130><c> second</c><00:02:55.519><c> or</c>

00:02:55.660 --> 00:02:55.670 align:start position:0%
like million operations per second or
 

00:02:55.670 --> 00:02:57.190 align:start position:0%
like million operations per second or
you<00:02:56.030><c> know</c><00:02:56.120><c> something</c><00:02:56.480><c> along</c><00:02:56.599><c> those</c><00:02:56.840><c> lines</c><00:02:57.079><c> I</c>

00:02:57.190 --> 00:02:57.200 align:start position:0%
you know something along those lines I
 

00:02:57.200 --> 00:02:58.330 align:start position:0%
you know something along those lines I
don't<00:02:57.260><c> know</c><00:02:57.410><c> what</c><00:02:57.530><c> the</c><00:02:57.620><c> conversion</c><00:02:58.160><c> rate</c><00:02:58.310><c> is</c>

00:02:58.330 --> 00:02:58.340 align:start position:0%
don't know what the conversion rate is
 

00:02:58.340 --> 00:03:02.259 align:start position:0%
don't know what the conversion rate is
and<00:02:58.670><c> that</c><00:02:59.360><c> means</c><00:02:59.599><c> you</c><00:02:59.750><c> can</c><00:02:59.870><c> do</c><00:03:00.250><c> 2.6</c><00:03:01.250><c> times</c><00:03:01.700><c> 4</c>

00:03:02.259 --> 00:03:02.269 align:start position:0%
and that means you can do 2.6 times 4
 

00:03:02.269 --> 00:03:05.140 align:start position:0%
and that means you can do 2.6 times 4
operations<00:03:03.079><c> per</c><00:03:03.769><c> second</c><00:03:04.250><c> because</c><00:03:04.579><c> each</c><00:03:04.819><c> one</c>

00:03:05.140 --> 00:03:05.150 align:start position:0%
operations per second because each one
 

00:03:05.150 --> 00:03:07.390 align:start position:0%
operations per second because each one
of<00:03:05.239><c> these</c><00:03:05.390><c> cores</c><00:03:05.720><c> is</c><00:03:06.230><c> running</c><00:03:06.769><c> at</c><00:03:06.920><c> that</c><00:03:07.099><c> clock</c>

00:03:07.390 --> 00:03:07.400 align:start position:0%
of these cores is running at that clock
 

00:03:07.400 --> 00:03:09.960 align:start position:0%
of these cores is running at that clock
speed<00:03:07.700><c> and</c><00:03:07.849><c> the</c><00:03:08.269><c> clock</c><00:03:08.660><c> speed</c><00:03:08.989><c> is</c><00:03:09.170><c> essentially</c>

00:03:09.960 --> 00:03:09.970 align:start position:0%
speed and the clock speed is essentially
 

00:03:09.970 --> 00:03:12.699 align:start position:0%
speed and the clock speed is essentially
kind<00:03:10.970><c> of</c><00:03:11.030><c> an</c><00:03:11.180><c> electron</c><00:03:11.690><c> or</c><00:03:11.840><c> a</c><00:03:11.870><c> wire</c><00:03:12.110><c> going</c><00:03:12.440><c> on</c>

00:03:12.699 --> 00:03:12.709 align:start position:0%
kind of an electron or a wire going on
 

00:03:12.709 --> 00:03:14.979 align:start position:0%
kind of an electron or a wire going on
and<00:03:12.980><c> off</c><00:03:13.069><c> on</c><00:03:13.340><c> and</c><00:03:13.610><c> off</c><00:03:13.700><c> on</c><00:03:13.760><c> and</c><00:03:14.299><c> off</c><00:03:14.390><c> and</c><00:03:14.630><c> that</c>

00:03:14.979 --> 00:03:14.989 align:start position:0%
and off on and off on and off and that
 

00:03:14.989 --> 00:03:17.170 align:start position:0%
and off on and off on and off and that
allows<00:03:15.260><c> your</c><00:03:15.530><c> computer</c><00:03:15.650><c> to</c><00:03:16.099><c> do</c><00:03:16.220><c> operations</c><00:03:16.760><c> so</c>

00:03:17.170 --> 00:03:17.180 align:start position:0%
allows your computer to do operations so
 

00:03:17.180 --> 00:03:18.849 align:start position:0%
allows your computer to do operations so
that's<00:03:17.359><c> kind</c><00:03:17.569><c> of</c><00:03:17.660><c> the</c><00:03:17.959><c> background</c><00:03:18.170><c> here</c><00:03:18.620><c> we</c>

00:03:18.849 --> 00:03:18.859 align:start position:0%
that's kind of the background here we
 

00:03:18.859 --> 00:03:21.220 align:start position:0%
that's kind of the background here we
have<00:03:19.040><c> central</c><00:03:19.880><c> processing</c><00:03:20.359><c> units</c><00:03:20.750><c> those</c>

00:03:21.220 --> 00:03:21.230 align:start position:0%
have central processing units those
 

00:03:21.230 --> 00:03:22.900 align:start position:0%
have central processing units those
central<00:03:21.680><c> processing</c><00:03:22.069><c> units</c><00:03:22.430><c> are</c><00:03:22.549><c> made</c><00:03:22.670><c> up</c><00:03:22.790><c> of</c>

00:03:22.900 --> 00:03:22.910 align:start position:0%
central processing units are made up of
 

00:03:22.910 --> 00:03:24.970 align:start position:0%
central processing units are made up of
course<00:03:23.209><c> the</c><00:03:23.690><c> amount</c><00:03:23.930><c> of</c><00:03:24.019><c> cores</c><00:03:24.319><c> you</c><00:03:24.500><c> have</c>

00:03:24.970 --> 00:03:24.980 align:start position:0%
course the amount of cores you have
 

00:03:24.980 --> 00:03:26.410 align:start position:0%
course the amount of cores you have
denotes<00:03:25.370><c> the</c><00:03:25.609><c> amount</c><00:03:25.700><c> of</c><00:03:25.880><c> parallel</c>

00:03:26.410 --> 00:03:26.420 align:start position:0%
denotes the amount of parallel
 

00:03:26.420 --> 00:03:28.000 align:start position:0%
denotes the amount of parallel
operations<00:03:27.019><c> that</c><00:03:27.200><c> can</c><00:03:27.319><c> happen</c><00:03:27.470><c> at</c><00:03:27.829><c> the</c><00:03:27.980><c> same</c>

00:03:28.000 --> 00:03:28.010 align:start position:0%
operations that can happen at the same
 

00:03:28.010 --> 00:03:31.090 align:start position:0%
operations that can happen at the same
time<00:03:28.459><c> now</c><00:03:29.090><c> obviously</c><00:03:29.660><c> we</c><00:03:29.959><c> know</c><00:03:30.200><c> that</c><00:03:30.470><c> we're</c>

00:03:31.090 --> 00:03:31.100 align:start position:0%
time now obviously we know that we're
 

00:03:31.100 --> 00:03:32.590 align:start position:0%
time now obviously we know that we're
doing<00:03:31.160><c> more</c><00:03:31.310><c> than</c><00:03:31.459><c> four</c><00:03:31.790><c> operations</c><00:03:32.359><c> right</c>

00:03:32.590 --> 00:03:32.600 align:start position:0%
doing more than four operations right
 

00:03:32.600 --> 00:03:34.210 align:start position:0%
doing more than four operations right
you<00:03:32.900><c> know</c><00:03:33.019><c> like</c><00:03:33.290><c> in</c><00:03:33.530><c> our</c><00:03:33.680><c> computer</c><00:03:34.040><c> we're</c>

00:03:34.210 --> 00:03:34.220 align:start position:0%
you know like in our computer we're
 

00:03:34.220 --> 00:03:35.920 align:start position:0%
you know like in our computer we're
gonna<00:03:34.310><c> do</c><00:03:34.459><c> more</c><00:03:34.609><c> than</c><00:03:34.670><c> four</c><00:03:34.880><c> operations</c><00:03:35.420><c> so</c>

00:03:35.920 --> 00:03:35.930 align:start position:0%
gonna do more than four operations so
 

00:03:35.930 --> 00:03:37.809 align:start position:0%
gonna do more than four operations so
how<00:03:36.139><c> do</c><00:03:36.200><c> we</c><00:03:36.319><c> do</c><00:03:36.590><c> all</c><00:03:36.620><c> these</c><00:03:37.130><c> operations</c><00:03:37.670><c> and</c>

00:03:37.809 --> 00:03:37.819 align:start position:0%
how do we do all these operations and
 

00:03:37.819 --> 00:03:39.940 align:start position:0%
how do we do all these operations and
how<00:03:37.910><c> do</c><00:03:37.970><c> we</c><00:03:38.030><c> schedule</c><00:03:38.480><c> when</c><00:03:38.930><c> they</c><00:03:39.079><c> happen</c><00:03:39.500><c> well</c>

00:03:39.940 --> 00:03:39.950 align:start position:0%
how do we schedule when they happen well
 

00:03:39.950 --> 00:03:41.770 align:start position:0%
how do we schedule when they happen well
that's<00:03:40.160><c> where</c><00:03:40.340><c> we</c><00:03:40.459><c> talk</c><00:03:40.700><c> about</c><00:03:40.940><c> threads</c><00:03:41.480><c> and</c>

00:03:41.770 --> 00:03:41.780 align:start position:0%
that's where we talk about threads and
 

00:03:41.780 --> 00:03:43.750 align:start position:0%
that's where we talk about threads and
we<00:03:41.840><c> talk</c><00:03:42.049><c> about</c><00:03:42.290><c> multi</c><00:03:42.590><c> processing</c><00:03:43.040><c> so</c><00:03:43.730><c> a</c>

00:03:43.750 --> 00:03:43.760 align:start position:0%
we talk about multi processing so a
 

00:03:43.760 --> 00:03:47.470 align:start position:0%
we talk about multi processing so a
thread<00:03:44.359><c> is</c><00:03:44.600><c> essentially</c><00:03:45.440><c> one</c><00:03:45.769><c> program</c><00:03:46.549><c> or</c><00:03:47.060><c> one</c>

00:03:47.470 --> 00:03:47.480 align:start position:0%
thread is essentially one program or one
 

00:03:47.480 --> 00:03:50.430 align:start position:0%
thread is essentially one program or one
set<00:03:48.230><c> of</c><00:03:48.260><c> operations</c><00:03:49.040><c> that</c><00:03:49.310><c> needs</c><00:03:49.970><c> to</c><00:03:50.180><c> happen</c>

00:03:50.430 --> 00:03:50.440 align:start position:0%
set of operations that needs to happen
 

00:03:50.440 --> 00:03:53.650 align:start position:0%
set of operations that needs to happen
so<00:03:51.440><c> every</c><00:03:51.859><c> thread</c><00:03:52.310><c> is</c><00:03:52.579><c> going</c><00:03:52.970><c> to</c><00:03:53.120><c> be</c><00:03:53.239><c> assigned</c>

00:03:53.650 --> 00:03:53.660 align:start position:0%
so every thread is going to be assigned
 

00:03:53.660 --> 00:03:56.410 align:start position:0%
so every thread is going to be assigned
to<00:03:54.230><c> one</c><00:03:54.500><c> core</c><00:03:54.950><c> so</c><00:03:55.430><c> all</c><00:03:55.700><c> of</c><00:03:55.910><c> these</c><00:03:56.030><c> cores</c><00:03:56.329><c> that</c>

00:03:56.410 --> 00:03:56.420 align:start position:0%
to one core so all of these cores that
 

00:03:56.420 --> 00:03:58.030 align:start position:0%
to one core so all of these cores that
we<00:03:56.569><c> have</c><00:03:56.840><c> here</c><00:03:57.109><c> will</c><00:03:57.260><c> have</c><00:03:57.470><c> a</c><00:03:57.650><c> bunch</c><00:03:57.859><c> of</c>

00:03:58.030 --> 00:03:58.040 align:start position:0%
we have here will have a bunch of
 

00:03:58.040 --> 00:03:59.680 align:start position:0%
we have here will have a bunch of
different<00:03:58.220><c> threads</c><00:03:58.700><c> that</c><00:03:59.180><c> they're</c><00:03:59.420><c> going</c><00:03:59.599><c> to</c>

00:03:59.680 --> 00:03:59.690 align:start position:0%
different threads that they're going to
 

00:03:59.690 --> 00:04:02.020 align:start position:0%
different threads that they're going to
be<00:03:59.930><c> executing</c><00:04:00.650><c> and</c><00:04:00.829><c> switching</c><00:04:01.370><c> between</c><00:04:01.400><c> which</c>

00:04:02.020 --> 00:04:02.030 align:start position:0%
be executing and switching between which
 

00:04:02.030 --> 00:04:04.360 align:start position:0%
be executing and switching between which
ones<00:04:02.329><c> they</c><00:04:02.569><c> perform</c><00:04:02.959><c> operations</c><00:04:03.500><c> on</c><00:04:03.650><c> so</c><00:04:04.130><c> if</c><00:04:04.220><c> we</c>

00:04:04.360 --> 00:04:04.370 align:start position:0%
ones they perform operations on so if we
 

00:04:04.370 --> 00:04:06.400 align:start position:0%
ones they perform operations on so if we
say<00:04:04.579><c> that</c><00:04:04.609><c> like</c><00:04:04.970><c> this</c><00:04:05.269><c> line</c><00:04:05.660><c> actually</c><00:04:06.200><c> I'm</c>

00:04:06.400 --> 00:04:06.410 align:start position:0%
say that like this line actually I'm
 

00:04:06.410 --> 00:04:07.930 align:start position:0%
say that like this line actually I'm
gonna<00:04:06.500><c> draw</c><00:04:06.739><c> in</c><00:04:06.799><c> another</c><00:04:07.010><c> color</c><00:04:07.250><c> so</c><00:04:07.370><c> that</c><00:04:07.549><c> it's</c>

00:04:07.930 --> 00:04:07.940 align:start position:0%
gonna draw in another color so that it's
 

00:04:07.940 --> 00:04:09.819 align:start position:0%
gonna draw in another color so that it's
a<00:04:08.000><c> little</c><00:04:08.150><c> bit</c><00:04:08.239><c> better</c><00:04:08.389><c> let's</c><00:04:08.930><c> say</c><00:04:09.109><c> this</c><00:04:09.290><c> blue</c>

00:04:09.819 --> 00:04:09.829 align:start position:0%
a little bit better let's say this blue
 

00:04:09.829 --> 00:04:12.309 align:start position:0%
a little bit better let's say this blue
line<00:04:10.099><c> is</c><00:04:10.400><c> a</c><00:04:10.430><c> thread</c><00:04:10.819><c> and</c><00:04:11.000><c> this</c><00:04:11.840><c> other</c><00:04:12.019><c> blue</c>

00:04:12.309 --> 00:04:12.319 align:start position:0%
line is a thread and this other blue
 

00:04:12.319 --> 00:04:14.500 align:start position:0%
line is a thread and this other blue
line<00:04:12.500><c> is</c><00:04:12.650><c> a</c><00:04:12.680><c> thread</c><00:04:12.980><c> and</c><00:04:13.160><c> our</c><00:04:13.609><c> processor</c><00:04:14.269><c> are</c><00:04:14.450><c> a</c>

00:04:14.500 --> 00:04:14.510 align:start position:0%
line is a thread and our processor are a
 

00:04:14.510 --> 00:04:16.900 align:start position:0%
line is a thread and our processor are a
processor<00:04:15.109><c> core</c><00:04:15.440><c> can</c><00:04:15.769><c> only</c><00:04:15.950><c> do</c><00:04:16.190><c> one</c><00:04:16.519><c> thing</c><00:04:16.549><c> at</c>

00:04:16.900 --> 00:04:16.910 align:start position:0%
processor core can only do one thing at
 

00:04:16.910 --> 00:04:18.849 align:start position:0%
processor core can only do one thing at
a<00:04:16.970><c> time</c><00:04:17.030><c> and</c><00:04:17.389><c> it</c><00:04:17.840><c> has</c><00:04:17.959><c> both</c><00:04:18.229><c> these</c><00:04:18.470><c> threads</c>

00:04:18.849 --> 00:04:18.859 align:start position:0%
a time and it has both these threads
 

00:04:18.859 --> 00:04:21.009 align:start position:0%
a time and it has both these threads
that<00:04:19.039><c> it's</c><00:04:19.220><c> assigned</c><00:04:19.579><c> to</c><00:04:19.760><c> what</c><00:04:20.299><c> that</c><00:04:20.419><c> means</c><00:04:20.659><c> is</c>

00:04:21.009 --> 00:04:21.019 align:start position:0%
that it's assigned to what that means is
 

00:04:21.019 --> 00:04:23.080 align:start position:0%
that it's assigned to what that means is
that<00:04:21.049><c> it</c><00:04:21.409><c> needs</c><00:04:21.590><c> to</c><00:04:21.769><c> find</c><00:04:22.070><c> a</c><00:04:22.190><c> way</c><00:04:22.340><c> where</c><00:04:22.550><c> it</c><00:04:22.940><c> can</c>

00:04:23.080 --> 00:04:23.090 align:start position:0%
that it needs to find a way where it can
 

00:04:23.090 --> 00:04:25.330 align:start position:0%
that it needs to find a way where it can
do<00:04:23.210><c> some</c><00:04:23.510><c> operations</c><00:04:24.110><c> on</c><00:04:24.229><c> this</c><00:04:24.470><c> thread</c><00:04:24.770><c> and</c>

00:04:25.330 --> 00:04:25.340 align:start position:0%
do some operations on this thread and
 

00:04:25.340 --> 00:04:27.850 align:start position:0%
do some operations on this thread and
can<00:04:25.580><c> switch</c><00:04:26.030><c> right</c><00:04:26.600><c> and</c><00:04:26.810><c> do</c><00:04:26.930><c> some</c><00:04:27.230><c> operations</c>

00:04:27.850 --> 00:04:27.860 align:start position:0%
can switch right and do some operations
 

00:04:27.860 --> 00:04:29.470 align:start position:0%
can switch right and do some operations
on<00:04:28.040><c> this</c><00:04:28.370><c> thread</c><00:04:28.639><c> and</c><00:04:28.910><c> this</c><00:04:29.180><c> is</c><00:04:29.300><c> what</c>

00:04:29.470 --> 00:04:29.480 align:start position:0%
on this thread and this is what
 

00:04:29.480 --> 00:04:32.050 align:start position:0%
on this thread and this is what
threading<00:04:29.990><c> is</c><00:04:30.260><c> it's</c><00:04:30.710><c> essentially</c><00:04:31.460><c> how</c><00:04:31.790><c> do</c><00:04:31.850><c> we</c>

00:04:32.050 --> 00:04:32.060 align:start position:0%
threading is it's essentially how do we
 

00:04:32.060 --> 00:04:34.719 align:start position:0%
threading is it's essentially how do we
determine<00:04:32.570><c> when</c><00:04:33.440><c> to</c><00:04:33.680><c> run</c><00:04:33.919><c> different</c><00:04:34.250><c> things</c>

00:04:34.719 --> 00:04:34.729 align:start position:0%
determine when to run different things
 

00:04:34.729 --> 00:04:37.629 align:start position:0%
determine when to run different things
on<00:04:35.030><c> the</c><00:04:35.330><c> same</c><00:04:35.630><c> CPU</c><00:04:36.199><c> core</c><00:04:36.470><c> yes</c><00:04:37.100><c> we</c><00:04:37.340><c> can</c><00:04:37.490><c> have</c>

00:04:37.629 --> 00:04:37.639 align:start position:0%
on the same CPU core yes we can have
 

00:04:37.639 --> 00:04:39.270 align:start position:0%
on the same CPU core yes we can have
threads<00:04:37.970><c> running</c><00:04:38.240><c> on</c><00:04:38.419><c> different</c><00:04:38.630><c> cores</c>

00:04:39.270 --> 00:04:39.280 align:start position:0%
threads running on different cores
 

00:04:39.280 --> 00:04:41.770 align:start position:0%
threads running on different cores
obviously<00:04:40.280><c> you</c><00:04:40.550><c> know</c><00:04:40.639><c> this</c><00:04:40.880><c> core</c><00:04:41.180><c> itself</c><00:04:41.600><c> is</c>

00:04:41.770 --> 00:04:41.780 align:start position:0%
obviously you know this core itself is
 

00:04:41.780 --> 00:04:43.659 align:start position:0%
obviously you know this core itself is
gonna<00:04:41.900><c> happen</c><00:04:42.110><c> its</c><00:04:42.889><c> own</c><00:04:43.100><c> threads</c><00:04:43.460><c> that</c><00:04:43.610><c> are</c>

00:04:43.659 --> 00:04:43.669 align:start position:0%
gonna happen its own threads that are
 

00:04:43.669 --> 00:04:45.400 align:start position:0%
gonna happen its own threads that are
running<00:04:43.760><c> on</c><00:04:44.090><c> it</c><00:04:44.240><c> this</c><00:04:44.720><c> core</c><00:04:45.020><c> will</c><00:04:45.139><c> have</c><00:04:45.260><c> its</c>

00:04:45.400 --> 00:04:45.410 align:start position:0%
running on it this core will have its
 

00:04:45.410 --> 00:04:48.280 align:start position:0%
running on it this core will have its
own<00:04:45.500><c> threads</c><00:04:45.860><c> but</c><00:04:46.729><c> threading</c><00:04:47.270><c> does</c><00:04:48.050><c> not</c>

00:04:48.280 --> 00:04:48.290 align:start position:0%
own threads but threading does not
 

00:04:48.290 --> 00:04:51.939 align:start position:0%
own threads but threading does not
involve<00:04:48.740><c> running</c><00:04:49.580><c> on</c><00:04:49.910><c> multiple</c><00:04:50.300><c> cores</c><00:04:50.900><c> all</c><00:04:51.620><c> it</c>

00:04:51.939 --> 00:04:51.949 align:start position:0%
involve running on multiple cores all it
 

00:04:51.949 --> 00:04:53.950 align:start position:0%
involve running on multiple cores all it
involves<00:04:52.370><c> is</c><00:04:52.520><c> creating</c><00:04:52.940><c> some</c><00:04:53.240><c> program</c><00:04:53.750><c> or</c>

00:04:53.950 --> 00:04:53.960 align:start position:0%
involves is creating some program or
 

00:04:53.960 --> 00:04:56.110 align:start position:0%
involves is creating some program or
some<00:04:54.199><c> operations</c><00:04:55.040><c> some</c><00:04:55.250><c> function</c><00:04:55.669><c> something</c>

00:04:56.110 --> 00:04:56.120 align:start position:0%
some operations some function something
 

00:04:56.120 --> 00:04:58.180 align:start position:0%
some operations some function something
that's<00:04:56.630><c> going</c><00:04:56.870><c> to</c><00:04:56.990><c> be</c><00:04:57.229><c> executing</c><00:04:57.889><c> in</c><00:04:58.040><c> a</c>

00:04:58.180 --> 00:04:58.190 align:start position:0%
that's going to be executing in a
 

00:04:58.190 --> 00:05:00.550 align:start position:0%
that's going to be executing in a
different<00:04:58.639><c> sequence</c><00:04:59.030><c> than</c><00:04:59.450><c> another</c><00:04:59.750><c> thing</c><00:05:00.080><c> so</c>

00:05:00.550 --> 00:05:00.560 align:start position:0%
different sequence than another thing so
 

00:05:00.560 --> 00:05:02.230 align:start position:0%
different sequence than another thing so
if<00:05:00.650><c> we</c><00:05:00.770><c> have</c><00:05:00.919><c> two</c><00:05:01.190><c> threads</c><00:05:01.550><c> you</c><00:05:01.820><c> know</c><00:05:01.910><c> then</c><00:05:02.120><c> we</c>

00:05:02.230 --> 00:05:02.240 align:start position:0%
if we have two threads you know then we
 

00:05:02.240 --> 00:05:04.420 align:start position:0%
if we have two threads you know then we
can<00:05:02.389><c> draw</c><00:05:02.630><c> these</c><00:05:02.960><c> two</c><00:05:03.350><c> lines</c><00:05:03.710><c> here</c><00:05:03.919><c> let's</c><00:05:04.340><c> say</c>

00:05:04.420 --> 00:05:04.430 align:start position:0%
can draw these two lines here let's say
 

00:05:04.430 --> 00:05:05.890 align:start position:0%
can draw these two lines here let's say
okay<00:05:04.700><c> we</c><00:05:04.820><c> have</c><00:05:04.910><c> these</c><00:05:05.030><c> two</c><00:05:05.270><c> different</c><00:05:05.300><c> things</c>

00:05:05.890 --> 00:05:05.900 align:start position:0%
okay we have these two different things
 

00:05:05.900 --> 00:05:08.620 align:start position:0%
okay we have these two different things
they<00:05:06.290><c> both</c><00:05:06.560><c> need</c><00:05:06.770><c> to</c><00:05:06.950><c> happen</c><00:05:07.310><c> now</c><00:05:07.850><c> we</c><00:05:07.910><c> tell</c><00:05:08.389><c> our</c>

00:05:08.620 --> 00:05:08.630 align:start position:0%
they both need to happen now we tell our
 

00:05:08.630 --> 00:05:11.170 align:start position:0%
they both need to happen now we tell our
CPU<00:05:09.169><c> you</c><00:05:09.530><c> know</c><00:05:09.620><c> figure</c><00:05:10.070><c> out</c><00:05:10.220><c> which</c><00:05:10.729><c> one</c><00:05:10.970><c> we're</c>

00:05:11.170 --> 00:05:11.180 align:start position:0%
CPU you know figure out which one we're
 

00:05:11.180 --> 00:05:12.730 align:start position:0%
CPU you know figure out which one we're
gonna<00:05:11.270><c> do</c><00:05:11.570><c> and</c><00:05:11.780><c> what's</c><00:05:12.169><c> happening</c><00:05:12.590><c> on</c><00:05:12.710><c> our</c>

00:05:12.730 --> 00:05:12.740 align:start position:0%
gonna do and what's happening on our
 

00:05:12.740 --> 00:05:14.290 align:start position:0%
gonna do and what's happening on our
computer<00:05:13.280><c> and</c><00:05:13.370><c> we</c><00:05:13.460><c> can</c><00:05:13.580><c> actually</c><00:05:13.700><c> look</c><00:05:13.850><c> at</c><00:05:14.150><c> the</c>

00:05:14.290 --> 00:05:14.300 align:start position:0%
computer and we can actually look at the
 

00:05:14.300 --> 00:05:16.180 align:start position:0%
computer and we can actually look at the
amount<00:05:14.510><c> of</c><00:05:14.570><c> threads</c><00:05:14.780><c> and</c><00:05:14.900><c> I'll</c><00:05:15.020><c> do</c><00:05:15.169><c> that</c><00:05:15.350><c> I'm</c>

00:05:16.180 --> 00:05:16.190 align:start position:0%
amount of threads and I'll do that I'm
 

00:05:16.190 --> 00:05:18.100 align:start position:0%
amount of threads and I'll do that I'm
here<00:05:16.490><c> to</c><00:05:16.610><c> show</c><00:05:16.789><c> you</c><00:05:16.850><c> guys</c><00:05:17.060><c> if</c><00:05:17.539><c> we</c><00:05:17.630><c> go</c><00:05:17.750><c> to</c><00:05:17.840><c> task</c>

00:05:18.100 --> 00:05:18.110 align:start position:0%
here to show you guys if we go to task
 

00:05:18.110 --> 00:05:20.950 align:start position:0%
here to show you guys if we go to task
manager<00:05:18.289><c> and</c><00:05:18.830><c> we</c><00:05:19.550><c> go</c><00:05:19.700><c> to</c><00:05:19.760><c> performance</c><00:05:20.510><c> we</c>

00:05:20.950 --> 00:05:20.960 align:start position:0%
manager and we go to performance we
 

00:05:20.960 --> 00:05:24.460 align:start position:0%
manager and we go to performance we
should<00:05:21.260><c> see</c><00:05:21.590><c> that</c><00:05:21.620><c> we</c><00:05:21.889><c> have</c><00:05:23.050><c> 1854</c><00:05:24.050><c> threads</c>

00:05:24.460 --> 00:05:24.470 align:start position:0%
should see that we have 1854 threads
 

00:05:24.470 --> 00:05:25.810 align:start position:0%
should see that we have 1854 threads
running<00:05:24.860><c> and</c><00:05:24.949><c> you</c><00:05:25.010><c> can</c><00:05:25.039><c> see</c><00:05:25.160><c> that</c><00:05:25.400><c> the</c><00:05:25.520><c> bottom</c>

00:05:25.810 --> 00:05:25.820 align:start position:0%
running and you can see that the bottom
 

00:05:25.820 --> 00:05:29.050 align:start position:0%
running and you can see that the bottom
and<00:05:26.000><c> 173</c><00:05:26.960><c> different</c><00:05:27.289><c> processes</c><00:05:27.860><c> so</c><00:05:28.729><c> what</c><00:05:28.940><c> that</c>

00:05:29.050 --> 00:05:29.060 align:start position:0%
and 173 different processes so what that
 

00:05:29.060 --> 00:05:31.390 align:start position:0%
and 173 different processes so what that
means<00:05:29.330><c> is</c><00:05:29.539><c> that</c><00:05:29.870><c> between</c><00:05:30.260><c> the</c><00:05:30.530><c> four</c><00:05:30.919><c> cores</c><00:05:31.220><c> on</c>

00:05:31.390 --> 00:05:31.400 align:start position:0%
means is that between the four cores on
 

00:05:31.400 --> 00:05:32.650 align:start position:0%
means is that between the four cores on
my<00:05:31.490><c> computer</c><00:05:31.880><c> you</c><00:05:31.970><c> can</c><00:05:32.090><c> see</c><00:05:32.210><c> it's</c><00:05:32.330><c> running</c><00:05:32.450><c> a</c>

00:05:32.650 --> 00:05:32.660 align:start position:0%
my computer you can see it's running a
 

00:05:32.660 --> 00:05:35.920 align:start position:0%
my computer you can see it's running a
little<00:05:32.690><c> bit</c><00:05:33.139><c> under</c><00:05:33.700><c> 4.2</c><00:05:34.700><c> gigahertz</c><00:05:35.030><c> we</c><00:05:35.750><c> can</c>

00:05:35.920 --> 00:05:35.930 align:start position:0%
little bit under 4.2 gigahertz we can
 

00:05:35.930 --> 00:05:38.050 align:start position:0%
little bit under 4.2 gigahertz we can
run<00:05:36.169><c> at</c><00:05:36.380><c> most</c><00:05:36.650><c> four</c><00:05:37.039><c> threads</c><00:05:37.370><c> at</c><00:05:37.520><c> once</c><00:05:37.729><c> because</c>

00:05:38.050 --> 00:05:38.060 align:start position:0%
run at most four threads at once because
 

00:05:38.060 --> 00:05:40.570 align:start position:0%
run at most four threads at once because
we<00:05:38.090><c> have</c><00:05:38.419><c> four</c><00:05:38.930><c> cores</c><00:05:39.350><c> and</c><00:05:39.650><c> all</c><00:05:40.220><c> those</c><00:05:40.400><c> other</c>

00:05:40.570 --> 00:05:40.580 align:start position:0%
we have four cores and all those other
 

00:05:40.580 --> 00:05:41.980 align:start position:0%
we have four cores and all those other
threads<00:05:40.910><c> are</c><00:05:41.090><c> just</c><00:05:41.270><c> being</c><00:05:41.450><c> switched</c><00:05:41.780><c> between</c>

00:05:41.980 --> 00:05:41.990 align:start position:0%
threads are just being switched between
 

00:05:41.990 --> 00:05:44.080 align:start position:0%
threads are just being switched between
on<00:05:42.410><c> the</c><00:05:42.710><c> CPU</c><00:05:43.070><c> cores</c><00:05:43.310><c> so</c><00:05:43.460><c> all</c><00:05:43.610><c> these</c><00:05:43.760><c> different</c>

00:05:44.080 --> 00:05:44.090 align:start position:0%
on the CPU cores so all these different
 

00:05:44.090 --> 00:05:45.810 align:start position:0%
on the CPU cores so all these different
operations<00:05:44.450><c> are</c><00:05:44.780><c> happening</c><00:05:44.810><c> you</c><00:05:45.349><c> know</c>

00:05:45.810 --> 00:05:45.820 align:start position:0%
operations are happening you know
 

00:05:45.820 --> 00:05:47.950 align:start position:0%
operations are happening you know
milliseconds<00:05:46.820><c> after</c><00:05:47.000><c> each</c><00:05:47.240><c> other</c><00:05:47.450><c> and</c><00:05:47.690><c> this</c>

00:05:47.950 --> 00:05:47.960 align:start position:0%
milliseconds after each other and this
 

00:05:47.960 --> 00:05:49.540 align:start position:0%
milliseconds after each other and this
is<00:05:48.020><c> the</c><00:05:48.139><c> idea</c><00:05:48.500><c> behind</c><00:05:48.680><c> threading</c><00:05:49.220><c> is</c><00:05:49.340><c> that</c>

00:05:49.540 --> 00:05:49.550 align:start position:0%
is the idea behind threading is that
 

00:05:49.550 --> 00:05:51.400 align:start position:0%
is the idea behind threading is that
we're<00:05:49.669><c> not</c><00:05:49.789><c> necessarily</c><00:05:50.660><c> doing</c><00:05:50.840><c> things</c><00:05:51.200><c> in</c>

00:05:51.400 --> 00:05:51.410 align:start position:0%
we're not necessarily doing things in
 

00:05:51.410 --> 00:05:53.409 align:start position:0%
we're not necessarily doing things in
parallel<00:05:51.800><c> at</c><00:05:52.070><c> the</c><00:05:52.220><c> same</c><00:05:52.430><c> time</c><00:05:52.700><c> we're</c><00:05:53.240><c> just</c>

00:05:53.409 --> 00:05:53.419 align:start position:0%
parallel at the same time we're just
 

00:05:53.419 --> 00:05:55.540 align:start position:0%
parallel at the same time we're just
changing<00:05:53.750><c> the</c><00:05:54.080><c> order</c><00:05:54.740><c> in</c><00:05:54.919><c> which</c><00:05:54.950><c> we</c><00:05:55.340><c> do</c>

00:05:55.540 --> 00:05:55.550 align:start position:0%
changing the order in which we do
 

00:05:55.550 --> 00:05:57.879 align:start position:0%
changing the order in which we do
specific<00:05:56.150><c> operations</c><00:05:56.690><c> so</c><00:05:57.229><c> why</c><00:05:57.500><c> would</c><00:05:57.740><c> we</c><00:05:57.860><c> even</c>

00:05:57.879 --> 00:05:57.889 align:start position:0%
specific operations so why would we even
 

00:05:57.889 --> 00:05:59.589 align:start position:0%
specific operations so why would we even
want<00:05:58.340><c> to</c><00:05:58.400><c> do</c><00:05:58.580><c> that</c><00:05:58.760><c> what's</c><00:05:59.150><c> the</c><00:05:59.270><c> point</c><00:05:59.450><c> of</c>

00:05:59.589 --> 00:05:59.599 align:start position:0%
want to do that what's the point of
 

00:05:59.599 --> 00:06:01.150 align:start position:0%
want to do that what's the point of
making<00:05:59.690><c> multiple</c><00:06:00.229><c> threads</c><00:06:00.440><c> if</c><00:06:00.620><c> we</c><00:06:00.740><c> can't</c><00:06:00.950><c> do</c>

00:06:01.150 --> 00:06:01.160 align:start position:0%
making multiple threads if we can't do
 

00:06:01.160 --> 00:06:03.640 align:start position:0%
making multiple threads if we can't do
things<00:06:01.340><c> at</c><00:06:01.580><c> the</c><00:06:01.610><c> same</c><00:06:01.789><c> time</c><00:06:02.090><c> well</c><00:06:02.750><c> sometimes</c><00:06:03.410><c> a</c>

00:06:03.640 --> 00:06:03.650 align:start position:0%
things at the same time well sometimes a
 

00:06:03.650 --> 00:06:06.580 align:start position:0%
things at the same time well sometimes a
thread<00:06:04.250><c> does</c><00:06:04.669><c> what's</c><00:06:05.090><c> called</c><00:06:05.360><c> hanging</c><00:06:06.110><c> or</c><00:06:06.320><c> it</c>

00:06:06.580 --> 00:06:06.590 align:start position:0%
thread does what's called hanging or it
 

00:06:06.590 --> 00:06:08.589 align:start position:0%
thread does what's called hanging or it
stops<00:06:07.070><c> or</c><00:06:07.280><c> he</c><00:06:07.340><c> doesn't</c><00:06:07.639><c> need</c><00:06:07.849><c> to</c><00:06:08.090><c> actually</c><00:06:08.240><c> be</c>

00:06:08.589 --> 00:06:08.599 align:start position:0%
stops or he doesn't need to actually be
 

00:06:08.599 --> 00:06:11.170 align:start position:0%
stops or he doesn't need to actually be
executing<00:06:09.320><c> at</c><00:06:09.410><c> the</c><00:06:09.919><c> current</c><00:06:10.220><c> time</c><00:06:10.490><c> so</c><00:06:11.000><c> our</c>

00:06:11.170 --> 00:06:11.180 align:start position:0%
executing at the current time so our
 

00:06:11.180 --> 00:06:13.210 align:start position:0%
executing at the current time so our
processor<00:06:11.780><c> core</c><00:06:12.020><c> can</c><00:06:12.260><c> kind</c><00:06:12.470><c> of</c><00:06:12.560><c> turn</c><00:06:12.830><c> around</c>

00:06:13.210 --> 00:06:13.220 align:start position:0%
processor core can kind of turn around
 

00:06:13.220 --> 00:06:15.610 align:start position:0%
processor core can kind of turn around
and<00:06:13.520><c> execute</c><00:06:14.060><c> another</c><00:06:14.300><c> thread</c><00:06:14.720><c> well</c><00:06:15.139><c> this</c><00:06:15.410><c> one</c>

00:06:15.610 --> 00:06:15.620 align:start position:0%
and execute another thread well this one
 

00:06:15.620 --> 00:06:18.070 align:start position:0%
and execute another thread well this one
say<00:06:16.010><c> is</c><00:06:16.250><c> waiting</c><00:06:17.120><c> right</c><00:06:17.300><c> so</c><00:06:17.720><c> while</c><00:06:17.900><c> one</c>

00:06:18.070 --> 00:06:18.080 align:start position:0%
say is waiting right so while one
 

00:06:18.080 --> 00:06:19.480 align:start position:0%
say is waiting right so while one
threads<00:06:18.440><c> waiting</c><00:06:18.950><c> for</c><00:06:19.130><c> something</c><00:06:19.280><c> to</c><00:06:19.430><c> happen</c>

00:06:19.480 --> 00:06:19.490 align:start position:0%
threads waiting for something to happen
 

00:06:19.490 --> 00:06:22.450 align:start position:0%
threads waiting for something to happen
maybe<00:06:19.910><c> the</c><00:06:20.090><c> user</c><00:06:20.300><c> to</c><00:06:20.539><c> press</c><00:06:20.780><c> a</c><00:06:20.990><c> key</c><00:06:21.200><c> maybe</c><00:06:21.950><c> for</c>

00:06:22.450 --> 00:06:22.460 align:start position:0%
maybe the user to press a key maybe for
 

00:06:22.460 --> 00:06:23.980 align:start position:0%
maybe the user to press a key maybe for
you<00:06:22.700><c> know</c><00:06:22.789><c> some</c><00:06:22.970><c> network</c><00:06:23.330><c> thing</c><00:06:23.570><c> to</c><00:06:23.690><c> send</c><00:06:23.900><c> a</c>

00:06:23.980 --> 00:06:23.990 align:start position:0%
you know some network thing to send a
 

00:06:23.990 --> 00:06:26.080 align:start position:0%
you know some network thing to send a
file<00:06:24.229><c> we</c><00:06:24.740><c> don't</c><00:06:24.919><c> need</c><00:06:25.070><c> to</c><00:06:25.280><c> be</c><00:06:25.430><c> just</c><00:06:25.729><c> stuck</c>

00:06:26.080 --> 00:06:26.090 align:start position:0%
file we don't need to be just stuck
 

00:06:26.090 --> 00:06:28.180 align:start position:0%
file we don't need to be just stuck
waiting<00:06:26.630><c> for</c><00:06:26.810><c> this</c><00:06:27.050><c> thread</c><00:06:27.349><c> our</c><00:06:27.560><c> processor</c>

00:06:28.180 --> 00:06:28.190 align:start position:0%
waiting for this thread our processor
 

00:06:28.190 --> 00:06:29.860 align:start position:0%
waiting for this thread our processor
core<00:06:28.400><c> can</c><00:06:28.580><c> kind</c><00:06:28.760><c> of</c><00:06:28.789><c> chain</c><00:06:29.120><c> gears</c><00:06:29.570><c> it</c><00:06:29.750><c> can</c>

00:06:29.860 --> 00:06:29.870 align:start position:0%
core can kind of chain gears it can
 

00:06:29.870 --> 00:06:31.719 align:start position:0%
core can kind of chain gears it can
shift<00:06:30.139><c> to</c><00:06:30.260><c> the</c><00:06:30.410><c> left</c><00:06:30.440><c> and</c><00:06:30.889><c> it</c><00:06:31.250><c> can</c><00:06:31.370><c> execute</c>

00:06:31.719 --> 00:06:31.729 align:start position:0%
shift to the left and it can execute
 

00:06:31.729 --> 00:06:33.730 align:start position:0%
shift to the left and it can execute
another<00:06:32.210><c> thread</c><00:06:32.720><c> while</c><00:06:33.050><c> that</c><00:06:33.260><c> one's</c><00:06:33.469><c> waiting</c>

00:06:33.730 --> 00:06:33.740 align:start position:0%
another thread while that one's waiting
 

00:06:33.740 --> 00:06:35.649 align:start position:0%
another thread while that one's waiting
so<00:06:34.310><c> this</c><00:06:34.460><c> is</c><00:06:34.550><c> the</c><00:06:34.669><c> point</c><00:06:34.940><c> with</c><00:06:35.090><c> threading</c><00:06:35.539><c> and</c>

00:06:35.649 --> 00:06:35.659 align:start position:0%
so this is the point with threading and
 

00:06:35.659 --> 00:06:37.719 align:start position:0%
so this is the point with threading and
this<00:06:35.870><c> is</c><00:06:36.020><c> called</c><00:06:36.260><c> concurrent</c><00:06:37.099><c> programming</c>

00:06:37.719 --> 00:06:37.729 align:start position:0%
this is called concurrent programming
 

00:06:37.729 --> 00:06:39.159 align:start position:0%
this is called concurrent programming
not<00:06:38.419><c> when</c><00:06:38.780><c> we're</c><00:06:38.930><c> doing</c>

00:06:39.159 --> 00:06:39.169 align:start position:0%
not when we're doing
 

00:06:39.169 --> 00:06:40.779 align:start position:0%
not when we're doing
things<00:06:39.379><c> in</c><00:06:39.560><c> parallel</c><00:06:40.039><c> at</c><00:06:40.189><c> the</c><00:06:40.340><c> exact</c><00:06:40.610><c> same</c>

00:06:40.779 --> 00:06:40.789 align:start position:0%
things in parallel at the exact same
 

00:06:40.789 --> 00:06:42.610 align:start position:0%
things in parallel at the exact same
time<00:06:41.060><c> but</c><00:06:41.509><c> when</c><00:06:41.689><c> we're</c><00:06:41.840><c> doing</c><00:06:41.990><c> things</c><00:06:42.169><c> in</c>

00:06:42.610 --> 00:06:42.620 align:start position:0%
time but when we're doing things in
 

00:06:42.620 --> 00:06:44.679 align:start position:0%
time but when we're doing things in
different<00:06:43.189><c> timing</c><00:06:43.580><c> sequences</c><00:06:44.150><c> so</c><00:06:44.419><c> we</c><00:06:44.539><c> can</c>

00:06:44.679 --> 00:06:44.689 align:start position:0%
different timing sequences so we can
 

00:06:44.689 --> 00:06:46.809 align:start position:0%
different timing sequences so we can
have<00:06:44.900><c> multiple</c><00:06:45.650><c> threads</c><00:06:45.949><c> running</c><00:06:46.580><c> at</c><00:06:46.699><c> the</c>

00:06:46.809 --> 00:06:46.819 align:start position:0%
have multiple threads running at the
 

00:06:46.819 --> 00:06:49.149 align:start position:0%
have multiple threads running at the
same<00:06:46.969><c> time</c><00:06:47.300><c> and</c><00:06:47.539><c> our</c><00:06:47.900><c> one</c><00:06:48.139><c> CPU</c><00:06:48.469><c> core</c><00:06:49.009><c> that</c>

00:06:49.149 --> 00:06:49.159 align:start position:0%
same time and our one CPU core that
 

00:06:49.159 --> 00:06:50.860 align:start position:0%
same time and our one CPU core that
we're<00:06:49.310><c> running</c><00:06:49.610><c> this</c><00:06:49.729><c> these</c><00:06:49.999><c> threads</c><00:06:50.389><c> on</c><00:06:50.599><c> is</c>

00:06:50.860 --> 00:06:50.870 align:start position:0%
we're running this these threads on is
 

00:06:50.870 --> 00:06:52.989 align:start position:0%
we're running this these threads on is
switching<00:06:51.650><c> between</c><00:06:51.830><c> these</c><00:06:52.340><c> threads</c><00:06:52.669><c> in</c><00:06:52.879><c> its</c>

00:06:52.989 --> 00:06:52.999 align:start position:0%
switching between these threads in its
 

00:06:52.999 --> 00:06:55.239 align:start position:0%
switching between these threads in its
execution<00:06:53.539><c> chain</c><00:06:53.930><c> right</c><00:06:54.259><c> so</c><00:06:54.710><c> I'm</c><00:06:54.770><c> gonna</c><00:06:54.889><c> erase</c>

00:06:55.239 --> 00:06:55.249 align:start position:0%
execution chain right so I'm gonna erase
 

00:06:55.249 --> 00:06:56.709 align:start position:0%
execution chain right so I'm gonna erase
this<00:06:55.490><c> and</c><00:06:55.550><c> we're</c><00:06:55.789><c> gonna</c><00:06:55.909><c> go</c><00:06:56.060><c> down</c><00:06:56.090><c> to</c><00:06:56.360><c> a</c><00:06:56.389><c> one</c>

00:06:56.709 --> 00:06:56.719 align:start position:0%
this and we're gonna go down to a one
 

00:06:56.719 --> 00:06:58.540 align:start position:0%
this and we're gonna go down to a one
core<00:06:56.990><c> model</c><00:06:57.319><c> now</c><00:06:57.469><c> because</c><00:06:57.919><c> this</c><00:06:58.099><c> is</c><00:06:58.279><c> kind</c><00:06:58.490><c> of</c>

00:06:58.540 --> 00:06:58.550 align:start position:0%
core model now because this is kind of
 

00:06:58.550 --> 00:07:00.730 align:start position:0%
core model now because this is kind of
showing<00:06:58.849><c> you</c><00:06:58.969><c> how</c><00:06:59.270><c> the</c><00:06:59.330><c> entire</c><00:06:59.779><c> CPU</c><00:07:00.319><c> works</c><00:07:00.469><c> as</c>

00:07:00.730 --> 00:07:00.740 align:start position:0%
showing you how the entire CPU works as
 

00:07:00.740 --> 00:07:02.260 align:start position:0%
showing you how the entire CPU works as
a<00:07:00.770><c> whole</c><00:07:01.009><c> right</c><00:07:01.249><c> there's</c><00:07:01.699><c> all</c><00:07:01.849><c> these</c><00:07:01.999><c> threads</c>

00:07:02.260 --> 00:07:02.270 align:start position:0%
a whole right there's all these threads
 

00:07:02.270 --> 00:07:04.029 align:start position:0%
a whole right there's all these threads
they<00:07:02.539><c> get</c><00:07:02.689><c> distributed</c><00:07:03.319><c> between</c><00:07:03.439><c> the</c><00:07:03.770><c> cores</c>

00:07:04.029 --> 00:07:04.039 align:start position:0%
they get distributed between the cores
 

00:07:04.039 --> 00:07:06.459 align:start position:0%
they get distributed between the cores
and<00:07:04.279><c> then</c><00:07:04.729><c> they</c><00:07:05.120><c> run</c><00:07:05.389><c> on</c><00:07:05.539><c> those</c><00:07:05.719><c> cores</c><00:07:06.020><c> these</c>

00:07:06.459 --> 00:07:06.469 align:start position:0%
and then they run on those cores these
 

00:07:06.469 --> 00:07:08.080 align:start position:0%
and then they run on those cores these
cores<00:07:06.740><c> can</c><00:07:06.949><c> only</c><00:07:07.159><c> do</c><00:07:07.430><c> one</c><00:07:07.699><c> thing</c><00:07:07.729><c> at</c><00:07:07.999><c> a</c><00:07:08.060><c> time</c>

00:07:08.080 --> 00:07:08.090 align:start position:0%
cores can only do one thing at a time
 

00:07:08.090 --> 00:07:09.640 align:start position:0%
cores can only do one thing at a time
there's<00:07:08.539><c> four</c><00:07:08.779><c> of</c><00:07:08.810><c> them</c><00:07:08.930><c> that</c><00:07:09.259><c> means</c><00:07:09.349><c> we</c><00:07:09.529><c> can</c>

00:07:09.640 --> 00:07:09.650 align:start position:0%
there's four of them that means we can
 

00:07:09.650 --> 00:07:11.890 align:start position:0%
there's four of them that means we can
do<00:07:09.740><c> four</c><00:07:10.009><c> things</c><00:07:10.039><c> at</c><00:07:10.520><c> a</c><00:07:10.580><c> time</c><00:07:10.669><c> in</c><00:07:11.090><c> total</c><00:07:11.300><c> so</c>

00:07:11.890 --> 00:07:11.900 align:start position:0%
do four things at a time in total so
 

00:07:11.900 --> 00:07:13.360 align:start position:0%
do four things at a time in total so
these<00:07:12.050><c> cores</c><00:07:12.289><c> will</c><00:07:12.499><c> switch</c><00:07:12.830><c> what</c><00:07:13.249><c> they're</c>

00:07:13.360 --> 00:07:13.370 align:start position:0%
these cores will switch what they're
 

00:07:13.370 --> 00:07:14.980 align:start position:0%
these cores will switch what they're
gonna<00:07:13.490><c> be</c><00:07:13.639><c> doing</c><00:07:13.969><c> based</c><00:07:14.270><c> on</c><00:07:14.449><c> the</c><00:07:14.599><c> threads</c><00:07:14.870><c> that</c>

00:07:14.980 --> 00:07:14.990 align:start position:0%
gonna be doing based on the threads that
 

00:07:14.990 --> 00:07:17.290 align:start position:0%
gonna be doing based on the threads that
they<00:07:15.229><c> have</c><00:07:15.439><c> so</c><00:07:16.069><c> let's</c><00:07:16.279><c> do</c><00:07:16.400><c> a</c><00:07:16.430><c> one</c><00:07:16.699><c> core</c><00:07:16.969><c> model</c>

00:07:17.290 --> 00:07:17.300 align:start position:0%
they have so let's do a one core model
 

00:07:17.300 --> 00:07:20.079 align:start position:0%
they have so let's do a one core model
now<00:07:17.419><c> so</c><00:07:18.139><c> I'm</c><00:07:18.229><c> gonna</c><00:07:18.349><c> just</c><00:07:18.620><c> draw</c><00:07:18.889><c> one</c><00:07:19.370><c> CPU</c><00:07:19.639><c> core</c>

00:07:20.079 --> 00:07:20.089 align:start position:0%
now so I'm gonna just draw one CPU core
 

00:07:20.089 --> 00:07:21.670 align:start position:0%
now so I'm gonna just draw one CPU core
now<00:07:20.210><c> and</c><00:07:20.360><c> show</c><00:07:20.629><c> you</c><00:07:20.689><c> kind</c><00:07:21.139><c> of</c><00:07:21.199><c> the</c><00:07:21.259><c> difference</c>

00:07:21.670 --> 00:07:21.680 align:start position:0%
now and show you kind of the difference
 

00:07:21.680 --> 00:07:23.499 align:start position:0%
now and show you kind of the difference
between<00:07:21.740><c> what</c><00:07:22.249><c> happens</c><00:07:22.909><c> if</c><00:07:23.029><c> we</c><00:07:23.120><c> run</c><00:07:23.300><c> something</c>

00:07:23.499 --> 00:07:23.509 align:start position:0%
between what happens if we run something
 

00:07:23.509 --> 00:07:25.239 align:start position:0%
between what happens if we run something
in<00:07:23.689><c> one</c><00:07:23.930><c> thread</c><00:07:24.169><c> versus</c><00:07:24.620><c> running</c><00:07:24.800><c> it</c><00:07:24.979><c> and</c><00:07:25.129><c> say</c>

00:07:25.239 --> 00:07:25.249 align:start position:0%
in one thread versus running it and say
 

00:07:25.249 --> 00:07:26.950 align:start position:0%
in one thread versus running it and say
two<00:07:25.310><c> or</c><00:07:25.610><c> three</c><00:07:25.879><c> and</c><00:07:26.060><c> why</c><00:07:26.210><c> we</c><00:07:26.449><c> would</c><00:07:26.569><c> even</c><00:07:26.719><c> do</c>

00:07:26.950 --> 00:07:26.960 align:start position:0%
two or three and why we would even do
 

00:07:26.960 --> 00:07:28.689 align:start position:0%
two or three and why we would even do
that<00:07:27.110><c> so</c><00:07:27.770><c> let's</c><00:07:27.919><c> say</c><00:07:28.009><c> we</c><00:07:28.129><c> just</c><00:07:28.279><c> have</c><00:07:28.400><c> a</c><00:07:28.430><c> basic</c>

00:07:28.689 --> 00:07:28.699 align:start position:0%
that so let's say we just have a basic
 

00:07:28.699 --> 00:07:30.790 align:start position:0%
that so let's say we just have a basic
Python<00:07:29.449><c> application</c><00:07:30.080><c> and</c><00:07:30.289><c> we</c><00:07:30.349><c> want</c><00:07:30.529><c> to</c><00:07:30.589><c> print</c>

00:07:30.790 --> 00:07:30.800 align:start position:0%
Python application and we want to print
 

00:07:30.800 --> 00:07:35.739 align:start position:0%
Python application and we want to print
one<00:07:31.159><c> we</c><00:07:31.789><c> want</c><00:07:32.089><c> to</c><00:07:32.300><c> time</c><00:07:33.199><c> dot</c><00:07:33.830><c> sleep</c><00:07:34.580><c> say</c><00:07:35.389><c> 10</c>

00:07:35.739 --> 00:07:35.749 align:start position:0%
one we want to time dot sleep say 10
 

00:07:35.749 --> 00:07:37.300 align:start position:0%
one we want to time dot sleep say 10
seconds<00:07:36.259><c> right</c><00:07:36.560><c> so</c><00:07:36.740><c> we'll</c><00:07:36.830><c> just</c><00:07:36.949><c> put</c><00:07:37.099><c> 10</c>

00:07:37.300 --> 00:07:37.310 align:start position:0%
seconds right so we'll just put 10
 

00:07:37.310 --> 00:07:38.769 align:start position:0%
seconds right so we'll just put 10
seconds<00:07:37.699><c> this</c><00:07:37.759><c> is</c><00:07:37.819><c> just</c><00:07:38.029><c> pseudocode</c><00:07:38.330><c> don't</c>

00:07:38.769 --> 00:07:38.779 align:start position:0%
seconds this is just pseudocode don't
 

00:07:38.779 --> 00:07:40.149 align:start position:0%
seconds this is just pseudocode don't
really<00:07:38.990><c> worry</c><00:07:39.169><c> about</c><00:07:39.259><c> the</c><00:07:39.409><c> syntax</c><00:07:39.650><c> too</c><00:07:40.009><c> much</c>

00:07:40.149 --> 00:07:40.159 align:start position:0%
really worry about the syntax too much
 

00:07:40.159 --> 00:07:42.040 align:start position:0%
really worry about the syntax too much
and<00:07:40.460><c> then</c><00:07:40.789><c> we</c><00:07:40.879><c> want</c><00:07:41.060><c> to</c><00:07:41.089><c> print</c><00:07:41.330><c> the</c><00:07:41.449><c> value</c><00:07:41.479><c> too</c>

00:07:42.040 --> 00:07:42.050 align:start position:0%
and then we want to print the value too
 

00:07:42.050 --> 00:07:44.649 align:start position:0%
and then we want to print the value too
now<00:07:42.979><c> if</c><00:07:43.399><c> we</c><00:07:43.669><c> were</c><00:07:43.759><c> running</c><00:07:43.909><c> this</c><00:07:44.180><c> in</c><00:07:44.389><c> one</c>

00:07:44.649 --> 00:07:44.659 align:start position:0%
now if we were running this in one
 

00:07:44.659 --> 00:07:47.379 align:start position:0%
now if we were running this in one
thread<00:07:45.139><c> so</c><00:07:45.620><c> let's</c><00:07:45.860><c> draw</c><00:07:46.189><c> our</c><00:07:46.399><c> CPU</c><00:07:46.759><c> let's</c><00:07:47.180><c> make</c>

00:07:47.379 --> 00:07:47.389 align:start position:0%
thread so let's draw our CPU let's make
 

00:07:47.389 --> 00:07:49.360 align:start position:0%
thread so let's draw our CPU let's make
this<00:07:47.659><c> like</c><00:07:47.870><c> orange</c><00:07:48.259><c> red</c><00:07:48.560><c> box</c><00:07:48.830><c> this</c><00:07:49.069><c> will</c><00:07:49.219><c> be</c>

00:07:49.360 --> 00:07:49.370 align:start position:0%
this like orange red box this will be
 

00:07:49.370 --> 00:07:51.159 align:start position:0%
this like orange red box this will be
our<00:07:49.520><c> our</c><00:07:49.729><c> core</c><00:07:50.180><c> so</c><00:07:50.509><c> let's</c><00:07:50.659><c> write</c><00:07:50.839><c> this</c><00:07:50.870><c> is</c><00:07:51.139><c> a</c>

00:07:51.159 --> 00:07:51.169 align:start position:0%
our our core so let's write this is a
 

00:07:51.169 --> 00:07:54.040 align:start position:0%
our our core so let's write this is a
core<00:07:51.500><c> and</c><00:07:51.770><c> we</c><00:07:52.339><c> put</c><00:07:52.580><c> our</c><00:07:52.699><c> 1</c><00:07:52.939><c> thread</c><00:07:53.330><c> so</c><00:07:53.899><c> we'll</c>

00:07:54.040 --> 00:07:54.050 align:start position:0%
core and we put our 1 thread so we'll
 

00:07:54.050 --> 00:07:56.260 align:start position:0%
core and we put our 1 thread so we'll
say<00:07:54.229><c> this</c><00:07:54.469><c> like</c><00:07:54.740><c> here</c><00:07:55.039><c> well</c><00:07:55.550><c> let's</c><00:07:55.669><c> just</c><00:07:56.029><c> put</c>

00:07:56.260 --> 00:07:56.270 align:start position:0%
say this like here well let's just put
 

00:07:56.270 --> 00:07:57.909 align:start position:0%
say this like here well let's just put
you<00:07:56.599><c> know</c><00:07:56.629><c> maybe</c><00:07:56.839><c> a</c><00:07:56.960><c> label</c><00:07:57.439><c> for</c><00:07:57.589><c> this</c><00:07:57.680><c> we'll</c>

00:07:57.909 --> 00:07:57.919 align:start position:0%
you know maybe a label for this we'll
 

00:07:57.919 --> 00:08:00.369 align:start position:0%
you know maybe a label for this we'll
say<00:07:58.039><c> that's</c><00:07:58.189><c> like</c><00:07:58.310><c> t1</c><00:07:58.819><c> so</c><00:07:59.360><c> thread</c><00:07:59.659><c> 1</c><00:07:59.870><c> and</c><00:08:00.110><c> this</c>

00:08:00.369 --> 00:08:00.379 align:start position:0%
say that's like t1 so thread 1 and this
 

00:08:00.379 --> 00:08:03.459 align:start position:0%
say that's like t1 so thread 1 and this
will<00:08:00.529><c> be</c><00:08:00.620><c> thread</c><00:08:00.860><c> 1</c><00:08:01.039><c> so</c><00:08:01.939><c> for</c><00:08:02.389><c> us</c><00:08:02.539><c> to</c><00:08:02.779><c> run</c><00:08:03.110><c> this</c>

00:08:03.459 --> 00:08:03.469 align:start position:0%
will be thread 1 so for us to run this
 

00:08:03.469 --> 00:08:05.829 align:start position:0%
will be thread 1 so for us to run this
program<00:08:03.979><c> and</c><00:08:04.159><c> to</c><00:08:04.520><c> see</c><00:08:04.699><c> the</c><00:08:04.849><c> output</c><00:08:05.270><c> of</c><00:08:05.300><c> one</c><00:08:05.629><c> and</c>

00:08:05.829 --> 00:08:05.839 align:start position:0%
program and to see the output of one and
 

00:08:05.839 --> 00:08:07.869 align:start position:0%
program and to see the output of one and
see<00:08:06.139><c> the</c><00:08:06.259><c> output</c><00:08:06.560><c> of</c><00:08:06.589><c> 2</c><00:08:06.860><c> this</c><00:08:07.279><c> is</c><00:08:07.460><c> gonna</c><00:08:07.580><c> take</c>

00:08:07.869 --> 00:08:07.879 align:start position:0%
see the output of 2 this is gonna take
 

00:08:07.879 --> 00:08:09.519 align:start position:0%
see the output of 2 this is gonna take
us<00:08:07.909><c> a</c><00:08:08.210><c> little</c><00:08:08.330><c> bit</c><00:08:08.479><c> over</c><00:08:08.689><c> 10</c><00:08:08.899><c> seconds</c><00:08:09.319><c> right</c>

00:08:09.519 --> 00:08:09.529 align:start position:0%
us a little bit over 10 seconds right
 

00:08:09.529 --> 00:08:11.950 align:start position:0%
us a little bit over 10 seconds right
because<00:08:10.039><c> we</c><00:08:10.159><c> need</c><00:08:10.310><c> to</c><00:08:10.430><c> print</c><00:08:10.729><c> 1</c><00:08:10.999><c> then</c><00:08:11.689><c> we</c><00:08:11.810><c> need</c>

00:08:11.950 --> 00:08:11.960 align:start position:0%
because we need to print 1 then we need
 

00:08:11.960 --> 00:08:13.869 align:start position:0%
because we need to print 1 then we need
to<00:08:12.080><c> wait</c><00:08:12.379><c> for</c><00:08:12.409><c> 10</c><00:08:12.800><c> seconds</c><00:08:13.279><c> and</c><00:08:13.399><c> then</c><00:08:13.460><c> we</c><00:08:13.729><c> need</c>

00:08:13.869 --> 00:08:13.879 align:start position:0%
to wait for 10 seconds and then we need
 

00:08:13.879 --> 00:08:15.790 align:start position:0%
to wait for 10 seconds and then we need
to<00:08:13.999><c> print</c><00:08:14.270><c> 2</c><00:08:14.539><c> so</c><00:08:14.990><c> we</c><00:08:15.110><c> can</c><00:08:15.139><c> imagine</c><00:08:15.589><c> it's</c><00:08:15.770><c> not</c>

00:08:15.790 --> 00:08:15.800 align:start position:0%
to print 2 so we can imagine it's not
 

00:08:15.800 --> 00:08:17.170 align:start position:0%
to print 2 so we can imagine it's not
gonna<00:08:15.979><c> take</c><00:08:16.099><c> much</c><00:08:16.189><c> longer</c><00:08:16.370><c> than</c><00:08:16.669><c> 10</c><00:08:16.819><c> seconds</c>

00:08:17.170 --> 00:08:17.180 align:start position:0%
gonna take much longer than 10 seconds
 

00:08:17.180 --> 00:08:18.999 align:start position:0%
gonna take much longer than 10 seconds
but<00:08:17.300><c> a</c><00:08:17.360><c> tiny</c><00:08:17.689><c> bit</c><00:08:17.930><c> more</c><00:08:18.080><c> it's</c><00:08:18.649><c> gonna</c><00:08:18.770><c> take</c>

00:08:18.999 --> 00:08:19.009 align:start position:0%
but a tiny bit more it's gonna take
 

00:08:19.009 --> 00:08:20.889 align:start position:0%
but a tiny bit more it's gonna take
longer<00:08:19.159><c> than</c><00:08:19.430><c> that</c><00:08:19.520><c> right</c><00:08:19.819><c> so</c><00:08:20.300><c> for</c><00:08:20.479><c> us</c><00:08:20.569><c> to</c><00:08:20.719><c> get</c>

00:08:20.889 --> 00:08:20.899 align:start position:0%
longer than that right so for us to get
 

00:08:20.899 --> 00:08:23.950 align:start position:0%
longer than that right so for us to get
that<00:08:21.080><c> output</c><00:08:21.289><c> takes</c><00:08:21.830><c> 10</c><00:08:21.979><c> seconds</c><00:08:22.370><c> now</c><00:08:23.300><c> if</c><00:08:23.599><c> I</c>

00:08:23.950 --> 00:08:23.960 align:start position:0%
that output takes 10 seconds now if I
 

00:08:23.960 --> 00:08:27.100 align:start position:0%
that output takes 10 seconds now if I
distribute<00:08:24.649><c> this</c><00:08:24.860><c> into</c><00:08:25.580><c> 2</c><00:08:25.879><c> threads</c><00:08:26.210><c> where</c>

00:08:27.100 --> 00:08:27.110 align:start position:0%
distribute this into 2 threads where
 

00:08:27.110 --> 00:08:30.700 align:start position:0%
distribute this into 2 threads where
what<00:08:27.289><c> I</c><00:08:27.319><c> do</c><00:08:27.439><c> is</c><00:08:27.800><c> in</c><00:08:28.339><c> thread</c><00:08:28.669><c> 1</c><00:08:28.939><c> I</c><00:08:29.240><c> leave</c><00:08:29.839><c> what</c><00:08:30.680><c> I</c>

00:08:30.700 --> 00:08:30.710 align:start position:0%
what I do is in thread 1 I leave what I
 

00:08:30.710 --> 00:08:33.370 align:start position:0%
what I do is in thread 1 I leave what I
have<00:08:30.919><c> there</c><00:08:31.219><c> but</c><00:08:31.669><c> in</c><00:08:31.819><c> thread</c><00:08:32.180><c> to</c><00:08:32.539><c> so</c><00:08:32.990><c> in</c><00:08:33.110><c> t2</c>

00:08:33.370 --> 00:08:33.380 align:start position:0%
have there but in thread to so in t2
 

00:08:33.380 --> 00:08:34.930 align:start position:0%
have there but in thread to so in t2
like<00:08:33.919><c> this</c><00:08:34.099><c> and</c><00:08:34.339><c> we'll</c><00:08:34.430><c> do</c><00:08:34.519><c> a</c><00:08:34.550><c> little</c><00:08:34.819><c> bit</c>

00:08:34.930 --> 00:08:34.940 align:start position:0%
like this and we'll do a little bit
 

00:08:34.940 --> 00:08:39.459 align:start position:0%
like this and we'll do a little bit
better<00:08:35.089><c> here</c><00:08:35.419><c> well</c><00:08:35.930><c> print</c><00:08:36.409><c> the</c><00:08:37.089><c> value</c><00:08:38.089><c> of</c><00:08:38.120><c> 2</c><00:08:38.539><c> if</c>

00:08:39.459 --> 00:08:39.469 align:start position:0%
better here well print the value of 2 if
 

00:08:39.469 --> 00:08:42.670 align:start position:0%
better here well print the value of 2 if
I<00:08:40.130><c> do</c><00:08:40.250><c> this</c><00:08:40.639><c> and</c><00:08:40.909><c> now</c><00:08:41.240><c> I</c><00:08:41.269><c> throw</c><00:08:41.719><c> my</c><00:08:41.959><c> t2</c><00:08:42.649><c> over</c>

00:08:42.670 --> 00:08:42.680 align:start position:0%
I do this and now I throw my t2 over
 

00:08:42.680 --> 00:08:44.620 align:start position:0%
I do this and now I throw my t2 over
here<00:08:43.279><c> going</c><00:08:43.550><c> in</c><00:08:43.729><c> my</c><00:08:43.819><c> core</c><00:08:44.060><c> so</c><00:08:44.269><c> both</c><00:08:44.449><c> these</c>

00:08:44.620 --> 00:08:44.630 align:start position:0%
here going in my core so both these
 

00:08:44.630 --> 00:08:46.150 align:start position:0%
here going in my core so both these
threads<00:08:44.959><c> are</c><00:08:45.079><c> running</c><00:08:45.319><c> on</c><00:08:45.410><c> this</c><00:08:45.529><c> same</c><00:08:45.829><c> core</c>

00:08:46.150 --> 00:08:46.160 align:start position:0%
threads are running on this same core
 

00:08:46.160 --> 00:08:48.790 align:start position:0%
threads are running on this same core
which<00:08:46.519><c> means</c><00:08:46.930><c> again</c><00:08:47.930><c> only</c><00:08:48.079><c> one</c><00:08:48.410><c> thing</c><00:08:48.649><c> can</c>

00:08:48.790 --> 00:08:48.800 align:start position:0%
which means again only one thing can
 

00:08:48.800 --> 00:08:51.610 align:start position:0%
which means again only one thing can
happen<00:08:48.949><c> at</c><00:08:49.160><c> a</c><00:08:49.190><c> time</c><00:08:49.480><c> what</c><00:08:50.480><c> we</c><00:08:50.630><c> can</c><00:08:50.810><c> do</c><00:08:50.990><c> now</c><00:08:51.290><c> is</c>

00:08:51.610 --> 00:08:51.620 align:start position:0%
happen at a time what we can do now is
 

00:08:51.620 --> 00:08:52.460 align:start position:0%
happen at a time what we can do now is
say<00:08:51.769><c> ok</c>

00:08:52.460 --> 00:08:52.470 align:start position:0%
say ok
 

00:08:52.470 --> 00:08:55.880 align:start position:0%
say ok
so<00:08:53.160><c> we'll</c><00:08:53.370><c> print</c><00:08:54.110><c> one</c><00:08:55.110><c> cuz</c><00:08:55.380><c> we're</c><00:08:55.500><c> gonna</c><00:08:55.590><c> start</c>

00:08:55.880 --> 00:08:55.890 align:start position:0%
so we'll print one cuz we're gonna start
 

00:08:55.890 --> 00:08:58.280 align:start position:0%
so we'll print one cuz we're gonna start
that<00:08:55.980><c> thread</c><00:08:56.250><c> one</c><00:08:56.430><c> in</c><00:08:56.610><c> our</c><00:08:56.700><c> program</c><00:08:57.120><c> but</c><00:08:58.050><c> then</c>

00:08:58.280 --> 00:08:58.290 align:start position:0%
that thread one in our program but then
 

00:08:58.290 --> 00:09:00.680 align:start position:0%
that thread one in our program but then
when<00:08:58.590><c> we</c><00:08:58.620><c> hit</c><00:08:58.890><c> this</c><00:08:59.040><c> sleep</c><00:08:59.490><c> so</c><00:09:00.330><c> let's</c><00:09:00.450><c> just</c><00:09:00.600><c> say</c>

00:09:00.680 --> 00:09:00.690 align:start position:0%
when we hit this sleep so let's just say
 

00:09:00.690 --> 00:09:02.840 align:start position:0%
when we hit this sleep so let's just say
one's<00:09:00.960><c> out</c><00:09:01.260><c> put</c><00:09:01.440><c> it</c><00:09:01.530><c> here</c><00:09:01.710><c> we</c><00:09:02.460><c> don't</c><00:09:02.610><c> actually</c>

00:09:02.840 --> 00:09:02.850 align:start position:0%
one's out put it here we don't actually
 

00:09:02.850 --> 00:09:05.270 align:start position:0%
one's out put it here we don't actually
need<00:09:03.120><c> to</c><00:09:03.180><c> wait</c><00:09:03.600><c> for</c><00:09:04.020><c> this</c><00:09:04.110><c> entire</c><00:09:04.500><c> sleep</c><00:09:04.950><c> to</c>

00:09:05.270 --> 00:09:05.280 align:start position:0%
need to wait for this entire sleep to
 

00:09:05.280 --> 00:09:08.360 align:start position:0%
need to wait for this entire sleep to
happen<00:09:05.730><c> what</c><00:09:06.630><c> we</c><00:09:06.780><c> can</c><00:09:07.020><c> do</c><00:09:07.260><c> is</c><00:09:07.470><c> we</c><00:09:07.800><c> can</c><00:09:07.920><c> say</c><00:09:08.040><c> okay</c>

00:09:08.360 --> 00:09:08.370 align:start position:0%
happen what we can do is we can say okay
 

00:09:08.370 --> 00:09:10.310 align:start position:0%
happen what we can do is we can say okay
so<00:09:08.430><c> since</c><00:09:08.880><c> this</c><00:09:09.150><c> thread</c><00:09:09.540><c> isn't</c><00:09:09.990><c> doing</c>

00:09:10.310 --> 00:09:10.320 align:start position:0%
so since this thread isn't doing
 

00:09:10.320 --> 00:09:12.320 align:start position:0%
so since this thread isn't doing
anything<00:09:10.500><c> right</c><00:09:10.770><c> now</c><00:09:10.830><c> the</c><00:09:11.400><c> core</c><00:09:11.670><c> doesn't</c><00:09:12.180><c> have</c>

00:09:12.320 --> 00:09:12.330 align:start position:0%
anything right now the core doesn't have
 

00:09:12.330 --> 00:09:13.670 align:start position:0%
anything right now the core doesn't have
any<00:09:12.450><c> operations</c><00:09:13.020><c> to</c><00:09:13.140><c> perform</c><00:09:13.290><c> we're</c><00:09:13.590><c> not</c>

00:09:13.670 --> 00:09:13.680 align:start position:0%
any operations to perform we're not
 

00:09:13.680 --> 00:09:15.080 align:start position:0%
any operations to perform we're not
adding<00:09:14.040><c> we're</c><00:09:14.160><c> not</c><00:09:14.250><c> subtracting</c><00:09:14.400><c> we're</c><00:09:14.910><c> just</c>

00:09:15.080 --> 00:09:15.090 align:start position:0%
adding we're not subtracting we're just
 

00:09:15.090 --> 00:09:17.270 align:start position:0%
adding we're not subtracting we're just
merely<00:09:15.420><c> waiting</c><00:09:15.930><c> I</c><00:09:16.110><c> don't</c><00:09:16.680><c> need</c><00:09:16.890><c> to</c><00:09:17.070><c> just</c>

00:09:17.270 --> 00:09:17.280 align:start position:0%
merely waiting I don't need to just
 

00:09:17.280 --> 00:09:19.820 align:start position:0%
merely waiting I don't need to just
stall<00:09:17.790><c> and</c><00:09:18.060><c> hang</c><00:09:18.360><c> on</c><00:09:18.630><c> this</c><00:09:18.840><c> thread</c><00:09:19.110><c> in</c><00:09:19.290><c> fact</c>

00:09:19.820 --> 00:09:19.830 align:start position:0%
stall and hang on this thread in fact
 

00:09:19.830 --> 00:09:22.010 align:start position:0%
stall and hang on this thread in fact
what<00:09:20.040><c> I</c><00:09:20.070><c> can</c><00:09:20.310><c> do</c><00:09:20.550><c> is</c><00:09:20.760><c> almost</c><00:09:21.210><c> think</c><00:09:21.660><c> of</c><00:09:21.750><c> it</c><00:09:21.870><c> like</c>

00:09:22.010 --> 00:09:22.020 align:start position:0%
what I can do is almost think of it like
 

00:09:22.020 --> 00:09:24.620 align:start position:0%
what I can do is almost think of it like
rotate<00:09:22.680><c> the</c><00:09:22.860><c> core</c><00:09:23.070><c> over</c><00:09:23.460><c> or</c><00:09:23.670><c> you</c><00:09:24.180><c> know</c><00:09:24.270><c> pass</c>

00:09:24.620 --> 00:09:24.630 align:start position:0%
rotate the core over or you know pass
 

00:09:24.630 --> 00:09:26.690 align:start position:0%
rotate the core over or you know pass
another<00:09:24.990><c> thread</c><00:09:25.380><c> to</c><00:09:25.500><c> the</c><00:09:25.530><c> core</c><00:09:25.800><c> we</c><00:09:26.280><c> can</c><00:09:26.490><c> go</c>

00:09:26.690 --> 00:09:26.700 align:start position:0%
another thread to the core we can go
 

00:09:26.700 --> 00:09:29.450 align:start position:0%
another thread to the core we can go
over<00:09:27.090><c> to</c><00:09:27.240><c> thread</c><00:09:27.540><c> two</c><00:09:27.840><c> and</c><00:09:28.110><c> just</c><00:09:28.140><c> print</c><00:09:29.130><c> the</c>

00:09:29.450 --> 00:09:29.460 align:start position:0%
over to thread two and just print the
 

00:09:29.460 --> 00:09:31.880 align:start position:0%
over to thread two and just print the
value<00:09:29.820><c> two</c><00:09:30.060><c> immediately</c><00:09:30.870><c> because</c><00:09:31.590><c> the</c><00:09:31.710><c> thing</c>

00:09:31.880 --> 00:09:31.890 align:start position:0%
value two immediately because the thing
 

00:09:31.890 --> 00:09:33.620 align:start position:0%
value two immediately because the thing
is<00:09:31.920><c> if</c><00:09:32.190><c> thread</c><00:09:32.460><c> one</c><00:09:32.670><c> is</c><00:09:32.820><c> sleeping</c><00:09:33.240><c> we</c><00:09:33.450><c> don't</c>

00:09:33.620 --> 00:09:33.630 align:start position:0%
is if thread one is sleeping we don't
 

00:09:33.630 --> 00:09:35.630 align:start position:0%
is if thread one is sleeping we don't
need<00:09:33.780><c> to</c><00:09:33.990><c> wait</c><00:09:34.200><c> for</c><00:09:34.440><c> it</c><00:09:34.590><c> we</c><00:09:34.770><c> can</c><00:09:34.950><c> just</c><00:09:35.130><c> go</c><00:09:35.400><c> to</c>

00:09:35.630 --> 00:09:35.640 align:start position:0%
need to wait for it we can just go to
 

00:09:35.640 --> 00:09:38.060 align:start position:0%
need to wait for it we can just go to
another<00:09:36.150><c> thread</c><00:09:36.570><c> do</c><00:09:37.200><c> something</c><00:09:37.650><c> there</c><00:09:37.860><c> and</c>

00:09:38.060 --> 00:09:38.070 align:start position:0%
another thread do something there and
 

00:09:38.070 --> 00:09:40.400 align:start position:0%
another thread do something there and
then<00:09:38.340><c> once</c><00:09:38.730><c> this</c><00:09:39.000><c> thread</c><00:09:39.330><c> finishes</c><00:09:39.900><c> executing</c>

00:09:40.400 --> 00:09:40.410 align:start position:0%
then once this thread finishes executing
 

00:09:40.410 --> 00:09:42.860 align:start position:0%
then once this thread finishes executing
or<00:09:40.650><c> finishes</c><00:09:41.040><c> sleeping</c><00:09:41.760><c> or</c><00:09:41.910><c> waiting</c><00:09:42.300><c> we</c><00:09:42.690><c> can</c>

00:09:42.860 --> 00:09:42.870 align:start position:0%
or finishes sleeping or waiting we can
 

00:09:42.870 --> 00:09:44.480 align:start position:0%
or finishes sleeping or waiting we can
go<00:09:42.960><c> back</c><00:09:43.170><c> to</c><00:09:43.380><c> it</c><00:09:43.500><c> and</c><00:09:43.650><c> we</c><00:09:43.800><c> can</c><00:09:43.980><c> execute</c><00:09:44.340><c> the</c>

00:09:44.480 --> 00:09:44.490 align:start position:0%
go back to it and we can execute the
 

00:09:44.490 --> 00:09:47.030 align:start position:0%
go back to it and we can execute the
rest<00:09:44.790><c> say</c><00:09:45.210><c> so</c><00:09:45.270><c> we</c><00:09:45.510><c> had</c><00:09:45.660><c> like</c><00:09:45.840><c> print</c><00:09:46.170><c> three</c>

00:09:47.030 --> 00:09:47.040 align:start position:0%
rest say so we had like print three
 

00:09:47.040 --> 00:09:49.190 align:start position:0%
rest say so we had like print three
under<00:09:47.520><c> here</c><00:09:47.820><c> the</c><00:09:48.210><c> output</c><00:09:48.570><c> from</c><00:09:48.690><c> our</c><00:09:48.750><c> program</c>

00:09:49.190 --> 00:09:49.200 align:start position:0%
under here the output from our program
 

00:09:49.200 --> 00:09:51.290 align:start position:0%
under here the output from our program
with<00:09:49.410><c> these</c><00:09:49.560><c> two</c><00:09:49.800><c> threads</c><00:09:50.070><c> would</c><00:09:50.310><c> be</c><00:09:50.430><c> one</c><00:09:50.730><c> we</c>

00:09:51.290 --> 00:09:51.300 align:start position:0%
with these two threads would be one we
 

00:09:51.300 --> 00:09:53.210 align:start position:0%
with these two threads would be one we
would<00:09:51.480><c> sleep</c><00:09:51.960><c> so</c><00:09:52.230><c> we</c><00:09:52.350><c> would</c><00:09:52.500><c> go</c><00:09:52.620><c> to</c><00:09:52.680><c> thread</c><00:09:52.980><c> two</c>

00:09:53.210 --> 00:09:53.220 align:start position:0%
would sleep so we would go to thread two
 

00:09:53.220 --> 00:09:55.220 align:start position:0%
would sleep so we would go to thread two
we<00:09:53.550><c> finish</c><00:09:53.970><c> thread</c><00:09:54.270><c> two</c><00:09:54.480><c> we'd</c><00:09:54.810><c> go</c><00:09:55.020><c> back</c><00:09:55.170><c> to</c>

00:09:55.220 --> 00:09:55.230 align:start position:0%
we finish thread two we'd go back to
 

00:09:55.230 --> 00:09:57.110 align:start position:0%
we finish thread two we'd go back to
thread<00:09:55.620><c> one</c><00:09:55.860><c> we'd</c><00:09:56.400><c> wait</c><00:09:56.610><c> for</c><00:09:56.640><c> it</c><00:09:56.880><c> to</c><00:09:57.000><c> finish</c>

00:09:57.110 --> 00:09:57.120 align:start position:0%
thread one we'd wait for it to finish
 

00:09:57.120 --> 00:09:58.670 align:start position:0%
thread one we'd wait for it to finish
sleeping<00:09:57.690><c> and</c><00:09:57.870><c> then</c><00:09:57.960><c> we'd</c><00:09:58.110><c> output</c><00:09:58.470><c> the</c><00:09:58.560><c> value</c>

00:09:58.670 --> 00:09:58.680 align:start position:0%
sleeping and then we'd output the value
 

00:09:58.680 --> 00:10:00.950 align:start position:0%
sleeping and then we'd output the value
three<00:09:59.130><c> and</c><00:09:59.580><c> this</c><00:09:59.820><c> is</c><00:09:59.940><c> the</c><00:10:00.090><c> idea</c><00:10:00.450><c> right</c><00:10:00.780><c> and</c>

00:10:00.950 --> 00:10:00.960 align:start position:0%
three and this is the idea right and
 

00:10:00.960 --> 00:10:02.840 align:start position:0%
three and this is the idea right and
threads<00:10:01.470><c> are</c><00:10:01.650><c> really</c><00:10:02.160><c> useful</c><00:10:02.580><c> in</c><00:10:02.670><c> web</c>

00:10:02.840 --> 00:10:02.850 align:start position:0%
threads are really useful in web
 

00:10:02.850 --> 00:10:04.340 align:start position:0%
threads are really useful in web
applications<00:10:03.600><c> or</c><00:10:03.780><c> when</c><00:10:03.990><c> you're</c><00:10:04.110><c> doing</c><00:10:04.320><c> like</c>

00:10:04.340 --> 00:10:04.350 align:start position:0%
applications or when you're doing like
 

00:10:04.350 --> 00:10:07.100 align:start position:0%
applications or when you're doing like
online<00:10:04.950><c> games</c><00:10:05.280><c> and</c><00:10:05.460><c> stuff</c><00:10:05.700><c> because</c><00:10:06.270><c> you</c><00:10:06.960><c> don't</c>

00:10:07.100 --> 00:10:07.110 align:start position:0%
online games and stuff because you don't
 

00:10:07.110 --> 00:10:09.560 align:start position:0%
online games and stuff because you don't
want<00:10:07.320><c> to</c><00:10:07.410><c> pause</c><00:10:07.920><c> the</c><00:10:07.950><c> entire</c><00:10:08.580><c> screen</c><00:10:09.060><c> while</c>

00:10:09.560 --> 00:10:09.570 align:start position:0%
want to pause the entire screen while
 

00:10:09.570 --> 00:10:11.630 align:start position:0%
want to pause the entire screen while
you<00:10:09.720><c> wait</c><00:10:09.960><c> to</c><00:10:09.990><c> receive</c><00:10:10.320><c> like</c><00:10:10.860><c> a</c><00:10:10.890><c> few</c><00:10:11.160><c> megabytes</c>

00:10:11.630 --> 00:10:11.640 align:start position:0%
you wait to receive like a few megabytes
 

00:10:11.640 --> 00:10:13.850 align:start position:0%
you wait to receive like a few megabytes
of<00:10:11.940><c> data</c><00:10:12.150><c> from</c><00:10:12.420><c> the</c><00:10:12.600><c> server</c><00:10:12.840><c> in</c><00:10:13.080><c> fact</c><00:10:13.620><c> what</c><00:10:13.830><c> you</c>

00:10:13.850 --> 00:10:13.860 align:start position:0%
of data from the server in fact what you
 

00:10:13.860 --> 00:10:16.370 align:start position:0%
of data from the server in fact what you
want<00:10:14.130><c> to</c><00:10:14.220><c> do</c><00:10:14.370><c> is</c><00:10:14.610><c> have</c><00:10:14.910><c> all</c><00:10:15.240><c> of</c><00:10:16.020><c> the</c><00:10:16.140><c> things</c>

00:10:16.370 --> 00:10:16.380 align:start position:0%
want to do is have all of the things
 

00:10:16.380 --> 00:10:18.200 align:start position:0%
want to do is have all of the things
that<00:10:16.500><c> are</c><00:10:16.770><c> like</c><00:10:16.950><c> server</c><00:10:17.340><c> related</c><00:10:17.910><c> commands</c>

00:10:18.200 --> 00:10:18.210 align:start position:0%
that are like server related commands
 

00:10:18.210 --> 00:10:20.090 align:start position:0%
that are like server related commands
running<00:10:18.630><c> in</c><00:10:18.720><c> a</c><00:10:18.810><c> thread</c><00:10:19.140><c> so</c><00:10:19.710><c> that</c><00:10:19.890><c> while</c><00:10:20.070><c> you're</c>

00:10:20.090 --> 00:10:20.100 align:start position:0%
running in a thread so that while you're
 

00:10:20.100 --> 00:10:22.070 align:start position:0%
running in a thread so that while you're
waiting<00:10:20.760><c> for</c><00:10:20.790><c> the</c><00:10:21.090><c> server</c><00:10:21.450><c> to</c><00:10:21.630><c> return</c><00:10:22.050><c> a</c>

00:10:22.070 --> 00:10:22.080 align:start position:0%
waiting for the server to return a
 

00:10:22.080 --> 00:10:24.320 align:start position:0%
waiting for the server to return a
response<00:10:22.650><c> to</c><00:10:22.860><c> you</c><00:10:22.980><c> your</c><00:10:23.370><c> whole</c><00:10:23.610><c> game</c><00:10:23.880><c> doesn't</c>

00:10:24.320 --> 00:10:24.330 align:start position:0%
response to you your whole game doesn't
 

00:10:24.330 --> 00:10:26.630 align:start position:0%
response to you your whole game doesn't
just<00:10:24.510><c> freeze</c><00:10:24.810><c> you</c><00:10:25.470><c> can</c><00:10:25.740><c> have</c><00:10:26.040><c> these</c><00:10:26.310><c> threads</c>

00:10:26.630 --> 00:10:26.640 align:start position:0%
just freeze you can have these threads
 

00:10:26.640 --> 00:10:29.480 align:start position:0%
just freeze you can have these threads
so<00:10:27.030><c> that</c><00:10:27.060><c> it</c><00:10:27.720><c> is</c><00:10:28.080><c> going</c><00:10:28.500><c> in</c><00:10:28.830><c> between</c><00:10:29.010><c> these</c><00:10:29.310><c> two</c>

00:10:29.480 --> 00:10:29.490 align:start position:0%
so that it is going in between these two
 

00:10:29.490 --> 00:10:31.010 align:start position:0%
so that it is going in between these two
different<00:10:29.820><c> threads</c><00:10:29.910><c> so</c><00:10:30.330><c> you</c><00:10:30.360><c> know</c><00:10:30.510><c> one</c><00:10:30.750><c> thread</c>

00:10:31.010 --> 00:10:31.020 align:start position:0%
different threads so you know one thread
 

00:10:31.020 --> 00:10:32.810 align:start position:0%
different threads so you know one thread
is<00:10:31.050><c> handling</c><00:10:31.560><c> getting</c><00:10:31.980><c> the</c><00:10:32.130><c> messages</c><00:10:32.580><c> and</c>

00:10:32.810 --> 00:10:32.820 align:start position:0%
is handling getting the messages and
 

00:10:32.820 --> 00:10:34.400 align:start position:0%
is handling getting the messages and
stuff<00:10:32.970><c> from</c><00:10:33.210><c> the</c><00:10:33.300><c> server</c><00:10:33.540><c> and</c><00:10:33.780><c> the</c><00:10:34.230><c> other</c>

00:10:34.400 --> 00:10:34.410 align:start position:0%
stuff from the server and the other
 

00:10:34.410 --> 00:10:36.440 align:start position:0%
stuff from the server and the other
thread<00:10:34.770><c> is</c><00:10:34.890><c> handling</c><00:10:35.280><c> actually</c><00:10:35.730><c> displaying</c>

00:10:36.440 --> 00:10:36.450 align:start position:0%
thread is handling actually displaying
 

00:10:36.450 --> 00:10:38.480 align:start position:0%
thread is handling actually displaying
the<00:10:36.750><c> graphics</c><00:10:37.320><c> to</c><00:10:37.530><c> you</c><00:10:37.680><c> as</c><00:10:37.800><c> a</c><00:10:37.830><c> user</c><00:10:38.100><c> so</c><00:10:38.370><c> you're</c>

00:10:38.480 --> 00:10:38.490 align:start position:0%
the graphics to you as a user so you're
 

00:10:38.490 --> 00:10:40.400 align:start position:0%
the graphics to you as a user so you're
playing<00:10:38.640><c> a</c><00:10:38.760><c> video</c><00:10:39.000><c> game</c><00:10:39.060><c> right</c><00:10:39.390><c> so</c><00:10:40.020><c> then</c><00:10:40.200><c> as</c>

00:10:40.400 --> 00:10:40.410 align:start position:0%
playing a video game right so then as
 

00:10:40.410 --> 00:10:41.840 align:start position:0%
playing a video game right so then as
soon<00:10:40.620><c> as</c><00:10:40.740><c> the</c><00:10:40.890><c> thread</c><00:10:41.130><c> from</c><00:10:41.250><c> the</c><00:10:41.400><c> servers</c><00:10:41.730><c> are</c>

00:10:41.840 --> 00:10:41.850 align:start position:0%
soon as the thread from the servers are
 

00:10:41.850 --> 00:10:43.280 align:start position:0%
soon as the thread from the servers are
ready<00:10:42.060><c> to</c><00:10:42.300><c> receive</c><00:10:42.660><c> and</c><00:10:42.840><c> ready</c><00:10:43.020><c> to</c><00:10:43.110><c> start</c>

00:10:43.280 --> 00:10:43.290 align:start position:0%
ready to receive and ready to start
 

00:10:43.290 --> 00:10:45.140 align:start position:0%
ready to receive and ready to start
working<00:10:43.500><c> okay</c><00:10:43.890><c> it'll</c><00:10:44.040><c> switch</c><00:10:44.340><c> to</c><00:10:44.520><c> that</c><00:10:44.670><c> it'll</c>

00:10:45.140 --> 00:10:45.150 align:start position:0%
working okay it'll switch to that it'll
 

00:10:45.150 --> 00:10:46.790 align:start position:0%
working okay it'll switch to that it'll
get<00:10:45.300><c> the</c><00:10:45.450><c> information</c><00:10:45.660><c> and</c><00:10:46.110><c> then</c><00:10:46.350><c> you</c><00:10:46.620><c> can</c>

00:10:46.790 --> 00:10:46.800 align:start position:0%
get the information and then you can
 

00:10:46.800 --> 00:10:48.590 align:start position:0%
get the information and then you can
translate<00:10:47.490><c> that</c><00:10:47.520><c> to</c><00:10:47.640><c> the</c><00:10:47.880><c> graphics</c><00:10:48.330><c> thread</c>

00:10:48.590 --> 00:10:48.600 align:start position:0%
translate that to the graphics thread
 

00:10:48.600 --> 00:10:51.350 align:start position:0%
translate that to the graphics thread
which<00:10:49.020><c> will</c><00:10:49.170><c> start</c><00:10:49.380><c> out</c><00:10:49.970><c> what</c><00:10:50.970><c> do</c><00:10:51.030><c> you</c><00:10:51.120><c> call</c><00:10:51.240><c> it</c>

00:10:51.350 --> 00:10:51.360 align:start position:0%
which will start out what do you call it
 

00:10:51.360 --> 00:10:53.060 align:start position:0%
which will start out what do you call it
displaying<00:10:52.230><c> to</c><00:10:52.410><c> the</c><00:10:52.500><c> screen</c><00:10:52.740><c> or</c><00:10:52.920><c> like</c>

00:10:53.060 --> 00:10:53.070 align:start position:0%
displaying to the screen or like
 

00:10:53.070 --> 00:10:54.860 align:start position:0%
displaying to the screen or like
updating<00:10:53.430><c> the</c><00:10:53.640><c> screen</c><00:10:53.880><c> right</c><00:10:54.120><c> so</c><00:10:54.570><c> that's</c><00:10:54.720><c> the</c>

00:10:54.860 --> 00:10:54.870 align:start position:0%
updating the screen right so that's the
 

00:10:54.870 --> 00:10:57.020 align:start position:0%
updating the screen right so that's the
idea<00:10:55.020><c> with</c><00:10:55.500><c> these</c><00:10:55.650><c> threads</c><00:10:56.040><c> now</c><00:10:56.490><c> a</c><00:10:56.520><c> lot</c><00:10:56.940><c> of</c>

00:10:57.020 --> 00:10:57.030 align:start position:0%
idea with these threads now a lot of
 

00:10:57.030 --> 00:10:59.120 align:start position:0%
idea with these threads now a lot of
applications<00:10:57.570><c> are</c><00:10:57.690><c> multi</c><00:10:58.020><c> processed</c><00:10:58.740><c> which</c>

00:10:59.120 --> 00:10:59.130 align:start position:0%
applications are multi processed which
 

00:10:59.130 --> 00:11:00.800 align:start position:0%
applications are multi processed which
means<00:10:59.460><c> a</c><00:10:59.670><c> little</c><00:10:59.790><c> bit</c><00:10:59.910><c> more</c><00:11:00.030><c> complicated</c><00:11:00.690><c> to</c>

00:11:00.800 --> 00:11:00.810 align:start position:0%
means a little bit more complicated to
 

00:11:00.810 --> 00:11:02.900 align:start position:0%
means a little bit more complicated to
do<00:11:00.990><c> they</c><00:11:01.410><c> have</c><00:11:01.650><c> their</c><00:11:01.980><c> threads</c><00:11:02.340><c> running</c><00:11:02.790><c> on</c>

00:11:02.900 --> 00:11:02.910 align:start position:0%
do they have their threads running on
 

00:11:02.910 --> 00:11:05.900 align:start position:0%
do they have their threads running on
different<00:11:03.090><c> CPU</c><00:11:03.930><c> cores</c><00:11:04.200><c> at</c><00:11:04.380><c> the</c><00:11:04.500><c> same</c><00:11:04.710><c> time</c><00:11:05.070><c> but</c>

00:11:05.900 --> 00:11:05.910 align:start position:0%
different CPU cores at the same time but
 

00:11:05.910 --> 00:11:07.010 align:start position:0%
different CPU cores at the same time but
we're<00:11:05.970><c> not</c><00:11:06.060><c> gonna</c><00:11:06.180><c> get</c><00:11:06.360><c> into</c><00:11:06.510><c> that</c><00:11:06.690><c> for</c><00:11:06.900><c> this</c>

00:11:07.010 --> 00:11:07.020 align:start position:0%
we're not gonna get into that for this
 

00:11:07.020 --> 00:11:07.940 align:start position:0%
we're not gonna get into that for this
tutorial<00:11:07.200><c> because</c><00:11:07.470><c> that's</c><00:11:07.680><c> a</c><00:11:07.710><c> little</c><00:11:07.860><c> bit</c>

00:11:07.940 --> 00:11:07.950 align:start position:0%
tutorial because that's a little bit
 

00:11:07.950 --> 00:11:09.530 align:start position:0%
tutorial because that's a little bit
more<00:11:08.070><c> complicated</c><00:11:08.460><c> advanced</c><00:11:09.120><c> just</c>

00:11:09.530 --> 00:11:09.540 align:start position:0%
more complicated advanced just
 

00:11:09.540 --> 00:11:11.030 align:start position:0%
more complicated advanced just
understand<00:11:10.050><c> that</c><00:11:10.200><c> if</c><00:11:10.290><c> we're</c><00:11:10.440><c> waiting</c><00:11:10.860><c> for</c>

00:11:11.030 --> 00:11:11.040 align:start position:0%
understand that if we're waiting for
 

00:11:11.040 --> 00:11:13.250 align:start position:0%
understand that if we're waiting for
something<00:11:11.220><c> to</c><00:11:11.370><c> happen</c><00:11:11.610><c> in</c><00:11:11.880><c> one</c><00:11:12.060><c> thread</c><00:11:12.360><c> we</c>

00:11:13.250 --> 00:11:13.260 align:start position:0%
something to happen in one thread we
 

00:11:13.260 --> 00:11:14.960 align:start position:0%
something to happen in one thread we
will<00:11:13.290><c> switch</c><00:11:13.710><c> to</c><00:11:13.770><c> the</c><00:11:14.010><c> other</c><00:11:14.220><c> thread</c><00:11:14.580><c> or</c><00:11:14.820><c> the</c>

00:11:14.960 --> 00:11:14.970 align:start position:0%
will switch to the other thread or the
 

00:11:14.970 --> 00:11:16.520 align:start position:0%
will switch to the other thread or the
other<00:11:15.090><c> threads</c><00:11:15.570><c> because</c><00:11:15.810><c> there</c><00:11:15.990><c> may</c><00:11:16.140><c> be</c><00:11:16.170><c> many</c>

00:11:16.520 --> 00:11:16.530 align:start position:0%
other threads because there may be many
 

00:11:16.530 --> 00:11:19.730 align:start position:0%
other threads because there may be many
execute<00:11:17.430><c> those</c><00:11:17.640><c> as</c><00:11:17.880><c> much</c><00:11:18.180><c> as</c><00:11:18.300><c> we</c><00:11:18.450><c> can</c><00:11:18.690><c> and</c><00:11:18.960><c> then</c>

00:11:19.730 --> 00:11:19.740 align:start position:0%
execute those as much as we can and then
 

00:11:19.740 --> 00:11:22.370 align:start position:0%
execute those as much as we can and then
go<00:11:20.070><c> back</c><00:11:20.340><c> to</c><00:11:20.370><c> the</c><00:11:20.670><c> original</c><00:11:20.760><c> thread</c><00:11:21.360><c> when</c><00:11:22.260><c> it</c>

00:11:22.370 --> 00:11:22.380 align:start position:0%
go back to the original thread when it
 

00:11:22.380 --> 00:11:25.100 align:start position:0%
go back to the original thread when it
stops<00:11:22.650><c> waiting</c><00:11:23.070><c> so</c><00:11:23.730><c> that's</c><00:11:23.910><c> the</c><00:11:24.030><c> idea</c><00:11:24.150><c> that's</c>

00:11:25.100 --> 00:11:25.110 align:start position:0%
stops waiting so that's the idea that's
 

00:11:25.110 --> 00:11:26.900 align:start position:0%
stops waiting so that's the idea that's
my<00:11:25.320><c> explanation</c><00:11:25.590><c> of</c><00:11:25.950><c> threads</c><00:11:26.250><c> and</c><00:11:26.370><c> processes</c>

00:11:26.900 --> 00:11:26.910 align:start position:0%
my explanation of threads and processes
 

00:11:26.910 --> 00:11:28.820 align:start position:0%
my explanation of threads and processes
and<00:11:27.510><c> I</c><00:11:27.840><c> hope</c><00:11:28.050><c> with</c><00:11:28.260><c> that</c><00:11:28.410><c> you</c><00:11:28.530><c> guys</c><00:11:28.650><c> have</c><00:11:28.800><c> a</c>

00:11:28.820 --> 00:11:28.830 align:start position:0%
and I hope with that you guys have a
 

00:11:28.830 --> 00:11:30.410 align:start position:0%
and I hope with that you guys have a
good<00:11:29.070><c> understanding</c><00:11:29.280><c> and</c><00:11:29.760><c> are</c><00:11:29.880><c> ready</c><00:11:30.090><c> to</c><00:11:30.270><c> move</c>

00:11:30.410 --> 00:11:30.420 align:start position:0%
good understanding and are ready to move
 

00:11:30.420 --> 00:11:31.850 align:start position:0%
good understanding and are ready to move
on<00:11:30.540><c> to</c><00:11:30.660><c> programming</c><00:11:31.350><c> and</c><00:11:31.410><c> getting</c><00:11:31.680><c> into</c>

00:11:31.850 --> 00:11:31.860 align:start position:0%
on to programming and getting into
 

00:11:31.860 --> 00:11:35.420 align:start position:0%
on to programming and getting into
threads<00:11:32.130><c> and</c><00:11:32.280><c> python</c><00:11:32.670><c> in</c><00:11:32.850><c> the</c><00:11:32.970><c> next</c><00:11:33.180><c> video</c>

